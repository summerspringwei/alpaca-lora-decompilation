[{"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pxa.c_serial_pxa_shutdown.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function serial_pxa_shutdown\n\t.type\tserial_pxa_shutdown,@function\nserial_pxa_shutdown:                    # @serial_pxa_shutdown\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tmovl\t8(%rdi), %edi\n\tmovq\t%rbx, %rsi\n\tcallq\tfree_irq@PLT\n\tmovq\t$0, 16(%rbx)\n\tmovl\tUART_IER(%rip), %esi\n\tmovq\t%rbx, %rdi\n\txorl\t%edx, %edx\n\tcallq\tserial_out@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tspin_lock_irqsave@PLT\n\tmovl\tTIOCM_OUT2(%rip), %esi\n\tnotl\t%esi\n\tandl\t4(%rbx), %esi\n\tmovl\t%esi, 4(%rbx)\n\tmovq\t%rbx, %rdi\n\tcallq\tserial_pxa_set_mctrl@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tspin_unlock_irqrestore@PLT\n\tmovl\tUART_LCR(%rip), %ebp\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\tcallq\tserial_in@PLT\n\tmovl\tUART_LCR_SBC(%rip), %edx\n\tnotl\t%edx\n\tandl\t%eax, %edx\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\tcallq\tserial_out@PLT\n\tmovl\tUART_FCR(%rip), %esi\n\tmovl\tUART_FCR_CLEAR_RCVR(%rip), %edx\n\torl\tUART_FCR_ENABLE_FIFO(%rip), %edx\n\torl\tUART_FCR_CLEAR_XMIT(%rip), %edx\n\tmovq\t%rbx, %rdi\n\tcallq\tserial_out@PLT\n\tmovl\tUART_FCR(%rip), %esi\n\tmovq\t%rbx, %rdi\n\txorl\t%edx, %edx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tserial_out@PLT                  # TAILCALL\n.Lfunc_end0:\n\t.size\tserial_pxa_shutdown, .Lfunc_end0-serial_pxa_shutdown\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tUART_IER,@object                # @UART_IER\n\t.bss\n\t.globl\tUART_IER\n\t.p2align\t2\nUART_IER:\n\t.long\t0                               # 0x0\n\t.size\tUART_IER, 4\n\n\t.type\tTIOCM_OUT2,@object              # @TIOCM_OUT2\n\t.globl\tTIOCM_OUT2\n\t.p2align\t2\nTIOCM_OUT2:\n\t.long\t0                               # 0x0\n\t.size\tTIOCM_OUT2, 4\n\n\t.type\tUART_LCR,@object                # @UART_LCR\n\t.globl\tUART_LCR\n\t.p2align\t2\nUART_LCR:\n\t.long\t0                               # 0x0\n\t.size\tUART_LCR, 4\n\n\t.type\tUART_LCR_SBC,@object            # @UART_LCR_SBC\n\t.globl\tUART_LCR_SBC\n\t.p2align\t2\nUART_LCR_SBC:\n\t.long\t0                               # 0x0\n\t.size\tUART_LCR_SBC, 4\n\n\t.type\tUART_FCR,@object                # @UART_FCR\n\t.globl\tUART_FCR\n\t.p2align\t2\nUART_FCR:\n\t.long\t0                               # 0x0\n\t.size\tUART_FCR, 4\n\n\t.type\tUART_FCR_ENABLE_FIFO,@object    # @UART_FCR_ENABLE_FIFO\n\t.globl\tUART_FCR_ENABLE_FIFO\n\t.p2align\t2\nUART_FCR_ENABLE_FIFO:\n\t.long\t0                               # 0x0\n\t.size\tUART_FCR_ENABLE_FIFO, 4\n\n\t.type\tUART_FCR_CLEAR_RCVR,@object     # @UART_FCR_CLEAR_RCVR\n\t.globl\tUART_FCR_CLEAR_RCVR\n\t.p2align\t2\nUART_FCR_CLEAR_RCVR:\n\t.long\t0                               # 0x0\n\t.size\tUART_FCR_CLEAR_RCVR, 4\n\n\t.type\tUART_FCR_CLEAR_XMIT,@object     # @UART_FCR_CLEAR_XMIT\n\t.globl\tUART_FCR_CLEAR_XMIT\n\t.p2align\t2\nUART_FCR_CLEAR_XMIT:\n\t.long\t0                               # 0x0\n\t.size\tUART_FCR_CLEAR_XMIT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.uart_port = type { i32, i32, i32, ptr }\n\n@UART_IER = dso_local local_unnamed_addr global i32 0, align 4\n@TIOCM_OUT2 = dso_local local_unnamed_addr global i32 0, align 4\n@UART_LCR = dso_local local_unnamed_addr global i32 0, align 4\n@UART_LCR_SBC = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR_ENABLE_FIFO = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR_CLEAR_RCVR = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR_CLEAR_XMIT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @serial_pxa_shutdown], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @serial_pxa_shutdown(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.uart_port, ptr %0, i64 0, i32 2\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = tail call i32 @free_irq(i32 noundef %3, ptr noundef %0) #2\n  %5 = getelementptr inbounds %struct.uart_port, ptr %0, i64 0, i32 3\n  store ptr null, ptr %5, align 8, !tbaa !11\n  %6 = load i32, ptr @UART_IER, align 4, !tbaa !12\n  %7 = tail call i32 @serial_out(ptr noundef %0, i32 noundef %6, i32 noundef 0) #2\n  %8 = tail call i32 @spin_lock_irqsave(ptr noundef %0, i64 noundef undef) #2\n  %9 = load i32, ptr %0, align 8, !tbaa !13\n  %10 = load i32, ptr @TIOCM_OUT2, align 4, !tbaa !12\n  %11 = xor i32 %10, -1\n  %12 = and i32 %9, %11\n  store i32 %12, ptr %0, align 8, !tbaa !13\n  %13 = tail call i32 @serial_pxa_set_mctrl(ptr noundef nonnull %0, i32 noundef %12) #2\n  %14 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull %0, i64 noundef undef) #2\n  %15 = load i32, ptr @UART_LCR, align 4, !tbaa !12\n  %16 = tail call i32 @serial_in(ptr noundef nonnull %0, i32 noundef %15) #2\n  %17 = load i32, ptr @UART_LCR_SBC, align 4, !tbaa !12\n  %18 = xor i32 %17, -1\n  %19 = and i32 %16, %18\n  %20 = tail call i32 @serial_out(ptr noundef nonnull %0, i32 noundef %15, i32 noundef %19) #2\n  %21 = load i32, ptr @UART_FCR, align 4, !tbaa !12\n  %22 = load i32, ptr @UART_FCR_ENABLE_FIFO, align 4, !tbaa !12\n  %23 = load i32, ptr @UART_FCR_CLEAR_RCVR, align 4, !tbaa !12\n  %24 = or i32 %23, %22\n  %25 = load i32, ptr @UART_FCR_CLEAR_XMIT, align 4, !tbaa !12\n  %26 = or i32 %24, %25\n  %27 = tail call i32 @serial_out(ptr noundef nonnull %0, i32 noundef %21, i32 noundef %26) #2\n  %28 = load i32, ptr @UART_FCR, align 4, !tbaa !12\n  %29 = tail call i32 @serial_out(ptr noundef nonnull %0, i32 noundef %28, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i32 @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @serial_out(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @serial_pxa_set_mctrl(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @serial_in(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"uart_port\", !7, i64 0, !7, i64 4, !7, i64 8, !10, i64 16}\n!7 = !{!\"int", "file:": "./linux/drivers/tty/serial/extr_pxa.c_serial_pxa_shutdown.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, i32, i32 }\n%struct.uart_pxa_port = type { %struct.TYPE_2__, i64 }\n\n@UART_IER = dso_local local_unnamed_addr global i32 0, align 4\n@TIOCM_OUT2 = dso_local local_unnamed_addr global i32 0, align 4\n@UART_LCR = dso_local local_unnamed_addr global i32 0, align 4\n@UART_LCR_SBC = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR_ENABLE_FIFO = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR_CLEAR_RCVR = dso_local local_unnamed_addr global i32 0, align 4\n@UART_FCR_CLEAR_XMIT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @serial_pxa_shutdown], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @serial_pxa_shutdown(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 2\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = tail call i32 @free_irq(i32 noundef %3, ptr noundef %0) #2\n  %5 = getelementptr inbounds %struct.uart_pxa_port, ptr %0, i64 0, i32 1\n  store i64 0, ptr %5, align 8, !tbaa !12\n  %6 = load i32, ptr @UART_IER, align 4, !tbaa !13\n  %7 = tail call i32 @serial_out(ptr noundef %0, i32 noundef %6, i32 noundef 0) #2\n  %8 = tail call i32 @spin_lock_irqsave(ptr noundef %0, i64 noundef undef) #2\n  %9 = load i32, ptr @TIOCM_OUT2, align 4, !tbaa !13\n  %10 = xor i32 %9, -1\n  %11 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !14\n  %13 = and i32 %12, %10\n  store i32 %13, ptr %11, align 4, !tbaa !14\n  %14 = tail call i32 @serial_pxa_set_mctrl(ptr noundef %0, i32 noundef %13) #2\n  %15 = tail call i32 @spin_unlock_irqrestore(ptr noundef %0, i64 noundef undef) #2\n  %16 = load i32, ptr @UART_LCR, align 4, !tbaa !13\n  %17 = tail call i32 @serial_in(ptr noundef %0, i32 noundef %16) #2\n  %18 = load i32, ptr @UART_LCR_SBC, align 4, !tbaa !13\n  %19 = xor i32 %18, -1\n  %20 = and i32 %17, %19\n  %21 = tail call i32 @serial_out(ptr noundef %0, i32 noundef %16, i32 noundef %20) #2\n  %22 = load i32, ptr @UART_FCR, align 4, !tbaa !13\n  %23 = load i32, ptr @UART_FCR_ENABLE_FIFO, align 4, !tbaa !13\n  %24 = load i32, ptr @UART_FCR_CLEAR_RCVR, align 4, !tbaa !13\n  %25 = or i32 %24, %23\n  %26 = load i32, ptr @UART_FCR_CLEAR_XMIT, align 4, !tbaa !13\n  %27 = or i32 %25, %26\n  %28 = tail call i32 @serial_out(ptr noundef %0, i32 noundef %22, i32 noundef %27) #2\n  %29 = load i32, ptr @UART_FCR, align 4, !tbaa !13\n  %30 = tail call i32 @serial_out(ptr noundef %0, i32 noundef %29, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i32 @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @serial_out(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @serial_pxa_set_mctrl(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @serial_in(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 8}\n!6 = !{!\"uart_pxa_port\", !7, i64 0, !11, i64 16}\n!7 = !{!\"TYPE_2__\", !8, i64 0, !8, i64 4, !8, i64 8}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!\"long\", !9, i64 0}\n!12 = !{!6, !11, i64 16}\n!13 = !{!8, !8, i64 0}\n!14 = !{!6, !8, i64 4}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_flexfilelayoutdev.c_ff_layout_has_available_ds.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ff_layout_has_available_ds\n\t.type\tff_layout_has_available_ds,@function\nff_layout_has_available_ds:             # @ff_layout_has_available_ds\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t(%rdi), %rax\n\tcmpq\tIOMODE_READ(%rip), %rax\n\tjne\t.LBB0_2\n# %bb.1:\n\tjmp\tff_read_layout_has_available_ds@PLT # TAILCALL\n.LBB0_2:\n\tjmp\tff_rw_layout_has_available_ds@PLT # TAILCALL\n.Lfunc_end0:\n\t.size\tff_layout_has_available_ds, .Lfunc_end0-ff_layout_has_available_ds\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tIOMODE_READ,@object             # @IOMODE_READ\n\t.bss\n\t.globl\tIOMODE_READ\n\t.p2align\t3\nIOMODE_READ:\n\t.quad\t0                               # 0x0\n\t.size\tIOMODE_READ, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@IOMODE_READ = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ff_layout_has_available_ds], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ff_layout_has_available_ds(ptr noundef %0) #0 {\n  %2 = load i64, ptr %0, align 8, !tbaa !5\n  %3 = load i64, ptr @IOMODE_READ, align 8, !tbaa !10\n  %4 = icmp eq i64 %2, %3\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @ff_read_layout_has_available_ds(ptr noundef nonnull %0) #2\n  br label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @ff_rw_layout_has_available_ds(ptr noundef nonnull %0) #2\n  br label %9\n\n9:                                                ; preds = %7, %5\n  %10 = phi i32 [ %6, %5 ], [ %8, %7 ]\n  ret i32 %10\n}\n\ndeclare i32 @ff_read_layout_has_available_ds(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ff_rw_layout_has_available_ds(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"flexfile_layout\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>", "file:": "./linux/fs/nfs/flexfilelayout/extr_flexfilelayoutdev.c_ff_layout_has_available_ds.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@IOMODE_READ = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ff_layout_has_available_ds], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ff_layout_has_available_ds(ptr noundef %0) #0 {\n  %2 = load i64, ptr %0, align 8, !tbaa !5\n  %3 = load i64, ptr @IOMODE_READ, align 8, !tbaa !11\n  %4 = icmp eq i64 %2, %3\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @ff_read_layout_has_available_ds(ptr noundef nonnull %0) #2\n  br label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @ff_rw_layout_has_available_ds(ptr noundef nonnull %0) #2\n  br label %9\n\n9:                                                ; preds = %7, %5\n  %10 = phi i32 [ %6, %5 ], [ %8, %7 ]\n  ret i32 %10\n}\n\ndeclare i32 @ff_read_layout_has_available_ds(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ff_rw_layout_has_available_ds(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"pnfs_layout_segment\", !7, i64 0}\n!7 = !{!\"TYPE_2__\", !8, i64 0}\n!8 = !{!\"long\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!8, !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_keymap.c_process_record_user.ll\"\n\t.globl\tprocess_record_user             # -- Begin function process_record_user\n\t.p2align\t4, 0x90\n\t.type\tprocess_record_user,@function\nprocess_record_user:                    # @process_record_user\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t$1, %eax\n\tretq\n.Lfunc_end0:\n\t.size\tprocess_record_user, .Lfunc_end0-process_record_user\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readnone %1) local_unnamed_addr #0 {\n  ret i32 1\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./qmk_firmware/keyboards/katana60/keymaps/colemak/extr_keymap.c_process_record_user.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readnone %1) local_unnamed_addr #0 {\n  ret i32 1\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_i2c-mv64xxx.c_mv64xxx_i2c_can_offload.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mv64xxx_i2c_can_offload\n\t.type\tmv64xxx_i2c_can_offload,@function\nmv64xxx_i2c_can_offload:                # @mv64xxx_i2c_can_offload\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\txorl\t%eax, %eax\n\tcmpl\t$0, 4(%rdi)\n\tje\t.LBB0_9\n# %bb.1:\n\tmovq\t8(%rdi), %rbx\n\tmovl\t(%rdi), %eax\n\tcmpl\t$2, %eax\n\tje\t.LBB0_4\n# %bb.2:\n\tcmpl\t$1, %eax\n\tjne\t.LBB0_8\n# %bb.3:\n\tmovq\t%rbx, %rdi\n\tcallq\tmv64xxx_i2c_valid_offload_sz@PLT\n\tmovq\t%rax, %rcx\n\tmovl\t$1, %eax\n\ttestq\t%rcx, %rcx\n\tjne\t.LBB0_9\n\tjmp\t.LBB0_8\n.LBB0_4:\n\tmovq\t%rbx, %rdi\n\tcallq\tmv64xxx_i2c_valid_offload_sz@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_8\n# %bb.5:\n\tleaq\t4(%rbx), %r14\n\tmovq\t%r14, %rdi\n\tcallq\tmv64xxx_i2c_valid_offload_sz@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_8\n# %bb.6:\n\tmovl\tI2C_M_RD(%rip), %ecx\n\ttestl\t%ecx, (%rbx)\n\tjne\t.LBB0_8\n# %bb.7:\n\tmovl\t$1, %eax\n\ttestl\t%ecx, (%r14)\n\tjne\t.LBB0_9\n.LBB0_8:\n\txorl\t%eax, %eax\n.LBB0_9:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmv64xxx_i2c_can_offload, .Lfunc_end0-mv64xxx_i2c_can_offload\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tI2C_M_RD,@object                # @I2C_M_RD\n\t.bss\n\t.globl\tI2C_M_RD\n\t.p2align\t2\nI2C_M_RD:\n\t.long\t0                               # 0x0\n\t.size\tI2C_M_RD, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.i2c_msg = type { i32, i32, ptr }\n%struct.mv64xxx_i2c_dev = type { i32, i32 }\n\n@I2C_M_RD = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mv64xxx_i2c_can_offload], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mv64xxx_i2c_can_offload(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.i2c_msg, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.i2c_msg, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !11\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %26, label %7\n\n7:                                                ; preds = %1\n  %8 = load i32, ptr %0, align 8, !tbaa !12\n  switch i32 %8, label %26 [\n    i32 1, label %9\n    i32 2, label %13\n  ]\n\n9:                                                ; preds = %7\n  %10 = tail call i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef %3) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %26, label %24\n\n12:                                               ; preds = %24\n  br label %26\n\n13:                                               ; preds = %7\n  %14 = tail call i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef %3) #2\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %26, label %16\n\n16:                                               ; preds = %13\n  %17 = getelementptr inbounds %struct.mv64xxx_i2c_dev, ptr %3, i64 0, i32 1\n  %18 = tail call i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef nonnull %17) #2\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %26, label %20\n\n20:                                               ; preds = %16\n  %21 = load i32, ptr %3, align 4, !tbaa !13\n  %22 = load i32, ptr @I2C_M_RD, align 4, !tbaa !15\n  %23 = and i32 %22, %21\n  br label %24\n\n24:                                               ; preds = %20, %9\n  %25 = phi i32 [ %23, %20 ], [ 0, %9 ]\n  br label %26\n\n26:                                               ; preds = %16, %13, %7, %1, %24, %12\n  %27 = phi i32 [ 0, %12 ], [ %25, %24 ], [ 0, %1 ], [ 0, %7 ], [ 1, %13 ], [ 1, %16 ]\n  ret i32 %27\n}\n\ndeclare i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"i2c_msg\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !7, i64 0}\n!13 = !{!14, !7, i64 0}\n!14 = !{!\"mv64xxx_i2c_dev\", !7, i64 0, !7, i64 4}\n!15 = !{!7, !7, i64 0}\n</s><s>", "file:": "./linux/drivers/i2c/busses/extr_i2c-mv64xxx.c_mv64xxx_i2c_can_offload.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mv64xxx_i2c_data = type { i32, i32, ptr }\n%struct.i2c_msg = type { i32 }\n\n@I2C_M_RD = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mv64xxx_i2c_can_offload], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mv64xxx_i2c_can_offload(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.mv64xxx_i2c_data, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.mv64xxx_i2c_data, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !11\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %29, label %7\n\n7:                                                ; preds = %1\n  %8 = load i32, ptr %0, align 8, !tbaa !12\n  switch i32 %8, label %28 [\n    i32 1, label %9\n    i32 2, label %12\n  ]\n\n9:                                                ; preds = %7\n  %10 = tail call i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef %3) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %28, label %29\n\n12:                                               ; preds = %7\n  %13 = tail call i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef %3) #2\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %28, label %15\n\n15:                                               ; preds = %12\n  %16 = getelementptr inbounds %struct.i2c_msg, ptr %3, i64 1\n  %17 = tail call i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef nonnull %16) #2\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %28, label %19\n\n19:                                               ; preds = %15\n  %20 = load i32, ptr %3, align 4, !tbaa !13\n  %21 = load i32, ptr @I2C_M_RD, align 4, !tbaa !15\n  %22 = and i32 %21, %20\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %24, label %28\n\n24:                                               ; preds = %19\n  %25 = load i32, ptr %16, align 4, !tbaa !13\n  %26 = and i32 %25, %21\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %29\n\n28:                                               ; preds = %9, %7, %24, %19, %15, %12\n  br label %29\n\n29:                                               ; preds = %24, %9, %1, %28\n  %30 = phi i32 [ 0, %28 ], [ 0, %1 ], [ 1, %9 ], [ 1, %24 ]\n  ret i32 %30\n}\n\ndeclare i64 @mv64xxx_i2c_valid_offload_sz(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"mv64xxx_i2c_data\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !7, i64 0}\n!13 = !{!14, !7, i64 0}\n!14 = !{!\"i2c_msg\", !7, i64 0}\n!15 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_packet.c_ssh_packet_set_protocol_flags.ll\"\n\t.globl\tssh_packet_set_protocol_flags   # -- Begin function ssh_packet_set_protocol_flags\n\t.p2align\t4, 0x90\n\t.type\tssh_packet_set_protocol_flags,@function\nssh_packet_set_protocol_flags:          # @ssh_packet_set_protocol_flags\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t(%rdi), %rax\n\tmovl\t%esi, (%rax)\n\tretq\n.Lfunc_end0:\n\t.size\tssh_packet_set_protocol_flags, .Lfunc_end0-ssh_packet_set_protocol_flags\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local void @ssh_packet_set_protocol_flags(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  store i32 %1, ptr %3, align 4, !tbaa !10\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ssh\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_2__\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./freebsd/crypto/openssh/extr_packet.c_ssh_packet_set_protocol_flags.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local void @ssh_packet_set_protocol_flags(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  store i32 %1, ptr %3, align 4, !tbaa !10\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ssh\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_2__\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_locking-selftest.c_print_testname.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function print_testname\n\t.type\tprint_testname,@function\nprint_testname:                         # @print_testname\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rdi, %rsi\n\tmovl\t$.L.str, %edi\n\tjmp\tprintk@PLT                      # TAILCALL\n.Lfunc_end0:\n\t.size\tprint_testname, .Lfunc_end0-print_testname\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%33s:\"\n\t.size\t.L.str, 6\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [6 x i8] c\"%33s:\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @print_testname], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @print_testname(ptr noundef %0) #0 {\n  %2 = tail call i32 @printk(ptr noundef nonnull @.str, ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @printk(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/lib/extr_locking-selftest.c_print_testname.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [6 x i8] c\"%33s:\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @print_testname], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @print_testname(ptr noundef %0) #0 {\n  %2 = tail call i32 @printk(ptr noundef nonnull @.str, ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @printk(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_btf.c___btf_new_fd.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function __btf_new_fd\n\t.type\t__btf_new_fd,@function\n__btf_new_fd:                           # @__btf_new_fd\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rdi, %rdx\n\tmovl\tO_CLOEXEC(%rip), %ecx\n\torl\tO_RDONLY(%rip), %ecx\n\tmovl\t$.L.str, %edi\n\tmovl\t$btf_fops, %esi\n\tjmp\tanon_inode_getfd@PLT            # TAILCALL\n.Lfunc_end0:\n\t.size\t__btf_new_fd, .Lfunc_end0-__btf_new_fd\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"btf\"\n\t.size\t.L.str, 4\n\n\t.type\tbtf_fops,@object                # @btf_fops\n\t.bss\n\t.globl\tbtf_fops\n\t.p2align\t2\nbtf_fops:\n\t.long\t0                               # 0x0\n\t.size\tbtf_fops, 4\n\n\t.type\tO_RDONLY,@object                # @O_RDONLY\n\t.globl\tO_RDONLY\n\t.p2align\t2\nO_RDONLY:\n\t.long\t0                               # 0x0\n\t.size\tO_RDONLY, 4\n\n\t.type\tO_CLOEXEC,@object               # @O_CLOEXEC\n\t.globl\tO_CLOEXEC\n\t.p2align\t2\nO_CLOEXEC:\n\t.long\t0                               # 0x0\n\t.size\tO_CLOEXEC, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"btf\\00\", align 1\n@btf_fops = dso_local global i32 0, align 4\n@O_RDONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CLOEXEC = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @__btf_new_fd], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @__btf_new_fd(ptr noundef %0) #0 {\n  %2 = load i32, ptr @O_RDONLY, align 4, !tbaa !5\n  %3 = load i32, ptr @O_CLOEXEC, align 4, !tbaa !5\n  %4 = or i32 %3, %2\n  %5 = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str, ptr noundef nonnull @btf_fops, ptr noundef %0, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @anon_inode_getfd(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/kernel/bpf/extr_btf.c___btf_new_fd.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"btf\\00\", align 1\n@btf_fops = dso_local global i32 0, align 4\n@O_RDONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CLOEXEC = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @__btf_new_fd], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @__btf_new_fd(ptr noundef %0) #0 {\n  %2 = load i32, ptr @O_RDONLY, align 4, !tbaa !5\n  %3 = load i32, ptr @O_CLOEXEC, align 4, !tbaa !5\n  %4 = or i32 %3, %2\n  %5 = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str, ptr noundef nonnull @btf_fops, ptr noundef %0, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @anon_inode_getfd(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dwarf.c_dwarf_read_addr.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function dwarf_read_addr\n\t.type\tdwarf_read_addr,@function\ndwarf_read_addr:                        # @dwarf_read_addr\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rsi, %rbx\n\tcallq\tget_unaligned@PLT\n\tmovl\t%eax, %edi\n\tmovq\t%rbx, %rsi\n\tcallq\tput_unaligned@PLT\n\tmovl\t$8, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tdwarf_read_addr, .Lfunc_end0-dwarf_read_addr\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dwarf_read_addr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dwarf_read_addr(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call i32 @get_unaligned(ptr noundef %0) #2\n  %4 = tail call i32 @put_unaligned(i32 noundef %3, ptr noundef %1) #2\n  ret i32 8\n}\n\ndeclare i32 @put_unaligned(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @get_unaligned(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/arch/sh/kernel/extr_dwarf.c_dwarf_read_addr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dwarf_read_addr], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i32 @dwarf_read_addr(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call i32 @get_unaligned(ptr noundef %0) #2\n  %4 = tail call i32 @put_unaligned(i32 noundef %3, ptr noundef %1) #2\n  ret i32 8\n}\n\ndeclare i32 @get_unaligned(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @put_unaligned(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_subr_rman.c_rman_set_bustag.ll\"\n\t.globl\trman_set_bustag                 # -- Begin function rman_set_bustag\n\t.p2align\t4, 0x90\n\t.type\trman_set_bustag,@function\nrman_set_bustag:                        # @rman_set_bustag\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t%esi, (%rdi)\n\tretq\n.Lfunc_end0:\n\t.size\trman_set_bustag, .Lfunc_end0-rman_set_bustag\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable\ndefine dso_local void @rman_set_bustag(ptr nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  store i32 %1, ptr %0, align 4, !tbaa !5\n  ret void\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/sys/kern/extr_subr_rman.c_rman_set_bustag.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable\ndefine dso_local void @rman_set_bustag(ptr nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  store i32 %1, ptr %0, align 4, !tbaa !5\n  ret void\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"resource\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_abituguru3.c_show_name.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function show_name\n\t.type\tshow_name,@function\nshow_name:                              # @show_name\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rdx, %rdi\n\tmovq\tABIT_UGURU3_NAME(%rip), %rdx\n\tmovl\t$.L.str, %esi\n\tjmp\tsprintf@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\tshow_name, .Lfunc_end0-show_name\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%s\\n\"\n\t.size\t.L.str, 4\n\n\t.type\tABIT_UGURU3_NAME,@object        # @ABIT_UGURU3_NAME\n\t.bss\n\t.globl\tABIT_UGURU3_NAME\n\t.p2align\t3\nABIT_UGURU3_NAME:\n\t.quad\t0\n\t.size\tABIT_UGURU3_NAME, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"%s\\0A\\00\", align 1\n@ABIT_UGURU3_NAME = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @show_name], section \"llvm.metadata\"\n\n; Function Attrs: nofree nounwind uwtable\ndefine internal i32 @show_name(ptr nocapture readnone %0, ptr nocapture readnone %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = load ptr, ptr @ABIT_UGURU3_NAME, align 8, !tbaa !5\n  %5 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull @.str, ptr noundef %4)\n  ret i32 %5\n}\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nofree nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/hwmon/extr_abituguru3.c_show_name.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"%s\\0A\\00\", align 1\n@ABIT_UGURU3_NAME = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @show_name], section \"llvm.metadata\"\n\n; Function Attrs: nofree nounwind uwtable\ndefine internal i32 @show_name(ptr nocapture readnone %0, ptr nocapture readnone %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = load ptr, ptr @ABIT_UGURU3_NAME, align 8, !tbaa !5\n  %5 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull @.str, ptr noundef %4)\n  ret i32 %5\n}\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nofree nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_cr16_disas.c_cr16_print_reg_reg_rel.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function cr16_print_reg_reg_rel\n\t.type\tcr16_print_reg_reg_rel,@function\ncr16_print_reg_reg_rel:                 # @cr16_print_reg_reg_rel\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%r8, %r12\n\tmovq\t%rcx, %rbx\n\tmovl\t%edx, %r14d\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %r13\n\tmovq\t%rcx, %rdi\n\tcallq\tcr16_check_reg_boundaries@PLT\n\tmovl\t$-1, %ebp\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_5\n# %bb.1:\n\tmovq\t%r15, %rdi\n\tcallq\tcr16_check_reg_boundaries@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_5\n# %bb.2:\n\tmovq\tCR16_INSTR_MAXLEN(%rip), %rsi\n\tdecq\t%rsi\n\tmovl\t(%r13), %edi\n\tmovq\tcr16_regs_names(%rip), %rax\n\ttestq\t%r12, %r12\n\tje\t.LBB0_4\n# %bb.3:\n\tmovq\t(%rax,%rbx,8), %rcx\n\tmovq\t(%rax,%r15,8), %r9\n\txorl\t%ebp, %ebp\n\tmovl\t$.L.str, %edx\n\tmovl\t%r14d, %r8d\n\txorl\t%eax, %eax\n\tcallq\tsnprintf@PLT\n\tjmp\t.LBB0_5\n.LBB0_4:\n\tmovq\t(%rax,%r15,8), %r8\n\tmovq\t(%rax,%rbx,8), %r9\n\txorl\t%ebp, %ebp\n\tmovl\t$.L.str.1, %edx\n\tmovl\t%r14d, %ecx\n\txorl\t%eax, %eax\n\tcallq\tsnprintf@PLT\n.LBB0_5:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcr16_print_reg_reg_rel, .Lfunc_end0-cr16_print_reg_reg_rel\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCR16_INSTR_MAXLEN,@object       # @CR16_INSTR_MAXLEN\n\t.bss\n\t.globl\tCR16_INSTR_MAXLEN\n\t.p2align\t3\nCR16_INSTR_MAXLEN:\n\t.quad\t0                               # 0x0\n\t.size\tCR16_INSTR_MAXLEN, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%s,0x%04x(%s)\"\n\t.size\t.L.str, 14\n\n\t.type\tcr16_regs_names,@object         # @cr16_regs_names\n\t.bss\n\t.globl\tcr16_regs_names\n\t.p2align\t3\ncr16_regs_names:\n\t.quad\t0\n\t.size\tcr16_regs_names, 8\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"0x%04x(%s),%s\"\n\t.size\t.L.str.1, 14\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@CR16_INSTR_MAXLEN = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [14 x i8] c\"%s,0x%04x(%s)\\00\", align 1\n@cr16_regs_names = dso_local local_unnamed_addr global ptr null, align 8\n@.str.1 = private unnamed_addr constant [14 x i8] c\"0x%04x(%s),%s\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cr16_print_reg_reg_rel], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @cr16_print_reg_reg_rel(ptr nocapture noundef readonly %0, i64 noundef %1, i32 noundef %2, i64 noundef %3, i64 noundef %4) #0 {\n  %6 = tail call i64 @cr16_check_reg_boundaries(i64 noundef %3) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %8, label %21\n\n8:                                                ; preds = %5\n  %9 = tail call i64 @cr16_check_reg_boundaries(i64 noundef %1) #2\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %21\n\n11:                                               ; preds = %8\n  %12 = load i64, ptr @CR16_INSTR_MAXLEN, align 8, !tbaa !5\n  %13 = add nsw i64 %12, -1\n  %14 = load i32, ptr %0, align 4, !tbaa !9\n  %15 = load ptr, ptr @cr16_regs_names, align 8, !tbaa !12\n  %16 = getelementptr inbounds ptr, ptr %15, i64 %3\n  %17 = load ptr, ptr %16, align 8, !tbaa !12\n  %18 = getelementptr inbounds ptr, ptr %15, i64 %1\n  %19 = load ptr, ptr %18, align 8, !tbaa !12\n  %20 = select i1 %4, ptr @.str, ptr @.str.1\n  br label %21\n\n21:                                               ; preds = %11, %8, %5\n  %22 = phi ptr [ @.str, %5 ], [ @.str.1, %8 ], [ %20, %11 ]\n  %23 = phi i32 [ -1, %5 ], [ -1, %8 ], [ 0, %11 ]\n  %24 = phi ptr [ %17, %5 ], [ %19, %8 ], [ %19, %11 ]\n  %25 = phi ptr [ %17, %5 ], [ %17, %8 ], [ %17, %11 ]\n  %26 = tail call i32 (i32, i64, ptr, ...) @snprintf(i32 noundef %14, i64 noundef %13, ptr noundef nonnull %22, i32 noundef %2, ptr noundef %24, ptr noundef %25) #2\n  ret i32 %23\n}\n\ndeclare i64 @cr16_check_reg_boundaries(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @snprintf(i32 noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_3__\", !11, i64 0}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "file:": "./radare2/libr/asm/arch/cr16/extr_cr16_disas.c_cr16_print_reg_reg_rel.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@CR16_INSTR_MAXLEN = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [14 x i8] c\"%s,0x%04x(%s)\\00\", align 1\n@cr16_regs_names = dso_local local_unnamed_addr global ptr null, align 8\n@.str.1 = private unnamed_addr constant [14 x i8] c\"0x%04x(%s),%s\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cr16_print_reg_reg_rel], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i32 @cr16_print_reg_reg_rel(ptr nocapture noundef readonly %0, i64 noundef %1, i32 noundef %2, i64 noundef %3, i64 noundef %4) #0 {\n  %6 = tail call i64 @cr16_check_reg_boundaries(i64 noundef %3) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %8, label %29\n\n8:                                                ; preds = %5\n  %9 = tail call i64 @cr16_check_reg_boundaries(i64 noundef %1) #2\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %29\n\n11:                                               ; preds = %8\n  %12 = icmp eq i64 %4, 0\n  %13 = load i32, ptr %0, align 4, !tbaa !5\n  %14 = load i64, ptr @CR16_INSTR_MAXLEN, align 8, !tbaa !10\n  %15 = add nsw i64 %14, -1\n  %16 = load ptr, ptr @cr16_regs_names, align 8, !tbaa !12\n  br i1 %12, label %23, label %17\n\n17:                                               ; preds = %11\n  %18 = getelementptr inbounds ptr, ptr %16, i64 %3\n  %19 = load ptr, ptr %18, align 8, !tbaa !12\n  %20 = getelementptr inbounds ptr, ptr %16, i64 %1\n  %21 = load ptr, ptr %20, align 8, !tbaa !12\n  %22 = tail call i32 (i32, i64, ptr, ...) @snprintf(i32 noundef %13, i64 noundef %15, ptr noundef nonnull @.str, ptr noundef %19, i32 noundef %2, ptr noundef %21) #2\n  br label %29\n\n23:                                               ; preds = %11\n  %24 = getelementptr inbounds ptr, ptr %16, i64 %1\n  %25 = load ptr, ptr %24, align 8, !tbaa !12\n  %26 = getelementptr inbounds ptr, ptr %16, i64 %3\n  %27 = load ptr, ptr %26, align 8, !tbaa !12\n  %28 = tail call i32 (i32, i64, ptr, ...) @snprintf(i32 noundef %13, i64 noundef %15, ptr noundef nonnull @.str.1, i32 noundef %2, ptr noundef %25, ptr noundef %27) #2\n  br label %29\n\n29:                                               ; preds = %17, %23, %5, %8\n  %30 = phi i32 [ -1, %8 ], [ -1, %5 ], [ 0, %23 ], [ 0, %17 ]\n  ret i32 %30\n}\n\ndeclare i64 @cr16_check_reg_boundaries(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @snprintf(i32 noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"cr16_cmd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"any pointer\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_smsc.c_smsc_phy_ack_interrupt.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function smsc_phy_ack_interrupt\n\t.type\tsmsc_phy_ack_interrupt,@function\nsmsc_phy_ack_interrupt:                 # @smsc_phy_ack_interrupt\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tMII_LAN83C185_ISF(%rip), %esi\n\tcallq\tphy_read@PLT\n\tmovl\t%eax, %ecx\n\tsarl\t$31, %ecx\n\tandl\t%ecx, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsmsc_phy_ack_interrupt, .Lfunc_end0-smsc_phy_ack_interrupt\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMII_LAN83C185_ISF,@object       # @MII_LAN83C185_ISF\n\t.bss\n\t.globl\tMII_LAN83C185_ISF\n\t.p2align\t2\nMII_LAN83C185_ISF:\n\t.long\t0                               # 0x0\n\t.size\tMII_LAN83C185_ISF, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@MII_LAN83C185_ISF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @smsc_phy_ack_interrupt], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @smsc_phy_ack_interrupt(ptr noundef %0) #0 {\n  %2 = load i32, ptr @MII_LAN83C185_ISF, align 4, !tbaa !5\n  %3 = tail call i32 @phy_read(ptr noundef %0, i32 noundef %2) #2\n  %4 = tail call i32 @llvm.smin.i32(i32 %3, i32 0)\n  ret i32 %4\n}\n\ndeclare i32 @phy_read(ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/net/phy/extr_smsc.c_smsc_phy_ack_interrupt.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@MII_LAN83C185_ISF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @smsc_phy_ack_interrupt], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @smsc_phy_ack_interrupt(ptr noundef %0) #0 {\n  %2 = load i32, ptr @MII_LAN83C185_ISF, align 4, !tbaa !5\n  %3 = tail call i32 @phy_read(ptr noundef %0, i32 noundef %2) #3\n  %4 = tail call i32 @llvm.smin.i32(i32 %3, i32 0)\n  ret i32 %4\n}\n\ndeclare i32 @phy_read(ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_clock.c_clk_get_parent.ll\"\n\t.globl\tclk_get_parent                  # -- Begin function clk_get_parent\n\t.p2align\t4, 0x90\n\t.type\tclk_get_parent,@function\nclk_get_parent:                         # @clk_get_parent\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcallq\tWARN_ON@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tclk_get_parent, .Lfunc_end0-clk_get_parent\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @clk_get_parent(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @WARN_ON(ptr noundef %0) #2\n  ret ptr null\n}\n\ndeclare i32 @WARN_ON(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/arch/mips/ar7/extr_clock.c_clk_get_parent.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local noalias ptr @clk_get_parent(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @WARN_ON(ptr noundef %0) #2\n  ret ptr null\n}\n\ndeclare i32 @WARN_ON(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_keymap.c_process_record_user.ll\"\n\t.globl\tprocess_record_user             # -- Begin function process_record_user\n\t.p2align\t4, 0x90\n\t.type\tprocess_record_user,@function\nprocess_record_user:                    # @process_record_user\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t$1, %eax\n\tretq\n.Lfunc_end0:\n\t.size\tprocess_record_user, .Lfunc_end0-process_record_user\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readnone %1) local_unnamed_addr #0 {\n  ret i32 1\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./qmk_firmware/keyboards/uk78/keymaps/rask/extr_keymap.c_process_record_user.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readnone %1) local_unnamed_addr #0 {\n  ret i32 1\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pathkeys.c_has_useful_pathkeys.ll\"\n\t.globl\thas_useful_pathkeys             # -- Begin function has_useful_pathkeys\n\t.p2align\t4, 0x90\n\t.type\thas_useful_pathkeys,@function\nhas_useful_pathkeys:                    # @has_useful_pathkeys\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t(%rsi), %rcx\n\tmovl\t$1, %eax\n\tcmpq\tNIL(%rip), %rcx\n\tjne\t.LBB0_3\n# %bb.1:\n\tcmpq\t$0, 8(%rsi)\n\tje\t.LBB0_2\n.LBB0_3:\n\tretq\n.LBB0_2:\n\txorl\t%eax, %eax\n\tcmpq\t%rcx, (%rdi)\n\tsetne\t%al\n\tretq\n.Lfunc_end0:\n\t.size\thas_useful_pathkeys, .Lfunc_end0-has_useful_pathkeys\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNIL,@object                     # @NIL\n\t.bss\n\t.globl\tNIL\n\t.p2align\t3\nNIL:\n\t.quad\t0                               # 0x0\n\t.size\tNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i64 }\n\n@NIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine dso_local i32 @has_useful_pathkeys(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  %4 = load i64, ptr @NIL, align 8, !tbaa !10\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %6, label %12\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %10, label %12\n\n10:                                               ; preds = %6\n  %11 = load i64, ptr %0, align 8, !tbaa !12\n  br label %12\n\n12:                                               ; preds = %10, %6, %2\n  %13 = phi i64 [ %11, %10 ], [ 1, %6 ], [ 1, %2 ]\n  %14 = icmp ne i64 %13, %3\n  %15 = zext i1 %14 to i32\n  ret i32 %15\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_5__\", !7, i64 0}\n</s><s>", "file:": "./postgres/src/backend/optimizer/path/extr_pathkeys.c_has_useful_pathkeys.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i64, i64 }\n\n@NIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine dso_local i32 @has_useful_pathkeys(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  %4 = load i64, ptr @NIL, align 8, !tbaa !10\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %6, label %14\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %10, label %14\n\n10:                                               ; preds = %6\n  %11 = load i64, ptr %0, align 8, !tbaa !12\n  %12 = icmp ne i64 %11, %3\n  %13 = zext i1 %12 to i32\n  br label %14\n\n14:                                               ; preds = %10, %2, %6\n  %15 = phi i32 [ 1, %6 ], [ 1, %2 ], [ %13, %10 ]\n  ret i32 %15\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0, !7, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_6__\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_deprecated.c_svn_wc_diff.ll\"\n\t.globl\tsvn_wc_diff                     # -- Begin function svn_wc_diff\n\t.p2align\t4, 0x90\n\t.type\tsvn_wc_diff,@function\nsvn_wc_diff:                            # @svn_wc_diff\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tFALSE(%rip), %eax\n\tmovq\t%r9, (%rsp)\n\tmovl\t%eax, %r9d\n\tcallq\tsvn_wc_diff2@PLT\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsvn_wc_diff, .Lfunc_end0-svn_wc_diff\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tFALSE,@object                   # @FALSE\n\t.bss\n\t.globl\tFALSE\n\t.p2align\t2\nFALSE:\n\t.long\t0                               # 0x0\n\t.size\tFALSE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @svn_wc_diff(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5) local_unnamed_addr #0 {\n  %7 = load i32, ptr @FALSE, align 4, !tbaa !5\n  %8 = tail call ptr @svn_wc_diff2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %7, ptr noundef %5) #2\n  ret ptr %8\n}\n\ndeclare ptr @svn_wc_diff2(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/contrib/subversion/subversion/libsvn_wc/extr_deprecated.c_svn_wc_diff.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @svn_wc_diff(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr noundef %5) local_unnamed_addr #0 {\n  %7 = load i32, ptr @FALSE, align 4, !tbaa !5\n  %8 = tail call ptr @svn_wc_diff2(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, i32 noundef %7, ptr noundef %5) #2\n  ret ptr %8\n}\n\ndeclare ptr @svn_wc_diff2(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_virtio_ccw.c_virtio_ccw_check_autoonline.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function virtio_ccw_check_autoonline\n\t.type\tvirtio_ccw_check_autoonline,@function\nvirtio_ccw_check_autoonline:            # @virtio_ccw_check_autoonline\n\t.cfi_startproc\n# %bb.0:\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 32\n\tleaq\t8(%rsp), %rsi\n\tcallq\tccw_device_get_id@PLT\n\tmovl\t16(%rsp), %edi\n\tmovq\tdevs_no_auto(%rip), %rax\n\tmovq\t8(%rsp), %rcx\n\tmovl\t(%rax,%rcx,4), %esi\n\tcallq\ttest_bit@PLT\n\txorl\t%ecx, %ecx\n\ttestq\t%rax, %rax\n\tsete\t%cl\n\tmovl\t%ecx, %eax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tvirtio_ccw_check_autoonline, .Lfunc_end0-virtio_ccw_check_autoonline\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tdevs_no_auto,@object            # @devs_no_auto\n\t.bss\n\t.globl\tdevs_no_auto\n\t.p2align\t3\ndevs_no_auto:\n\t.quad\t0\n\t.size\tdevs_no_auto, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ccw_dev_id = type { i64, i32 }\n\n@devs_no_auto = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @virtio_ccw_check_autoonline], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @virtio_ccw_check_autoonline(ptr noundef %0) #0 {\n  %2 = alloca %struct.ccw_dev_id, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #3\n  %3 = call i32 @ccw_device_get_id(ptr noundef %0, ptr noundef nonnull %2) #3\n  %4 = getelementptr inbounds %struct.ccw_dev_id, ptr %2, i64 0, i32 1\n  %5 = load i32, ptr %4, align 8, !tbaa !5\n  %6 = load ptr, ptr @devs_no_auto, align 8, !tbaa !11\n  %7 = load i64, ptr %2, align 8, !tbaa !13\n  %8 = getelementptr inbounds i32, ptr %6, i64 %7\n  %9 = load i32, ptr %8, align 4, !tbaa !14\n  %10 = call i64 @test_bit(i32 noundef %5, i32 noundef %9) #3\n  %11 = icmp eq i64 %10, 0\n  %12 = zext i1 %11 to i32\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #3\n  ret i32 %12\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @ccw_device_get_id(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @test_bit(i32 noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"ccw_dev_id\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"any pointer\", !8, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n</s><s>", "file:": "./linux/drivers/s390/virtio/extr_virtio_ccw.c_virtio_ccw_check_autoonline.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ccw_dev_id = type { i64, i32 }\n\n@devs_no_auto = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @virtio_ccw_check_autoonline], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @virtio_ccw_check_autoonline(ptr noundef %0) #0 {\n  %2 = alloca %struct.ccw_dev_id, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #3\n  %3 = call i32 @ccw_device_get_id(ptr noundef %0, ptr noundef nonnull %2) #3\n  %4 = getelementptr inbounds %struct.ccw_dev_id, ptr %2, i64 0, i32 1\n  %5 = load i32, ptr %4, align 8, !tbaa !5\n  %6 = load ptr, ptr @devs_no_auto, align 8, !tbaa !11\n  %7 = load i64, ptr %2, align 8, !tbaa !13\n  %8 = getelementptr inbounds i32, ptr %6, i64 %7\n  %9 = load i32, ptr %8, align 4, !tbaa !14\n  %10 = call i64 @test_bit(i32 noundef %5, i32 noundef %9) #3\n  %11 = icmp eq i64 %10, 0\n  %12 = zext i1 %11 to i32\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #3\n  ret i32 %12\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @ccw_device_get_id(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @test_bit(i32 noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"ccw_dev_id\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"any pointer\", !8, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_bba.c_bba_cmd_ins.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function bba_cmd_ins\n\t.type\tbba_cmd_ins,@function\nbba_cmd_ins:                            # @bba_cmd_ins\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r14d\n\tmovq\t%rsi, %rbx\n\tmovl\t%edi, %ebp\n\txorl\t%eax, %eax\n\tcallq\tbba_select@PLT\n\tmovl\t%ebp, %edi\n\tmovq\t%rbx, %rsi\n\tmovl\t%r14d, %edx\n\tcallq\tbba_cmd_insnosel@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tbba_deselect@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tbba_cmd_ins, .Lfunc_end0-bba_cmd_ins\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @bba_cmd_ins], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @bba_cmd_ins(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = tail call i32 (...) @bba_select() #2\n  %5 = tail call i32 @bba_cmd_insnosel(i32 noundef %0, ptr noundef %1, i32 noundef %2) #2\n  %6 = tail call i32 (...) @bba_deselect() #2\n  ret void\n}\n\ndeclare i32 @bba_select(...) local_unnamed_addr #1\n\ndeclare i32 @bba_cmd_insnosel(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bba_deselect(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./RetroArch/wii/libogc/libdb/uIP/extr_bba.c_bba_cmd_ins.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @bba_cmd_ins], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @bba_cmd_ins(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = tail call i32 (...) @bba_select() #2\n  %5 = tail call i32 @bba_cmd_insnosel(i32 noundef %0, ptr noundef %1, i32 noundef %2) #2\n  %6 = tail call i32 (...) @bba_deselect() #2\n  ret void\n}\n\ndeclare i32 @bba_select(...) local_unnamed_addr #1\n\ndeclare i32 @bba_cmd_insnosel(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bba_deselect(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pci.c_nvme_reset_prepare.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function nvme_reset_prepare\n\t.type\tnvme_reset_prepare,@function\nnvme_reset_prepare:                     # @nvme_reset_prepare\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tcallq\tpci_get_drvdata@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\txorl\t%esi, %esi\n\tcallq\tnvme_disable_prepare_reset@PLT\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tnvme_sync_queues@PLT            # TAILCALL\n.Lfunc_end0:\n\t.size\tnvme_reset_prepare, .Lfunc_end0-nvme_reset_prepare\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @nvme_reset_prepare], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @nvme_reset_prepare(ptr noundef %0) #0 {\n  %2 = tail call ptr @pci_get_drvdata(ptr noundef %0) #2\n  %3 = tail call i32 @nvme_disable_prepare_reset(ptr noundef %2, i32 noundef 0) #2\n  %4 = tail call i32 @nvme_sync_queues(ptr noundef %2) #2\n  ret void\n}\n\ndeclare ptr @pci_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @nvme_disable_prepare_reset(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @nvme_sync_queues(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/drivers/nvme/host/extr_pci.c_nvme_reset_prepare.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @nvme_reset_prepare], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @nvme_reset_prepare(ptr noundef %0) #0 {\n  %2 = tail call ptr @pci_get_drvdata(ptr noundef %0) #2\n  %3 = tail call i32 @nvme_disable_prepare_reset(ptr noundef %2, i32 noundef 0) #2\n  %4 = tail call i32 @nvme_sync_queues(ptr noundef %2) #2\n  ret void\n}\n\ndeclare ptr @pci_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @nvme_disable_prepare_reset(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @nvme_sync_queues(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_skcipher.c_skcipher_decrypt_blkcipher.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function skcipher_decrypt_blkcipher\n\t.type\tskcipher_decrypt_blkcipher,@function\nskcipher_decrypt_blkcipher:             # @skcipher_decrypt_blkcipher\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tcallq\tcrypto_skcipher_reqtfm@PLT\n\tmovq\t%rax, %rdi\n\tcallq\tcrypto_skcipher_tfm@PLT\n\tmovq\t(%rax), %rax\n\tmovl\t(%rax), %esi\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tskcipher_crypt_blkcipher@PLT    # TAILCALL\n.Lfunc_end0:\n\t.size\tskcipher_decrypt_blkcipher, .Lfunc_end0-skcipher_decrypt_blkcipher\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @skcipher_decrypt_blkcipher], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @skcipher_decrypt_blkcipher(ptr noundef %0) #0 {\n  %2 = tail call ptr @crypto_skcipher_reqtfm(ptr noundef %0) #2\n  %3 = tail call ptr @crypto_skcipher_tfm(ptr noundef %2) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %4, align 4, !tbaa !10\n  %6 = tail call i32 @skcipher_crypt_blkcipher(ptr noundef %0, i32 noundef %5) #2\n  ret i32 %6\n}\n\ndeclare ptr @crypto_skcipher_reqtfm(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @crypto_skcipher_tfm(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @skcipher_crypt_blkcipher(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_2__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"blkcipher_walk\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./linux/crypto/extr_skcipher.c_skcipher_decrypt_blkcipher.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @skcipher_decrypt_blkcipher], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @skcipher_decrypt_blkcipher(ptr noundef %0) #0 {\n  %2 = tail call ptr @crypto_skcipher_reqtfm(ptr noundef %0) #2\n  %3 = tail call ptr @crypto_skcipher_tfm(ptr noundef %2) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %4, align 4, !tbaa !10\n  %6 = tail call i32 @skcipher_crypt_blkcipher(ptr noundef %0, i32 noundef %5) #2\n  ret i32 %6\n}\n\ndeclare ptr @crypto_skcipher_reqtfm(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @crypto_skcipher_tfm(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @skcipher_crypt_blkcipher(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"crypto_tfm\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"blkcipher_alg\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_hostapd_cli.c_hostapd_cli_cmd_pmksa.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function hostapd_cli_cmd_pmksa\n\t.type\thostapd_cli_cmd_pmksa,@function\nhostapd_cli_cmd_pmksa:                  # @hostapd_cli_cmd_pmksa\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t$.L.str, %esi\n\tjmp\twpa_ctrl_command@PLT            # TAILCALL\n.Lfunc_end0:\n\t.size\thostapd_cli_cmd_pmksa, .Lfunc_end0-hostapd_cli_cmd_pmksa\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"PMKSA\"\n\t.size\t.L.str, 6\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [6 x i8] c\"PMKSA\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hostapd_cli_cmd_pmksa], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hostapd_cli_cmd_pmksa(ptr noundef %0) #0 {\n  %2 = tail call i32 @wpa_ctrl_command(ptr noundef %0, ptr noundef nonnull @.str) #2\n  ret i32 %2\n}\n\ndeclare i32 @wpa_ctrl_command(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./freebsd/contrib/wpa/hostapd/extr_hostapd_cli.c_hostapd_cli_cmd_pmksa.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [6 x i8] c\"PMKSA\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hostapd_cli_cmd_pmksa], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hostapd_cli_cmd_pmksa(ptr noundef %0, i32 %1, ptr nocapture readnone %2) #0 {\n  %4 = tail call i32 @wpa_ctrl_command(ptr noundef %0, ptr noundef nonnull @.str) #2\n  ret i32 %4\n}\n\ndeclare i32 @wpa_ctrl_command(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_subclass.c_flush_sequence.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function flush_sequence\n\t.type\tflush_sequence,@function\nflush_sequence:                         # @flush_sequence\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovq\tsequence(%rip), %rdi\n\tcallq\theap_free@PLT\n\tmovq\t$0, sequence(%rip)\n\tmovq\t$0, sequence_size(%rip)\n\tmovq\t$0, sequence_cnt(%rip)\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tflush_sequence, .Lfunc_end0-flush_sequence\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tsequence,@object                # @sequence\n\t.bss\n\t.globl\tsequence\n\t.p2align\t3\nsequence:\n\t.quad\t0\n\t.size\tsequence, 8\n\n\t.type\tsequence_size,@object           # @sequence_size\n\t.globl\tsequence_size\n\t.p2align\t3\nsequence_size:\n\t.quad\t0                               # 0x0\n\t.size\tsequence_size, 8\n\n\t.type\tsequence_cnt,@object            # @sequence_cnt\n\t.globl\tsequence_cnt\n\t.p2align\t3\nsequence_cnt:\n\t.quad\t0                               # 0x0\n\t.size\tsequence_cnt, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@sequence = dso_local local_unnamed_addr global ptr null, align 8\n@sequence_size = dso_local local_unnamed_addr global i64 0, align 8\n@sequence_cnt = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @flush_sequence], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @flush_sequence() #0 {\n  %1 = load ptr, ptr @sequence, align 8, !tbaa !5\n  %2 = tail call i32 @heap_free(ptr noundef %1) #2\n  store ptr null, ptr @sequence, align 8, !tbaa !5\n  store i64 0, ptr @sequence_size, align 8, !tbaa !9\n  store i64 0, ptr @sequence_cnt, align 8, !tbaa !9\n  ret void\n}\n\ndeclare i32 @heap_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>", "file:": "./reactos/modules/rostests/winetests/comctl32/extr_subclass.c_flush_sequence.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@sequence = dso_local local_unnamed_addr global ptr null, align 8\n@sequence_size = dso_local local_unnamed_addr global i64 0, align 8\n@sequence_cnt = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @flush_sequence], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @flush_sequence() #0 {\n  %1 = load ptr, ptr @sequence, align 8, !tbaa !5\n  %2 = tail call i32 @heap_free(ptr noundef %1) #2\n  store ptr null, ptr @sequence, align 8, !tbaa !5\n  store i64 0, ptr @sequence_size, align 8, !tbaa !9\n  store i64 0, ptr @sequence_cnt, align 8, !tbaa !9\n  ret void\n}\n\ndeclare i32 @heap_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_bfa_fcbuild.c_fc_gs_cthdr_build.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function fc_gs_cthdr_build\n\t.type\tfc_gs_cthdr_build,@function\nfc_gs_cthdr_build:                      # @fc_gs_cthdr_build\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %ebp\n\tmovq\t%rdi, %rbx\n\txorl\t%esi, %esi\n\tmovl\t$16, %edx\n\tcallq\tmemset@PLT\n\tmovl\tCT_GS3_REVISION(%rip), %eax\n\tmovl\t%eax, 12(%rbx)\n\tmovl\tCT_GSTYPE_DIRSERVICE(%rip), %eax\n\tmovl\t%eax, 8(%rbx)\n\tmovl\tCT_GSSUBTYPE_NAMESERVER(%rip), %eax\n\tmovl\t%eax, 4(%rbx)\n\tmovl\t%ebp, %edi\n\tcallq\tcpu_to_be16@PLT\n\tmovl\t%eax, (%rbx)\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tfc_gs_cthdr_build, .Lfunc_end0-fc_gs_cthdr_build\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCT_GS3_REVISION,@object         # @CT_GS3_REVISION\n\t.bss\n\t.globl\tCT_GS3_REVISION\n\t.p2align\t2\nCT_GS3_REVISION:\n\t.long\t0                               # 0x0\n\t.size\tCT_GS3_REVISION, 4\n\n\t.type\tCT_GSTYPE_DIRSERVICE,@object    # @CT_GSTYPE_DIRSERVICE\n\t.globl\tCT_GSTYPE_DIRSERVICE\n\t.p2align\t2\nCT_GSTYPE_DIRSERVICE:\n\t.long\t0                               # 0x0\n\t.size\tCT_GSTYPE_DIRSERVICE, 4\n\n\t.type\tCT_GSSUBTYPE_NAMESERVER,@object # @CT_GSSUBTYPE_NAMESERVER\n\t.globl\tCT_GSSUBTYPE_NAMESERVER\n\t.p2align\t2\nCT_GSSUBTYPE_NAMESERVER:\n\t.long\t0                               # 0x0\n\t.size\tCT_GSSUBTYPE_NAMESERVER, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fc_ct_hdr_gs_s = type { i32, i32, i32, i32 }\n\n@CT_GS3_REVISION = dso_local local_unnamed_addr global i32 0, align 4\n@CT_GSTYPE_DIRSERVICE = dso_local local_unnamed_addr global i32 0, align 4\n@CT_GSSUBTYPE_NAMESERVER = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @fc_gs_cthdr_build], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @fc_gs_cthdr_build(ptr noundef %0, ptr nocapture readnone %1, i32 noundef %2) #0 {\n  %4 = tail call i32 @memset(ptr noundef %0, i32 noundef 0, i32 noundef 16) #2\n  %5 = load i32, ptr @CT_GS3_REVISION, align 4, !tbaa !5\n  %6 = getelementptr inbounds %struct.fc_ct_hdr_gs_s, ptr %0, i64 0, i32 3\n  store i32 %5, ptr %6, align 4, !tbaa !9\n  %7 = load i32, ptr @CT_GSTYPE_DIRSERVICE, align 4, !tbaa !5\n  %8 = getelementptr inbounds %struct.fc_ct_hdr_gs_s, ptr %0, i64 0, i32 2\n  store i32 %7, ptr %8, align 4, !tbaa !11\n  %9 = load i32, ptr @CT_GSSUBTYPE_NAMESERVER, align 4, !tbaa !5\n  %10 = getelementptr inbounds %struct.fc_ct_hdr_gs_s, ptr %0, i64 0, i32 1\n  store i32 %9, ptr %10, align 4, !tbaa !12\n  %11 = tail call i32 @cpu_to_be16(i32 noundef %2) #2\n  store i32 %11, ptr %0, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cpu_to_be16(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 12}\n!10 = !{!\"fc_ct_hdr_gs_s\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = !{!10, !6, i64 8}\n!12 = !{!10, !6, i64 4}\n!13 = !{!10, !6, i64 0}\n</s><s>", "file:": "./linux/drivers/scsi/bfa/extr_bfa_fcbuild.c_fc_gs_cthdr_build.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ct_hdr_s = type { i32, i32, i32, i32 }\n\n@CT_GS3_REVISION = dso_local local_unnamed_addr global i32 0, align 4\n@CT_GSTYPE_DIRSERVICE = dso_local local_unnamed_addr global i32 0, align 4\n@CT_GSSUBTYPE_NAMESERVER = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @fc_gs_cthdr_build], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @fc_gs_cthdr_build(ptr noundef %0, i32 %1, i32 noundef %2) #0 {\n  %4 = tail call i32 @memset(ptr noundef %0, i32 noundef 0, i32 noundef 16) #2\n  %5 = load i32, ptr @CT_GS3_REVISION, align 4, !tbaa !5\n  %6 = getelementptr inbounds %struct.ct_hdr_s, ptr %0, i64 0, i32 3\n  store i32 %5, ptr %6, align 4, !tbaa !9\n  %7 = load i32, ptr @CT_GSTYPE_DIRSERVICE, align 4, !tbaa !5\n  %8 = getelementptr inbounds %struct.ct_hdr_s, ptr %0, i64 0, i32 2\n  store i32 %7, ptr %8, align 4, !tbaa !11\n  %9 = load i32, ptr @CT_GSSUBTYPE_NAMESERVER, align 4, !tbaa !5\n  %10 = getelementptr inbounds %struct.ct_hdr_s, ptr %0, i64 0, i32 1\n  store i32 %9, ptr %10, align 4, !tbaa !12\n  %11 = tail call i32 @cpu_to_be16(i32 noundef %2) #2\n  store i32 %11, ptr %0, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cpu_to_be16(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 12}\n!10 = !{!\"ct_hdr_s\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = !{!10, !6, i64 8}\n!12 = !{!10, !6, i64 4}\n!13 = !{!10, !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_8250_dwlib.c_dw8250_set_divisor.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function dw8250_set_divisor\n\t.type\tdw8250_set_divisor,@function\ndw8250_set_divisor:                     # @dw8250_set_divisor\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, %ebx\n\tmovl\t%edx, %r14d\n\tmovl\t%esi, %r15d\n\tmovq\t%rdi, %rbp\n\tmovl\tDW_UART_DLF(%rip), %esi\n\tmovl\t%ecx, %edx\n\tcallq\tdw8250_writel_ext@PLT\n\tmovq\t%rbp, %rdi\n\tmovl\t%r15d, %esi\n\tmovl\t%r14d, %edx\n\tmovl\t%ebx, %ecx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tserial8250_do_set_divisor@PLT   # TAILCALL\n.Lfunc_end0:\n\t.size\tdw8250_set_divisor, .Lfunc_end0-dw8250_set_divisor\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tDW_UART_DLF,@object             # @DW_UART_DLF\n\t.bss\n\t.globl\tDW_UART_DLF\n\t.p2align\t2\nDW_UART_DLF:\n\t.long\t0                               # 0x0\n\t.size\tDW_UART_DLF, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@DW_UART_DLF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dw8250_set_divisor], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @dw8250_set_divisor(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr @DW_UART_DLF, align 4, !tbaa !5\n  %6 = tail call i32 @dw8250_writel_ext(ptr noundef %0, i32 noundef %5, i32 noundef %3) #2\n  %7 = tail call i32 @serial8250_do_set_divisor(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #2\n  ret void\n}\n\ndeclare i32 @dw8250_writel_ext(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @serial8250_do_set_divisor(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/tty/serial/8250/extr_8250_dwlib.c_dw8250_set_divisor.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@DW_UART_DLF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dw8250_set_divisor], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @dw8250_set_divisor(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr @DW_UART_DLF, align 4, !tbaa !5\n  %6 = tail call i32 @dw8250_writel_ext(ptr noundef %0, i32 noundef %5, i32 noundef %3) #2\n  %7 = tail call i32 @serial8250_do_set_divisor(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #2\n  ret void\n}\n\ndeclare i32 @dw8250_writel_ext(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @serial8250_do_set_divisor(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_keymap.c_matrix_scan_user.ll\"\n\t.globl\tmatrix_scan_user                # -- Begin function matrix_scan_user\n\t.p2align\t4, 0x90\n\t.type\tmatrix_scan_user,@function\nmatrix_scan_user:                       # @matrix_scan_user\n\t.cfi_startproc\n# %bb.0:\n\tretq\n.Lfunc_end0:\n\t.size\tmatrix_scan_user, .Lfunc_end0-matrix_scan_user\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @matrix_scan_user() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./qmk_firmware/keyboards/meishi2/keymaps/default/extr_keymap.c_matrix_scan_user.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @matrix_scan_user() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sockets.c_apr_os_sock_put.ll\"\n\t.globl\tapr_os_sock_put                 # -- Begin function apr_os_sock_put\n\t.p2align\t4, 0x90\n\t.type\tapr_os_sock_put,@function\napr_os_sock_put:                        # @apr_os_sock_put\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t(%rdi), %rax\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovq\t%rdi, %rbx\n\tmovq\t%rdx, %rsi\n\tcallq\talloc_socket@PLT\n\tmovq\t(%rbx), %rdi\n\tmovl\tAPR_INET(%rip), %esi\n\tmovl\tSOCK_STREAM(%rip), %edx\n\txorl\t%ecx, %ecx\n\tcallq\tset_socket_vars@PLT\n\tmovq\t(%rbx), %rax\n\tmovl\t$-1, (%rax)\n.LBB0_2:\n\tmovabsq\t$4294967297, %rcx               # imm = 0x100000001\n\tmovq\t%rcx, 4(%rax)\n\tmovl\t$1, 12(%rax)\n\tmovl\t(%r14), %ecx\n\tmovl\t%ecx, 16(%rax)\n\tmovl\tAPR_SUCCESS(%rip), %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tapr_os_sock_put, .Lfunc_end0-apr_os_sock_put\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tAPR_INET,@object                # @APR_INET\n\t.bss\n\t.globl\tAPR_INET\n\t.p2align\t2\nAPR_INET:\n\t.long\t0                               # 0x0\n\t.size\tAPR_INET, 4\n\n\t.type\tSOCK_STREAM,@object             # @SOCK_STREAM\n\t.globl\tSOCK_STREAM\n\t.p2align\t2\nSOCK_STREAM:\n\t.long\t0                               # 0x0\n\t.size\tSOCK_STREAM, 4\n\n\t.type\tAPR_SUCCESS,@object             # @APR_SUCCESS\n\t.globl\tAPR_SUCCESS\n\t.p2align\t2\nAPR_SUCCESS:\n\t.long\t0                               # 0x0\n\t.size\tAPR_SUCCESS, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, i32, i32 }\n\n@APR_INET = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@APR_SUCCESS = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @apr_os_sock_put(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = load ptr, ptr %0, align 8, !tbaa !5\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %6, label %11\n\n6:                                                ; preds = %3\n  %7 = tail call ptr @alloc_socket(ptr noundef nonnull %0, ptr noundef %2) #2\n  %8 = load ptr, ptr %0, align 8, !tbaa !5\n  %9 = load i32, ptr @APR_INET, align 4, !tbaa !10\n  %10 = load i32, ptr @SOCK_STREAM, align 4, !tbaa !10\n  tail call void @set_socket_vars(ptr noundef %8, i32 noundef %9, i32 noundef %10, i32 noundef 0) #2\n  br label %11\n\n11:                                               ; preds = %6, %3\n  %12 = phi ptr [ %7, %6 ], [ %4, %3 ]\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %12, i64 0, i32 1\n  store <2 x i32> <i32 1, i32 1>, ptr %13, align 4, !tbaa !10\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %12, i64 0, i32 3\n  store i32 1, ptr %14, align 4, !tbaa !12\n  %15 = load i32, ptr %1, align 4, !tbaa !10\n  %16 = getelementptr inbounds %struct.TYPE_10__, ptr %12, i64 0, i32 2\n  store i32 %15, ptr %16, align 4, !tbaa !13\n  %17 = load i32, ptr @APR_SUCCESS, align 4, !tbaa !10\n  ret i32 %17\n}\n\ndeclare ptr @alloc_socket(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @set_socket_vars(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_9__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 12}\n!13 = !{!\"TYPE_10__\", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}\n</s><s>", "file:": "./freebsd/contrib/apr/network_io/unix/extr_sockets.c_apr_os_sock_put.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, i32, i32, i32, i32 }\n\n@APR_INET = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@APR_SUCCESS = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @apr_os_sock_put(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = load ptr, ptr %0, align 8, !tbaa !5\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %6, label %13\n\n6:                                                ; preds = %3\n  %7 = tail call i32 @alloc_socket(ptr noundef nonnull %0, ptr noundef %2) #2\n  %8 = load ptr, ptr %0, align 8, !tbaa !5\n  %9 = load i32, ptr @APR_INET, align 4, !tbaa !9\n  %10 = load i32, ptr @SOCK_STREAM, align 4, !tbaa !9\n  %11 = tail call i32 @set_socket_vars(ptr noundef %8, i32 noundef %9, i32 noundef %10, i32 noundef 0) #2\n  %12 = load ptr, ptr %0, align 8, !tbaa !5\n  store i32 -1, ptr %12, align 4, !tbaa !11\n  br label %13\n\n13:                                               ; preds = %6, %3\n  %14 = phi ptr [ %12, %6 ], [ %4, %3 ]\n  %15 = getelementptr inbounds %struct.TYPE_5__, ptr %14, i64 0, i32 1\n  store <2 x i32> <i32 1, i32 1>, ptr %15, align 4, !tbaa !9\n  %16 = getelementptr inbounds %struct.TYPE_5__, ptr %14, i64 0, i32 3\n  store i32 1, ptr %16, align 4, !tbaa !13\n  %17 = load i32, ptr %1, align 4, !tbaa !9\n  %18 = getelementptr inbounds %struct.TYPE_5__, ptr %14, i64 0, i32 4\n  store i32 %17, ptr %18, align 4, !tbaa !14\n  %19 = load i32, ptr @APR_SUCCESS, align 4, !tbaa !9\n  ret i32 %19\n}\n\ndeclare i32 @alloc_socket(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @set_socket_vars(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_5__\", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16}\n!13 = !{!12, !10, i64 12}\n!14 = !{!12, !10, i64 16}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_classmate-laptop.c_cmpc_get_tablet.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function cmpc_get_tablet\n\t.type\tcmpc_get_tablet,@function\ncmpc_get_tablet:                        # @cmpc_get_tablet\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tsubq\t$40, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovl\t$1, 8(%rsp)\n\tmovl\t$1, 24(%rsp)\n\tleaq\t8(%rsp), %rax\n\tmovq\t%rax, 32(%rsp)\n\tleaq\t24(%rsp), %rdx\n\tleaq\t16(%rsp), %rcx\n\tmovl\t$.L.str, %esi\n\tcallq\tacpi_evaluate_integer@PLT\n\tmovl\t%eax, %ebp\n\tmovl\t%eax, %edi\n\tcallq\tACPI_SUCCESS@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t16(%rsp), %rax\n\tmovq\t%rax, (%rbx)\n.LBB0_2:\n\tmovl\t%ebp, %eax\n\taddq\t$40, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcmpc_get_tablet, .Lfunc_end0-cmpc_get_tablet\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tACPI_TYPE_INTEGER,@object       # @ACPI_TYPE_INTEGER\n\t.bss\n\t.globl\tACPI_TYPE_INTEGER\n\t.p2align\t2\nACPI_TYPE_INTEGER:\n\t.long\t0                               # 0x0\n\t.size\tACPI_TYPE_INTEGER, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"TCMD\"\n\t.size\t.L.str, 5\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_TYPE_INTEGER = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"TCMD\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cmpc_get_tablet], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @cmpc_get_tablet(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = alloca i32, align 4\n  %4 = alloca i64, align 8\n  %5 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #3\n  store i32 1, ptr %3, align 4, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %6 = call i32 @acpi_evaluate_integer(ptr noundef %0, ptr noundef nonnull @.str, ptr noundef nonnull %5, ptr noundef nonnull %4) #3\n  %7 = call i64 @ACPI_SUCCESS(i32 noundef %6) #3\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %2\n  %10 = load i64, ptr %4, align 8, !tbaa !9\n  store i64 %10, ptr %1, align 8, !tbaa !9\n  br label %11\n\n11:                                               ; preds = %9, %2\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #3\n  ret i32 %6\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @acpi_evaluate_integer(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ACPI_SUCCESS(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>", "file:": "./linux/drivers/platform/x86/extr_classmate-laptop.c_cmpc_get_tablet.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%union.acpi_object = type { %struct.TYPE_2__ }\n%struct.TYPE_2__ = type { i32 }\n%struct.acpi_object_list = type { i32, ptr }\n\n@ACPI_TYPE_INTEGER = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"TCMD\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cmpc_get_tablet], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @cmpc_get_tablet(i32 noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = alloca %union.acpi_object, align 4\n  %4 = alloca %struct.acpi_object_list, align 8\n  %5 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #3\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #3\n  store i32 1, ptr %3, align 4, !tbaa !5\n  store i32 1, ptr %4, align 8, !tbaa !8\n  %6 = getelementptr inbounds %struct.acpi_object_list, ptr %4, i64 0, i32 1\n  store ptr %3, ptr %6, align 8, !tbaa !12\n  %7 = call i32 @acpi_evaluate_integer(i32 noundef %0, ptr noundef nonnull @.str, ptr noundef nonnull %4, ptr noundef nonnull %5) #3\n  %8 = call i64 @ACPI_SUCCESS(i32 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %2\n  %11 = load i64, ptr %5, align 8, !tbaa !13\n  store i64 %11, ptr %1, align 8, !tbaa !13\n  br label %12\n\n12:                                               ; preds = %10, %2\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #3\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #3\n  ret i32 %7\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @acpi_evaluate_integer(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ACPI_SUCCESS(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = !{!9, !10, i64 0}\n!9 = !{!\"acpi_object_list\", !10, i64 0, !11, i64 8}\n!10 = !{!\"int\", !6, i64 0}\n!11 = !{!\"any pointer\", !6, i64 0}\n!12 = !{!9, !11, i64 8}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long long\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_gpiolib.c_gpiochip_disable_irq.ll\"\n\t.globl\tgpiochip_disable_irq            # -- Begin function gpiochip_disable_irq\n\t.p2align\t4, 0x90\n\t.type\tgpiochip_disable_irq,@function\ngpiochip_disable_irq:                   # @gpiochip_disable_irq\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tcallq\tgpiochip_get_desc@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\tcallq\tIS_ERR@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovl\tFLAG_USED_AS_IRQ(%rip), %edi\n\tmovq\t%rbx, %rsi\n\tcallq\ttest_bit@PLT\n\txorl\t%edi, %edi\n\ttestl\t%eax, %eax\n\tsete\t%dil\n\tcallq\tWARN_ON@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_3\n.LBB0_2:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_3:\n\t.cfi_def_cfa_offset 16\n\tmovl\tFLAG_IRQ_IS_ENABLED(%rip), %edi\n\tmovq\t%rbx, %rsi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tclear_bit@PLT                   # TAILCALL\n.Lfunc_end0:\n\t.size\tgpiochip_disable_irq, .Lfunc_end0-gpiochip_disable_irq\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tFLAG_USED_AS_IRQ,@object        # @FLAG_USED_AS_IRQ\n\t.bss\n\t.globl\tFLAG_USED_AS_IRQ\n\t.p2align\t2\nFLAG_USED_AS_IRQ:\n\t.long\t0                               # 0x0\n\t.size\tFLAG_USED_AS_IRQ, 4\n\n\t.type\tFLAG_IRQ_IS_ENABLED,@object     # @FLAG_IRQ_IS_ENABLED\n\t.globl\tFLAG_IRQ_IS_ENABLED\n\t.p2align\t2\nFLAG_IRQ_IS_ENABLED:\n\t.long\t0                               # 0x0\n\t.size\tFLAG_IRQ_IS_ENABLED, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FLAG_USED_AS_IRQ = dso_local local_unnamed_addr global i32 0, align 4\n@FLAG_IRQ_IS_ENABLED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @gpiochip_disable_irq(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @gpiochip_get_desc(ptr noundef %0, i32 noundef %1) #2\n  %4 = tail call i32 @IS_ERR(ptr noundef %3) #2\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %6, label %14\n\n6:                                                ; preds = %2\n  %7 = load i32, ptr @FLAG_USED_AS_IRQ, align 4, !tbaa !5\n  %8 = tail call i32 @test_bit(i32 noundef %7, ptr noundef %3) #2\n  %9 = icmp eq i32 %8, 0\n  %10 = zext i1 %9 to i32\n  %11 = tail call i32 @WARN_ON(i32 noundef %10) #2\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %13, label %14\n\n13:                                               ; preds = %6\n  %14 = tail call i32 @clear_bit(i32 noundef 0, ptr noundef %3) #2\n  br label %16\n\n15:                                               ; preds = %13\n  ret void\n\n16:                                               ; preds = %13, %15\n  ret void\n}\n\ndeclare ptr @gpiochip_get_desc(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IS_ERR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @WARN_ON(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/gpio/extr_gpiolib.c_gpiochip_disable_irq.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FLAG_USED_AS_IRQ = dso_local local_unnamed_addr global i32 0, align 4\n@FLAG_IRQ_IS_ENABLED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @gpiochip_disable_irq(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @gpiochip_get_desc(ptr noundef %0, i32 noundef %1) #2\n  %4 = tail call i32 @IS_ERR(ptr noundef %3) #2\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %6, label %16\n\n6:                                                ; preds = %2\n  %7 = load i32, ptr @FLAG_USED_AS_IRQ, align 4, !tbaa !5\n  %8 = tail call i32 @test_bit(i32 noundef %7, ptr noundef %3) #2\n  %9 = icmp eq i32 %8, 0\n  %10 = zext i1 %9 to i32\n  %11 = tail call i32 @WARN_ON(i32 noundef %10) #2\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %13, label %16\n\n13:                                               ; preds = %6\n  %14 = load i32, ptr @FLAG_IRQ_IS_ENABLED, align 4, !tbaa !5\n  %15 = tail call i32 @clear_bit(i32 noundef %14, ptr noundef %3) #2\n  br label %16\n\n16:                                               ; preds = %13, %6, %2\n  ret void\n}\n\ndeclare ptr @gpiochip_get_desc(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IS_ERR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @WARN_ON(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_s5p-sss.c_s5p_hash_rx.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function s5p_hash_rx\n\t.type\ts5p_hash_rx,@function\ns5p_hash_rx:                            # @s5p_hash_rx\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tcmpq\t$0, (%rdi)\n\tjle\t.LBB0_2\n# %bb.1:\n\tmovl\t12(%rbx), %edi\n\tcallq\tsg_next@PLT\n\tmovl\t%eax, 12(%rbx)\n\tmovl\t$1, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_2:\n\t.cfi_def_cfa_offset 16\n\tmovl\tHASH_FLAGS_DMA_READY(%rip), %edi\n\taddq\t$8, %rbx\n\tmovq\t%rbx, %rsi\n\tcallq\tset_bit@PLT\n\tmovl\tHASH_FLAGS_FINAL(%rip), %edi\n\tmovq\t%rbx, %rsi\n\tcallq\ttest_bit@PLT\n\tmovq\t%rax, %rcx\n\txorl\t%eax, %eax\n\ttestq\t%rcx, %rcx\n\tsete\t%al\n\taddl\t%eax, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\ts5p_hash_rx, .Lfunc_end0-s5p_hash_rx\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tHASH_FLAGS_DMA_READY,@object    # @HASH_FLAGS_DMA_READY\n\t.bss\n\t.globl\tHASH_FLAGS_DMA_READY\n\t.p2align\t2\nHASH_FLAGS_DMA_READY:\n\t.long\t0                               # 0x0\n\t.size\tHASH_FLAGS_DMA_READY, 4\n\n\t.type\tHASH_FLAGS_FINAL,@object        # @HASH_FLAGS_FINAL\n\t.globl\tHASH_FLAGS_FINAL\n\t.p2align\t2\nHASH_FLAGS_FINAL:\n\t.long\t0                               # 0x0\n\t.size\tHASH_FLAGS_FINAL, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.s5p_hash_ctx = type { i64, i32, i32 }\n\n@HASH_FLAGS_DMA_READY = dso_local local_unnamed_addr global i32 0, align 4\n@HASH_FLAGS_FINAL = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @s5p_hash_rx], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @s5p_hash_rx(ptr noundef %0) #0 {\n  %2 = load i64, ptr %0, align 8, !tbaa !5\n  %3 = icmp sgt i64 %2, 0\n  br i1 %3, label %4, label %8\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.s5p_hash_ctx, ptr %0, i64 0, i32 2\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = tail call i32 @sg_next(i32 noundef %6) #2\n  store i32 %7, ptr %5, align 4, !tbaa !11\n  br label %15\n\n8:                                                ; preds = %1\n  %9 = load i32, ptr @HASH_FLAGS_DMA_READY, align 4, !tbaa !12\n  %10 = getelementptr inbounds %struct.s5p_hash_ctx, ptr %0, i64 0, i32 1\n  %11 = tail call i32 @set_bit(i32 noundef %9, ptr noundef nonnull %10) #2\n  %12 = load i32, ptr @HASH_FLAGS_FINAL, align 4, !tbaa !12\n  %13 = tail call i64 @test_bit(i32 noundef %12, ptr noundef nonnull %10) #2\n  %14 = icmp eq i64 %13, 0\n  %15 = select i1 %14, i32 2, i32 0\n  br label %16\n\n16:                                               ; preds = %8\n  %17 = phi i32 [ %15, %8 ], [ %1, %4 ]\n  ret i32 %17\n}\n\ndeclare i32 @sg_next(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"s5p_hash_ctx\", !7, i64 0, !10, i64 8, !10, i64 12}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 12}\n!12 = !{!10, !10, i64 0}\n</s><s>", "file:": "./linux/drivers/crypto/extr_s5p-sss.c_s5p_hash_rx.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.s5p_aes_dev = type { i64, i32, i32 }\n\n@HASH_FLAGS_DMA_READY = dso_local local_unnamed_addr global i32 0, align 4\n@HASH_FLAGS_FINAL = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @s5p_hash_rx], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @s5p_hash_rx(ptr noundef %0) #0 {\n  %2 = load i64, ptr %0, align 8, !tbaa !5\n  %3 = icmp sgt i64 %2, 0\n  br i1 %3, label %4, label %8\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.s5p_aes_dev, ptr %0, i64 0, i32 2\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = tail call i32 @sg_next(i32 noundef %6) #2\n  store i32 %7, ptr %5, align 4, !tbaa !11\n  br label %16\n\n8:                                                ; preds = %1\n  %9 = load i32, ptr @HASH_FLAGS_DMA_READY, align 4, !tbaa !12\n  %10 = getelementptr inbounds %struct.s5p_aes_dev, ptr %0, i64 0, i32 1\n  %11 = tail call i32 @set_bit(i32 noundef %9, ptr noundef nonnull %10) #2\n  %12 = load i32, ptr @HASH_FLAGS_FINAL, align 4, !tbaa !12\n  %13 = tail call i64 @test_bit(i32 noundef %12, ptr noundef nonnull %10) #2\n  %14 = icmp eq i64 %13, 0\n  %15 = select i1 %14, i32 2, i32 0\n  br label %16\n\n16:                                               ; preds = %8, %4\n  %17 = phi i32 [ 1, %4 ], [ %15, %8 ]\n  ret i32 %17\n}\n\ndeclare i32 @sg_next(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"s5p_aes_dev\", !7, i64 0, !10, i64 8, !10, i64 12}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 12}\n!12 = !{!10, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_spider-pci.c_spiderpci_memcpy_fromio.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function spiderpci_memcpy_fromio\n\t.type\tspiderpci_memcpy_fromio,@function\nspiderpci_memcpy_fromio:                # @spiderpci_memcpy_fromio\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovl\t%esi, %ebx\n\tcallq\t__do_memcpy_fromio@PLT\n\tmovl\t%ebx, %edi\n\tcallq\tiowa_mem_find_bus@PLT\n\tmovl\t%eax, %edi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tspiderpci_io_flush@PLT          # TAILCALL\n.Lfunc_end0:\n\t.size\tspiderpci_memcpy_fromio, .Lfunc_end0-spiderpci_memcpy_fromio\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spiderpci_memcpy_fromio], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spiderpci_memcpy_fromio(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = tail call i32 @__do_memcpy_fromio(ptr noundef %0, i32 noundef %1, i32 noundef %2) #2\n  %5 = tail call i32 @iowa_mem_find_bus(i32 noundef %1) #2\n  %6 = tail call i32 @spiderpci_io_flush(i32 noundef %5) #2\n  ret void\n}\n\ndeclare i32 @__do_memcpy_fromio(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spiderpci_io_flush(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iowa_mem_find_bus(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/arch/powerpc/platforms/cell/extr_spider-pci.c_spiderpci_memcpy_fromio.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spiderpci_memcpy_fromio], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spiderpci_memcpy_fromio(ptr noundef %0, i32 noundef %1, i64 noundef %2) #0 {\n  %4 = tail call i32 @__do_memcpy_fromio(ptr noundef %0, i32 noundef %1, i64 noundef %2) #2\n  %5 = tail call i32 @iowa_mem_find_bus(i32 noundef %1) #2\n  %6 = tail call i32 @spiderpci_io_flush(i32 noundef %5) #2\n  ret void\n}\n\ndeclare i32 @__do_memcpy_fromio(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @spiderpci_io_flush(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iowa_mem_find_bus(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_keymap.c_action_get_macro.ll\"\n\t.globl\taction_get_macro                # -- Begin function action_get_macro\n\t.p2align\t4, 0x90\n\t.type\taction_get_macro,@function\naction_get_macro:                       # @action_get_macro\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\ttestl\t%esi, %esi\n\tje\t.LBB0_1\n.LBB0_3:\n\tmovq\tMACRO_NONE(%rip), %rax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tjmp\t.LBB0_4\n.LBB0_1:\n\t.cfi_def_cfa_offset 80\n\tcmpl\t$0, (%rdi)\n\tje\t.LBB0_3\n# %bb.2:\n\tmovl\tLSFT(%rip), %edi\n\tcallq\tD@PLT\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovl\tLEFT(%rip), %edi\n\tcallq\tT@PLT\n\tmovl\t%eax, 8(%rsp)                   # 4-byte Spill\n\tmovl\tLSFT(%rip), %edi\n\tcallq\tU@PLT\n\tmovl\t%eax, 4(%rsp)                   # 4-byte Spill\n\tmovl\tLCTL(%rip), %edi\n\tcallq\tD@PLT\n\tmovl\t%eax, (%rsp)                    # 4-byte Spill\n\tmovl\tX(%rip), %edi\n\tcallq\tT@PLT\n\tmovl\t%eax, %ebp\n\tmovl\tLCTL(%rip), %edi\n\tcallq\tU@PLT\n\tmovl\t%eax, %r15d\n\tmovl\tRIGHT(%rip), %edi\n\tcallq\tT@PLT\n                                        # kill: def $eax killed $eax def $rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\tLCTL(%rip), %edi\n\tcallq\tD@PLT\n\tmovl\t%eax, %r14d\n\tmovl\tV(%rip), %edi\n\tcallq\tT@PLT\n\tmovl\t%eax, %r12d\n\tmovl\tLCTL(%rip), %edi\n\tcallq\tU@PLT\n\tmovl\t%eax, %r13d\n\tmovl\tLEFT(%rip), %edi\n\tcallq\tT@PLT\n                                        # kill: def $eax killed $eax def $rax\n\tmovl\tEND(%rip), %ebx\n\tmovl\t12(%rsp), %edi                  # 4-byte Reload\n\tmovl\t8(%rsp), %esi                   # 4-byte Reload\n\tmovl\t4(%rsp), %edx                   # 4-byte Reload\n\tmovl\t(%rsp), %ecx                    # 4-byte Reload\n\tmovl\t%ebp, %r8d\n\tmovl\t%r15d, %r9d\n\tpushq\t%rbx\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%rax\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r13\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r12\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r14\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t56(%rsp)                        # 8-byte Folded Reload\n\t.cfi_adjust_cfa_offset 8\n\tcallq\tMACRO@PLT\n\taddq\t$72, %rsp\n\t.cfi_adjust_cfa_offset -72\n.LBB0_4:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\taction_get_macro, .Lfunc_end0-action_get_macro\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tLSFT,@object                    # @LSFT\n\t.bss\n\t.globl\tLSFT\n\t.p2align\t2\nLSFT:\n\t.long\t0                               # 0x0\n\t.size\tLSFT, 4\n\n\t.type\tLEFT,@object                    # @LEFT\n\t.globl\tLEFT\n\t.p2align\t2\nLEFT:\n\t.long\t0                               # 0x0\n\t.size\tLEFT, 4\n\n\t.type\tLCTL,@object                    # @LCTL\n\t.globl\tLCTL\n\t.p2align\t2\nLCTL:\n\t.long\t0                               # 0x0\n\t.size\tLCTL, 4\n\n\t.type\tX,@object                       # @X\n\t.globl\tX\n\t.p2align\t2\nX:\n\t.long\t0                               # 0x0\n\t.size\tX, 4\n\n\t.type\tRIGHT,@object                   # @RIGHT\n\t.globl\tRIGHT\n\t.p2align\t2\nRIGHT:\n\t.long\t0                               # 0x0\n\t.size\tRIGHT, 4\n\n\t.type\tV,@object                       # @V\n\t.globl\tV\n\t.p2align\t2\nV:\n\t.long\t0                               # 0x0\n\t.size\tV, 4\n\n\t.type\tEND,@object                     # @END\n\t.globl\tEND\n\t.p2align\t2\nEND:\n\t.long\t0                               # 0x0\n\t.size\tEND, 4\n\n\t.type\tMACRO_NONE,@object              # @MACRO_NONE\n\t.globl\tMACRO_NONE\n\t.p2align\t3\nMACRO_NONE:\n\t.quad\t0\n\t.size\tMACRO_NONE, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@LSFT = dso_local local_unnamed_addr global i32 0, align 4\n@LEFT = dso_local local_unnamed_addr global i32 0, align 4\n@LCTL = dso_local local_unnamed_addr global i32 0, align 4\n@X = dso_local local_unnamed_addr global i32 0, align 4\n@RIGHT = dso_local local_unnamed_addr global i32 0, align 4\n@V = dso_local local_unnamed_addr global i32 0, align 4\n@END = dso_local local_unnamed_addr global i32 0, align 4\n@MACRO_NONE = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @action_get_macro(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = icmp eq i32 %1, 0\n  br i1 %3, label %4, label %25\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %25, label %7\n\n7:                                                ; preds = %4\n  %8 = load i32, ptr @LSFT, align 4, !tbaa !10\n  %9 = tail call i32 @D(i32 noundef %8) #2\n  %10 = load i32, ptr @LEFT, align 4, !tbaa !10\n  %11 = tail call i32 @T(i32 noundef %10) #2\n  %12 = load i32, ptr @LSFT, align 4, !tbaa !10\n  %13 = tail call i32 @U(i32 noundef %12) #2\n  %14 = load i32, ptr @LCTL, align 4, !tbaa !10\n  %15 = tail call i32 @D(i32 noundef %14) #2\n  %16 = load i32, ptr @X, align 4, !tbaa !10\n  %17 = tail call i32 @T(i32 noundef %16) #2\n  %18 = load i32, ptr @LCTL, align 4, !tbaa !10\n  %19 = tail call i32 @U(i32 noundef %18) #2\n  %20 = load i32, ptr @RIGHT, align 4, !tbaa !10\n  %21 = tail call i32 @T(i32 noundef %20) #2\n  %22 = load i32, ptr @LCTL, align 4, !tbaa !10\n  %23 = tail call i32 @D(i32 noundef %22) #2\n  %24 = tail call i32 @T(i32 noundef %23) #2\n  %25 = tail call ptr @MACRO(i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %24, i32 noundef %21, i32 noundef %15, i32 noundef %19, i32 noundef %17, i32 noundef %13, i32 noundef %9) #2\n  br label %27\n\n26:                                               ; preds = %27\n  %27 = phi ptr [ %25, %26 ], [ %25, %27 ]\n  %28 = load ptr, ptr @MACRO_NONE, align 8, !tbaa !11\n  br label %29\n\n29:                                               ; preds = %26, %2\n  %30 = phi ptr [ %2, %2 ], [ %28, %26 ]\n  ret ptr %30\n\n31:                                               ; preds = %32\n  %33 = tail call i32 @MACRO(i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %24, i32 noundef %21, i32 noundef %15, i32 noundef %19, i32 noundef %17, i32 noundef %13, i32 noundef %9) #2\n  %34 = tail call i32 @MACRO(i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %24, i32 noundef %21, i32 noundef %15, i32 noundef %19, i32 noundef %17, i32 noundef %13, i32 noundef %9) #2\n  %35 = tail call i32 @MACRO(i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %24, i32 noundef %21, i32 noundef %15, i32 noundef %19, i32 noundef %17, i32 noundef %13, i32 noundef %9) #2\n  %36 = tail call i32 @MACRO(i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %24, i32 noundef %21, i32 noundef %15, i32 noundef %19, i32 noundef %17, i32 noundef %13, i32 noundef %9) #2\n  %37 = tail call i32 @MACRO(i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %24, i32 noundef %21, i32 noundef %15, i32 noundef %19, i32 noundef %17, i32 noundef %13, i32 noundef %9) #2\n  %38 = tail call i32 @MACRO(i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 nound", "file:": "./qmk_firmware/keyboards/lets_split/keymaps/dlaroe/extr_keymap.c_action_get_macro.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@LSFT = dso_local local_unnamed_addr global i32 0, align 4\n@LEFT = dso_local local_unnamed_addr global i32 0, align 4\n@LCTL = dso_local local_unnamed_addr global i32 0, align 4\n@X = dso_local local_unnamed_addr global i32 0, align 4\n@RIGHT = dso_local local_unnamed_addr global i32 0, align 4\n@V = dso_local local_unnamed_addr global i32 0, align 4\n@END = dso_local local_unnamed_addr global i32 0, align 4\n@MACRO_NONE = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @action_get_macro(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = icmp eq i32 %1, 0\n  br i1 %4, label %5, label %33\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr %0, align 4, !tbaa !5\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %33, label %8\n\n8:                                                ; preds = %5\n  %9 = load i32, ptr @LSFT, align 4, !tbaa !11\n  %10 = tail call i32 @D(i32 noundef %9) #2\n  %11 = load i32, ptr @LEFT, align 4, !tbaa !11\n  %12 = tail call i32 @T(i32 noundef %11) #2\n  %13 = load i32, ptr @LSFT, align 4, !tbaa !11\n  %14 = tail call i32 @U(i32 noundef %13) #2\n  %15 = load i32, ptr @LCTL, align 4, !tbaa !11\n  %16 = tail call i32 @D(i32 noundef %15) #2\n  %17 = load i32, ptr @X, align 4, !tbaa !11\n  %18 = tail call i32 @T(i32 noundef %17) #2\n  %19 = load i32, ptr @LCTL, align 4, !tbaa !11\n  %20 = tail call i32 @U(i32 noundef %19) #2\n  %21 = load i32, ptr @RIGHT, align 4, !tbaa !11\n  %22 = tail call i32 @T(i32 noundef %21) #2\n  %23 = load i32, ptr @LCTL, align 4, !tbaa !11\n  %24 = tail call i32 @D(i32 noundef %23) #2\n  %25 = load i32, ptr @V, align 4, !tbaa !11\n  %26 = tail call i32 @T(i32 noundef %25) #2\n  %27 = load i32, ptr @LCTL, align 4, !tbaa !11\n  %28 = tail call i32 @U(i32 noundef %27) #2\n  %29 = load i32, ptr @LEFT, align 4, !tbaa !11\n  %30 = tail call i32 @T(i32 noundef %29) #2\n  %31 = load i32, ptr @END, align 4, !tbaa !11\n  %32 = tail call ptr @MACRO(i32 noundef %10, i32 noundef %12, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %22, i32 noundef %24, i32 noundef %26, i32 noundef %28, i32 noundef %30, i32 noundef %31) #2\n  br label %35\n\n33:                                               ; preds = %5, %3\n  %34 = load ptr, ptr @MACRO_NONE, align 8, !tbaa !12\n  br label %35\n\n35:                                               ; preds = %33, %8\n  %36 = phi ptr [ %32, %8 ], [ %34, %33 ]\n  ret ptr %36\n}\n\ndeclare ptr @MACRO(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @D(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @T(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @U(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0}\n!7 = !{!\"TYPE_4__\", !8, i64 0}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!8, !8, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"any pointer\", !9, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_thr_error.c___error_threaded.ll\"\n\t.globl\t__error_threaded                # -- Begin function __error_threaded\n\t.p2align\t4, 0x90\n\t.type\t__error_threaded,@function\n__error_threaded:                       # @__error_threaded\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcmpq\t$0, _thr_initial(%rip)\n\tje\t.LBB0_3\n# %bb.1:\n\txorl\t%eax, %eax\n\tcallq\t_get_curthread@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n# %bb.2:\n\tcmpq\t_thr_initial(%rip), %rax\n\tje\t.LBB0_3\n# %bb.4:\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_3:\n\t.cfi_def_cfa_offset 16\n\tmovl\t$errno, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\t__error_threaded, .Lfunc_end0-__error_threaded\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t_thr_initial,@object            # @_thr_initial\n\t.bss\n\t.globl\t_thr_initial\n\t.p2align\t3\n_thr_initial:\n\t.quad\t0\n\t.size\t_thr_initial, 8\n\n\t.type\terrno,@object                   # @errno\n\t.globl\terrno\n\t.p2align\t2\nerrno:\n\t.long\t0                               # 0x0\n\t.size\terrno, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_thr_initial = dso_local local_unnamed_addr global ptr null, align 8\n@errno = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local nonnull ptr @__error_threaded() local_unnamed_addr #0 {\n  %1 = load ptr, ptr @_thr_initial, align 8, !tbaa !5\n  %2 = icmp eq ptr %1, null\n  br i1 %2, label %9, label %3\n\n3:                                                ; preds = %0\n  %4 = tail call ptr (...) @_get_curthread() #2\n  %5 = icmp eq ptr %4, null\n  %6 = load ptr, ptr @_thr_initial, align 8\n  %7 = icmp eq ptr %4, %6\n  %8 = select i1 %5, i1 true, i1 %7\n  br i1 %8, label %9, label %10\n\n9:                                                ; preds = %3, %0\n  br label %10\n\n10:                                               ; preds = %3, %9\n  %11 = phi ptr [ @errno, %9 ], [ %4, %3 ]\n  ret ptr %11\n}\n\ndeclare ptr @_get_curthread(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/lib/libthr/sys/extr_thr_error.c___error_threaded.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_thr_initial = dso_local local_unnamed_addr global ptr null, align 8\n@errno = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @__error_threaded() local_unnamed_addr #0 {\n  %1 = load ptr, ptr @_thr_initial, align 8, !tbaa !5\n  %2 = icmp eq ptr %1, null\n  br i1 %2, label %9, label %3\n\n3:                                                ; preds = %0\n  %4 = tail call ptr (...) @_get_curthread() #2\n  %5 = icmp eq ptr %4, null\n  %6 = load ptr, ptr @_thr_initial, align 8\n  %7 = icmp eq ptr %4, %6\n  %8 = select i1 %5, i1 true, i1 %7\n  br i1 %8, label %9, label %10\n\n9:                                                ; preds = %3, %0\n  br label %10\n\n10:                                               ; preds = %3, %9\n  %11 = phi ptr [ @errno, %9 ], [ %4, %3 ]\n  ret ptr %11\n}\n\ndeclare ptr @_get_curthread(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_93.c_RAFlush.ll\"\n\t.globl\tRAFlush                         # -- Begin function RAFlush\n\t.p2align\t4, 0x90\n\t.type\tRAFlush,@function\nRAFlush:                                # @RAFlush\n\t.cfi_startproc\n# %bb.0:\n\tretq\n.Lfunc_end0:\n\t.size\tRAFlush, .Lfunc_end0-RAFlush\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @RAFlush() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./exploitdb/exploits/linux/local/extr_93.c_RAFlush.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @RAFlush() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ivtv-gpio.c_subdev_s_clock_freq.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function subdev_s_clock_freq\n\t.type\tsubdev_s_clock_freq,@function\nsubdev_s_clock_freq:                    # @subdev_s_clock_freq\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %ebx\n\tcallq\tsd_to_ivtv@PLT\n\tmovq\t(%rax), %rax\n\tmovl\t(%rax), %ebp\n\tcmpl\t$44100, %ebx                    # imm = 0xAC44\n\tje\t.LBB0_3\n# %bb.1:\n\tcmpl\t$32000, %ebx                    # imm = 0x7D00\n\tjne\t.LBB0_4\n# %bb.2:\n\taddq\t$4, %rax\n\ttestl\t%ebp, %ebp\n\tjne\t.LBB0_6\n\tjmp\t.LBB0_7\n.LBB0_3:\n\taddq\t$8, %rax\n\ttestl\t%ebp, %ebp\n\tjne\t.LBB0_6\n\tjmp\t.LBB0_7\n.LBB0_4:\n\taddq\t$12, %rax\n\ttestl\t%ebp, %ebp\n\tje\t.LBB0_7\n.LBB0_6:\n\tmovl\t(%rax), %ebx\n\tmovl\tIVTV_REG_GPIO_OUT(%rip), %edi\n\tcallq\tread_reg@PLT\n\txorl\t%eax, %ebx\n\tandl\t%ebp, %ebx\n\txorl\t%eax, %ebx\n\tmovl\tIVTV_REG_GPIO_OUT(%rip), %esi\n\tmovl\t%ebx, %edi\n\tcallq\twrite_reg@PLT\n.LBB0_7:\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsubdev_s_clock_freq, .Lfunc_end0-subdev_s_clock_freq\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tIVTV_REG_GPIO_OUT,@object       # @IVTV_REG_GPIO_OUT\n\t.bss\n\t.globl\tIVTV_REG_GPIO_OUT\n\t.p2align\t2\nIVTV_REG_GPIO_OUT:\n\t.long\t0                               # 0x0\n\t.size\tIVTV_REG_GPIO_OUT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, i32, i32, i32 }\n\n@IVTV_REG_GPIO_OUT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @subdev_s_clock_freq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @subdev_s_clock_freq(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = tail call ptr @sd_to_ivtv(ptr noundef %0) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %4, align 4, !tbaa !10\n  switch i32 %1, label %15 [\n    i32 32000, label %6\n    i32 44100, label %9\n  ]\n\n6:                                                ; preds = %2\n  %7 = icmp eq i32 %5, 0\n  br i1 %7, label %19, label %8\n\n8:                                                ; preds = %6\n  %9 = getelementptr inbounds %struct.TYPE_2__, ptr %4, i64 0, i32 1\n  br label %12\n\n9:                                                ; preds = %2\n  %10 = icmp eq i32 %5, 0\n  br i1 %10, label %19, label %11\n\n11:                                               ; preds = %9\n  %12 = getelementptr inbounds %struct.TYPE_2__, ptr %4, i64 0, i32 2\n  br label %12\n\n12:                                               ; preds = %8, %11\n  %13 = phi ptr [ %12, %11 ], [ %9, %8 ]\n  %14 = load i32, ptr %13, align 4, !tbaa !10\n  br label %15\n\n15:                                               ; preds = %12, %2\n  %16 = phi i32 [ %1, %2 ], [ %14, %12 ]\n  %17 = load i32, ptr @IVTV_REG_GPIO_OUT, align 4, !tbaa !10\n  %18 = tail call i32 @read_reg(i32 noundef %17) #2\n  br label %19\n\n19:                                               ; preds = %15, %9, %6\n  %20 = phi i32 [ %16, %15 ], [ %16, %9 ], [ %16, %6 ]\n  %21 = load i32, ptr @IVTV_REG_GPIO_OUT, align 4, !tbaa !10\n  %22 = xor i32 %20, %5\n  %23 = and i32 %22, %5\n  %24 = or i32 %23, %18\n  %25 = tail call i32 @write_reg(i32 noundef %24, i32 noundef %21) #2\n  ret i32 0\n}\n\ndeclare ptr @sd_to_ivtv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @read_reg(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @write_reg(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ivtv\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./linux/drivers/media/pci/ivtv/extr_ivtv-gpio.c_subdev_s_clock_freq.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32, i32, i32 }\n\n@IVTV_REG_GPIO_OUT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @subdev_s_clock_freq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @subdev_s_clock_freq(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = tail call ptr @sd_to_ivtv(ptr noundef %0) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %4, align 4, !tbaa !10\n  switch i32 %1, label %10 [\n    i32 32000, label %6\n    i32 44100, label %8\n  ]\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %4, i64 0, i32 1\n  br label %12\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.TYPE_3__, ptr %4, i64 0, i32 2\n  br label %12\n\n10:                                               ; preds = %2\n  %11 = getelementptr inbounds %struct.TYPE_3__, ptr %4, i64 0, i32 3\n  br label %12\n\n12:                                               ; preds = %10, %8, %6\n  %13 = phi ptr [ %11, %10 ], [ %9, %8 ], [ %7, %6 ]\n  %14 = icmp eq i32 %5, 0\n  br i1 %14, label %25, label %15\n\n15:                                               ; preds = %12\n  %16 = load i32, ptr %13, align 4, !tbaa !14\n  %17 = load i32, ptr @IVTV_REG_GPIO_OUT, align 4, !tbaa !14\n  %18 = tail call i32 @read_reg(i32 noundef %17) #2\n  %19 = xor i32 %5, -1\n  %20 = and i32 %18, %19\n  %21 = and i32 %16, %5\n  %22 = or i32 %20, %21\n  %23 = load i32, ptr @IVTV_REG_GPIO_OUT, align 4, !tbaa !14\n  %24 = tail call i32 @write_reg(i32 noundef %22, i32 noundef %23) #2\n  br label %25\n\n25:                                               ; preds = %15, %12\n  ret i32 0\n}\n\ndeclare ptr @sd_to_ivtv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write_reg(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @read_reg(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ivtv\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !13, i64 0}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"TYPE_3__\", !13, i64 0, !13, i64 4, !13, i64 8, !13, i64 12}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!13, !13, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_webbrowser.c_DoPageAction.ll\"\n\t.globl\tDoPageAction                    # -- Begin function DoPageAction\n\t.p2align\t4, 0x90\n\t.type\tDoPageAction,@function\nDoPageAction:                           # @DoPageAction\n\t.cfi_startproc\n# %bb.0:\n                                        # kill: def $esi killed $esi def $rsi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_11\n# %bb.1:\n\tmovl\t(%rdi), %edi\n\ttestl\t%edi, %edi\n\tje\t.LBB0_11\n# %bb.2:\n\taddl\t$-128, %esi\n\tcmpl\t$6, %esi\n\tja\t.LBB0_11\n# %bb.3:\n\tjmpq\t*.LJTI0_0(,%rsi,8)\n.LBB0_9:\n\tjmp\tIWebBrowser2_Stop@PLT           # TAILCALL\n.LBB0_11:\n\tretq\n.LBB0_7:\n\tjmp\tIWebBrowser2_GoSearch@PLT       # TAILCALL\n.LBB0_8:\n\tjmp\tIWebBrowser2_Refresh@PLT        # TAILCALL\n.LBB0_10:\n\tmovl\tOLECMDID_PRINT(%rip), %esi\n\tmovl\tOLECMDEXECOPT_DONTPROMPTUSER(%rip), %edx\n\txorl\t%ecx, %ecx\n\txorl\t%r8d, %r8d\n\tjmp\tIWebBrowser2_ExecWB@PLT         # TAILCALL\n.LBB0_6:\n\tjmp\tIWebBrowser2_GoHome@PLT         # TAILCALL\n.LBB0_5:\n\tjmp\tIWebBrowser2_GoForward@PLT      # TAILCALL\n.LBB0_4:\n\tjmp\tIWebBrowser2_GoBack@PLT         # TAILCALL\n.Lfunc_end0:\n\t.size\tDoPageAction, .Lfunc_end0-DoPageAction\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_9\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_8\n\t.quad\t.LBB0_10\n\t.quad\t.LBB0_6\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_4\n                                        # -- End function\n\t.type\tOLECMDID_PRINT,@object          # @OLECMDID_PRINT\n\t.bss\n\t.globl\tOLECMDID_PRINT\n\t.p2align\t2\nOLECMDID_PRINT:\n\t.long\t0                               # 0x0\n\t.size\tOLECMDID_PRINT, 4\n\n\t.type\tOLECMDEXECOPT_DONTPROMPTUSER,@object # @OLECMDEXECOPT_DONTPROMPTUSER\n\t.globl\tOLECMDEXECOPT_DONTPROMPTUSER\n\t.p2align\t2\nOLECMDEXECOPT_DONTPROMPTUSER:\n\t.long\t0                               # 0x0\n\t.size\tOLECMDEXECOPT_DONTPROMPTUSER, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@OLECMDID_PRINT = dso_local local_unnamed_addr global i32 0, align 4\n@OLECMDEXECOPT_DONTPROMPTUSER = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @DoPageAction(ptr noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %20, label %4\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %20, label %7\n\n7:                                                ; preds = %4\n  switch i32 %1, label %20 [\n    i32 130, label %8\n    i32 131, label %11\n    i32 129, label %14\n    i32 132, label %16\n    i32 133, label %18\n    i32 128, label %13\n    i32 134, label %15\n  ]\n\n8:                                                ; preds = %7\n  %9 = tail call i32 @IWebBrowser2_GoBack(i32 noundef %5) #2\n  br label %20\n\n10:                                               ; preds = %7\n  %11 = tail call i32 @IWebBrowser2_GoForward(i32 noundef %5) #2\n  br label %20\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @IWebBrowser2_GoHome(i32 noundef %5) #2\n  br label %20\n\n14:                                               ; preds = %7\n  %15 = tail call i32 @IWebBrowser2_GoSearch(i32 noundef %5) #2\n  br label %20\n\n16:                                               ; preds = %7\n  %17 = tail call i32 @IWebBrowser2_Refresh(i32 noundef %5) #2\n  br label %20\n\n18:                                               ; preds = %7\n  %19 = tail call i32 @IWebBrowser2_Stop(i32 noundef %5) #2\n  br label %20\n\n20:                                               ; preds = %7, %4, %2, %18, %16, %14, %12, %10, %8\n  ret void\n}\n\ndeclare i32 @IWebBrowser2_GoBack(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_GoForward(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_GoHome(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_GoSearch(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_Refresh(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_Stop(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./reactos/dll/win32/hhctrl.ocx/extr_webbrowser.c_DoPageAction.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@OLECMDID_PRINT = dso_local local_unnamed_addr global i32 0, align 4\n@OLECMDEXECOPT_DONTPROMPTUSER = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @DoPageAction(ptr noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %24, label %4\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %24, label %7\n\n7:                                                ; preds = %4\n  switch i32 %1, label %24 [\n    i32 134, label %8\n    i32 133, label %10\n    i32 132, label %12\n    i32 129, label %14\n    i32 130, label %16\n    i32 128, label %18\n    i32 131, label %20\n  ]\n\n8:                                                ; preds = %7\n  %9 = tail call i32 @IWebBrowser2_GoBack(i32 noundef %5) #2\n  br label %24\n\n10:                                               ; preds = %7\n  %11 = tail call i32 @IWebBrowser2_GoForward(i32 noundef %5) #2\n  br label %24\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @IWebBrowser2_GoHome(i32 noundef %5) #2\n  br label %24\n\n14:                                               ; preds = %7\n  %15 = tail call i32 @IWebBrowser2_GoSearch(i32 noundef %5) #2\n  br label %24\n\n16:                                               ; preds = %7\n  %17 = tail call i32 @IWebBrowser2_Refresh(i32 noundef %5) #2\n  br label %24\n\n18:                                               ; preds = %7\n  %19 = tail call i32 @IWebBrowser2_Stop(i32 noundef %5) #2\n  br label %24\n\n20:                                               ; preds = %7\n  %21 = load i32, ptr @OLECMDID_PRINT, align 4, !tbaa !10\n  %22 = load i32, ptr @OLECMDEXECOPT_DONTPROMPTUSER, align 4, !tbaa !10\n  %23 = tail call i32 @IWebBrowser2_ExecWB(i32 noundef %5, i32 noundef %21, i32 noundef %22, i32 noundef 0, i32 noundef 0) #2\n  br label %24\n\n24:                                               ; preds = %2, %4, %7, %20, %18, %16, %14, %12, %10, %8\n  ret void\n}\n\ndeclare i32 @IWebBrowser2_GoBack(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_GoForward(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_GoHome(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_GoSearch(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_Refresh(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_Stop(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @IWebBrowser2_ExecWB(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_cache.c_setup_deferral.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function setup_deferral\n\t.type\tsetup_deferral,@function\nsetup_deferral:                         # @setup_deferral\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r14d\n\tmovq\t%rsi, %rbp\n\tmovq\t%rdi, %rbx\n\tmovq\t%rsi, 8(%rdi)\n\tmovl\t$cache_defer_lock, %edi\n\tcallq\tspin_lock@PLT\n\tmovq\t%rbx, %rdi\n\tmovq\t%rbp, %rsi\n\tcallq\t__hash_deferred_req@PLT\n\ttestl\t%r14d, %r14d\n\tje\t.LBB0_2\n# %bb.1:\n\tincl\tcache_defer_cnt(%rip)\n\tmovl\t$cache_defer_list, %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tlist_add@PLT\n.LBB0_2:\n\tmovl\t$cache_defer_lock, %edi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tspin_unlock@PLT                 # TAILCALL\n.Lfunc_end0:\n\t.size\tsetup_deferral, .Lfunc_end0-setup_deferral\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tcache_defer_lock,@object        # @cache_defer_lock\n\t.bss\n\t.globl\tcache_defer_lock\n\t.p2align\t2\ncache_defer_lock:\n\t.long\t0                               # 0x0\n\t.size\tcache_defer_lock, 4\n\n\t.type\tcache_defer_cnt,@object         # @cache_defer_cnt\n\t.globl\tcache_defer_cnt\n\t.p2align\t2\ncache_defer_cnt:\n\t.long\t0                               # 0x0\n\t.size\tcache_defer_cnt, 4\n\n\t.type\tcache_defer_list,@object        # @cache_defer_list\n\t.globl\tcache_defer_list\n\t.p2align\t2\ncache_defer_list:\n\t.long\t0                               # 0x0\n\t.size\tcache_defer_list, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cache_deferral = type { i32, ptr }\n\n@cache_defer_lock = dso_local global i32 0, align 4\n@cache_defer_cnt = dso_local local_unnamed_addr global i32 0, align 4\n@cache_defer_list = dso_local global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @setup_deferral], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @setup_deferral(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = getelementptr inbounds %struct.cache_deferral, ptr %0, i64 0, i32 1\n  store ptr %1, ptr %4, align 8, !tbaa !5\n  %5 = tail call i32 @spin_lock(ptr noundef nonnull @cache_defer_lock) #2\n  %6 = tail call i32 @__hash_deferred_req(ptr noundef %0, ptr noundef %1) #2\n  %7 = icmp eq i32 %2, 0\n  br i1 %7, label %11, label %8\n\n8:                                                ; preds = %3\n  %9 = load i32, ptr @cache_defer_cnt, align 4, !tbaa !11\n  %10 = add nsw i32 %9, 1\n  store i32 %10, ptr @cache_defer_cnt, align 4, !tbaa !11\n  tail call void @list_add(ptr noundef nonnull %0, ptr noundef nonnull @cache_defer_list) #2\n  br label %11\n\n11:                                               ; preds = %8, %3\n  %12 = tail call i32 @spin_unlock(ptr noundef nonnull @cache_defer_lock) #2\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @__hash_deferred_req(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @list_add(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"cache_deferral\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n</s><s>", "file:": "./linux/net/sunrpc/extr_cache.c_setup_deferral.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cache_deferred_req = type { i32, ptr }\n\n@cache_defer_lock = dso_local global i32 0, align 4\n@cache_defer_cnt = dso_local local_unnamed_addr global i32 0, align 4\n@cache_defer_list = dso_local global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @setup_deferral], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @setup_deferral(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = getelementptr inbounds %struct.cache_deferred_req, ptr %0, i64 0, i32 1\n  store ptr %1, ptr %4, align 8, !tbaa !5\n  %5 = tail call i32 @spin_lock(ptr noundef nonnull @cache_defer_lock) #2\n  %6 = tail call i32 @__hash_deferred_req(ptr noundef %0, ptr noundef %1) #2\n  %7 = icmp eq i32 %2, 0\n  br i1 %7, label %12, label %8\n\n8:                                                ; preds = %3\n  %9 = load i32, ptr @cache_defer_cnt, align 4, !tbaa !11\n  %10 = add nsw i32 %9, 1\n  store i32 %10, ptr @cache_defer_cnt, align 4, !tbaa !11\n  %11 = tail call i32 @list_add(ptr noundef nonnull %0, ptr noundef nonnull @cache_defer_list) #2\n  br label %12\n\n12:                                               ; preds = %8, %3\n  %13 = tail call i32 @spin_unlock(ptr noundef nonnull @cache_defer_lock) #2\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @__hash_deferred_req(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"cache_deferred_req\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_skl-topology.c_skl_tplg_get_str_tkn.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function skl_tplg_get_str_tkn\n\t.type\tskl_tplg_get_str_tkn,@function\nskl_tplg_get_str_tkn:                   # @skl_tplg_get_str_tkn\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tcmpl\t$0, (%rsi)\n\tjle\t.LBB0_1\n# %bb.2:\n\tmovq\t%rdx, %r14\n\tmovq\t%rsi, %r12\n\tmovq\t%rdi, %r15\n\tmovq\t8(%rsi), %rbx\n\txorl\t%ebp, %ebp\n\t.p2align\t4, 0x90\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\tmovq\t%r14, %rdx\n\tcallq\tskl_tplg_fill_str_mfest_tkn@PLT\n\ttestl\t%eax, %eax\n\tjs\t.LBB0_4\n# %bb.5:                                #   in Loop: Header=BB0_3 Depth=1\n\taddq\t$4, %rbx\n\taddl\t%eax, %ebp\n\tcmpl\t(%r12), %ebp\n\tjl\t.LBB0_3\n\tjmp\t.LBB0_6\n.LBB0_1:\n\txorl\t%ebp, %ebp\n\tjmp\t.LBB0_6\n.LBB0_4:\n\tmovl\t%eax, %ebp\n.LBB0_6:\n\tmovl\t%ebp, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tskl_tplg_get_str_tkn, .Lfunc_end0-skl_tplg_get_str_tkn\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.skl_module_cfg = type { i32, ptr }\n%struct.skl_module_str_cfg = type { i32 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @skl_tplg_get_str_tkn], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @skl_tplg_get_str_tkn(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {\n  %4 = load i32, ptr %1, align 8, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %17\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.skl_module_cfg, ptr %1, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  br label %9\n\n9:                                                ; preds = %6, %13\n  %10 = phi i32 [ %14, %13 ], [ 0, %6 ]\n  %11 = phi ptr [ %15, %13 ], [ %8, %6 ]\n  %12 = tail call i32 @skl_tplg_fill_str_mfest_tkn(ptr noundef %0, ptr noundef %11, ptr noundef %2) #2\n  %13 = icmp slt i32 %12, 0\n  br i1 %13, label %17, label %14\n\n14:                                               ; preds = %9\n  %15 = getelementptr inbounds %struct.skl_module_str_cfg, ptr %11, i64 1\n  %16 = add nsw i32 %12, %10\n  br label %9, !llvm.loop !12\n\n17:                                               ; preds = %9, %3\n  %18 = phi i32 [ 0, %3 ], [ %12, %9 ]\n  ret i32 %18\n}\n\ndeclare i32 @skl_tplg_fill_str_mfest_tkn(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"skl_module_cfg\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./linux/sound/soc/intel/skylake/extr_skl-topology.c_skl_tplg_get_str_tkn.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_soc_tplg_vendor_array = type { i32, i64 }\n%struct.snd_soc_tplg_vendor_string_elem = type { i32 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @skl_tplg_get_str_tkn], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @skl_tplg_get_str_tkn(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) #0 {\n  %4 = load i32, ptr %1, align 8, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.snd_soc_tplg_vendor_array, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = inttoptr i64 %8 to ptr\n  br label %10\n\n10:                                               ; preds = %6, %15\n  %11 = phi ptr [ %16, %15 ], [ %9, %6 ]\n  %12 = phi i32 [ %17, %15 ], [ 0, %6 ]\n  %13 = tail call i32 @skl_tplg_fill_str_mfest_tkn(ptr noundef %0, ptr noundef %11, ptr noundef %2) #2\n  %14 = icmp slt i32 %13, 0\n  br i1 %14, label %20, label %15\n\n15:                                               ; preds = %10\n  %16 = getelementptr inbounds %struct.snd_soc_tplg_vendor_string_elem, ptr %11, i64 1\n  %17 = add nsw i32 %13, %12\n  %18 = load i32, ptr %1, align 8, !tbaa !5\n  %19 = icmp slt i32 %17, %18\n  br i1 %19, label %10, label %20, !llvm.loop !12\n\n20:                                               ; preds = %10, %15, %3\n  %21 = phi i32 [ 0, %3 ], [ %17, %15 ], [ %13, %10 ]\n  ret i32 %21\n}\n\ndeclare i32 @skl_tplg_fill_str_mfest_tkn(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_soc_tplg_vendor_array\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_distributed_deadlock_detection.c_BuildDeadlockPathList.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function BuildDeadlockPathList\n\t.type\tBuildDeadlockPathList,@function\nBuildDeadlockPathList:                  # @BuildDeadlockPathList\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovl\t(%rdi), %r12d\n\tmovq\tNIL(%rip), %rax\n\tmovq\t%rax, (%rdx)\n\ttestl\t%r12d, %r12d\n\tjle\t.LBB0_3\n# %bb.1:\n\tmovq\t%rdx, %r15\n\tmovq\t%rsi, %r14\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t(%r14,%rbx,8), %rsi\n\tmovq\t%rax, %rdi\n\tcallq\tlappend@PLT\n\tmovq\t%rax, (%r15)\n\tincq\t%rbx\n\tcmpq\t%rbx, %r12\n\tjne\t.LBB0_2\n.LBB0_3:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tBuildDeadlockPathList, .Lfunc_end0-BuildDeadlockPathList\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNIL,@object                     # @NIL\n\t.bss\n\t.globl\tNIL\n\t.p2align\t3\nNIL:\n\t.quad\t0\n\t.size\tNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NIL = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @BuildDeadlockPathList], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @BuildDeadlockPathList(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef %2) #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = load ptr, ptr @NIL, align 8, !tbaa !10\n  store ptr %5, ptr %2, align 8, !tbaa !10\n  %6 = icmp sgt i32 %4, 0\n  br i1 %6, label %7, label %14\n\n7:                                                ; preds = %3\n  %8 = zext i32 %4 to i64\n  br label %9\n\n9:                                                ; preds = %7, %9\n  %10 = phi i64 [ 0, %7 ], [ %12, %9 ]\n  %11 = getelementptr inbounds ptr, ptr %1, i64 %10\n  %12 = add nuw nsw i64 %10, 1\n  %13 = load ptr, ptr %11, align 8, !tbaa !10\n  tail call void @llvm.assume(i1 %6)\n  tail call void @llvm.assume(i1 %6)\n  %14 = tail call ptr @lappend(ptr noundef %5, ptr noundef %13) #3\n  store ptr %14, ptr %2, align 8, !tbaa !10\n  %15 = icmp eq i64 %12, %8\n  br i1 %15, label %16, label %9, !llvm.loop !12\n\n16:                                               ; preds = %9\n  ret void\n}\n\ndeclare ptr @lappend(ptr noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.assume(i1 noundef) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblememonly nocallback nofree nosync nounwind willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./citus/src/backend/distributed/transaction/extr_distributed_deadlock_detection.c_BuildDeadlockPathList.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NIL = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @BuildDeadlockPathList], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @BuildDeadlockPathList(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef %2) #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = load ptr, ptr @NIL, align 8, !tbaa !10\n  store ptr %5, ptr %2, align 8, !tbaa !10\n  %6 = icmp sgt i32 %4, 0\n  br i1 %6, label %7, label %17\n\n7:                                                ; preds = %3\n  %8 = zext i32 %4 to i64\n  br label %9\n\n9:                                                ; preds = %7, %9\n  %10 = phi ptr [ %5, %7 ], [ %14, %9 ]\n  %11 = phi i64 [ 0, %7 ], [ %15, %9 ]\n  %12 = getelementptr inbounds ptr, ptr %1, i64 %11\n  %13 = load ptr, ptr %12, align 8, !tbaa !10\n  %14 = tail call ptr @lappend(ptr noundef %10, ptr noundef %13) #2\n  store ptr %14, ptr %2, align 8, !tbaa !10\n  %15 = add nuw nsw i64 %11, 1\n  %16 = icmp eq i64 %15, %8\n  br i1 %16, label %17, label %9, !llvm.loop !12\n\n17:                                               ; preds = %9, %3\n  ret void\n}\n\ndeclare ptr @lappend(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_hifn_795x.c_hifn_decrypt_aes_ofb.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function hifn_decrypt_aes_ofb\n\t.type\thifn_decrypt_aes_ofb,@function\nhifn_decrypt_aes_ofb:                   # @hifn_decrypt_aes_ofb\n\t.cfi_startproc\n# %bb.0:\n\tmovl\tACRYPTO_OP_DECRYPT(%rip), %esi\n\tmovl\tACRYPTO_TYPE_AES_128(%rip), %edx\n\tmovl\tACRYPTO_MODE_OFB(%rip), %ecx\n\tjmp\thifn_setup_crypto@PLT           # TAILCALL\n.Lfunc_end0:\n\t.size\thifn_decrypt_aes_ofb, .Lfunc_end0-hifn_decrypt_aes_ofb\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tACRYPTO_OP_DECRYPT,@object      # @ACRYPTO_OP_DECRYPT\n\t.bss\n\t.globl\tACRYPTO_OP_DECRYPT\n\t.p2align\t2\nACRYPTO_OP_DECRYPT:\n\t.long\t0                               # 0x0\n\t.size\tACRYPTO_OP_DECRYPT, 4\n\n\t.type\tACRYPTO_TYPE_AES_128,@object    # @ACRYPTO_TYPE_AES_128\n\t.globl\tACRYPTO_TYPE_AES_128\n\t.p2align\t2\nACRYPTO_TYPE_AES_128:\n\t.long\t0                               # 0x0\n\t.size\tACRYPTO_TYPE_AES_128, 4\n\n\t.type\tACRYPTO_MODE_OFB,@object        # @ACRYPTO_MODE_OFB\n\t.globl\tACRYPTO_MODE_OFB\n\t.p2align\t2\nACRYPTO_MODE_OFB:\n\t.long\t0                               # 0x0\n\t.size\tACRYPTO_MODE_OFB, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACRYPTO_OP_DECRYPT = dso_local local_unnamed_addr global i32 0, align 4\n@ACRYPTO_TYPE_AES_128 = dso_local local_unnamed_addr global i32 0, align 4\n@ACRYPTO_MODE_OFB = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hifn_decrypt_aes_ofb], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hifn_decrypt_aes_ofb(ptr noundef %0) #0 {\n  %2 = load i32, ptr @ACRYPTO_OP_DECRYPT, align 4, !tbaa !5\n  %3 = load i32, ptr @ACRYPTO_TYPE_AES_128, align 4, !tbaa !5\n  %4 = load i32, ptr @ACRYPTO_MODE_OFB, align 4, !tbaa !5\n  %5 = tail call i32 @hifn_setup_crypto(ptr noundef %0, i32 noundef %2, i32 noundef %3, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @hifn_setup_crypto(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/crypto/extr_hifn_795x.c_hifn_decrypt_aes_ofb.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACRYPTO_OP_DECRYPT = dso_local local_unnamed_addr global i32 0, align 4\n@ACRYPTO_TYPE_AES_128 = dso_local local_unnamed_addr global i32 0, align 4\n@ACRYPTO_MODE_OFB = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hifn_decrypt_aes_ofb], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i32 @hifn_decrypt_aes_ofb(ptr noundef %0) #0 {\n  %2 = load i32, ptr @ACRYPTO_OP_DECRYPT, align 4, !tbaa !5\n  %3 = load i32, ptr @ACRYPTO_TYPE_AES_128, align 4, !tbaa !5\n  %4 = load i32, ptr @ACRYPTO_MODE_OFB, align 4, !tbaa !5\n  %5 = tail call i32 @hifn_setup_crypto(ptr noundef %0, i32 noundef %2, i32 noundef %3, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @hifn_setup_crypto(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_trinity_dpm.c_trinity_dpm_fini.ll\"\n\t.globl\ttrinity_dpm_fini                # -- Begin function trinity_dpm_fini\n\t.p2align\t4, 0x90\n\t.type\ttrinity_dpm_fini,@function\ntrinity_dpm_fini:                       # @trinity_dpm_fini\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %r14\n\tcallq\ttrinity_cleanup_asic@PLT\n\tcmpl\t$0, (%r14)\n\tjle\t.LBB0_3\n# %bb.1:\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t16(%r14), %rax\n\tmovq\t(%rax,%rbx,8), %rdi\n\tcallq\tkfree@PLT\n\tincq\t%rbx\n\tmovslq\t(%r14), %rax\n\tcmpq\t%rax, %rbx\n\tjl\t.LBB0_2\n.LBB0_3:\n\tmovq\t16(%r14), %rdi\n\tcallq\tkfree@PLT\n\tmovq\t8(%r14), %rdi\n\tcallq\tkfree@PLT\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tr600_free_extended_power_table@PLT # TAILCALL\n.Lfunc_end0:\n\t.size\ttrinity_dpm_fini, .Lfunc_end0-trinity_dpm_fini\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.radeon_device = type { i32, ptr, ptr }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @trinity_dpm_fini(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @trinity_cleanup_asic(ptr noundef %0) #2\n  %3 = load i32, ptr %0, align 8, !tbaa !5\n  %4 = icmp sgt i32 %3, 0\n  br i1 %4, label %5, label %14\n\n5:                                                ; preds = %1\n  %6 = getelementptr inbounds %struct.radeon_device, ptr %0, i64 0, i32 2\n  br label %7\n\n7:                                                ; preds = %5, %7\n  %8 = phi i64 [ 0, %5 ], [ %11, %7 ]\n  %9 = load ptr, ptr %6, align 8, !tbaa !11\n  %10 = getelementptr inbounds ptr, ptr %9, i64 %8\n  %11 = add nuw nsw i64 %8, 1\n  %12 = load ptr, ptr %10, align 8, !tbaa !12\n  %13 = tail call i32 @kfree(ptr noundef %12) #2\n  br label %7\n\n14:                                               ; preds = %7, %1\n  %15 = getelementptr inbounds %struct.radeon_device, ptr %0, i64 0, i32 2\n  %16 = load ptr, ptr %15, align 8, !tbaa !11\n  %17 = tail call i32 @kfree(ptr noundef %16) #2\n  %18 = getelementptr inbounds %struct.radeon_device, ptr %0, i64 0, i32 1\n  %19 = load ptr, ptr %18, align 8, !tbaa !13\n  %20 = tail call i32 @kfree(ptr noundef %19) #2\n  %21 = tail call i32 @r600_free_extended_power_table(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @trinity_cleanup_asic(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @r600_free_extended_power_table(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"radeon_device\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!10, !10, i64 0}\n!13 = !{!6, !10, i64 8}\n</s><s>", "file:": "./linux/drivers/gpu/drm/radeon/extr_trinity_dpm.c_trinity_dpm_fini.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, ptr, ptr }\n%struct.TYPE_6__ = type { ptr }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @trinity_dpm_fini(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @trinity_cleanup_asic(ptr noundef %0) #2\n  %3 = load i32, ptr %0, align 8, !tbaa !5\n  %4 = icmp sgt i32 %3, 0\n  br i1 %4, label %5, label %17\n\n5:                                                ; preds = %1\n  %6 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  br label %7\n\n7:                                                ; preds = %5, %7\n  %8 = phi i64 [ 0, %5 ], [ %13, %7 ]\n  %9 = load ptr, ptr %6, align 8, !tbaa !13\n  %10 = getelementptr inbounds %struct.TYPE_6__, ptr %9, i64 %8\n  %11 = load ptr, ptr %10, align 8, !tbaa !14\n  %12 = tail call i32 @kfree(ptr noundef %11) #2\n  %13 = add nuw nsw i64 %8, 1\n  %14 = load i32, ptr %0, align 8, !tbaa !5\n  %15 = sext i32 %14 to i64\n  %16 = icmp slt i64 %13, %15\n  br i1 %16, label %7, label %17, !llvm.loop !16\n\n17:                                               ; preds = %7, %1\n  %18 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %19 = load ptr, ptr %18, align 8, !tbaa !13\n  %20 = tail call i32 @kfree(ptr noundef %19) #2\n  %21 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %22 = load ptr, ptr %21, align 8, !tbaa !18\n  %23 = tail call i32 @kfree(ptr noundef %22) #2\n  %24 = tail call i32 @r600_free_extended_power_table(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @trinity_cleanup_asic(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @r600_free_extended_power_table(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !9, i64 0}\n!6 = !{!\"radeon_device\", !7, i64 0}\n!7 = !{!\"TYPE_5__\", !8, i64 0}\n!8 = !{!\"TYPE_4__\", !9, i64 0, !12, i64 8, !12, i64 16}\n!9 = !{!\"int\", !10, i64 0}\n!10 = !{!\"omnipotent char\", !11, i64 0}\n!11 = !{!\"Simple C/C++ TBAA\"}\n!12 = !{!\"any pointer\", !10, i64 0}\n!13 = !{!6, !12, i64 16}\n!14 = !{!15, !12, i64 0}\n!15 = !{!\"TYPE_6__\", !12, i64 0}\n!16 = distinct !{!16, !17}\n!17 = !{!\"llvm.loop.mustprogress\"}\n!18 = !{!6, !12, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_gpio-uniphier.c_uniphier_gpio_direction_input.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function uniphier_gpio_direction_input\n\t.type\tuniphier_gpio_direction_input,@function\nuniphier_gpio_direction_input:          # @uniphier_gpio_direction_input\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tUNIPHIER_GPIO_PORT_DIR(%rip), %edx\n\tmovl\t$1, %ecx\n\tcallq\tuniphier_gpio_offset_write@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tuniphier_gpio_direction_input, .Lfunc_end0-uniphier_gpio_direction_input\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tUNIPHIER_GPIO_PORT_DIR,@object  # @UNIPHIER_GPIO_PORT_DIR\n\t.bss\n\t.globl\tUNIPHIER_GPIO_PORT_DIR\n\t.p2align\t2\nUNIPHIER_GPIO_PORT_DIR:\n\t.long\t0                               # 0x0\n\t.size\tUNIPHIER_GPIO_PORT_DIR, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@UNIPHIER_GPIO_PORT_DIR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @uniphier_gpio_direction_input], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @uniphier_gpio_direction_input(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = load i32, ptr @UNIPHIER_GPIO_PORT_DIR, align 4, !tbaa !5\n  %4 = tail call i32 @uniphier_gpio_offset_write(ptr noundef %0, i32 noundef %1, i32 noundef %3, i32 noundef 1) #2\n  ret i32 0\n}\n\ndeclare i32 @uniphier_gpio_offset_write(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/gpio/extr_gpio-uniphier.c_uniphier_gpio_direction_input.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@UNIPHIER_GPIO_PORT_DIR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @uniphier_gpio_direction_input], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @uniphier_gpio_direction_input(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = load i32, ptr @UNIPHIER_GPIO_PORT_DIR, align 4, !tbaa !5\n  %4 = tail call i32 @uniphier_gpio_offset_write(ptr noundef %0, i32 noundef %1, i32 noundef %3, i32 noundef 1) #2\n  ret i32 0\n}\n\ndeclare i32 @uniphier_gpio_offset_write(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_journal.c_journal_kill_thread.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function journal_kill_thread\n\t.type\tjournal_kill_thread,@function\njournal_kill_thread:                    # @journal_kill_thread\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tcallq\twrite_lock@PLT\n\tmovl\tJBD2_UNMOUNT(%rip), %eax\n\torl\t%eax, 24(%rbx)\n\tcmpq\t$0, 8(%rbx)\n\tje\t.LBB0_3\n# %bb.1:\n\tleaq\t20(%rbx), %r14\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rbx, %rdi\n\tcallq\twrite_unlock@PLT\n\tmovq\t%r14, %rdi\n\tcallq\twake_up@PLT\n\tmovl\t16(%rbx), %edi\n\txorl\t%esi, %esi\n\tcmpq\t$0, 8(%rbx)\n\tsete\t%sil\n\tcallq\twait_event@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\twrite_lock@PLT\n\tcmpq\t$0, 8(%rbx)\n\tjne\t.LBB0_2\n.LBB0_3:\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\twrite_unlock@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tjournal_kill_thread, .Lfunc_end0-journal_kill_thread\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tJBD2_UNMOUNT,@object            # @JBD2_UNMOUNT\n\t.bss\n\t.globl\tJBD2_UNMOUNT\n\t.p2align\t2\nJBD2_UNMOUNT:\n\t.long\t0                               # 0x0\n\t.size\tJBD2_UNMOUNT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i64, i32, i32, i32 }\n\n@JBD2_UNMOUNT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @journal_kill_thread], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @journal_kill_thread(ptr noundef %0) #0 {\n  %2 = tail call i32 @write_lock(ptr noundef %0) #2\n  %3 = load i32, ptr @JBD2_UNMOUNT, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 4\n  %5 = load i32, ptr %4, align 8, !tbaa !9\n  %6 = or i32 %5, %3\n  store i32 %6, ptr %4, align 8, !tbaa !9\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !12\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %19, label %10\n\n10:                                               ; preds = %1\n  %11 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 3\n  br label %12\n\n12:                                               ; preds = %10, %12\n  %13 = tail call i32 @write_unlock(ptr noundef nonnull %0) #2\n  %14 = tail call i32 @wake_up(ptr noundef nonnull %11) #2\n  %15 = load i32, ptr %7, align 8, !tbaa !12\n  %16 = icmp eq i64 %8, 0\n  %17 = zext i1 %16 to i32\n  %18 = tail call i32 @wait_event(i32 noundef %15, i32 noundef %17) #2\n  br label %19\n\n19:                                               ; preds = %12, %1\n  %20 = tail call i32 @write_unlock(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @write_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wake_up(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wait_event(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_4__\", !6, i64 0, !11, i64 8, !6, i64 16, !6, i64 20, !6, i64 24}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n</s><s>", "file:": "./linux/fs/jbd2/extr_journal.c_journal_kill_thread.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, ptr, i32, i32, i32 }\n\n@JBD2_UNMOUNT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @journal_kill_thread], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @journal_kill_thread(ptr noundef %0) #0 {\n  %2 = tail call i32 @write_lock(ptr noundef %0) #2\n  %3 = load i32, ptr @JBD2_UNMOUNT, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 4\n  %5 = load i32, ptr %4, align 8, !tbaa !9\n  %6 = or i32 %5, %3\n  store i32 %6, ptr %4, align 8, !tbaa !9\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %24, label %10\n\n10:                                               ; preds = %1\n  %11 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  %12 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  br label %13\n\n13:                                               ; preds = %10, %13\n  %14 = tail call i32 @write_unlock(ptr noundef nonnull %0) #2\n  %15 = tail call i32 @wake_up(ptr noundef nonnull %11) #2\n  %16 = load i32, ptr %12, align 8, !tbaa !13\n  %17 = load ptr, ptr %7, align 8, !tbaa !12\n  %18 = icmp eq ptr %17, null\n  %19 = zext i1 %18 to i32\n  %20 = tail call i32 @wait_event(i32 noundef %16, i32 noundef %19) #2\n  %21 = tail call i32 @write_lock(ptr noundef nonnull %0) #2\n  %22 = load ptr, ptr %7, align 8, !tbaa !12\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %24, label %13, !llvm.loop !14\n\n24:                                               ; preds = %13, %1\n  %25 = tail call i32 @write_unlock(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @write_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wake_up(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wait_event(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_3__\", !6, i64 0, !11, i64 8, !6, i64 16, !6, i64 20, !6, i64 24}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n!13 = !{!10, !6, i64 16}\n!14 = distinct !{!14, !15}\n!15 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pktgen.c_pktgen_thread_open.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function pktgen_thread_open\n\t.type\tpktgen_thread_open,@function\npktgen_thread_open:                     # @pktgen_thread_open\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovl\tpktgen_thread_show(%rip), %ebp\n\tcallq\tPDE@PLT\n\tmovl\t(%rax), %edx\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tsingle_open@PLT                 # TAILCALL\n.Lfunc_end0:\n\t.size\tpktgen_thread_open, .Lfunc_end0-pktgen_thread_open\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tpktgen_thread_show,@object      # @pktgen_thread_show\n\t.bss\n\t.globl\tpktgen_thread_show\n\t.p2align\t2\npktgen_thread_show:\n\t.long\t0                               # 0x0\n\t.size\tpktgen_thread_show, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@pktgen_thread_show = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @pktgen_thread_open], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @pktgen_thread_open(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @pktgen_thread_show, align 4, !tbaa !5\n  %4 = tail call ptr @PDE(ptr noundef %0) #2\n  %5 = load i32, ptr %4, align 4, !tbaa !9\n  %6 = tail call i32 @single_open(ptr noundef %1, i32 noundef %3, i32 noundef %5) #2\n  ret i32 %6\n}\n\ndeclare i32 @single_open(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @PDE(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_2__\", !6, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/net/core/extr_pktgen.c_pktgen_thread_open.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@pktgen_thread_show = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @pktgen_thread_open], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @pktgen_thread_open(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @pktgen_thread_show, align 4, !tbaa !5\n  %4 = tail call ptr @PDE(ptr noundef %0) #2\n  %5 = load i32, ptr %4, align 4, !tbaa !9\n  %6 = tail call i32 @single_open(ptr noundef %1, i32 noundef %3, i32 noundef %5) #2\n  ret i32 %6\n}\n\ndeclare i32 @single_open(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @PDE(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_2__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_proc.c_gomp_init_num_threads.ll\"\n\t.globl\tgomp_init_num_threads           # -- Begin function gomp_init_num_threads\n\t.p2align\t4, 0x90\n\t.type\tgomp_init_num_threads,@function\ngomp_init_num_threads:                  # @gomp_init_num_threads\n\t.cfi_startproc\n# %bb.0:\n\tretq\n.Lfunc_end0:\n\t.size\tgomp_init_num_threads, .Lfunc_end0-gomp_init_num_threads\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t_SC_NPROCESSORS_ONLN,@object    # @_SC_NPROCESSORS_ONLN\n\t.bss\n\t.globl\t_SC_NPROCESSORS_ONLN\n\t.p2align\t2\n_SC_NPROCESSORS_ONLN:\n\t.long\t0                               # 0x0\n\t.size\t_SC_NPROCESSORS_ONLN, 4\n\n\t.type\tgomp_nthreads_var,@object       # @gomp_nthreads_var\n\t.globl\tgomp_nthreads_var\n\t.p2align\t2\ngomp_nthreads_var:\n\t.long\t0                               # 0x0\n\t.size\tgomp_nthreads_var, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_SC_NPROCESSORS_ONLN = dso_local local_unnamed_addr global i32 0, align 4\n@gomp_nthreads_var = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @gomp_init_num_threads() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./freebsd/contrib/gcclibs/libgomp/config/linux/extr_proc.c_gomp_init_num_threads.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_SC_NPROCESSORS_ONLN = dso_local local_unnamed_addr global i32 0, align 4\n@gomp_nthreads_var = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @gomp_init_num_threads() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_....pci.h_pci_proc_attach_device.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function pci_proc_attach_device\n\t.type\tpci_proc_attach_device,@function\npci_proc_attach_device:                 # @pci_proc_attach_device\n\t.cfi_startproc\n# %bb.0:\n\txorl\t%eax, %eax\n\tretq\n.Lfunc_end0:\n\t.size\tpci_proc_attach_device, .Lfunc_end0-pci_proc_attach_device\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @pci_proc_attach_device], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @pci_proc_attach_device(ptr nocapture readnone %0) #0 {\n  ret i32 0\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/drivers/pci/controller/dwc/extr_....pci.h_pci_proc_attach_device.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @pci_proc_attach_device], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @pci_proc_attach_device(ptr nocapture readnone %0) #0 {\n  ret i32 0\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dma.c_b43_dmacontroller_base.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function b43_dmacontroller_base\n\t.type\tb43_dmacontroller_base,@function\nb43_dmacontroller_base:                 # @b43_dmacontroller_base\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %ebp\n\tcmpl\t%edi, B43_DMA_64BIT(%rip)\n\tmovl\t$b43_dmacontroller_base.map64, %eax\n\tmovl\t$b43_dmacontroller_base.map32, %ebx\n\tcmoveq\t%rax, %rbx\n\ttestl\t%esi, %esi\n\tjs\t.LBB0_1\n# %bb.2:\n\tmovq\t%rbx, %rdi\n\tcallq\tARRAY_SIZE@PLT\n\txorl\t%edi, %edi\n\tcmpl\t%ebp, %eax\n\tsetle\t%dil\n\tjmp\t.LBB0_3\n.LBB0_1:\n\tmovl\t$1, %edi\n.LBB0_3:\n\tcallq\tB43_WARN_ON@PLT\n\tmovslq\t%ebp, %rax\n\tmovl\t(%rbx,%rax,4), %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tb43_dmacontroller_base, .Lfunc_end0-b43_dmacontroller_base\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tb43_dmacontroller_base.map64,@object # @b43_dmacontroller_base.map64\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t4\nb43_dmacontroller_base.map64:\n\t.long\t133                             # 0x85\n\t.long\t132                             # 0x84\n\t.long\t131                             # 0x83\n\t.long\t130                             # 0x82\n\t.long\t129                             # 0x81\n\t.long\t128                             # 0x80\n\t.size\tb43_dmacontroller_base.map64, 24\n\n\t.type\tb43_dmacontroller_base.map32,@object # @b43_dmacontroller_base.map32\n\t.p2align\t4\nb43_dmacontroller_base.map32:\n\t.long\t139                             # 0x8b\n\t.long\t138                             # 0x8a\n\t.long\t137                             # 0x89\n\t.long\t136                             # 0x88\n\t.long\t135                             # 0x87\n\t.long\t134                             # 0x86\n\t.size\tb43_dmacontroller_base.map32, 24\n\n\t.type\tB43_DMA_64BIT,@object           # @B43_DMA_64BIT\n\t.bss\n\t.globl\tB43_DMA_64BIT\n\t.p2align\t2\nB43_DMA_64BIT:\n\t.long\t0                               # 0x0\n\t.size\tB43_DMA_64BIT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@b43_dmacontroller_base.map64 = internal constant [6 x i32] [i32 133, i32 132, i32 131, i32 130, i32 129, i32 128], align 16\n@b43_dmacontroller_base.map32 = internal constant [6 x i32] [i32 139, i32 138, i32 137, i32 136, i32 135, i32 134], align 16\n@B43_DMA_64BIT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @b43_dmacontroller_base], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @b43_dmacontroller_base(i32 noundef %0, i32 noundef %1) #0 {\n  %3 = load i32, ptr @B43_DMA_64BIT, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, %0\n  %5 = select i1 %4, ptr @b43_dmacontroller_base.map64, ptr @b43_dmacontroller_base.map32\n  %6 = icmp slt i32 %1, 0\n  br i1 %6, label %10, label %7\n\n7:                                                ; preds = %2\n  %8 = tail call i32 @ARRAY_SIZE(ptr noundef nonnull %5) #2\n  %9 = icmp sle i32 %8, %1\n  br label %10\n\n10:                                               ; preds = %7, %2\n  %11 = phi i32 [ 1, %2 ], [ %9, %7 ]\n  %12 = tail call i32 @B43_WARN_ON(i32 noundef %11) #2\n  %13 = sext i32 %1 to i64\n  %14 = getelementptr inbounds i32, ptr %5, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !5\n  ret i32 %15\n}\n\ndeclare i32 @B43_WARN_ON(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/net/wireless/broadcom/b43/extr_dma.c_b43_dmacontroller_base.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@b43_dmacontroller_base.map64 = internal constant [6 x i32] [i32 133, i32 132, i32 131, i32 130, i32 129, i32 128], align 16\n@b43_dmacontroller_base.map32 = internal constant [6 x i32] [i32 139, i32 138, i32 137, i32 136, i32 135, i32 134], align 16\n@B43_DMA_64BIT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @b43_dmacontroller_base], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @b43_dmacontroller_base(i32 noundef %0, i32 noundef %1) #0 {\n  %3 = load i32, ptr @B43_DMA_64BIT, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, %0\n  %5 = icmp sgt i32 %1, -1\n  %6 = select i1 %4, ptr @b43_dmacontroller_base.map64, ptr @b43_dmacontroller_base.map32\n  br i1 %5, label %7, label %11\n\n7:                                                ; preds = %2\n  %8 = tail call i32 @ARRAY_SIZE(ptr noundef nonnull %6) #2\n  %9 = icmp sle i32 %8, %1\n  %10 = zext i1 %9 to i32\n  br label %11\n\n11:                                               ; preds = %2, %7\n  %12 = phi i32 [ %10, %7 ], [ 1, %2 ]\n  %13 = tail call i32 @B43_WARN_ON(i32 noundef %12) #2\n  %14 = sext i32 %1 to i64\n  %15 = getelementptr inbounds [6 x i32], ptr %6, i64 0, i64 %14\n  %16 = load i32, ptr %15, align 4, !tbaa !5\n  ret i32 %16\n}\n\ndeclare i32 @B43_WARN_ON(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tree.c_git_tree_entry_byname.ll\"\n\t.globl\tgit_tree_entry_byname           # -- Begin function git_tree_entry_byname\n\t.p2align\t4, 0x90\n\t.type\tgit_tree_entry_byname,@function\ngit_tree_entry_byname:                  # @git_tree_entry_byname\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\ttestq\t%rdi, %rdi\n\tsetne\t%al\n\ttestq\t%rsi, %rsi\n\tsetne\t%cl\n\tandb\t%al, %cl\n\tmovzbl\t%cl, %edi\n\tcallq\tassert@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tstrlen@PLT\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\tmovl\t%eax, %edx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tentry_fromname@PLT              # TAILCALL\n.Lfunc_end0:\n\t.size\tgit_tree_entry_byname, .Lfunc_end0-git_tree_entry_byname\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @git_tree_entry_byname(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = icmp ne ptr %0, null\n  %4 = icmp ne ptr %1, null\n  %5 = and i1 %3, %4\n  %6 = zext i1 %5 to i32\n  %7 = tail call i32 @assert(i32 noundef %6) #2\n  %8 = tail call i32 @strlen(ptr noundef %1) #2\n  %9 = tail call ptr @entry_fromname(ptr noundef %0, ptr noundef %1, i32 noundef %8) #2\n  ret ptr %9\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @entry_fromname(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strlen(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./libgit2/src/extr_tree.c_git_tree_entry_byname.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @git_tree_entry_byname(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = icmp ne ptr %0, null\n  %4 = icmp ne ptr %1, null\n  %5 = and i1 %3, %4\n  %6 = zext i1 %5 to i32\n  %7 = tail call i32 @assert(i32 noundef %6) #2\n  %8 = tail call i32 @strlen(ptr noundef %1) #2\n  %9 = tail call ptr @entry_fromname(ptr noundef %0, ptr noundef %1, i32 noundef %8) #2\n  ret ptr %9\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @entry_fromname(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strlen(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_iucv.c_iucv_register.ll\"\n\t.globl\tiucv_register                   # -- Begin function iucv_register\n\t.p2align\t4, 0x90\n\t.type\tiucv_register,@function\niucv_register:                          # @iucv_register\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tcmpl\t$0, iucv_available(%rip)\n\tje\t.LBB0_1\n# %bb.2:\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %rbx\n\tmovl\t$iucv_register_mutex, %edi\n\tcallq\tmutex_lock@PLT\n\ttestl\t%ebp, %ebp\n\tjne\t.LBB0_4\n# %bb.3:\n\tincl\tiucv_nonsmp_handler(%rip)\n.LBB0_4:\n\tmovl\t$iucv_handler_list, %edi\n\tcallq\tlist_empty@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.5:\n\txorl\t%eax, %eax\n\tcallq\tiucv_enable@PLT\n\tmovl\t%eax, %ebp\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_10\n\tjmp\t.LBB0_9\n.LBB0_1:\n\txorl\t%ebp, %ebp\n\tsubl\tENOSYS(%rip), %ebp\n\tjmp\t.LBB0_11\n.LBB0_6:\n\ttestl\t%ebp, %ebp\n\tjne\t.LBB0_9\n# %bb.7:\n\tcmpl\t$1, iucv_nonsmp_handler(%rip)\n\tjne\t.LBB0_9\n# %bb.8:\n\txorl\t%eax, %eax\n\tcallq\tiucv_setmask_up@PLT\n.LBB0_9:\n\tleaq\t4(%rbx), %rdi\n\tcallq\tINIT_LIST_HEAD@PLT\n\tmovl\t$iucv_table_lock, %edi\n\tcallq\tspin_lock_bh@PLT\n\tmovl\t$iucv_handler_list, %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tlist_add_tail@PLT\n\tmovl\t$iucv_table_lock, %edi\n\tcallq\tspin_unlock_bh@PLT\n\txorl\t%ebp, %ebp\n.LBB0_10:\n\tmovl\t$iucv_register_mutex, %edi\n\tcallq\tmutex_unlock@PLT\n.LBB0_11:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tiucv_register, .Lfunc_end0-iucv_register\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tiucv_available,@object          # @iucv_available\n\t.bss\n\t.globl\tiucv_available\n\t.p2align\t2\niucv_available:\n\t.long\t0                               # 0x0\n\t.size\tiucv_available, 4\n\n\t.type\tENOSYS,@object                  # @ENOSYS\n\t.globl\tENOSYS\n\t.p2align\t2\nENOSYS:\n\t.long\t0                               # 0x0\n\t.size\tENOSYS, 4\n\n\t.type\tiucv_register_mutex,@object     # @iucv_register_mutex\n\t.globl\tiucv_register_mutex\n\t.p2align\t2\niucv_register_mutex:\n\t.long\t0                               # 0x0\n\t.size\tiucv_register_mutex, 4\n\n\t.type\tiucv_nonsmp_handler,@object     # @iucv_nonsmp_handler\n\t.globl\tiucv_nonsmp_handler\n\t.p2align\t2\niucv_nonsmp_handler:\n\t.long\t0                               # 0x0\n\t.size\tiucv_nonsmp_handler, 4\n\n\t.type\tiucv_handler_list,@object       # @iucv_handler_list\n\t.globl\tiucv_handler_list\n\t.p2align\t2\niucv_handler_list:\n\t.long\t0                               # 0x0\n\t.size\tiucv_handler_list, 4\n\n\t.type\tiucv_table_lock,@object         # @iucv_table_lock\n\t.globl\tiucv_table_lock\n\t.p2align\t2\niucv_table_lock:\n\t.long\t0                               # 0x0\n\t.size\tiucv_table_lock, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iucv_handler = type { i32, i32 }\n\n@iucv_available = dso_local local_unnamed_addr global i32 0, align 4\n@ENOSYS = dso_local local_unnamed_addr global i32 0, align 4\n@iucv_register_mutex = dso_local global i32 0, align 4\n@iucv_nonsmp_handler = dso_local local_unnamed_addr global i32 0, align 4\n@iucv_handler_list = dso_local global i32 0, align 4\n@iucv_table_lock = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @iucv_register(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @iucv_available, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %5, label %8\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr @ENOSYS, align 4, !tbaa !5\n  %7 = sub nsw i32 0, %6\n  br label %33\n\n8:                                                ; preds = %2\n  %9 = tail call i32 @mutex_lock(ptr noundef nonnull @iucv_register_mutex) #2\n  %10 = icmp eq i32 %1, 0\n  br i1 %10, label %11, label %14\n\n11:                                               ; preds = %8\n  %12 = load i32, ptr @iucv_nonsmp_handler, align 4, !tbaa !5\n  %13 = add nsw i32 %12, 1\n  store i32 %13, ptr @iucv_nonsmp_handler, align 4, !tbaa !5\n  br label %14\n\n14:                                               ; preds = %11, %8\n  %15 = tail call i64 @list_empty(ptr noundef nonnull @iucv_handler_list) #2\n  %16 = icmp eq i64 %15, false\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %14\n  %18 = tail call i32 (...) @iucv_enable() #2\n  br label %27\n\n19:                                               ; preds = %14\n  br i1 %10, label %20, label %27\n\n20:                                               ; preds = %19\n  %21 = load i32, ptr @iucv_nonsmp_handler, align 4, !tbaa !5\n  %22 = icmp eq i32 %21, 1\n  br i1 %22, label %23, label %27\n\n23:                                               ; preds = %20\n  %24 = tail call i32 (...) @iucv_setmask_up() #2\n  %25 = tail call i32 @INIT_LIST_HEAD(ptr noundef nonnull %0) #2\n  %26 = tail call i32 @spin_lock_bh(ptr noundef nonnull @iucv_table_lock) #2\n  br label %27\n\n27:                                               ; preds = %19, %20, %23, %17\n  %28 = phi i32 [ %18, %17 ], [ 0, %23 ], [ 0, %20 ], [ 0, %19 ]\n  %29 = tail call i32 @list_add_tail(ptr noundef %0, ptr noundef nonnull @iucv_handler_list) #2\n  %30 = tail call i32 @spin_unlock_bh(ptr noundef nonnull @iucv_table_lock) #2\n  %31 = tail call i32 @mutex_unlock(ptr noundef nonnull @iucv_register_mutex) #2\n  %32 = phi i32 [ %28, %17 ], [ 0, %23 ], [ 0, %20 ], [ 0, %19 ]\n  br label %33\n\n33:                                               ; preds = %27, %5\n  %34 = phi i32 [ %32, %27 ], [ %7, %5 ]\n  ret i32 %34\n}\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @list_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iucv_enable(...) local_unnamed_addr #1\n\ndeclare i32 @iucv_setmask_up(...) local_unnamed_addr #1\n\ndeclare i32 @INIT_LIST_HEAD(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/net/iucv/extr_iucv.c_iucv_register.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iucv_handler = type { i32, i32 }\n\n@iucv_available = dso_local local_unnamed_addr global i32 0, align 4\n@ENOSYS = dso_local local_unnamed_addr global i32 0, align 4\n@iucv_register_mutex = dso_local global i32 0, align 4\n@iucv_nonsmp_handler = dso_local local_unnamed_addr global i32 0, align 4\n@iucv_handler_list = dso_local global i32 0, align 4\n@iucv_table_lock = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @iucv_register(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @iucv_available, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %5, label %8\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr @ENOSYS, align 4, !tbaa !5\n  %7 = sub nsw i32 0, %6\n  br label %35\n\n8:                                                ; preds = %2\n  %9 = tail call i32 @mutex_lock(ptr noundef nonnull @iucv_register_mutex) #2\n  %10 = icmp eq i32 %1, 0\n  br i1 %10, label %11, label %14\n\n11:                                               ; preds = %8\n  %12 = load i32, ptr @iucv_nonsmp_handler, align 4, !tbaa !5\n  %13 = add nsw i32 %12, 1\n  store i32 %13, ptr @iucv_nonsmp_handler, align 4, !tbaa !5\n  br label %14\n\n14:                                               ; preds = %11, %8\n  %15 = tail call i64 @list_empty(ptr noundef nonnull @iucv_handler_list) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %20, label %17\n\n17:                                               ; preds = %14\n  %18 = tail call i32 (...) @iucv_enable() #2\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %26, label %32\n\n20:                                               ; preds = %14\n  %21 = load i32, ptr @iucv_nonsmp_handler, align 4\n  %22 = icmp eq i32 %21, 1\n  %23 = select i1 %10, i1 %22, i1 false\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %20\n  %25 = tail call i32 (...) @iucv_setmask_up() #2\n  br label %26\n\n26:                                               ; preds = %20, %24, %17\n  %27 = getelementptr inbounds %struct.iucv_handler, ptr %0, i64 0, i32 1\n  %28 = tail call i32 @INIT_LIST_HEAD(ptr noundef nonnull %27) #2\n  %29 = tail call i32 @spin_lock_bh(ptr noundef nonnull @iucv_table_lock) #2\n  %30 = tail call i32 @list_add_tail(ptr noundef %0, ptr noundef nonnull @iucv_handler_list) #2\n  %31 = tail call i32 @spin_unlock_bh(ptr noundef nonnull @iucv_table_lock) #2\n  br label %32\n\n32:                                               ; preds = %17, %26\n  %33 = phi i32 [ %18, %17 ], [ 0, %26 ]\n  %34 = tail call i32 @mutex_unlock(ptr noundef nonnull @iucv_register_mutex) #2\n  br label %35\n\n35:                                               ; preds = %32, %5\n  %36 = phi i32 [ %33, %32 ], [ %7, %5 ]\n  ret i32 %36\n}\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @list_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iucv_enable(...) local_unnamed_addr #1\n\ndeclare i32 @iucv_setmask_up(...) local_unnamed_addr #1\n\ndeclare i32 @INIT_LIST_HEAD(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_u_ether.c_gether_set_host_addr.ll\"\n\t.globl\tgether_set_host_addr            # -- Begin function gether_set_host_addr\n\t.p2align\t4, 0x90\n\t.type\tgether_set_host_addr,@function\ngether_set_host_addr:                   # @gether_set_host_addr\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%rbx\n\tpushq\t%rax\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\tmovq\t%rsi, %r15\n\tmovl\tETH_ALEN(%rip), %eax\n\tmovq\t%rsp, %rbx\n\tleaq\t15(,%rax,4), %rax\n\tandq\t$-16, %rax\n\tsubq\t%rax, %rbx\n\tmovq\t%rbx, %rsp\n\tcallq\tnetdev_priv@PLT\n\tmovq\t%rax, %r14\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\tget_ether_addr@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\txorl\t%eax, %eax\n\tsubl\tEINVAL(%rip), %eax\n\tjmp\t.LBB0_3\n.LBB0_2:\n\tmovl\t(%r14), %edi\n\tmovl\tETH_ALEN(%rip), %edx\n\tmovq\t%rbx, %rsi\n\tcallq\tmemcpy@PLT\n\txorl\t%eax, %eax\n.LBB0_3:\n\tleaq\t-24(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.Lfunc_end0:\n\t.size\tgether_set_host_addr, .Lfunc_end0-gether_set_host_addr\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tETH_ALEN,@object                # @ETH_ALEN\n\t.bss\n\t.globl\tETH_ALEN\n\t.p2align\t2\nETH_ALEN:\n\t.long\t0                               # 0x0\n\t.size\tETH_ALEN, 4\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ETH_ALEN = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @gether_set_host_addr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @ETH_ALEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i32, i64 %4, align 16\n  %6 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %7 = call i64 @get_ether_addr(ptr noundef %1, ptr noundef nonnull %5) #2\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %2\n  %10 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %11 = sub nsw i32 0, %10\n  br label %15\n\n12:                                               ; preds = %2\n  %13 = load i32, ptr %6, align 4, !tbaa !9\n  %14 = load i32, ptr @ETH_ALEN, align 4, !tbaa !5\n  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %6, ptr align 16 %5, i32 %14, i1 false), !tbaa !11\n  br label %15\n\n15:                                               ; preds = %12, %9\n  %16 = phi i32 [ %11, %9 ], [ 0, %12 ]\n  ret i32 %16\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @get_ether_addr(ptr noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"gether_port\", !6, i64 0}\n!11 = !{!12, !6, i64 0}\n!12 = !{!\"ether_addr\", !6, i64 0}\n</s><s>", "file:": "./linux/drivers/usb/gadget/function/extr_u_ether.c_gether_set_host_addr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ETH_ALEN = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @gether_set_host_addr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @ETH_ALEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i32, i64 %4, align 16\n  %6 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %7 = call i64 @get_ether_addr(ptr noundef %1, ptr noundef nonnull %5) #2\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %2\n  %10 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %11 = sub nsw i32 0, %10\n  br label %16\n\n12:                                               ; preds = %2\n  %13 = load i32, ptr %6, align 4, !tbaa !9\n  %14 = load i32, ptr @ETH_ALEN, align 4, !tbaa !5\n  %15 = call i32 @memcpy(i32 noundef %13, ptr noundef nonnull %5, i32 noundef %14) #2\n  br label %16\n\n16:                                               ; preds = %12, %9\n  %17 = phi i32 [ %11, %9 ], [ 0, %12 ]\n  ret i32 %17\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @get_ether_addr(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memcpy(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"eth_dev\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_jsmn.c_jsmn_fill_token.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function jsmn_fill_token\n\t.type\tjsmn_fill_token,@function\njsmn_fill_token:                        # @jsmn_fill_token\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t%esi, 16(%rdi)\n\tmovl\t%edx, (%rdi)\n\tmovl\t%ecx, 4(%rdi)\n\tmovq\t$0, 8(%rdi)\n\tretq\n.Lfunc_end0:\n\t.size\tjsmn_fill_token, .Lfunc_end0-jsmn_fill_token\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32, i64, i32 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @jsmn_fill_token], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable\ndefine internal void @jsmn_fill_token(ptr nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  store i32 %1, ptr %5, align 8, !tbaa !5\n  store i32 %2, ptr %0, align 8, !tbaa !11\n  %6 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  store i32 %3, ptr %6, align 4, !tbaa !12\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  store i64 0, ptr %7, align 8, !tbaa !13\n  ret void\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !7, i64 4, !10, i64 8, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !7, i64 4}\n!13 = !{!6, !10, i64 8}\n</s><s>", "file:": "./freebsd/contrib/ntp/libjsmn/extr_jsmn.c_jsmn_fill_token.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32, i64, i32 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @jsmn_fill_token], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable\ndefine internal void @jsmn_fill_token(ptr nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  store i32 %1, ptr %5, align 8, !tbaa !5\n  store i32 %2, ptr %0, align 8, !tbaa !11\n  %6 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  store i32 %3, ptr %6, align 4, !tbaa !12\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  store i64 0, ptr %7, align 8, !tbaa !13\n  ret void\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !7, i64 4, !10, i64 8, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !7, i64 4}\n!13 = !{!6, !10, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_disassembler.c_thumb16_data_special_and_branch.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function thumb16_data_special_and_branch\n\t.type\tthumb16_data_special_and_branch,@function\nthumb16_data_special_and_branch:        # @thumb16_data_special_and_branch\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovl\t%edi, %ebx\n\tmovl\t$6, %esi\n\tmovl\t$15, %edx\n\tcallq\tBITS@PLT\n\tmovl\t$FASTTRAP_T_INV, %ecx\n\tcmpl\t$4, %eax\n\tje\t.LBB0_8\n# %bb.1:\n\tmovl\t%eax, %ecx\n\tandl\t$12, %ecx\n\tcmpl\t$8, %ecx\n\tje\t.LBB0_4\n# %bb.2:\n\tcmpl\t$12, %ecx\n\tjne\t.LBB0_5\n# %bb.3:\n\ttestb\t$2, %al\n\tmovl\t$FASTTRAP_T_BX_REG, %eax\n\tmovl\t$FASTTRAP_T_INV, %ecx\n\tcmoveq\t%rax, %rcx\n\tjmp\t.LBB0_8\n.LBB0_4:\n\tmovl\t%ebx, %edi\n\tcallq\tTHUMB16_HRD@PLT\n\tmovl\t$FASTTRAP_T_CPY_PC, %ecx\n\tcmpq\tREG_PC(%rip), %rax\n\tje\t.LBB0_8\n.LBB0_5:\n\tmovl\t%ebx, %edi\n\tcallq\tTHUMB16_HRM@PLT\n\tcmpq\tREG_PC(%rip), %rax\n\tje\t.LBB0_7\n# %bb.6:\n\tmovl\t%ebx, %edi\n\tcallq\tTHUMB16_HRD@PLT\n\tmovl\t$FASTTRAP_T_COMMON, %ecx\n\tcmpq\tREG_PC(%rip), %rax\n\tjne\t.LBB0_8\n.LBB0_7:\n\tmovl\t$FASTTRAP_T_INV, %ecx\n.LBB0_8:\n\tmovl\t(%rcx), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tthumb16_data_special_and_branch, .Lfunc_end0-thumb16_data_special_and_branch\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tFASTTRAP_T_INV,@object          # @FASTTRAP_T_INV\n\t.bss\n\t.globl\tFASTTRAP_T_INV\n\t.p2align\t2\nFASTTRAP_T_INV:\n\t.long\t0                               # 0x0\n\t.size\tFASTTRAP_T_INV, 4\n\n\t.type\tFASTTRAP_T_BX_REG,@object       # @FASTTRAP_T_BX_REG\n\t.globl\tFASTTRAP_T_BX_REG\n\t.p2align\t2\nFASTTRAP_T_BX_REG:\n\t.long\t0                               # 0x0\n\t.size\tFASTTRAP_T_BX_REG, 4\n\n\t.type\tREG_PC,@object                  # @REG_PC\n\t.globl\tREG_PC\n\t.p2align\t3\nREG_PC:\n\t.quad\t0                               # 0x0\n\t.size\tREG_PC, 8\n\n\t.type\tFASTTRAP_T_CPY_PC,@object       # @FASTTRAP_T_CPY_PC\n\t.globl\tFASTTRAP_T_CPY_PC\n\t.p2align\t2\nFASTTRAP_T_CPY_PC:\n\t.long\t0                               # 0x0\n\t.size\tFASTTRAP_T_CPY_PC, 4\n\n\t.type\tFASTTRAP_T_COMMON,@object       # @FASTTRAP_T_COMMON\n\t.globl\tFASTTRAP_T_COMMON\n\t.p2align\t2\nFASTTRAP_T_COMMON:\n\t.long\t0                               # 0x0\n\t.size\tFASTTRAP_T_COMMON, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FASTTRAP_T_INV = dso_local local_unnamed_addr global i32 0, align 4\n@FASTTRAP_T_BX_REG = dso_local local_unnamed_addr global i32 0, align 4\n@REG_PC = dso_local local_unnamed_addr global i64 0, align 8\n@FASTTRAP_T_CPY_PC = dso_local local_unnamed_addr global i32 0, align 4\n@FASTTRAP_T_COMMON = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @thumb16_data_special_and_branch], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @thumb16_data_special_and_branch(i32 noundef %0) #0 {\n  %2 = tail call i32 @BITS(i32 noundef %0, i32 noundef 6, i32 noundef 15) #2\n  %3 = and i32 %2, 12\n  switch i32 %3, label %16 [\n    i32 8, label %4\n    i32 12, label %7\n  ]\n\n4:                                                ; preds = %1\n  %5 = tail call i64 @THUMB16_HRD(i32 noundef %0) #2\n  %6 = load i64, ptr @REG_PC, align 8, !tbaa !5\n  br label %16\n\n7:                                                ; preds = %1\n  %8 = and i32 %2, 2\n  %9 = icmp eq i32 %8, 0\n  %10 = load i32, ptr @FASTTRAP_T_BX_REG, align 4\n  %11 = load i32, ptr @FASTTRAP_T_INV, align 4\n  %12 = select i1 %9, i32 %10, i32 %11\n  %13 = load i32, ptr @FASTTRAP_T_INV, align 4\n  %14 = load i32, ptr @FASTTRAP_T_CPY_PC, align 4\n  %15 = select i1 %9, i32 %13, i32 %14\n  br label %16\n\n16:                                               ; preds = %1, %7, %4\n  %17 = phi i32 [ %15, %7 ], [ %13, %4 ], [ %11, %1 ]\n  %18 = phi i32 [ %12, %7 ], [ %10, %4 ], [ %11, %1 ]\n  %19 = phi i64 [ %6, %4 ], [ %5, %7 ], [ %5, %1 ]\n  %20 = load i32, ptr %18, align 4, !tbaa !9\n  %21 = load i32, ptr %17, align 4, !tbaa !9\n  %22 = tail call i32 @fasttrap_instruction_describe(i32 noundef %20, i32 noundef %21) #2\n  ret i32 %22\n}\n\ndeclare i32 @BITS(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @THUMB16_HRD(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fasttrap_instruction_describe(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n</s><s>", "file:": "./darwin-xnu/bsd/dev/arm/extr_disassembler.c_thumb16_data_special_and_branch.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FASTTRAP_T_INV = dso_local local_unnamed_addr global i32 0, align 4\n@FASTTRAP_T_BX_REG = dso_local local_unnamed_addr global i32 0, align 4\n@REG_PC = dso_local local_unnamed_addr global i64 0, align 8\n@FASTTRAP_T_CPY_PC = dso_local local_unnamed_addr global i32 0, align 4\n@FASTTRAP_T_COMMON = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @thumb16_data_special_and_branch], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @thumb16_data_special_and_branch(i32 noundef %0) #0 {\n  %2 = tail call i32 @BITS(i32 noundef %0, i32 noundef 6, i32 noundef 15) #2\n  %3 = icmp eq i32 %2, 4\n  br i1 %3, label %23, label %4\n\n4:                                                ; preds = %1\n  %5 = and i32 %2, 12\n  switch i32 %5, label %14 [\n    i32 12, label %6\n    i32 8, label %10\n  ]\n\n6:                                                ; preds = %4\n  %7 = and i32 %2, 2\n  %8 = icmp eq i32 %7, 0\n  %9 = select i1 %8, ptr @FASTTRAP_T_BX_REG, ptr @FASTTRAP_T_INV\n  br label %23\n\n10:                                               ; preds = %4\n  %11 = tail call i64 @THUMB16_HRD(i32 noundef %0) #2\n  %12 = load i64, ptr @REG_PC, align 8, !tbaa !5\n  %13 = icmp eq i64 %11, %12\n  br i1 %13, label %23, label %14\n\n14:                                               ; preds = %4, %10\n  %15 = tail call i64 @THUMB16_HRM(i32 noundef %0) #2\n  %16 = load i64, ptr @REG_PC, align 8, !tbaa !5\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %22, label %18\n\n18:                                               ; preds = %14\n  %19 = tail call i64 @THUMB16_HRD(i32 noundef %0) #2\n  %20 = load i64, ptr @REG_PC, align 8, !tbaa !5\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %22, label %23\n\n22:                                               ; preds = %18, %14\n  br label %23\n\n23:                                               ; preds = %18, %10, %6, %1, %22\n  %24 = phi ptr [ @FASTTRAP_T_INV, %22 ], [ @FASTTRAP_T_INV, %1 ], [ %9, %6 ], [ @FASTTRAP_T_CPY_PC, %10 ], [ @FASTTRAP_T_COMMON, %18 ]\n  %25 = load i32, ptr %24, align 4, !tbaa !9\n  ret i32 %25\n}\n\ndeclare i32 @BITS(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @THUMB16_HRD(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @THUMB16_HRM(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_cgraph.c_cgraph_function_body_availability.ll\"\n\t.globl\tcgraph_function_body_availability # -- Begin function cgraph_function_body_availability\n\t.p2align\t4, 0x90\n\t.type\tcgraph_function_body_availability,@function\ncgraph_function_body_availability:      # @cgraph_function_body_availability\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tmovl\tcgraph_function_flags_ready(%rip), %edi\n\tcallq\tgcc_assert@PLT\n\tcmpl\t$0, 24(%rbx)\n\tje\t.LBB0_1\n# %bb.2:\n\tmovl\t$AVAIL_LOCAL, %r14d\n\tcmpq\t$0, 16(%rbx)\n\tjne\t.LBB0_8\n# %bb.3:\n\tmovl\t$AVAIL_AVAILABLE, %r14d\n\tcmpq\t$0, 8(%rbx)\n\tjne\t.LBB0_8\n# %bb.4:\n\tmovl\t(%rbx), %edi\n\tcallq\t*targetm(%rip)\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_8\n# %bb.5:\n\tmovl\t(%rbx), %edi\n\tcallq\tDECL_COMDAT@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_8\n# %bb.6:\n\tmovl\t(%rbx), %edi\n\tcallq\tDECL_EXTERNAL@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_8\n# %bb.7:\n\tmovl\t$AVAIL_OVERWRITABLE, %r14d\n\tjmp\t.LBB0_8\n.LBB0_1:\n\tmovl\t$AVAIL_NOT_AVAILABLE, %r14d\n.LBB0_8:\n\tmovl\t(%r14), %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcgraph_function_body_availability, .Lfunc_end0-cgraph_function_body_availability\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tcgraph_function_flags_ready,@object # @cgraph_function_flags_ready\n\t.bss\n\t.globl\tcgraph_function_flags_ready\n\t.p2align\t2\ncgraph_function_flags_ready:\n\t.long\t0                               # 0x0\n\t.size\tcgraph_function_flags_ready, 4\n\n\t.type\tAVAIL_NOT_AVAILABLE,@object     # @AVAIL_NOT_AVAILABLE\n\t.globl\tAVAIL_NOT_AVAILABLE\n\t.p2align\t2\nAVAIL_NOT_AVAILABLE:\n\t.long\t0                               # 0x0\n\t.size\tAVAIL_NOT_AVAILABLE, 4\n\n\t.type\tAVAIL_LOCAL,@object             # @AVAIL_LOCAL\n\t.globl\tAVAIL_LOCAL\n\t.p2align\t2\nAVAIL_LOCAL:\n\t.long\t0                               # 0x0\n\t.size\tAVAIL_LOCAL, 4\n\n\t.type\tAVAIL_AVAILABLE,@object         # @AVAIL_AVAILABLE\n\t.globl\tAVAIL_AVAILABLE\n\t.p2align\t2\nAVAIL_AVAILABLE:\n\t.long\t0                               # 0x0\n\t.size\tAVAIL_AVAILABLE, 4\n\n\t.type\ttargetm,@object                 # @targetm\n\t.globl\ttargetm\n\t.p2align\t3\ntargetm:\n\t.zero\t8\n\t.size\ttargetm, 8\n\n\t.type\tAVAIL_OVERWRITABLE,@object      # @AVAIL_OVERWRITABLE\n\t.globl\tAVAIL_OVERWRITABLE\n\t.p2align\t2\nAVAIL_OVERWRITABLE:\n\t.long\t0                               # 0x0\n\t.size\tAVAIL_OVERWRITABLE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n%struct.cgraph_node = type { i32, i64, i64, i32 }\n\n@cgraph_function_flags_ready = dso_local local_unnamed_addr global i32 0, align 4\n@AVAIL_NOT_AVAILABLE = dso_local local_unnamed_addr global i32 0, align 4\n@AVAIL_LOCAL = dso_local local_unnamed_addr global i32 0, align 4\n@AVAIL_AVAILABLE = dso_local local_unnamed_addr global i32 0, align 4\n@targetm = dso_local local_unnamed_addr global %struct.TYPE_2__ zeroinitializer, align 8\n@AVAIL_OVERWRITABLE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @cgraph_function_body_availability(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = load i32, ptr @cgraph_function_flags_ready, align 4, !tbaa !5\n  %3 = tail call i32 @gcc_assert(i32 noundef %2) #2\n  %4 = getelementptr inbounds %struct.cgraph_node, ptr %0, i64 0, i32 3\n  %5 = load i32, ptr %4, align 8, !tbaa !9\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %23, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.cgraph_node, ptr %0, i64 0, i32 2\n  %9 = load i64, ptr %8, align 8, !tbaa !12\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %23\n\n11:                                               ; preds = %7\n  %12 = getelementptr inbounds %struct.cgraph_node, ptr %0, i64 0, i32 1\n  %13 = load i64, ptr %12, align 8, !tbaa !13\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %23\n\n15:                                               ; preds = %11\n  %16 = load i32, ptr %0, align 8, !tbaa !14\n  %17 = load ptr, ptr @targetm, align 8, !tbaa !15\n  %18 = tail call i32 %17(i32 noundef %16) #2\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %20, label %23\n\n20:                                               ; preds = %15\n  %21 = load i32, ptr %0, align 8, !tbaa !14\n  %22 = tail call i32 @DECL_COMDAT(i32 noundef %21) #2\n  br label %23\n\n23:                                               ; preds = %20, %15, %11, %7, %1\n  %24 = phi ptr [ @AVAIL_NOT_AVAILABLE, %1 ], [ @AVAIL_LOCAL, %7 ], [ @AVAIL_AVAILABLE, %11 ], [ @AVAIL_OVERWRITABLE, %20 ], [ @AVAIL_AVAILABLE, %15 ]\n  %25 = load i32, ptr %24, align 4, !tbaa !5\n  ret i32 %25\n}\n\ndeclare i32 @gcc_assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @DECL_COMDAT(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"cgraph_node\", !6, i64 0, !11, i64 8, !11, i64 16, !6, i64 24}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !11, i64 16}\n!13 = !{!10, !11, i64 8}\n!14 = !{!10, !6, i64 0}\n!15 = !{!16, !17, i64 0}\n!16 = !{!\"TYPE_2__\", !17, i64 0}\n!17 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "file:": "./freebsd/contrib/gcc/extr_cgraph.c_cgraph_function_body_availability.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { ptr }\n%struct.cgraph_node = type { i32, %struct.TYPE_3__, i32 }\n%struct.TYPE_3__ = type { i64, i64 }\n\n@cgraph_function_flags_ready = dso_local local_unnamed_addr global i32 0, align 4\n@AVAIL_NOT_AVAILABLE = dso_local local_unnamed_addr global i32 0, align 4\n@AVAIL_LOCAL = dso_local local_unnamed_addr global i32 0, align 4\n@AVAIL_AVAILABLE = dso_local local_unnamed_addr global i32 0, align 4\n@targetm = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n@AVAIL_OVERWRITABLE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @cgraph_function_body_availability(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = load i32, ptr @cgraph_function_flags_ready, align 4, !tbaa !5\n  %3 = tail call i32 @gcc_assert(i32 noundef %2) #2\n  %4 = getelementptr inbounds %struct.cgraph_node, ptr %0, i64 0, i32 2\n  %5 = load i32, ptr %4, align 8, !tbaa !9\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %29, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.cgraph_node, ptr %0, i64 0, i32 1, i32 1\n  %9 = load i64, ptr %8, align 8, !tbaa !13\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %29\n\n11:                                               ; preds = %7\n  %12 = getelementptr inbounds %struct.cgraph_node, ptr %0, i64 0, i32 1\n  %13 = load i64, ptr %12, align 8, !tbaa !14\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %29\n\n15:                                               ; preds = %11\n  %16 = load ptr, ptr @targetm, align 8, !tbaa !15\n  %17 = load i32, ptr %0, align 8, !tbaa !18\n  %18 = tail call i32 %16(i32 noundef %17) #2\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %20, label %28\n\n20:                                               ; preds = %15\n  %21 = load i32, ptr %0, align 8, !tbaa !18\n  %22 = tail call i32 @DECL_COMDAT(i32 noundef %21) #2\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %24, label %28\n\n24:                                               ; preds = %20\n  %25 = load i32, ptr %0, align 8, !tbaa !18\n  %26 = tail call i32 @DECL_EXTERNAL(i32 noundef %25) #2\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %29, label %28\n\n28:                                               ; preds = %24, %20, %15\n  br label %29\n\n29:                                               ; preds = %24, %11, %7, %1, %28\n  %30 = phi ptr [ @AVAIL_AVAILABLE, %28 ], [ @AVAIL_NOT_AVAILABLE, %1 ], [ @AVAIL_LOCAL, %7 ], [ @AVAIL_AVAILABLE, %11 ], [ @AVAIL_OVERWRITABLE, %24 ]\n  %31 = load i32, ptr %30, align 4, !tbaa !5\n  ret i32 %31\n}\n\ndeclare i32 @gcc_assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @DECL_COMDAT(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @DECL_EXTERNAL(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"cgraph_node\", !6, i64 0, !11, i64 8, !6, i64 24}\n!11 = !{!\"TYPE_3__\", !12, i64 0, !12, i64 8}\n!12 = !{!\"long\", !7, i64 0}\n!13 = !{!10, !12, i64 16}\n!14 = !{!10, !12, i64 8}\n!15 = !{!16, !17, i64 0}\n!16 = !{!\"TYPE_4__\", !17, i64 0}\n!17 = !{!\"any pointer\", !7, i64 0}\n!18 = !{!10, !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_journal.c_journal_free_journal_head.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function journal_free_journal_head\n\t.type\tjournal_free_journal_head,@function\njournal_free_journal_head:              # @journal_free_journal_head\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rdi, %rsi\n\tmovl\tjournal_head_cache(%rip), %edi\n\tjmp\tkmem_cache_free@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\tjournal_free_journal_head, .Lfunc_end0-journal_free_journal_head\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tjournal_head_cache,@object      # @journal_head_cache\n\t.bss\n\t.globl\tjournal_head_cache\n\t.p2align\t2\njournal_head_cache:\n\t.long\t0                               # 0x0\n\t.size\tjournal_head_cache, 4\n\n\t.type\tJBD_POISON_FREE,@object         # @JBD_POISON_FREE\n\t.globl\tJBD_POISON_FREE\n\t.p2align\t2\nJBD_POISON_FREE:\n\t.long\t0                               # 0x0\n\t.size\tJBD_POISON_FREE, 4\n\n\t.type\tnr_journal_heads,@object        # @nr_journal_heads\n\t.globl\tnr_journal_heads\n\t.p2align\t2\nnr_journal_heads:\n\t.long\t0                               # 0x0\n\t.size\tnr_journal_heads, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@journal_head_cache = dso_local local_unnamed_addr global i32 0, align 4\n@JBD_POISON_FREE = dso_local local_unnamed_addr global i32 0, align 4\n@nr_journal_heads = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @journal_free_journal_head], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @journal_free_journal_head(ptr noundef %0) #0 {\n  %2 = load i32, ptr @journal_head_cache, align 4, !tbaa !5\n  %3 = tail call i32 @kmem_cache_free(i32 noundef %2, ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @kmem_cache_free(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/fs/jbd/extr_journal.c_journal_free_journal_head.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@journal_head_cache = dso_local local_unnamed_addr global i32 0, align 4\n@JBD_POISON_FREE = dso_local local_unnamed_addr global i32 0, align 4\n@nr_journal_heads = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @journal_free_journal_head], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @journal_free_journal_head(ptr noundef %0) #0 {\n  %2 = load i32, ptr @journal_head_cache, align 4, !tbaa !5\n  %3 = tail call i32 @kmem_cache_free(i32 noundef %2, ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @kmem_cache_free(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_intel_pm.c_gen6_rps_idle.ll\"\n\t.globl\tgen6_rps_idle                   # -- Begin function gen6_rps_idle\n\t.p2align\t4, 0x90\n\t.type\tgen6_rps_idle,@function\ngen6_rps_idle:                          # @gen6_rps_idle\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tcallq\tgen6_disable_rps_interrupts@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tmutex_lock@PLT\n\tcmpq\t$0, 24(%rbx)\n\tje\t.LBB0_6\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\tIS_VALLEYVIEW@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_3\n# %bb.2:\n\tmovq\t%rbx, %rdi\n\tcallq\tIS_CHERRYVIEW@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n.LBB0_3:\n\tmovq\t%rbx, %rdi\n\tcallq\tvlv_set_rps_idle@PLT\n.LBB0_5:\n\tmovq\t$0, 8(%rbx)\n\tmovl\tGEN6_PMINTRMSK(%rip), %ebp\n\tmovq\t%rbx, %rdi\n\tmovl\t$-1, %esi\n\tcallq\tgen6_sanitize_rps_pm_mask@PLT\n\tmovl\t%ebp, %edi\n\tmovl\t%eax, %esi\n\tcallq\tI915_WRITE@PLT\n.LBB0_6:\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tmutex_unlock@PLT                # TAILCALL\n.LBB0_4:\n\t.cfi_def_cfa_offset 32\n\tmovl\t16(%rbx), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tgen6_set_rps@PLT\n\tjmp\t.LBB0_5\n.Lfunc_end0:\n\t.size\tgen6_rps_idle, .Lfunc_end0-gen6_rps_idle\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tGEN6_PMINTRMSK,@object          # @GEN6_PMINTRMSK\n\t.bss\n\t.globl\tGEN6_PMINTRMSK\n\t.p2align\t2\nGEN6_PMINTRMSK:\n\t.long\t0                               # 0x0\n\t.size\tGEN6_PMINTRMSK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.drm_i915_private = type { i32, i64, i32, i64 }\n\n@GEN6_PMINTRMSK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @gen6_rps_idle(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @gen6_disable_rps_interrupts(ptr noundef %0) #2\n  %3 = tail call i32 @mutex_lock(ptr noundef %0) #2\n  %4 = getelementptr inbounds %struct.drm_i915_private, ptr %0, i64 0, i32 3\n  %5 = load i64, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %19, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i64 @IS_VALLEYVIEW(ptr noundef nonnull %0) #2\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %10, label %13\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @IS_CHERRYVIEW(ptr noundef nonnull %0) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %15, label %13\n\n13:                                               ; preds = %10, %7\n  %14 = tail call i32 @vlv_set_rps_idle(ptr noundef nonnull %0) #2\n  br label %17\n\n15:                                               ; preds = %10\n  %16 = getelementptr inbounds %struct.drm_i915_private, ptr %0, i64 0, i32 2\n  br label %17\n\n17:                                               ; preds = %15, %13\n  %18 = getelementptr inbounds %struct.drm_i915_private, ptr %0, i64 0, i32 1\n  store i64 0, ptr %18, align 8, !tbaa !11\n  br label %19\n\n19:                                               ; preds = %17, %1\n  %20 = tail call i32 @mutex_unlock(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @gen6_disable_rps_interrupts(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_VALLEYVIEW(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_CHERRYVIEW(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @vlv_set_rps_idle(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"drm_i915_private\", !7, i64 0, !10, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n</s><s>", "file:": "./linux/drivers/gpu/drm/i915/extr_intel_pm.c_gen6_rps_idle.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.intel_rps = type { i32, i64, i32, i64 }\n\n@GEN6_PMINTRMSK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @gen6_rps_idle(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @gen6_disable_rps_interrupts(ptr noundef %0) #2\n  %3 = tail call i32 @mutex_lock(ptr noundef %0) #2\n  %4 = getelementptr inbounds %struct.intel_rps, ptr %0, i64 0, i32 3\n  %5 = load i64, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %24, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i64 @IS_VALLEYVIEW(ptr noundef nonnull %0) #2\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %10, label %13\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @IS_CHERRYVIEW(ptr noundef nonnull %0) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %15, label %13\n\n13:                                               ; preds = %10, %7\n  %14 = tail call i32 @vlv_set_rps_idle(ptr noundef nonnull %0) #2\n  br label %19\n\n15:                                               ; preds = %10\n  %16 = getelementptr inbounds %struct.intel_rps, ptr %0, i64 0, i32 2\n  %17 = load i32, ptr %16, align 8, !tbaa !11\n  %18 = tail call i32 @gen6_set_rps(ptr noundef nonnull %0, i32 noundef %17) #2\n  br label %19\n\n19:                                               ; preds = %15, %13\n  %20 = getelementptr inbounds %struct.intel_rps, ptr %0, i64 0, i32 1\n  store i64 0, ptr %20, align 8, !tbaa !12\n  %21 = load i32, ptr @GEN6_PMINTRMSK, align 4, !tbaa !13\n  %22 = tail call i32 @gen6_sanitize_rps_pm_mask(ptr noundef nonnull %0, i32 noundef -1) #2\n  %23 = tail call i32 @I915_WRITE(i32 noundef %21, i32 noundef %22) #2\n  br label %24\n\n24:                                               ; preds = %19, %1\n  %25 = tail call i32 @mutex_unlock(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @gen6_disable_rps_interrupts(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_VALLEYVIEW(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_CHERRYVIEW(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @vlv_set_rps_idle(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gen6_set_rps(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @I915_WRITE(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @gen6_sanitize_rps_pm_mask(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"intel_rps\", !7, i64 0, !10, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 16}\n!12 = !{!6, !10, i64 8}\n!13 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_zfs_main.c_nomem.ll\"\n\t.globl\tnomem                           # -- Begin function nomem\n\t.p2align\t4, 0x90\n\t.type\tnomem,@function\nnomem:                                  # @nomem\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovl\tstderr(%rip), %ebx\n\tmovl\t$.L.str, %edi\n\tcallq\tgettext@PLT\n\tmovl\t%ebx, %edi\n\tmovq\t%rax, %rsi\n\tcallq\tfprintf@PLT\n\tmovl\t$1, %edi\n\tcallq\texit@PLT\n.Lfunc_end0:\n\t.size\tnomem, .Lfunc_end0-nomem\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tstderr,@object                  # @stderr\n\t.bss\n\t.globl\tstderr\n\t.p2align\t2\nstderr:\n\t.long\t0                               # 0x0\n\t.size\tstderr, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"internal error: out of memory\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"internal error: out of memory\\0A\\00\", align 1\n\n; Function Attrs: noreturn nounwind uwtable\ndefine dso_local void @nomem() local_unnamed_addr #0 {\n  %1 = load i32, ptr @stderr, align 4, !tbaa !5\n  %2 = tail call ptr @gettext(ptr noundef nonnull @.str) #3\n  %3 = tail call i32 @fprintf(i32 noundef %1, ptr noundef %2) #3\n  %4 = tail call i32 @exit(i32 noundef 1) #4\n  unreachable\n}\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @gettext(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @exit(i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { noreturn nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { noreturn nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./zfs/cmd/zfs/extr_zfs_main.c_nomem.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"internal error: out of memory\\0A\\00\", align 1\n\n; Function Attrs: noreturn nounwind uwtable\ndefine dso_local void @nomem() local_unnamed_addr #0 {\n  %1 = load i32, ptr @stderr, align 4, !tbaa !5\n  %2 = tail call ptr @gettext(ptr noundef nonnull @.str) #3\n  %3 = tail call i32 @fprintf(i32 noundef %1, ptr noundef %2) #3\n  %4 = tail call i32 @exit(i32 noundef 1) #4\n  unreachable\n}\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @gettext(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @exit(i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { noreturn nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { noreturn nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sx9500.c_sx9500_inc_chan_users.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function sx9500_inc_chan_users\n\t.type\tsx9500_inc_chan_users,@function\nsx9500_inc_chan_users:                  # @sx9500_inc_chan_users\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %r14\n\tmovslq\t%esi, %rdi\n\tleaq\t(,%rdi,4), %rbx\n\taddq\t(%r14), %rbx\n\tmovl\tSX9500_REG_PROX_CTRL0(%rip), %ebp\n                                        # kill: def $edi killed $edi killed $rdi\n\tcallq\tBIT@PLT\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\tmovl\t%ebp, %edx\n\tmovl\t%eax, %ecx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tsx9500_inc_users@PLT            # TAILCALL\n.Lfunc_end0:\n\t.size\tsx9500_inc_chan_users, .Lfunc_end0-sx9500_inc_chan_users\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSX9500_REG_PROX_CTRL0,@object   # @SX9500_REG_PROX_CTRL0\n\t.bss\n\t.globl\tSX9500_REG_PROX_CTRL0\n\t.p2align\t2\nSX9500_REG_PROX_CTRL0:\n\t.long\t0                               # 0x0\n\t.size\tSX9500_REG_PROX_CTRL0, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SX9500_REG_PROX_CTRL0 = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sx9500_inc_chan_users], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sx9500_inc_chan_users(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = sext i32 %1 to i64\n  %5 = getelementptr inbounds i32, ptr %3, i64 %4\n  %6 = load i32, ptr @SX9500_REG_PROX_CTRL0, align 4, !tbaa !10\n  %7 = tail call i32 @BIT(i32 noundef %1) #2\n  %8 = tail call i32 @sx9500_inc_users(ptr noundef nonnull %0, ptr noundef %5, i32 noundef %6, i32 noundef %7) #2\n  ret i32 %8\n}\n\ndeclare i32 @sx9500_inc_users(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BIT(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"sx9500_data\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./linux/drivers/iio/proximity/extr_sx9500.c_sx9500_inc_chan_users.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SX9500_REG_PROX_CTRL0 = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sx9500_inc_chan_users], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sx9500_inc_chan_users(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = sext i32 %1 to i64\n  %5 = getelementptr inbounds i32, ptr %3, i64 %4\n  %6 = load i32, ptr @SX9500_REG_PROX_CTRL0, align 4, !tbaa !10\n  %7 = tail call i32 @BIT(i32 noundef %1) #2\n  %8 = tail call i32 @sx9500_inc_users(ptr noundef nonnull %0, ptr noundef %5, i32 noundef %6, i32 noundef %7) #2\n  ret i32 %8\n}\n\ndeclare i32 @sx9500_inc_users(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BIT(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"sx9500_data\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lfk78.c_led_set_kb.ll\"\n\t.globl\tled_set_kb                      # -- Begin function led_set_kb\n\t.p2align\t4, 0x90\n\t.type\tled_set_kb,@function\nled_set_kb:                             # @led_set_kb\n\t.cfi_startproc\n# %bb.0:\n\tjmp\tled_set_user@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tled_set_kb, .Lfunc_end0-led_set_kb\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tUSB_LED_CAPS_LOCK,@object       # @USB_LED_CAPS_LOCK\n\t.bss\n\t.globl\tUSB_LED_CAPS_LOCK\n\t.p2align\t2\nUSB_LED_CAPS_LOCK:\n\t.long\t0                               # 0x0\n\t.size\tUSB_LED_CAPS_LOCK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@USB_LED_CAPS_LOCK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @led_set_kb(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @led_set_user(i32 noundef %0) #2\n  ret void\n}\n\ndeclare i32 @led_set_user(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./qmk_firmware/keyboards/lfkeyboards/lfk78/extr_lfk78.c_led_set_kb.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@USB_LED_CAPS_LOCK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @led_set_kb(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @led_set_user(i32 noundef %0) #2\n  ret void\n}\n\ndeclare i32 @led_set_user(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_keymap.c_persistent_default_layer_set.ll\"\n\t.globl\tpersistent_default_layer_set    # -- Begin function persistent_default_layer_set\n\t.p2align\t4, 0x90\n\t.type\tpersistent_default_layer_set,@function\npersistent_default_layer_set:           # @persistent_default_layer_set\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovl\t%edi, %ebx\n\tcallq\teeconfig_update_default_layer@PLT\n\tmovl\t%ebx, %edi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tdefault_layer_set@PLT           # TAILCALL\n.Lfunc_end0:\n\t.size\tpersistent_default_layer_set, .Lfunc_end0-persistent_default_layer_set\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @persistent_default_layer_set(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @eeconfig_update_default_layer(i32 noundef %0) #2\n  %3 = tail call i32 @default_layer_set(i32 noundef %0) #2\n  ret void\n}\n\ndeclare i32 @eeconfig_update_default_layer(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @default_layer_set(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./qmk_firmware/keyboards/gh60/satan/keymaps/smt/extr_keymap.c_persistent_default_layer_set.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @persistent_default_layer_set(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @eeconfig_update_default_layer(i32 noundef %0) #2\n  %3 = tail call i32 @default_layer_set(i32 noundef %0) #2\n  ret void\n}\n\ndeclare i32 @eeconfig_update_default_layer(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @default_layer_set(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_gianfar.c_gfar_remove.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function gfar_remove\n\t.type\tgfar_remove,@function\ngfar_remove:                            # @gfar_remove\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %r14\n\tcallq\tplatform_get_drvdata@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t(%r14), %r14\n\tmovl\t8(%rax), %edi\n\tcallq\tof_node_put@PLT\n\tmovl\t4(%rbx), %edi\n\tcallq\tof_node_put@PLT\n\tmovl\t(%rbx), %edi\n\tcallq\tunregister_netdev@PLT\n\tmovq\t%r14, %rdi\n\tcallq\tof_phy_is_fixed_link@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%r14, %rdi\n\tcallq\tof_phy_deregister_fixed_link@PLT\n.LBB0_2:\n\tmovq\t%rbx, %rdi\n\tcallq\tunmap_group_regs@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tgfar_free_rx_queues@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tgfar_free_tx_queues@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tfree_gfar_dev@PLT\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tgfar_remove, .Lfunc_end0-gfar_remove\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.gfar_private = type { i32, i32, i32 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @gfar_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @gfar_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @platform_get_drvdata(ptr noundef %0) #2\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.gfar_private, ptr %2, i64 0, i32 2\n  %5 = load i32, ptr %4, align 4, !tbaa !10\n  %6 = tail call i32 @of_node_put(i32 noundef %5) #2\n  %7 = getelementptr inbounds %struct.gfar_private, ptr %2, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !13\n  %9 = tail call i32 @of_node_put(i32 noundef %8) #2\n  %10 = load i32, ptr %2, align 4, !tbaa !14\n  %11 = tail call i32 @unregister_netdev(i32 noundef %10) #2\n  %12 = tail call i64 @of_phy_is_fixed_link(ptr noundef %3) #2\n  %13 = icmp eq i64 %12, 0\n  br i1 %13, label %16, label %14\n\n14:                                               ; preds = %1\n  %15 = tail call i32 @of_phy_deregister_fixed_link(ptr noundef %3) #2\n  br label %16\n\n16:                                               ; preds = %14, %1\n  %17 = tail call i32 @unmap_group_regs(ptr noundef nonnull %2) #2\n  %18 = tail call i32 @gfar_free_rx_queues(ptr noundef nonnull %2) #2\n  %19 = tail call i32 @gfar_free_tx_queues(ptr noundef nonnull %2) #2\n  %20 = tail call i32 @free_gfar_dev(ptr noundef nonnull %2) #2\n  ret i32 0\n}\n\ndeclare ptr @platform_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @of_node_put(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @unregister_netdev(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @of_phy_is_fixed_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @of_phy_deregister_fixed_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @unmap_group_regs(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gfar_free_rx_queues(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gfar_free_tx_queues(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_gfar_dev(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"platform_device\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 8}\n!11 = !{!\"gfar_private\", !12, i64 0, !12, i64 4, !12, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !12, i64 4}\n!14 = !{!11, !12, i64 0}\n</s><s>", "file:": "./linux/drivers/net/ethernet/freescale/extr_gianfar.c_gfar_remove.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.gfar_private = type { i32, i32, i32 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @gfar_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @gfar_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @platform_get_drvdata(ptr noundef %0) #2\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.gfar_private, ptr %2, i64 0, i32 2\n  %5 = load i32, ptr %4, align 4, !tbaa !11\n  %6 = tail call i32 @of_node_put(i32 noundef %5) #2\n  %7 = getelementptr inbounds %struct.gfar_private, ptr %2, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !14\n  %9 = tail call i32 @of_node_put(i32 noundef %8) #2\n  %10 = load i32, ptr %2, align 4, !tbaa !15\n  %11 = tail call i32 @unregister_netdev(i32 noundef %10) #2\n  %12 = tail call i64 @of_phy_is_fixed_link(ptr noundef %3) #2\n  %13 = icmp eq i64 %12, 0\n  br i1 %13, label %16, label %14\n\n14:                                               ; preds = %1\n  %15 = tail call i32 @of_phy_deregister_fixed_link(ptr noundef %3) #2\n  br label %16\n\n16:                                               ; preds = %14, %1\n  %17 = tail call i32 @unmap_group_regs(ptr noundef nonnull %2) #2\n  %18 = tail call i32 @gfar_free_rx_queues(ptr noundef nonnull %2) #2\n  %19 = tail call i32 @gfar_free_tx_queues(ptr noundef nonnull %2) #2\n  %20 = tail call i32 @free_gfar_dev(ptr noundef nonnull %2) #2\n  ret i32 0\n}\n\ndeclare ptr @platform_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @of_node_put(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @unregister_netdev(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @of_phy_is_fixed_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @of_phy_deregister_fixed_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @unmap_group_regs(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gfar_free_rx_queues(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gfar_free_tx_queues(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_gfar_dev(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"platform_device\", !7, i64 0}\n!7 = !{!\"TYPE_2__\", !8, i64 0}\n!8 = !{!\"any pointer\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!12, !13, i64 8}\n!12 = !{!\"gfar_private\", !13, i64 0, !13, i64 4, !13, i64 8}\n!13 = !{!\"int\", !9, i64 0}\n!14 = !{!12, !13, i64 4}\n!15 = !{!12, !13, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_fs_fs.c_svn_fs_fs__path_current.ll\"\n\t.globl\tsvn_fs_fs__path_current         # -- Begin function svn_fs_fs__path_current\n\t.p2align\t4, 0x90\n\t.type\tsvn_fs_fs__path_current,@function\nsvn_fs_fs__path_current:                # @svn_fs_fs__path_current\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rsi, %rdx\n\tmovl\t(%rdi), %edi\n\tmovl\tPATH_CURRENT(%rip), %esi\n\tjmp\tsvn_dirent_join@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\tsvn_fs_fs__path_current, .Lfunc_end0-svn_fs_fs__path_current\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPATH_CURRENT,@object            # @PATH_CURRENT\n\t.bss\n\t.globl\tPATH_CURRENT\n\t.p2align\t2\nPATH_CURRENT:\n\t.long\t0                               # 0x0\n\t.size\tPATH_CURRENT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PATH_CURRENT = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @svn_fs_fs__path_current(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr %0, align 4, !tbaa !5\n  %4 = load i32, ptr @PATH_CURRENT, align 4, !tbaa !10\n  %5 = tail call ptr @svn_dirent_join(i32 noundef %3, i32 noundef %4, ptr noundef %1) #2\n  ret ptr %5\n}\n\ndeclare ptr @svn_dirent_join(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>", "file:": "./freebsd/contrib/subversion/subversion/libsvn_fs_fs/extr_fs_fs.c_svn_fs_fs__path_current.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PATH_CURRENT = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @svn_fs_fs__path_current(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr %0, align 4, !tbaa !5\n  %4 = load i32, ptr @PATH_CURRENT, align 4, !tbaa !10\n  %5 = tail call ptr @svn_dirent_join(i32 noundef %3, i32 noundef %4, ptr noundef %1) #2\n  ret ptr %5\n}\n\ndeclare ptr @svn_dirent_join(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_fnv1a.c_svn_fnv1a_32__context_create.ll\"\n\t.globl\tsvn_fnv1a_32__context_create    # -- Begin function svn_fnv1a_32__context_create\n\t.p2align\t4, 0x90\n\t.type\tsvn_fnv1a_32__context_create,@function\nsvn_fnv1a_32__context_create:           # @svn_fnv1a_32__context_create\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\t$4, %esi\n\tcallq\tapr_palloc@PLT\n\tmovl\tFNV1_BASE_32(%rip), %ecx\n\tmovl\t%ecx, (%rax)\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsvn_fnv1a_32__context_create, .Lfunc_end0-svn_fnv1a_32__context_create\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tFNV1_BASE_32,@object            # @FNV1_BASE_32\n\t.bss\n\t.globl\tFNV1_BASE_32\n\t.p2align\t2\nFNV1_BASE_32:\n\t.long\t0                               # 0x0\n\t.size\tFNV1_BASE_32, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FNV1_BASE_32 = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @svn_fnv1a_32__context_create(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @apr_palloc(ptr noundef %0, i32 noundef 4) #2\n  %3 = load i32, ptr @FNV1_BASE_32, align 4, !tbaa !5\n  store i32 %3, ptr %2, align 4, !tbaa !9\n  ret ptr %2\n}\n\ndeclare ptr @apr_palloc(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s>", "file:": "./freebsd/contrib/subversion/subversion/libsvn_subr/extr_fnv1a.c_svn_fnv1a_32__context_create.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FNV1_BASE_32 = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @svn_fnv1a_32__context_create(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @apr_palloc(ptr noundef %0, i32 noundef 4) #2\n  %3 = load i32, ptr @FNV1_BASE_32, align 4, !tbaa !5\n  store i32 %3, ptr %2, align 4, !tbaa !9\n  ret ptr %2\n}\n\ndeclare ptr @apr_palloc(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_4__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ao_jack.c_graph_order_cb.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function graph_order_cb\n\t.type\tgraph_order_cb,@function\ngraph_order_cb:                         # @graph_order_cb\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -16\n\tmovq\t(%rdi), %rbx\n\tmovq\t8(%rbx), %rax\n\tmovl\t(%rax), %edi\n\tmovl\tJackPlaybackLatency(%rip), %esi\n\tleaq\t8(%rsp), %rdx\n\tcallq\tjack_port_get_latency_range@PLT\n\tmovl\t8(%rsp), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tatomic_store@PLT\n\txorl\t%eax, %eax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tgraph_order_cb, .Lfunc_end0-graph_order_cb\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tJackPlaybackLatency,@object     # @JackPlaybackLatency\n\t.bss\n\t.globl\tJackPlaybackLatency\n\t.p2align\t2\nJackPlaybackLatency:\n\t.long\t0                               # 0x0\n\t.size\tJackPlaybackLatency, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, ptr }\n\n@JackPlaybackLatency = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @graph_order_cb], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @graph_order_cb(ptr nocapture noundef readonly %0, i32 %1) #0 {\n  %3 = alloca i32, align 4\n  %4 = load ptr, ptr %0, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #3\n  %5 = getelementptr inbounds %struct.TYPE_6__, ptr %4, i64 0, i32 1\n  %6 = load ptr, ptr %5, align 8, !tbaa !10\n  %7 = load i32, ptr %6, align 4, !tbaa !13\n  %8 = load i32, ptr @JackPlaybackLatency, align 4, !tbaa !15\n  %9 = call i32 @jack_port_get_latency_range(i32 noundef %7, i32 noundef %8, ptr noundef nonnull %3) #3\n  %10 = load i32, ptr %3, align 4, !tbaa !15\n  %11 = call i32 @atomic_store(ptr noundef %4, i32 noundef %10) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @jack_port_get_latency_range(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @atomic_store(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"TYPE_6__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!14, !12, i64 0}\n!14 = !{!\"TYPE_7__\", !12, i64 0}\n!15 = !{!12, !12, i64 0}\n</s><s>", "file:": "./mpv/audio/out/extr_ao_jack.c_graph_order_cb.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32 }\n%struct.priv = type { i32, ptr }\n\n@JackPlaybackLatency = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @graph_order_cb], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @graph_order_cb(ptr nocapture noundef readonly %0) #0 {\n  %2 = alloca %struct.TYPE_3__, align 4\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #3\n  %4 = getelementptr inbounds %struct.priv, ptr %3, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !10\n  %6 = load i32, ptr %5, align 4, !tbaa !13\n  %7 = load i32, ptr @JackPlaybackLatency, align 4, !tbaa !13\n  %8 = call i32 @jack_port_get_latency_range(i32 noundef %6, i32 noundef %7, ptr noundef nonnull %2) #3\n  %9 = load i32, ptr %2, align 4, !tbaa !14\n  %10 = call i32 @atomic_store(ptr noundef %3, i32 noundef %9) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @jack_port_get_latency_range(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @atomic_store(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ao\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"priv\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!15, !12, i64 0}\n!15 = !{!\"TYPE_3__\", !12, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_wb35rx.c_Wb35Rx_start.ll\"\n\t.globl\tWb35Rx_start                    # -- Begin function Wb35Rx_start\n\t.p2align\t4, 0x90\n\t.type\tWb35Rx_start,@function\nWb35Rx_start:                           # @Wb35Rx_start\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %r14\n\tmovq\t(%rdi), %rbx\n\tmovq\t%rbx, %rdi\n\tcallq\tatomic_inc_return@PLT\n\tcmpl\t$1, %eax\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovl\tVM_RUNNING(%rip), %eax\n\tmovl\t%eax, 4(%rbx)\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tWb35Rx@PLT                      # TAILCALL\n.LBB0_2:\n\t.cfi_def_cfa_offset 32\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tatomic_dec@PLT                  # TAILCALL\n.Lfunc_end0:\n\t.size\tWb35Rx_start, .Lfunc_end0-Wb35Rx_start\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tVM_RUNNING,@object              # @VM_RUNNING\n\t.bss\n\t.globl\tVM_RUNNING\n\t.p2align\t2\nVM_RUNNING:\n\t.long\t0                               # 0x0\n\t.size\tVM_RUNNING, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, i32 }\n\n@VM_RUNNING = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @Wb35Rx_start(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = tail call i32 @atomic_inc_return(ptr noundef %2) #2\n  %4 = icmp eq i32 %3, 1\n  br i1 %4, label %5, label %8\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr @VM_RUNNING, align 4, !tbaa !10\n  %7 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  store i32 %6, ptr %7, align 4, !tbaa !12\n  tail call void @Wb35Rx(ptr noundef nonnull %0) #2\n  br label %10\n\n8:                                                ; preds = %1\n  %9 = tail call i32 @atomic_dec(ptr noundef %2) #2\n  br label %10\n\n10:                                               ; preds = %8, %5\n  ret void\n}\n\ndeclare i32 @atomic_inc_return(ptr noundef) local_unnamed_addr #1\n\ndeclare void @Wb35Rx(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_dec(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 4}\n!13 = !{!\"TYPE_2__\", !11, i64 0, !11, i64 4}\n</s><s>", "file:": "./fastsocket/kernel/drivers/staging/winbond/extr_wb35rx.c_Wb35Rx_start.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wb35_rx = type { i32, i32 }\n\n@VM_RUNNING = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @Wb35Rx_start(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = tail call i32 @atomic_inc_return(ptr noundef %2) #2\n  %4 = icmp eq i32 %3, 1\n  br i1 %4, label %5, label %9\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr @VM_RUNNING, align 4, !tbaa !10\n  %7 = getelementptr inbounds %struct.wb35_rx, ptr %2, i64 0, i32 1\n  store i32 %6, ptr %7, align 4, !tbaa !12\n  %8 = tail call i32 @Wb35Rx(ptr noundef nonnull %0) #2\n  br label %11\n\n9:                                                ; preds = %1\n  %10 = tail call i32 @atomic_dec(ptr noundef %2) #2\n  br label %11\n\n11:                                               ; preds = %9, %5\n  ret void\n}\n\ndeclare i32 @atomic_inc_return(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @Wb35Rx(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_dec(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ieee80211_hw\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 4}\n!13 = !{!\"wb35_rx\", !11, i64 0, !11, i64 4}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_i40iw_verbs.c_i40iw_cq_wq_destroy.ll\"\n\t.globl\ti40iw_cq_wq_destroy             # -- Begin function i40iw_cq_wq_destroy\n\t.p2align\t4, 0x90\n\t.type\ti40iw_cq_wq_destroy,@function\ni40iw_cq_wq_destroy:                    # @i40iw_cq_wq_destroy\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tmovl\t$1, %esi\n\tcallq\ti40iw_get_cqp_request@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\tOP_CQ_DESTROY(%rip), %ecx\n\tmovl\t%ecx, 24(%rax)\n\tmovl\t$1, (%rax)\n\tmovq\t%r14, 16(%rax)\n\tmovq\t%rax, 8(%rax)\n\tmovq\t%rbx, %rdi\n\tmovq\t%rax, %rsi\n\tcallq\ti40iw_handle_cqp_op@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_2\n# %bb.3:\n\tmovl\t$.L.str, %edi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\ti40iw_pr_err@PLT                # TAILCALL\n.LBB0_2:\n\t.cfi_def_cfa_offset 32\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\ti40iw_cq_wq_destroy, .Lfunc_end0-i40iw_cq_wq_destroy\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_CQ_DESTROY,@object           # @OP_CQ_DESTROY\n\t.bss\n\t.globl\tOP_CQ_DESTROY\n\t.p2align\t2\nOP_CQ_DESTROY:\n\t.long\t0                               # 0x0\n\t.size\tOP_CQ_DESTROY, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"CQP-OP Destroy QP fail\"\n\t.size\t.L.str, 23\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.i40iw_cqp_request = type { i32, ptr, ptr, i32 }\n\n@OP_CQ_DESTROY = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [23 x i8] c\"CQP-OP Destroy QP fail\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @i40iw_cq_wq_destroy(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @i40iw_get_cqp_request(ptr noundef %0, i32 noundef 1) #2\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %11, label %5\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr @OP_CQ_DESTROY, align 4, !tbaa !5\n  %7 = getelementptr inbounds %struct.i40iw_cqp_request, ptr %3, i64 0, i32 3\n  store i32 %6, ptr %7, align 8, !tbaa !9\n  store i32 1, ptr %3, align 8, !tbaa !12\n  %8 = getelementptr inbounds %struct.i40iw_cqp_request, ptr %3, i64 0, i32 2\n  store ptr %1, ptr %8, align 8, !tbaa !13\n  %9 = getelementptr inbounds %struct.i40iw_cqp_request, ptr %3, i64 0, i32 1\n  store ptr %3, ptr %9, align 8, !tbaa !14\n  %10 = tail call i32 @i40iw_handle_cqp_op(ptr noundef %0, ptr noundef nonnull %3) #2\n  br i1 %10, label %11, label %13\n\n11:                                               ; preds = %5, %2\n  ret void\n\n12:                                               ; preds = %5\n  %13 = tail call i32 @i40iw_pr_err(ptr noundef nonnull @.str) #2\n  br label %11\n}\n\ndeclare ptr @i40iw_get_cqp_request(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @i40iw_handle_cqp_op(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @i40iw_pr_err(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"i40iw_cqp_request\", !6, i64 0, !11, i64 8, !11, i64 16, !6, i64 24}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !6, i64 0}\n!13 = !{!10, !11, i64 16}\n!14 = !{!10, !11, i64 8}\n</s><s>", "file:": "./linux/drivers/infiniband/hw/i40iw/extr_i40iw_verbs.c_i40iw_cq_wq_destroy.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cqp_commands_info = type { i32, %struct.TYPE_6__, i32 }\n%struct.TYPE_6__ = type { %struct.TYPE_5__ }\n%struct.TYPE_5__ = type { %struct.TYPE_4__ }\n%struct.TYPE_4__ = type { i64, ptr }\n\n@OP_CQ_DESTROY = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [23 x i8] c\"CQP-OP Destroy QP fail\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @i40iw_cq_wq_destroy(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @i40iw_get_cqp_request(ptr noundef %0, i32 noundef 1) #2\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %15, label %5\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr @OP_CQ_DESTROY, align 4, !tbaa !5\n  %7 = getelementptr inbounds %struct.cqp_commands_info, ptr %3, i64 0, i32 2\n  store i32 %6, ptr %7, align 8, !tbaa !9\n  store i32 1, ptr %3, align 8, !tbaa !16\n  %8 = getelementptr inbounds %struct.cqp_commands_info, ptr %3, i64 0, i32 1\n  %9 = getelementptr inbounds %struct.cqp_commands_info, ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1\n  store ptr %1, ptr %9, align 8, !tbaa !17\n  %10 = ptrtoint ptr %3 to i64\n  store i64 %10, ptr %8, align 8, !tbaa !18\n  %11 = tail call i32 @i40iw_handle_cqp_op(ptr noundef %0, ptr noundef nonnull %3) #2\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %15, label %13\n\n13:                                               ; preds = %5\n  %14 = tail call i32 @i40iw_pr_err(ptr noundef nonnull @.str) #2\n  br label %15\n\n15:                                               ; preds = %5, %13, %2\n  ret void\n}\n\ndeclare ptr @i40iw_get_cqp_request(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @i40iw_handle_cqp_op(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @i40iw_pr_err(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"cqp_commands_info\", !6, i64 0, !11, i64 8, !6, i64 24}\n!11 = !{!\"TYPE_6__\", !12, i64 0}\n!12 = !{!\"TYPE_5__\", !13, i64 0}\n!13 = !{!\"TYPE_4__\", !14, i64 0, !15, i64 8}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!\"any pointer\", !7, i64 0}\n!16 = !{!10, !6, i64 0}\n!17 = !{!10, !15, i64 16}\n!18 = !{!10, !14, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_plist.c_destroy_notify.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function destroy_notify\n\t.type\tdestroy_notify,@function\ndestroy_notify:                         # @destroy_notify\n\t.cfi_startproc\n# %bb.0:\n\tretq\n.Lfunc_end0:\n\t.size\tdestroy_notify, .Lfunc_end0-destroy_notify\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @destroy_notify], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal void @destroy_notify(ptr nocapture %0) #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./HandBrake/gtk/src/extr_plist.c_destroy_notify.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @destroy_notify], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal void @destroy_notify(i32 %0) #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_niu.c_niu_set_alt_mac.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function niu_set_alt_mac\n\t.type\tniu_set_alt_mac,@function\nniu_set_alt_mac:                        # @niu_set_alt_mac\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %rbx\n\tmovzbl\t5(%rdx), %r12d\n\tmovzbl\t1(%rdx), %r14d\n\tmovzbl\t3(%rdx), %r15d\n\tcallq\tniu_num_alt_addr@PLT\n\tcmpl\t%ebp, %eax\n\tjle\t.LBB0_1\n# %bb.2:\n\tmovl\tNIU_FLAGS_XMAC(%rip), %eax\n\ttestl\t%eax, (%rbx)\n\tje\t.LBB0_4\n# %bb.3:\n\tmovl\t%ebp, %edi\n\tcallq\tXMAC_ALT_ADDR0@PLT\n\tmovzbl\t%r12b, %esi\n\tmovl\t%eax, %edi\n\tcallq\tnw64_mac@PLT\n\tmovl\t%ebp, %edi\n\tcallq\tXMAC_ALT_ADDR1@PLT\n\tmovzbl\t%r15b, %esi\n\tmovl\t%eax, %edi\n\tcallq\tnw64_mac@PLT\n\tmovl\t%ebp, %edi\n\tcallq\tXMAC_ALT_ADDR2@PLT\n\tjmp\t.LBB0_5\n.LBB0_1:\n\txorl\t%eax, %eax\n\tsubl\tEINVAL(%rip), %eax\n\tjmp\t.LBB0_6\n.LBB0_4:\n\tmovl\t%ebp, %edi\n\tcallq\tBMAC_ALT_ADDR0@PLT\n\tmovzbl\t%r12b, %esi\n\tmovl\t%eax, %edi\n\tcallq\tnw64_mac@PLT\n\tmovl\t%ebp, %edi\n\tcallq\tBMAC_ALT_ADDR1@PLT\n\tmovzbl\t%r15b, %esi\n\tmovl\t%eax, %edi\n\tcallq\tnw64_mac@PLT\n\tmovl\t%ebp, %edi\n\tcallq\tBMAC_ALT_ADDR2@PLT\n.LBB0_5:\n\tmovzbl\t%r14b, %esi\n\tmovl\t%eax, %edi\n\tcallq\tnw64_mac@PLT\n\txorl\t%eax, %eax\n.LBB0_6:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tniu_set_alt_mac, .Lfunc_end0-niu_set_alt_mac\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.bss\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\tNIU_FLAGS_XMAC,@object          # @NIU_FLAGS_XMAC\n\t.globl\tNIU_FLAGS_XMAC\n\t.p2align\t2\nNIU_FLAGS_XMAC:\n\t.long\t0                               # 0x0\n\t.size\tNIU_FLAGS_XMAC, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@NIU_FLAGS_XMAC = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @niu_set_alt_mac], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @niu_set_alt_mac(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2) #0 {\n  %4 = getelementptr inbounds i8, ptr %2, i64 5\n  %5 = load i8, ptr %4, align 1, !tbaa !5\n  %6 = getelementptr inbounds i8, ptr %2, i64 1\n  %7 = load i8, ptr %6, align 1, !tbaa !5\n  %8 = getelementptr inbounds i8, ptr %2, i64 3\n  %9 = load i8, ptr %8, align 1, !tbaa !5\n  %10 = tail call i32 @niu_num_alt_addr(ptr noundef %0) #2\n  %11 = icmp sgt i32 %10, %1\n  br i1 %11, label %15, label %12\n\n12:                                               ; preds = %3\n  %13 = load i32, ptr @EINVAL, align 4, !tbaa !8\n  %14 = sub nsw i32 0, %13\n  br label %31\n\n15:                                               ; preds = %3\n  %16 = load i32, ptr %0, align 4, !tbaa !10\n  %17 = load i32, ptr @NIU_FLAGS_XMAC, align 4, !tbaa !8\n  %18 = and i32 %17, %16\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %25, label %20\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @XMAC_ALT_ADDR0(i32 noundef %1) #2\n  %22 = tail call i32 @nw64_mac(i32 noundef %21, i8 noundef zeroext %5) #2\n  %23 = tail call i32 @XMAC_ALT_ADDR1(i32 noundef %1) #2\n  %24 = tail call i32 @nw64_mac(i32 noundef %23, i8 noundef zeroext %9) #2\n  br label %29\n\n25:                                               ; preds = %15\n  %26 = tail call i32 @BMAC_ALT_ADDR0(i32 noundef %1) #2\n  %27 = tail call i32 @nw64_mac(i32 noundef %26, i8 noundef zeroext %5) #2\n  %28 = tail call i32 @BMAC_ALT_ADDR1(i32 noundef %1) #2\n  br label %29\n\n29:                                               ; preds = %25, %20\n  %30 = phi i32 [ %24, %20 ], [ %27, %25 ]\n  %31 = tail call i32 @nw64_mac(i32 noundef %30, i8 noundef zeroext %7) #2\n  br label %31\n\n31:                                               ; preds = %29, %12\n  %32 = phi i32 [ %14, %12 ], [ 0, %29 ]\n  ret i32 %32\n}\n\ndeclare i32 @niu_num_alt_addr(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @nw64_mac(i32 noundef, i8 noundef zeroext) local_unnamed_addr #1\n\ndeclare i32 @XMAC_ALT_ADDR0(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @XMAC_ALT_ADDR1(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BMAC_ALT_ADDR0(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BMAC_ALT_ADDR1(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = !{!9, !9, i64 0}\n!9 = !{!\"int\", !6, i64 0}\n!10 = !{!11, !9, i64 0}\n!11 = !{!\"niu\", !9, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/drivers/net/extr_niu.c_niu_set_alt_mac.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@NIU_FLAGS_XMAC = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @niu_set_alt_mac], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @niu_set_alt_mac(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2) #0 {\n  %4 = getelementptr inbounds i8, ptr %2, i64 5\n  %5 = load i8, ptr %4, align 1, !tbaa !5\n  %6 = getelementptr inbounds i8, ptr %2, i64 3\n  %7 = load i8, ptr %6, align 1, !tbaa !5\n  %8 = getelementptr inbounds i8, ptr %2, i64 1\n  %9 = load i8, ptr %8, align 1, !tbaa !5\n  %10 = tail call i32 @niu_num_alt_addr(ptr noundef %0) #2\n  %11 = icmp sgt i32 %10, %1\n  br i1 %11, label %15, label %12\n\n12:                                               ; preds = %3\n  %13 = load i32, ptr @EINVAL, align 4, !tbaa !8\n  %14 = sub nsw i32 0, %13\n  br label %34\n\n15:                                               ; preds = %3\n  %16 = load i32, ptr %0, align 4, !tbaa !10\n  %17 = load i32, ptr @NIU_FLAGS_XMAC, align 4, !tbaa !8\n  %18 = and i32 %17, %16\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %27, label %20\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @XMAC_ALT_ADDR0(i32 noundef %1) #2\n  %22 = tail call i32 @nw64_mac(i32 noundef %21, i8 noundef zeroext %5) #2\n  %23 = tail call i32 @XMAC_ALT_ADDR1(i32 noundef %1) #2\n  %24 = tail call i32 @nw64_mac(i32 noundef %23, i8 noundef zeroext %7) #2\n  %25 = tail call i32 @XMAC_ALT_ADDR2(i32 noundef %1) #2\n  %26 = tail call i32 @nw64_mac(i32 noundef %25, i8 noundef zeroext %9) #2\n  br label %34\n\n27:                                               ; preds = %15\n  %28 = tail call i32 @BMAC_ALT_ADDR0(i32 noundef %1) #2\n  %29 = tail call i32 @nw64_mac(i32 noundef %28, i8 noundef zeroext %5) #2\n  %30 = tail call i32 @BMAC_ALT_ADDR1(i32 noundef %1) #2\n  %31 = tail call i32 @nw64_mac(i32 noundef %30, i8 noundef zeroext %7) #2\n  %32 = tail call i32 @BMAC_ALT_ADDR2(i32 noundef %1) #2\n  %33 = tail call i32 @nw64_mac(i32 noundef %32, i8 noundef zeroext %9) #2\n  br label %34\n\n34:                                               ; preds = %20, %27, %12\n  %35 = phi i32 [ %14, %12 ], [ 0, %27 ], [ 0, %20 ]\n  ret i32 %35\n}\n\ndeclare i32 @niu_num_alt_addr(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @nw64_mac(i32 noundef, i8 noundef zeroext) local_unnamed_addr #1\n\ndeclare i32 @XMAC_ALT_ADDR0(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @XMAC_ALT_ADDR1(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @XMAC_ALT_ADDR2(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BMAC_ALT_ADDR0(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BMAC_ALT_ADDR1(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BMAC_ALT_ADDR2(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = !{!9, !9, i64 0}\n!9 = !{!\"int\", !6, i64 0}\n!10 = !{!11, !9, i64 0}\n!11 = !{!\"niu\", !9, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_kernel.c_user_process1.ll\"\n\t.globl\tuser_process1                   # -- Begin function user_process1\n\t.p2align\t4, 0x90\n\t.type\tuser_process1,@function\nuser_process1:                          # @user_process1\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tmovw\t$0, 6(%rsp)\n\tleaq\t6(%rsp), %r14\n\t.p2align\t4, 0x90\n.LBB0_1:                                # =>This Inner Loop Header: Depth=1\n\tmovzbl\t(%rbx), %eax\n\tmovb\t%al, 6(%rsp)\n\tmovq\t%r14, %rdi\n\tcallq\tcall_sys_write@PLT\n\tmovl\t$100000, %edi                   # imm = 0x186A0\n\tcallq\tdelay@PLT\n\tmovzbl\t1(%rbx), %eax\n\tmovb\t%al, 6(%rsp)\n\tmovq\t%r14, %rdi\n\tcallq\tcall_sys_write@PLT\n\tmovl\t$100000, %edi                   # imm = 0x186A0\n\tcallq\tdelay@PLT\n\tmovzbl\t2(%rbx), %eax\n\tmovb\t%al, 6(%rsp)\n\tmovq\t%r14, %rdi\n\tcallq\tcall_sys_write@PLT\n\tmovl\t$100000, %edi                   # imm = 0x186A0\n\tcallq\tdelay@PLT\n\tmovzbl\t3(%rbx), %eax\n\tmovb\t%al, 6(%rsp)\n\tmovq\t%r14, %rdi\n\tcallq\tcall_sys_write@PLT\n\tmovl\t$100000, %edi                   # imm = 0x186A0\n\tcallq\tdelay@PLT\n\tmovzbl\t4(%rbx), %eax\n\tmovb\t%al, 6(%rsp)\n\tmovq\t%r14, %rdi\n\tcallq\tcall_sys_write@PLT\n\tmovl\t$100000, %edi                   # imm = 0x186A0\n\tcallq\tdelay@PLT\n\tcmpb\t$97, (%rbx)\n\tjne\t.LBB0_1\n# %bb.2:                                #   in Loop: Header=BB0_1 Depth=1\n\txorl\t%eax, %eax\n\tcallq\tget_el@PLT\n\tmovl\t$.L.str, %edi\n\tmovl\t%eax, %esi\n\tcallq\tprintf@PLT\n\tjmp\t.LBB0_1\n.Lfunc_end0:\n\t.size\tuser_process1, .Lfunc_end0-user_process1\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"exception level is %d\\n\\r\"\n\t.size\t.L.str, 24\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [24 x i8] c\"exception level is %d\\0A\\0D\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @user_process1(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = alloca [1 x i8], align 1\n  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #3\n  store i8 0, ptr %2, align 1, !tbaa !5\n  br label %3\n\n3:                                                ; preds = %1, %19\n  %4 = load i8, ptr %0, align 1, !tbaa !5\n  store i8 %4, ptr %2, align 1, !tbaa !5\n  %5 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %6 = call i32 @delay(i32 noundef 100000) #3\n  %7 = getelementptr inbounds i8, ptr %0, i64 1\n  %8 = load i8, ptr %7, align 1, !tbaa !5\n  store i8 %8, ptr %2, align 1, !tbaa !5\n  %9 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %10 = call i32 @delay(i32 noundef 100000) #3\n  %11 = getelementptr inbounds i8, ptr %0, i64 2\n  %12 = load i8, ptr %11, align 1, !tbaa !5\n  store i8 %12, ptr %2, align 1, !tbaa !5\n  %13 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %14 = call i32 @delay(i32 noundef 100000) #3\n  %15 = getelementptr inbounds i8, ptr %0, i64 3\n  %16 = load i8, ptr %15, align 1, !tbaa !5\n  store i8 %16, ptr %2, align 1, !tbaa !5\n  %17 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %18 = call i32 @delay(i32 noundef 100000) #3\n  %19 = load i8, ptr %0, align 1, !tbaa !5\n  %20 = icmp eq i8 %19, 97\n  br i1 %20, label %21, label %3, !llvm.loop !8\n\n21:                                               ; preds = %3\n  %22 = call i32 (...) @get_el() #3\n  %23 = call i32 @printf(ptr noundef nonnull @.str, i32 noundef %22) #3\n  br label %3\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @call_sys_write(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @delay(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @printf(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @get_el(...) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = distinct !{!8, !9}\n!9 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./raspberry-pi-os/exercises/lesson05/1/xdfm1/src/extr_kernel.c_user_process1.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [24 x i8] c\"exception level is %d\\0A\\0D\\00\", align 1\n\n; Function Attrs: noreturn nounwind uwtable\ndefine dso_local void @user_process1(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = alloca [2 x i8], align 2\n  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %2) #3\n  store i16 0, ptr %2, align 2\n  %3 = getelementptr inbounds i8, ptr %0, i64 1\n  %4 = getelementptr inbounds i8, ptr %0, i64 2\n  %5 = getelementptr inbounds i8, ptr %0, i64 3\n  %6 = getelementptr inbounds i8, ptr %0, i64 4\n  br label %7\n\n7:                                                ; preds = %28, %1\n  %8 = load i8, ptr %0, align 1, !tbaa !5\n  store i8 %8, ptr %2, align 2, !tbaa !5\n  %9 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %10 = call i32 @delay(i32 noundef 100000) #3\n  %11 = load i8, ptr %3, align 1, !tbaa !5\n  store i8 %11, ptr %2, align 2, !tbaa !5\n  %12 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %13 = call i32 @delay(i32 noundef 100000) #3\n  %14 = load i8, ptr %4, align 1, !tbaa !5\n  store i8 %14, ptr %2, align 2, !tbaa !5\n  %15 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %16 = call i32 @delay(i32 noundef 100000) #3\n  %17 = load i8, ptr %5, align 1, !tbaa !5\n  store i8 %17, ptr %2, align 2, !tbaa !5\n  %18 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %19 = call i32 @delay(i32 noundef 100000) #3\n  %20 = load i8, ptr %6, align 1, !tbaa !5\n  store i8 %20, ptr %2, align 2, !tbaa !5\n  %21 = call i32 @call_sys_write(ptr noundef nonnull %2) #3\n  %22 = call i32 @delay(i32 noundef 100000) #3\n  %23 = load i8, ptr %0, align 1, !tbaa !5\n  %24 = icmp eq i8 %23, 97\n  br i1 %24, label %25, label %28\n\n25:                                               ; preds = %7\n  %26 = call i32 (...) @get_el() #3\n  %27 = call i32 @printf(ptr noundef nonnull @.str, i32 noundef %26) #3\n  br label %28\n\n28:                                               ; preds = %25, %7\n  br label %7\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @call_sys_write(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @delay(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @printf(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @get_el(...) local_unnamed_addr #2\n\nattributes #0 = { noreturn nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_queue.c_spsc_queue_init.ll\"\n\t.globl\tspsc_queue_init                 # -- Begin function spsc_queue_init\n\t.p2align\t4, 0x90\n\t.type\tspsc_queue_init,@function\nspsc_queue_init:                        # @spsc_queue_init\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\ttestq\t%rsi, %rsi\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t%rdi, %r14\n\tmovq\t%rsi, %rdi\n\tcallq\tlwan_nextpow2@PLT\n\tmovq\t%rax, %rbx\n\tleal\t1(%rax), %edi\n\tmovl\t$4, %esi\n\tcallq\tcalloc@PLT\n\tmovl\t%eax, 24(%r14)\n\ttestl\t%eax, %eax\n\tje\t.LBB0_3\n# %bb.4:\n\tmovl\t20(%r14), %edi\n\txorl\t%ebp, %ebp\n\txorl\t%esi, %esi\n\tcallq\tATOMIC_INIT@PLT\n\tmovl\t16(%r14), %edi\n\txorl\t%esi, %esi\n\tcallq\tATOMIC_INIT@PLT\n\tmovq\t%rbx, (%r14)\n\tdecq\t%rbx\n\tmovq\t%rbx, 8(%r14)\n\tjmp\t.LBB0_5\n.LBB0_1:\n\txorl\t%ebp, %ebp\n\tsubl\tEINVAL(%rip), %ebp\n\tjmp\t.LBB0_5\n.LBB0_3:\n\txorl\t%ebp, %ebp\n\tsubl\terrno(%rip), %ebp\n.LBB0_5:\n\tmovl\t%ebp, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tspsc_queue_init, .Lfunc_end0-spsc_queue_init\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.bss\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\terrno,@object                   # @errno\n\t.globl\terrno\n\t.p2align\t2\nerrno:\n\t.long\t0                               # 0x0\n\t.size\terrno, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i64, i64, i32, i32, i32 }\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@errno = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @spsc_queue_init(ptr nocapture noundef writeonly %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = icmp eq i64 %1, 0\n  br i1 %3, label %4, label %7\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %6 = sub nsw i32 0, %5\n  br label %20\n\n7:                                                ; preds = %2\n  %8 = tail call i64 @lwan_nextpow2(i64 noundef %1) #2\n  %9 = add i64 %8, 1\n  %10 = trunc i64 %9 to i32\n  %11 = tail call i32 @calloc(i32 noundef %10, i32 noundef 4) #2\n  %12 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 4\n  store i32 %11, ptr %12, align 8, !tbaa !9\n  %13 = icmp eq i32 %11, 0\n  br i1 %13, label %14, label %17\n\n14:                                               ; preds = %7\n  %15 = load i32, ptr @errno, align 4, !tbaa !5\n  %16 = sub nsw i32 0, %15\n  br label %20\n\n17:                                               ; preds = %7\n  %18 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  %19 = tail call i32 @ATOMIC_INIT(i32 noundef %11, i32 noundef 0) #2\n  br label %22\n\n20:                                               ; preds = %14, %4\n  %21 = phi i32 [ %6, %4 ], [ %16, %14 ]\n  ret i32 %21\n\n22:                                               ; preds = %17\n  %23 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  %24 = load i32, ptr %23, align 8, !tbaa !12\n  %25 = tail call i32 @ATOMIC_INIT(i32 noundef %24, i32 noundef 0) #2\n  store i64 %8, ptr %0, align 8, !tbaa !13\n  %26 = add nsw i64 %8, -1\n  %27 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  store i64 %26, ptr %27, align 8, !tbaa !14\n  br label %20\n}\n\ndeclare i64 @lwan_nextpow2(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @calloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ATOMIC_INIT(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_3__\", !11, i64 0, !11, i64 8, !6, i64 16, !6, i64 20, !6, i64 24}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !6, i64 16}\n!13 = !{!10, !11, i64 0}\n!14 = !{!10, !11, i64 8}\n</s><s>", "file:": "./lwan/src/lib/extr_queue.c_spsc_queue_init.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.spsc_queue = type { i64, i64, i32, i32, i32 }\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@errno = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @spsc_queue_init(ptr nocapture noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = icmp eq i64 %1, 0\n  br i1 %3, label %4, label %7\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %6 = sub nsw i32 0, %5\n  br label %26\n\n7:                                                ; preds = %2\n  %8 = tail call i64 @lwan_nextpow2(i64 noundef %1) #2\n  %9 = trunc i64 %8 to i32\n  %10 = add i32 %9, 1\n  %11 = tail call i32 @calloc(i32 noundef %10, i32 noundef 4) #2\n  %12 = getelementptr inbounds %struct.spsc_queue, ptr %0, i64 0, i32 4\n  store i32 %11, ptr %12, align 8, !tbaa !9\n  %13 = icmp eq i32 %11, 0\n  br i1 %13, label %14, label %17\n\n14:                                               ; preds = %7\n  %15 = load i32, ptr @errno, align 4, !tbaa !5\n  %16 = sub nsw i32 0, %15\n  br label %26\n\n17:                                               ; preds = %7\n  %18 = getelementptr inbounds %struct.spsc_queue, ptr %0, i64 0, i32 3\n  %19 = load i32, ptr %18, align 4, !tbaa !12\n  %20 = tail call i32 @ATOMIC_INIT(i32 noundef %19, i32 noundef 0) #2\n  %21 = getelementptr inbounds %struct.spsc_queue, ptr %0, i64 0, i32 2\n  %22 = load i32, ptr %21, align 8, !tbaa !13\n  %23 = tail call i32 @ATOMIC_INIT(i32 noundef %22, i32 noundef 0) #2\n  store i64 %8, ptr %0, align 8, !tbaa !14\n  %24 = add i64 %8, -1\n  %25 = getelementptr inbounds %struct.spsc_queue, ptr %0, i64 0, i32 1\n  store i64 %24, ptr %25, align 8, !tbaa !15\n  br label %26\n\n26:                                               ; preds = %17, %14, %4\n  %27 = phi i32 [ %6, %4 ], [ 0, %17 ], [ %16, %14 ]\n  ret i32 %27\n}\n\ndeclare i64 @lwan_nextpow2(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @calloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ATOMIC_INIT(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"spsc_queue\", !11, i64 0, !11, i64 8, !6, i64 16, !6, i64 20, !6, i64 24}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !6, i64 20}\n!13 = !{!10, !6, i64 16}\n!14 = !{!10, !11, i64 0}\n!15 = !{!10, !11, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_prodigy192.c_ak4114_input_sw_put.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ak4114_input_sw_put\n\t.type\tak4114_input_sw_put,@function\nak4114_input_sw_put:                    # @ak4114_input_sw_put\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tcallq\tsnd_kcontrol_chip@PLT\n\tmovq\t%rax, %r14\n\tmovl\tAK4114_REG_IO1(%rip), %esi\n\tmovq\t%rax, %rdi\n\tcallq\tprodigy192_ak4114_read@PLT\n\tmovq\t(%rbx), %rcx\n\txorl\t%edx, %edx\n\tcmpq\t$0, (%rcx)\n\tmovl\t%eax, %ebx\n\tmovzbl\tAK4114_IPS0(%rip), %ebp\n\tcmovnel\t%ebp, %edx\n\tnotb\t%bpl\n\tandb\t%al, %bpl\n\torb\t%dl, %bpl\n\tcmpb\t%al, %bpl\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\tAK4114_REG_IO1(%rip), %esi\n\tmovzbl\t%bpl, %edx\n\tmovq\t%r14, %rdi\n\tcallq\tprodigy192_ak4114_write@PLT\n.LBB0_2:\n\txorl\t%eax, %eax\n\tcmpb\t%bl, %bpl\n\tsetne\t%al\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tak4114_input_sw_put, .Lfunc_end0-ak4114_input_sw_put\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tAK4114_REG_IO1,@object          # @AK4114_REG_IO1\n\t.bss\n\t.globl\tAK4114_REG_IO1\n\t.p2align\t2\nAK4114_REG_IO1:\n\t.long\t0                               # 0x0\n\t.size\tAK4114_REG_IO1, 4\n\n\t.type\tAK4114_IPS0,@object             # @AK4114_IPS0\n\t.globl\tAK4114_IPS0\nAK4114_IPS0:\n\t.byte\t0                               # 0x0\n\t.size\tAK4114_IPS0, 1\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@AK4114_REG_IO1 = dso_local local_unnamed_addr global i32 0, align 4\n@AK4114_IPS0 = dso_local local_unnamed_addr global i8 0, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ak4114_input_sw_put], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ak4114_input_sw_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = tail call ptr @snd_kcontrol_chip(ptr noundef %0) #2\n  %4 = load i32, ptr @AK4114_REG_IO1, align 4, !tbaa !5\n  %5 = tail call zeroext i8 @prodigy192_ak4114_read(ptr noundef %3, i32 noundef %4) #2\n  %6 = load ptr, ptr %1, align 8, !tbaa !9\n  %7 = load i64, ptr %6, align 8, !tbaa !14\n  %8 = icmp eq i64 %7, 0\n  %9 = load i8, ptr @AK4114_IPS0, align 1, !tbaa !16\n  %10 = xor i8 %9, -1\n  %11 = select i1 %8, i8 0, i8 %9\n  %12 = and i8 %5, %10\n  %13 = or i8 %11, %12\n  %14 = icmp ne i8 %13, %5\n  br i1 %14, label %15, label %18\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @AK4114_REG_IO1, align 4, !tbaa !5\n  %17 = tail call i32 @prodigy192_ak4114_write(ptr noundef %3, i32 noundef %16, i8 noundef zeroext %13) #2\n  br label %18\n\n18:                                               ; preds = %15, %2\n  %19 = zext i1 %14 to i32\n  ret i32 %19\n}\n\ndeclare ptr @snd_kcontrol_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare zeroext i8 @prodigy192_ak4114_read(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @prodigy192_ak4114_write(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !13, i64 0}\n!10 = !{!\"snd_ctl_elem_value\", !11, i64 0}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"TYPE_3__\", !13, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !7, i64 0}\n!16 = !{!7, !7, i64 0}\n</s><s>", "file:": "./linux/sound/pci/ice1712/extr_prodigy192.c_ak4114_input_sw_put.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@AK4114_REG_IO1 = dso_local local_unnamed_addr global i32 0, align 4\n@AK4114_IPS0 = dso_local local_unnamed_addr global i8 0, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ak4114_input_sw_put], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ak4114_input_sw_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = tail call ptr @snd_kcontrol_chip(ptr noundef %0) #2\n  %4 = load i32, ptr @AK4114_REG_IO1, align 4, !tbaa !5\n  %5 = tail call zeroext i8 @prodigy192_ak4114_read(ptr noundef %3, i32 noundef %4) #2\n  %6 = load ptr, ptr %1, align 8, !tbaa !9\n  %7 = load i64, ptr %6, align 8, !tbaa !14\n  %8 = icmp eq i64 %7, 0\n  %9 = load i8, ptr @AK4114_IPS0, align 1, !tbaa !16\n  %10 = select i1 %8, i8 0, i8 %9\n  %11 = xor i8 %9, -1\n  %12 = and i8 %5, %11\n  %13 = or i8 %10, %12\n  %14 = icmp ne i8 %13, %5\n  br i1 %14, label %15, label %18\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @AK4114_REG_IO1, align 4, !tbaa !5\n  %17 = tail call i32 @prodigy192_ak4114_write(ptr noundef %3, i32 noundef %16, i8 noundef zeroext %13) #2\n  br label %18\n\n18:                                               ; preds = %15, %2\n  %19 = zext i1 %14 to i32\n  ret i32 %19\n}\n\ndeclare ptr @snd_kcontrol_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare zeroext i8 @prodigy192_ak4114_read(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @prodigy192_ak4114_write(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !13, i64 0}\n!10 = !{!\"snd_ctl_elem_value\", !11, i64 0}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"TYPE_3__\", !13, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !7, i64 0}\n!16 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sunxi-rsb.c_sunxi_rsb_device_unregister.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function sunxi_rsb_device_unregister\n\t.type\tsunxi_rsb_device_unregister,@function\nsunxi_rsb_device_unregister:            # @sunxi_rsb_device_unregister\n\t.cfi_startproc\n# %bb.0:\n\tjmp\tdevice_unregister@PLT           # TAILCALL\n.Lfunc_end0:\n\t.size\tsunxi_rsb_device_unregister, .Lfunc_end0-sunxi_rsb_device_unregister\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sunxi_rsb_device_unregister], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @sunxi_rsb_device_unregister(ptr noundef %0) #0 {\n  %2 = tail call i32 @device_unregister(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @device_unregister(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/drivers/bus/extr_sunxi-rsb.c_sunxi_rsb_device_unregister.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sunxi_rsb_device_unregister], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @sunxi_rsb_device_unregister(ptr noundef %0) #0 {\n  %2 = tail call i32 @device_unregister(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @device_unregister(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dlmglue.c_ocfs2_super_lock_res_init.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ocfs2_super_lock_res_init\n\t.type\tocfs2_super_lock_res_init,@function\nocfs2_super_lock_res_init:              # @ocfs2_super_lock_res_init\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tcallq\tocfs2_lock_res_init_once@PLT\n\tmovl\tOCFS2_LOCK_TYPE_SUPER(%rip), %edi\n\tmovl\tOCFS2_SUPER_BLOCK_BLKNO(%rip), %esi\n\tmovl\t(%rbx), %ecx\n\txorl\t%edx, %edx\n\tcallq\tocfs2_build_lock_name@PLT\n\tmovl\tOCFS2_LOCK_TYPE_SUPER(%rip), %edx\n\tmovl\t$ocfs2_super_lops, %ecx\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\tmovq\t%r14, %r8\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tocfs2_lock_res_init_common@PLT  # TAILCALL\n.Lfunc_end0:\n\t.size\tocfs2_super_lock_res_init, .Lfunc_end0-ocfs2_super_lock_res_init\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOCFS2_LOCK_TYPE_SUPER,@object   # @OCFS2_LOCK_TYPE_SUPER\n\t.bss\n\t.globl\tOCFS2_LOCK_TYPE_SUPER\n\t.p2align\t2\nOCFS2_LOCK_TYPE_SUPER:\n\t.long\t0                               # 0x0\n\t.size\tOCFS2_LOCK_TYPE_SUPER, 4\n\n\t.type\tOCFS2_SUPER_BLOCK_BLKNO,@object # @OCFS2_SUPER_BLOCK_BLKNO\n\t.globl\tOCFS2_SUPER_BLOCK_BLKNO\n\t.p2align\t2\nOCFS2_SUPER_BLOCK_BLKNO:\n\t.long\t0                               # 0x0\n\t.size\tOCFS2_SUPER_BLOCK_BLKNO, 4\n\n\t.type\tocfs2_super_lops,@object        # @ocfs2_super_lops\n\t.globl\tocfs2_super_lops\n\t.p2align\t2\nocfs2_super_lops:\n\t.long\t0                               # 0x0\n\t.size\tocfs2_super_lops, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@OCFS2_LOCK_TYPE_SUPER = dso_local local_unnamed_addr global i32 0, align 4\n@OCFS2_SUPER_BLOCK_BLKNO = dso_local local_unnamed_addr global i32 0, align 4\n@ocfs2_super_lops = dso_local global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ocfs2_super_lock_res_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ocfs2_super_lock_res_init(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call i32 @ocfs2_lock_res_init_once(ptr noundef %0) #2\n  %4 = load i32, ptr @OCFS2_LOCK_TYPE_SUPER, align 4, !tbaa !5\n  %5 = load i32, ptr @OCFS2_SUPER_BLOCK_BLKNO, align 4, !tbaa !5\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  %7 = tail call i32 @ocfs2_build_lock_name(i32 noundef %4, i32 noundef %5, i32 noundef 0, i32 noundef %6, ptr noundef %1) #2\n  %8 = load i32, ptr @OCFS2_LOCK_TYPE_SUPER, align 4, !tbaa !5\n  %9 = tail call i32 @ocfs2_lock_res_init_common(ptr noundef %1, ptr noundef nonnull %0, i32 noundef %8, ptr noundef nonnull @ocfs2_super_lops, ptr noundef %1) #2\n  ret void\n}\n\ndeclare i32 @ocfs2_lock_res_init_once(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ocfs2_build_lock_name(i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ocfs2_lock_res_init_common(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"ocfs2_lock_res\", !6, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/fs/ocfs2/extr_dlmglue.c_ocfs2_super_lock_res_init.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@OCFS2_LOCK_TYPE_SUPER = dso_local local_unnamed_addr global i32 0, align 4\n@OCFS2_SUPER_BLOCK_BLKNO = dso_local local_unnamed_addr global i32 0, align 4\n@ocfs2_super_lops = dso_local global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ocfs2_super_lock_res_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ocfs2_super_lock_res_init(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call i32 @ocfs2_lock_res_init_once(ptr noundef %0) #2\n  %4 = load i32, ptr @OCFS2_LOCK_TYPE_SUPER, align 4, !tbaa !5\n  %5 = load i32, ptr @OCFS2_SUPER_BLOCK_BLKNO, align 4, !tbaa !5\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  %7 = tail call i32 @ocfs2_build_lock_name(i32 noundef %4, i32 noundef %5, i32 noundef 0, i32 noundef %6) #2\n  %8 = load i32, ptr @OCFS2_LOCK_TYPE_SUPER, align 4, !tbaa !5\n  %9 = tail call i32 @ocfs2_lock_res_init_common(ptr noundef %1, ptr noundef nonnull %0, i32 noundef %8, ptr noundef nonnull @ocfs2_super_lops, ptr noundef %1) #2\n  ret void\n}\n\ndeclare i32 @ocfs2_lock_res_init_once(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ocfs2_build_lock_name(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ocfs2_lock_res_init_common(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"ocfs2_lock_res\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dm-io.c_dm_io.ll\"\n\t.globl\tdm_io                           # -- Begin function dm_io\n\t.p2align\t4, 0x90\n\t.type\tdm_io,@function\ndm_io:                                  # @dm_io\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rcx, %r14\n\tmovq\t%rdx, %rbx\n\tmovl\t%esi, %r15d\n\tmovq\t%rdi, %rbp\n\tmovq\t(%rdx), %rdx\n\tmovzbl\tSECTOR_SHIFT(%rip), %ecx\n\tshlq\t%cl, %rdx\n\tmovq\t%rsp, %rsi\n\tcallq\tdp_init@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_5\n# %bb.1:\n\tmovl\t4(%rbp), %eax\n\tmovl\t8(%rbp), %r8d\n\tmovl\t16(%rbp), %edi\n\tmovl\t12(%rbp), %ecx\n\ttestl\t%eax, %eax\n\tje\t.LBB0_2\n# %bb.3:\n\tmovl\t(%rbp), %ebp\n\tmovq\t%rsp, %r9\n\tmovl\t%r15d, %esi\n\tmovq\t%rbx, %rdx\n\tpushq\t%rbp\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%rax\n\t.cfi_adjust_cfa_offset 8\n\tcallq\tasync_io@PLT\n\tjmp\t.LBB0_4\n.LBB0_2:\n\t.cfi_def_cfa_offset 48\n\tsubq\t$8, %rsp\n\t.cfi_adjust_cfa_offset 8\n\tleaq\t8(%rsp), %r9\n\tmovl\t%r15d, %esi\n\tmovq\t%rbx, %rdx\n\tpushq\t%r14\n\t.cfi_adjust_cfa_offset 8\n\tcallq\tsync_io@PLT\n.LBB0_4:\n\taddq\t$16, %rsp\n\t.cfi_adjust_cfa_offset -16\n.LBB0_5:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tdm_io, .Lfunc_end0-dm_io\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSECTOR_SHIFT,@object            # @SECTOR_SHIFT\n\t.bss\n\t.globl\tSECTOR_SHIFT\n\t.p2align\t3\nSECTOR_SHIFT:\n\t.quad\t0                               # 0x0\n\t.size\tSECTOR_SHIFT, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dm_io_request = type { i32 }\n%struct.dm_target = type { i32, i32, i32, i32, i32 }\n\n@SECTOR_SHIFT = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @dm_io(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca %struct.dm_io_request, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %6 = load i64, ptr %2, align 8, !tbaa !5\n  %7 = load i64, ptr @SECTOR_SHIFT, align 8, !tbaa !10\n  %8 = shl i64 %6, %7\n  %9 = call i32 @dp_init(ptr noundef %0, ptr noundef nonnull %5, i64 noundef %8) #3\n  %10 = icmp eq i32 %9, 0\n  br i1 %10, label %11, label %23\n\n11:                                               ; preds = %4\n  %12 = getelementptr inbounds %struct.dm_target, ptr %0, i64 0, i32 4\n  %13 = load i32, ptr %12, align 4, !tbaa !11\n  %14 = getelementptr inbounds %struct.dm_target, ptr %0, i64 0, i32 3\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.dm_target, ptr %0, i64 0, i32 2\n  %17 = load i32, ptr %16, align 4, !tbaa !14\n  %18 = getelementptr inbounds %struct.dm_target, ptr %0, i64 0, i32 1\n  %19 = load i32, ptr %18, align 4, !tbaa !15\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %21, label %24\n\n21:                                               ; preds = %11\n  %22 = call i32 @sync_io(i32 noundef %13, i32 noundef %1, ptr noundef nonnull %2, i32 noundef %15, i32 noundef %17, ptr noundef nonnull %5) #3\n  br label %23\n\n23:                                               ; preds = %4, %21\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret i32 %9\n\n24:                                               ; preds = %11\n  %25 = load i32, ptr %0, align 4, !tbaa !16\n  %26 = call i32 @async_io(i32 noundef %13, i32 noundef %1, ptr noundef nonnull %2, i32 noundef %15, i32 noundef %17, ptr noundef nonnull %5, i32 noundef %25, i32 noundef %19, ptr noundef %3) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret i32 %26\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @dp_init(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @sync_io(i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @async_io(i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"bio\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !13, i64 16}\n!12 = !{!\"dm_target\", !13, i64 0, !13, i64 4, !13, i64 8, !13, i64 12, !13, i64 16}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!12, !13, i64 8}\n!15 = !{!12, !13, i64 4}\n!16 = !{!12, !13, i64 0}\n</s><s>", "file:": "./linux/drivers/md/extr_dm-io.c_dm_io.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dpages = type { i32 }\n%struct.TYPE_2__ = type { i32, i32 }\n%struct.dm_io_request = type { %struct.TYPE_2__, i32, i32, i32 }\n\n@SECTOR_SHIFT = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @dm_io(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca %struct.dpages, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %6 = load i64, ptr %2, align 8, !tbaa !5\n  %7 = load i64, ptr @SECTOR_SHIFT, align 8, !tbaa !10\n  %8 = shl i64 %6, %7\n  %9 = call i32 @dp_init(ptr noundef %0, ptr noundef nonnull %5, i64 noundef %8) #3\n  %10 = icmp eq i32 %9, 0\n  br i1 %10, label %11, label %26\n\n11:                                               ; preds = %4\n  %12 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 1\n  %13 = load i32, ptr %12, align 4, !tbaa !11\n  %14 = icmp eq i32 %13, 0\n  %15 = getelementptr inbounds %struct.dm_io_request, ptr %0, i64 0, i32 3\n  %16 = load i32, ptr %15, align 4, !tbaa !15\n  %17 = getelementptr inbounds %struct.dm_io_request, ptr %0, i64 0, i32 2\n  %18 = load i32, ptr %17, align 4, !tbaa !16\n  %19 = getelementptr inbounds %struct.dm_io_request, ptr %0, i64 0, i32 1\n  %20 = load i32, ptr %19, align 4, !tbaa !17\n  br i1 %14, label %21, label %23\n\n21:                                               ; preds = %11\n  %22 = call i32 @sync_io(i32 noundef %16, i32 noundef %1, ptr noundef nonnull %2, i32 noundef %18, i32 noundef %20, ptr noundef nonnull %5, ptr noundef %3) #3\n  br label %26\n\n23:                                               ; preds = %11\n  %24 = load i32, ptr %0, align 4, !tbaa !18\n  %25 = call i32 @async_io(i32 noundef %16, i32 noundef %1, ptr noundef nonnull %2, i32 noundef %18, i32 noundef %20, ptr noundef nonnull %5, i32 noundef %13, i32 noundef %24) #3\n  br label %26\n\n26:                                               ; preds = %4, %23, %21\n  %27 = phi i32 [ %25, %23 ], [ %22, %21 ], [ %9, %4 ]\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret i32 %27\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @dp_init(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @sync_io(i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @async_io(i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dm_io_region\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !14, i64 4}\n!12 = !{!\"dm_io_request\", !13, i64 0, !14, i64 8, !14, i64 12, !14, i64 16}\n!13 = !{!\"TYPE_2__\", !14, i64 0, !14, i64 4}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!12, !14, i64 16}\n!16 = !{!12, !14, i64 12}\n!17 = !{!12, !14, i64 8}\n!18 = !{!12, !14, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_vbfill.c_gl_Indexi.ll\"\n\t.globl\tgl_Indexi                       # -- Begin function gl_Indexi\n\t.p2align\t4, 0x90\n\t.type\tgl_Indexi,@function\ngl_Indexi:                              # @gl_Indexi\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rsi, 8(%rdi)\n\tmovl\tGL_FALSE(%rip), %eax\n\tmovq\t(%rdi), %rcx\n\tmovl\t%eax, (%rcx)\n\tretq\n.Lfunc_end0:\n\t.size\tgl_Indexi, .Lfunc_end0-gl_Indexi\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tGL_FALSE,@object                # @GL_FALSE\n\t.bss\n\t.globl\tGL_FALSE\n\t.p2align\t2\nGL_FALSE:\n\t.long\t0                               # 0x0\n\t.size\tGL_FALSE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { ptr, ptr }\n\n@GL_FALSE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local void @gl_Indexi(ptr nocapture noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = getelementptr inbounds %struct.TYPE_5__, ptr %0, i64 0, i32 1\n  store ptr %1, ptr %3, align 8, !tbaa !5\n  %4 = load i32, ptr @GL_FALSE, align 4, !tbaa !10\n  %5 = load ptr, ptr %0, align 8, !tbaa !12\n  store i32 %4, ptr %5, align 4, !tbaa !13\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"TYPE_5__\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!6, !7, i64 0}\n!13 = !{!14, !11, i64 0}\n!14 = !{!\"TYPE_4__\", !11, i64 0}\n</s><s>", "file:": "./reactos/dll/opengl/mesa/extr_vbfill.c_gl_Indexi.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { ptr, %struct.TYPE_5__ }\n%struct.TYPE_5__ = type { i64 }\n\n@GL_FALSE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local void @gl_Indexi(ptr nocapture noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = getelementptr inbounds %struct.TYPE_7__, ptr %0, i64 0, i32 1\n  store i64 %1, ptr %3, align 8, !tbaa !5\n  %4 = load i32, ptr @GL_FALSE, align 4, !tbaa !12\n  %5 = load ptr, ptr %0, align 8, !tbaa !14\n  store i32 %4, ptr %5, align 4, !tbaa !15\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 8}\n!6 = !{!\"TYPE_7__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_5__\", !11, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!6, !7, i64 0}\n!15 = !{!16, !13, i64 0}\n!16 = !{!\"TYPE_6__\", !13, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_rcar-gen3-cpg.c_cpg_sd_clock_enable.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function cpg_sd_clock_enable\n\t.type\tcpg_sd_clock_enable,@function\ncpg_sd_clock_enable:                    # @cpg_sd_clock_enable\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcallq\tto_sd_clock@PLT\n\tmovl\t16(%rax), %edi\n\tmovl\tCPG_SD_STP_MASK(%rip), %esi\n\tmovq\t(%rax), %rcx\n\tmovq\t8(%rax), %rax\n\tmovl\t(%rax,%rcx,4), %edx\n\tandl\t%esi, %edx\n\tcallq\tcpg_reg_modify@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcpg_sd_clock_enable, .Lfunc_end0-cpg_sd_clock_enable\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCPG_SD_STP_MASK,@object         # @CPG_SD_STP_MASK\n\t.bss\n\t.globl\tCPG_SD_STP_MASK\n\t.p2align\t2\nCPG_SD_STP_MASK:\n\t.long\t0                               # 0x0\n\t.size\tCPG_SD_STP_MASK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cpg_sd_clock = type { i64, ptr, i32 }\n\n@CPG_SD_STP_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cpg_sd_clock_enable], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @cpg_sd_clock_enable(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_sd_clock(ptr noundef %0) #2\n  %3 = getelementptr inbounds %struct.cpg_sd_clock, ptr %2, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr @CPG_SD_STP_MASK, align 4, !tbaa !12\n  %6 = getelementptr inbounds %struct.cpg_sd_clock, ptr %2, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !13\n  %8 = load i64, ptr %2, align 8, !tbaa !14\n  %9 = getelementptr inbounds i32, ptr %7, i64 %8\n  %10 = load i32, ptr %9, align 4, !tbaa !12\n  %11 = and i32 %10, %5\n  %12 = tail call i32 @cpg_reg_modify(i32 noundef %4, i32 noundef %5, i32 noundef %11) #2\n  ret i32 0\n}\n\ndeclare ptr @to_sd_clock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @cpg_reg_modify(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 16}\n!6 = !{!\"cpg_sd_clock\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!6, !7, i64 0}\n</s><s>", "file:": "./linux/drivers/clk/renesas/extr_rcar-gen3-cpg.c_cpg_sd_clock_enable.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sd_clock = type { i64, ptr, %struct.TYPE_3__ }\n%struct.TYPE_3__ = type { i32 }\n%struct.TYPE_4__ = type { i32 }\n\n@CPG_SD_STP_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cpg_sd_clock_enable], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @cpg_sd_clock_enable(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_sd_clock(ptr noundef %0) #2\n  %3 = getelementptr inbounds %struct.sd_clock, ptr %2, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr @CPG_SD_STP_MASK, align 4, !tbaa !13\n  %6 = getelementptr inbounds %struct.sd_clock, ptr %2, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !14\n  %8 = load i64, ptr %2, align 8, !tbaa !15\n  %9 = getelementptr inbounds %struct.TYPE_4__, ptr %7, i64 %8\n  %10 = load i32, ptr %9, align 4, !tbaa !16\n  %11 = and i32 %10, %5\n  %12 = tail call i32 @cpg_reg_modify(i32 noundef %4, i32 noundef %5, i32 noundef %11) #2\n  ret i32 0\n}\n\ndeclare ptr @to_sd_clock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @cpg_reg_modify(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !12, i64 16}\n!6 = !{!\"sd_clock\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!\"TYPE_3__\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!6, !10, i64 8}\n!15 = !{!6, !7, i64 0}\n!16 = !{!17, !12, i64 0}\n!17 = !{!\"TYPE_4__\", !12, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_arcnet.c_arcnet_rebuild_header.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function arcnet_rebuild_header\n\t.type\tarcnet_rebuild_header,@function\narcnet_rebuild_header:                  # @arcnet_rebuild_header\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbp\n\tmovq\t8(%rdi), %rbx\n\tmovq\t%rbx, %rdi\n\tcallq\tnetdev_priv@PLT\n\tmovl\t(%rbp), %eax\n\tsubl\t4(%rbp), %eax\n\tcmpl\t$2, %eax\n\tjne\t.LBB0_1\n# %bb.2:\n\tmovq\t%rbp, %rdi\n\tmovl\t$2, %esi\n\tcallq\tskb_pull@PLT\n\tmovzwl\t(%rax), %eax\n\tmovl\tD_DURING(%rip), %edi\n\tmovzwl\t%ax, %ebp\n\tmovl\t$.L.str.1, %esi\n\tmovl\t%ebp, %edx\n\txorl\t%eax, %eax\n\tcallq\tBUGMSG@PLT\n\tcmpw\tETH_P_IP(%rip), %bp\n\tje\t.LBB0_4\n# %bb.3:\n\tmovl\tD_NORMAL(%rip), %edi\n\tmovl\t$.L.str.2, %esi\n\tmovl\t%ebp, %edx\n\txorl\t%eax, %eax\n\tcallq\tBUGMSG@PLT\n\tmovq\t(%rbx), %xmm0                   # xmm0 = mem[0],zero\n\tpcmpeqd\t%xmm1, %xmm1\n\tpsubd\t%xmm1, %xmm0\n\tmovq\t%xmm0, (%rbx)\n\tjmp\t.LBB0_4\n.LBB0_1:\n\tmovl\tD_NORMAL(%rip), %edi\n\tmovzwl\t%ax, %edx\n\tmovl\t$.L.str, %esi\n\txorl\t%eax, %eax\n\tcallq\tBUGMSG@PLT\n.LBB0_4:\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tarcnet_rebuild_header, .Lfunc_end0-arcnet_rebuild_header\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tD_NORMAL,@object                # @D_NORMAL\n\t.bss\n\t.globl\tD_NORMAL\n\t.p2align\t2\nD_NORMAL:\n\t.long\t0                               # 0x0\n\t.size\tD_NORMAL, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"rebuild_header: shouldn't be here! (hdrsize=%d)\\n\"\n\t.size\t.L.str, 49\n\n\t.type\tD_DURING,@object                # @D_DURING\n\t.bss\n\t.globl\tD_DURING\n\t.p2align\t2\nD_DURING:\n\t.long\t0                               # 0x0\n\t.size\tD_DURING, 4\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"rebuild header for protocol %Xh\\n\"\n\t.size\t.L.str.1, 33\n\n\t.type\tETH_P_IP,@object                # @ETH_P_IP\n\t.bss\n\t.globl\tETH_P_IP\n\t.p2align\t1\nETH_P_IP:\n\t.short\t0                               # 0x0\n\t.size\tETH_P_IP, 2\n\n\t.type\t.L.str.2,@object                # @.str.2\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.2:\n\t.asciz\t\"I don't understand ethernet protocol %Xh addresses!\\n\"\n\t.size\t.L.str.2, 53\n\n\t.type\tarc_proto_map,@object           # @arc_proto_map\n\t.bss\n\t.globl\tarc_proto_map\n\t.p2align\t3\narc_proto_map:\n\t.quad\t0\n\t.size\tarc_proto_map, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sk_buff = type { i32, i32, ptr }\n\n@D_NORMAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [49 x i8] c\"rebuild_header: shouldn't be here! (hdrsize=%d)\\0A\\00\", align 1\n@D_DURING = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [33 x i8] c\"rebuild header for protocol %Xh\\0A\\00\", align 1\n@ETH_P_IP = dso_local local_unnamed_addr global i16 0, align 2\n@.str.2 = private unnamed_addr constant [53 x i8] c\"I don't understand ethernet protocol %Xh addresses!\\0A\\00\", align 1\n@arc_proto_map = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @arcnet_rebuild_header], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @arcnet_rebuild_header(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.sk_buff, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = tail call ptr @netdev_priv(ptr noundef %3) #2\n  %5 = load i32, ptr %0, align 8, !tbaa !11\n  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i64 0, i32 1\n  %7 = load i32, ptr %6, align 4, !tbaa !12\n  %8 = sub nsw i32 %5, %7\n  %9 = icmp eq i32 %8, 2\n  br i1 %9, label %14, label %10\n\n10:                                               ; preds = %1\n  %11 = load i32, ptr @D_NORMAL, align 4, !tbaa !13\n  %12 = tail call i32 (i32, ptr, ...) @BUGMSG(i32 noundef %11, ptr noundef nonnull @.str, i32 noundef %8) #2\n  %13 = tail call i32 @arcnet_rebuild_header(ptr noundef nonnull %0) #2\n  br label %25\n\n14:                                               ; preds = %1\n  %15 = tail call ptr @skb_pull(ptr noundef nonnull %0, i32 noundef 2) #2\n  %16 = load i16, ptr %15, align 2, !tbaa !14\n  %17 = load i32, ptr @D_DURING, align 4, !tbaa !13\n  %18 = tail call i32 (i32, ptr, ...) @BUGMSG(i32 noundef %17, ptr noundef nonnull @.str.1, i16 noundef zeroext %16) #2\n  %19 = load i16, ptr @ETH_P_IP, align 2, !tbaa !14\n  %20 = icmp eq i16 %16, %19\n  br i1 %20, label %25, label %21\n\n21:                                               ; preds = %14\n  %22 = load i32, ptr @D_NORMAL, align 4, !tbaa !13\n  %23 = tail call i32 (i32, ptr, ...) @BUGMSG(i32 noundef %22, ptr noundef nonnull @.str.2, i16 noundef zeroext %16) #2\n  %24 = load <2 x i32>, ptr %4, align 4, !tbaa !13\n  store <2 x i32> %24, ptr %4, align 4, !tbaa !13\n  br label %25\n\n25:                                               ; preds = %14, %21, %10\n  ret i32 0\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @BUGMSG(i32 noundef, ptr noundef, ...) local_unnamed_addr #1\n\ndeclare ptr @skb_pull(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"sk_buff\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !7, i64 4}\n!13 = !{!7, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"short\", !8, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/drivers/net/arcnet/extr_arcnet.c_arcnet_rebuild_header.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sk_buff = type { i32, i32, ptr }\n\n@D_NORMAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [49 x i8] c\"rebuild_header: shouldn't be here! (hdrsize=%d)\\0A\\00\", align 1\n@D_DURING = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [33 x i8] c\"rebuild header for protocol %Xh\\0A\\00\", align 1\n@ETH_P_IP = dso_local local_unnamed_addr global i16 0, align 2\n@.str.2 = private unnamed_addr constant [53 x i8] c\"I don't understand ethernet protocol %Xh addresses!\\0A\\00\", align 1\n@arc_proto_map = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @arcnet_rebuild_header], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @arcnet_rebuild_header(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.sk_buff, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = tail call ptr @netdev_priv(ptr noundef %3) #2\n  %5 = load i32, ptr %0, align 8, !tbaa !11\n  %6 = getelementptr inbounds %struct.sk_buff, ptr %0, i64 0, i32 1\n  %7 = load i32, ptr %6, align 4, !tbaa !12\n  %8 = sub nsw i32 %5, %7\n  %9 = icmp eq i32 %8, 2\n  br i1 %9, label %14, label %10\n\n10:                                               ; preds = %1\n  %11 = load i32, ptr @D_NORMAL, align 4, !tbaa !13\n  %12 = trunc i32 %8 to i16\n  %13 = tail call i32 (i32, ptr, i16, ...) @BUGMSG(i32 noundef %11, ptr noundef nonnull @.str, i16 noundef zeroext %12) #2\n  br label %27\n\n14:                                               ; preds = %1\n  %15 = tail call i64 @skb_pull(ptr noundef nonnull %0, i32 noundef 2) #2\n  %16 = inttoptr i64 %15 to ptr\n  %17 = load i16, ptr %16, align 2, !tbaa !14\n  %18 = load i32, ptr @D_DURING, align 4, !tbaa !13\n  %19 = tail call i32 (i32, ptr, i16, ...) @BUGMSG(i32 noundef %18, ptr noundef nonnull @.str.1, i16 noundef zeroext %17) #2\n  %20 = load i16, ptr @ETH_P_IP, align 2, !tbaa !14\n  %21 = icmp eq i16 %17, %20\n  br i1 %21, label %27, label %22\n\n22:                                               ; preds = %14\n  %23 = load i32, ptr @D_NORMAL, align 4, !tbaa !13\n  %24 = tail call i32 (i32, ptr, i16, ...) @BUGMSG(i32 noundef %23, ptr noundef nonnull @.str.2, i16 noundef zeroext %17) #2\n  %25 = load <2 x i32>, ptr %3, align 4, !tbaa !13\n  %26 = add nsw <2 x i32> %25, <i32 1, i32 1>\n  store <2 x i32> %26, ptr %3, align 4, !tbaa !13\n  br label %27\n\n27:                                               ; preds = %14, %22, %10\n  ret i32 0\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @BUGMSG(i32 noundef, ptr noundef, i16 noundef zeroext, ...) local_unnamed_addr #1\n\ndeclare i64 @skb_pull(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"sk_buff\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !7, i64 4}\n!13 = !{!7, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"short\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_vv-tl-parse.c___tl_conn_fetch_raw_data.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function __tl_conn_fetch_raw_data\n\t.type\t__tl_conn_fetch_raw_data,@function\n__tl_conn_fetch_raw_data:               # @__tl_conn_fetch_raw_data\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovl\t%esi, %ebx\n\tmovq\t%rdi, %rsi\n\tmovq\tTL_IN_CONN(%rip), %rdi\n\tmovl\t%ebx, %edx\n\tcallq\tread_in@PLT\n\txorl\t%edi, %edi\n\tcmpl\t%ebx, %eax\n\tsete\t%dil\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tassert@PLT                      # TAILCALL\n.Lfunc_end0:\n\t.size\t__tl_conn_fetch_raw_data, .Lfunc_end0-__tl_conn_fetch_raw_data\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tTL_IN_CONN,@object              # @TL_IN_CONN\n\t.bss\n\t.globl\tTL_IN_CONN\n\t.p2align\t3\nTL_IN_CONN:\n\t.quad\t0\n\t.size\tTL_IN_CONN, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@TL_IN_CONN = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @__tl_conn_fetch_raw_data], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @__tl_conn_fetch_raw_data(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr @TL_IN_CONN, align 8, !tbaa !5\n  %4 = tail call i32 @read_in(ptr noundef %3, ptr noundef %0, i32 noundef %1) #2\n  %5 = icmp eq i32 %4, %1\n  %6 = zext i1 %5 to i32\n  %7 = tail call i32 @assert(i32 noundef %6) #2\n  ret void\n}\n\ndeclare i32 @read_in(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./kphp-kdb/vv/extr_vv-tl-parse.c___tl_conn_fetch_raw_data.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@TL_IN_CONN = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @__tl_conn_fetch_raw_data], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @__tl_conn_fetch_raw_data(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr @TL_IN_CONN, align 8, !tbaa !5\n  %4 = tail call i32 @read_in(ptr noundef %3, ptr noundef %0, i32 noundef %1) #2\n  %5 = icmp eq i32 %4, %1\n  %6 = zext i1 %5 to i32\n  %7 = tail call i32 @assert(i32 noundef %6) #2\n  ret void\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @read_in(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_run.c_a2bstr.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function a2bstr\n\t.type\ta2bstr,@function\na2bstr:                                 # @a2bstr\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdi, %r14\n\tmovl\tCP_ACP(%rip), %edi\n\txorl\t%esi, %esi\n\tmovq\t%r14, %rdx\n\tmovl\t$-1, %ecx\n\txorl\t%r8d, %r8d\n\txorl\t%r9d, %r9d\n\tcallq\tMultiByteToWideChar@PLT\n\tmovl\t%eax, %r15d\n\tleal\t-1(%r15), %esi\n\txorl\t%edi, %edi\n\tcallq\tSysAllocStringLen@PLT\n\tmovq\t%rax, %rbx\n\tmovl\tCP_ACP(%rip), %edi\n\txorl\t%esi, %esi\n\tmovq\t%r14, %rdx\n\tmovl\t$-1, %ecx\n\tmovq\t%rax, %r8\n\tmovl\t%r15d, %r9d\n\tcallq\tMultiByteToWideChar@PLT\n\tmovq\t%rbx, %rax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\ta2bstr, .Lfunc_end0-a2bstr\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCP_ACP,@object                  # @CP_ACP\n\t.bss\n\t.globl\tCP_ACP\n\t.p2align\t2\nCP_ACP:\n\t.long\t0                               # 0x0\n\t.size\tCP_ACP, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@CP_ACP = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @a2bstr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @a2bstr(ptr noundef %0) #0 {\n  %2 = load i32, ptr @CP_ACP, align 4, !tbaa !5\n  %3 = tail call i32 @MultiByteToWideChar(i32 noundef %2, i32 noundef 0, ptr noundef %0, i32 noundef -1, ptr noundef null, i32 noundef 0) #2\n  %4 = add nsw i32 %3, -1\n  %5 = tail call ptr @SysAllocStringLen(ptr noundef null, i32 noundef %4) #2\n  %6 = load i32, ptr @CP_ACP, align 4, !tbaa !5\n  %7 = tail call i32 @MultiByteToWideChar(i32 noundef %6, i32 noundef 0, ptr noundef %0, i32 noundef -1, ptr noundef %5, i32 noundef %3) #2\n  ret ptr %5\n}\n\ndeclare i32 @MultiByteToWideChar(i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @SysAllocStringLen(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./reactos/modules/rostests/winetests/wscript/extr_run.c_a2bstr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@CP_ACP = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @a2bstr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @a2bstr(ptr noundef %0) #0 {\n  %2 = load i32, ptr @CP_ACP, align 4, !tbaa !5\n  %3 = tail call i32 @MultiByteToWideChar(i32 noundef %2, i32 noundef 0, ptr noundef %0, i32 noundef -1, ptr noundef null, i32 noundef 0) #2\n  %4 = add nsw i32 %3, -1\n  %5 = tail call ptr @SysAllocStringLen(ptr noundef null, i32 noundef %4) #2\n  %6 = load i32, ptr @CP_ACP, align 4, !tbaa !5\n  %7 = tail call i32 @MultiByteToWideChar(i32 noundef %6, i32 noundef 0, ptr noundef %0, i32 noundef -1, ptr noundef %5, i32 noundef %3) #2\n  ret ptr %5\n}\n\ndeclare i32 @MultiByteToWideChar(i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @SysAllocStringLen(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lm85.c_FREQ_FROM_REG.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function FREQ_FROM_REG\n\t.type\tFREQ_FROM_REG,@function\nFREQ_FROM_REG:                          # @FREQ_FROM_REG\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t%edx, %eax\n\txorl\t%edx, %edx\n\tdivl\t%esi\n                                        # kill: def $edx killed $edx def $rdx\n\tmovl\t(%rdi,%rdx,4), %eax\n\tretq\n.Lfunc_end0:\n\t.size\tFREQ_FROM_REG, .Lfunc_end0-FREQ_FROM_REG\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @FREQ_FROM_REG], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @FREQ_FROM_REG(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = urem i32 %2, %1\n  %5 = zext i32 %4 to i64\n  %6 = getelementptr inbounds i32, ptr %0, i64 %5\n  %7 = load i32, ptr %6, align 4, !tbaa !5\n  ret i32 %7\n}\n\nattributes #0 = { argmemonly inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/hwmon/extr_lm85.c_FREQ_FROM_REG.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @FREQ_FROM_REG], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @FREQ_FROM_REG(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = urem i32 %2, %1\n  %5 = zext i32 %4 to i64\n  %6 = getelementptr inbounds i32, ptr %0, i64 %5\n  %7 = load i32, ptr %6, align 4, !tbaa !5\n  ret i32 %7\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_flash_setup.c_octeon_flash_probe.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function octeon_flash_probe\n\t.type\tocteon_flash_probe,@function\nocteon_flash_probe:                     # @octeon_flash_probe\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovq\t(%rdi), %rdi\n\tleaq\t4(%rsp), %rdx\n\tmovl\t$.L.str, %esi\n\tcallq\tof_property_read_u32@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_2\n# %bb.1:\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_2:\n\t.cfi_def_cfa_offset 16\n\tmovl\t4(%rsp), %edi\n\tcallq\tCVMX_MIO_BOOT_REG_CFGX@PLT\n\tmovl\t%eax, %edi\n\tcallq\tcvmx_read_csr@PLT\n.Lfunc_end0:\n\t.size\tocteon_flash_probe, .Lfunc_end0-octeon_flash_probe\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"reg\"\n\t.size\t.L.str, 4\n\n\t.type\tflash_map,@object               # @flash_map\n\t.bss\n\t.globl\tflash_map\n\t.p2align\t3\nflash_map:\n\t.zero\t48\n\t.size\tflash_map, 48\n\n\t.type\tocteon_flash_map_read,@object   # @octeon_flash_map_read\n\t.globl\tocteon_flash_map_read\n\t.p2align\t2\nocteon_flash_map_read:\n\t.long\t0                               # 0x0\n\t.size\tocteon_flash_map_read, 4\n\n\t.type\tocteon_flash_map_write,@object  # @octeon_flash_map_write\n\t.globl\tocteon_flash_map_write\n\t.p2align\t2\nocteon_flash_map_write:\n\t.long\t0                               # 0x0\n\t.size\tocteon_flash_map_write, 4\n\n\t.type\tocteon_flash_map_copy_from,@object # @octeon_flash_map_copy_from\n\t.globl\tocteon_flash_map_copy_from\n\t.p2align\t2\nocteon_flash_map_copy_from:\n\t.long\t0                               # 0x0\n\t.size\tocteon_flash_map_copy_from, 4\n\n\t.type\tocteon_flash_map_copy_to,@object # @octeon_flash_map_copy_to\n\t.globl\tocteon_flash_map_copy_to\n\t.p2align\t2\nocteon_flash_map_copy_to:\n\t.long\t0                               # 0x0\n\t.size\tocteon_flash_map_copy_to, 4\n\n\t.type\tmymtd,@object                   # @mymtd\n\t.globl\tmymtd\n\t.p2align\t3\nmymtd:\n\t.quad\t0\n\t.size\tmymtd, 8\n\n\t.type\tTHIS_MODULE,@object             # @THIS_MODULE\n\t.globl\tTHIS_MODULE\n\t.p2align\t2\nTHIS_MODULE:\n\t.long\t0                               # 0x0\n\t.size\tTHIS_MODULE, 4\n\n\t.type\tpart_probe_types,@object        # @part_probe_types\n\t.globl\tpart_probe_types\n\t.p2align\t2\npart_probe_types:\n\t.long\t0                               # 0x0\n\t.size\tpart_probe_types, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, i32, i32, i32, i32, i32, i32, i32 }\n\n@.str = private unnamed_addr constant [4 x i8] c\"reg\\00\", align 1\n@flash_map = dso_local local_unnamed_addr global %struct.TYPE_2__ zeroinitializer, align 8\n@octeon_flash_map_read = dso_local local_unnamed_addr global i32 0, align 4\n@octeon_flash_map_write = dso_local local_unnamed_addr global i32 0, align 4\n@octeon_flash_map_copy_from = dso_local local_unnamed_addr global i32 0, align 4\n@octeon_flash_map_copy_to = dso_local local_unnamed_addr global i32 0, align 4\n@mymtd = dso_local local_unnamed_addr global ptr null, align 8\n@THIS_MODULE = dso_local local_unnamed_addr global i32 0, align 4\n@part_probe_types = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @octeon_flash_probe], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @octeon_flash_probe(ptr nocapture noundef readonly %0) #0 {\n  %2 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #3\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = call i32 @of_property_read_u32(ptr noundef %3, ptr noundef nonnull @.str, ptr noundef nonnull %2) #3\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %6, label %10\n\n6:                                                ; preds = %1\n  %7 = load i32, ptr %2, align 4, !tbaa !10\n  %8 = call i32 @CVMX_MIO_BOOT_REG_CFGX(i32 noundef %7) #3\n  %9 = call i32 @cvmx_read_csr(i32 noundef %8) #3\n  unreachable\n\n10:                                               ; preds = %1\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #3\n  ret i32 %4\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @of_property_read_u32(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cvmx_read_csr(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @CVMX_MIO_BOOT_REG_CFGX(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"platform_device\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./linux/arch/mips/cavium-octeon/extr_flash_setup.c_octeon_flash_probe.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_11__ = type { ptr, i32, i32, i32, i32, i32, i32, i64, i32 }\n\n@.str = private unnamed_addr constant [4 x i8] c\"reg\\00\", align 1\n@flash_map = dso_local local_unnamed_addr global %struct.TYPE_11__ zeroinitializer, align 8\n@octeon_flash_map_read = dso_local local_unnamed_addr global i32 0, align 4\n@octeon_flash_map_write = dso_local local_unnamed_addr global i32 0, align 4\n@octeon_flash_map_copy_from = dso_local local_unnamed_addr global i32 0, align 4\n@octeon_flash_map_copy_to = dso_local local_unnamed_addr global i32 0, align 4\n@mymtd = dso_local local_unnamed_addr global ptr null, align 8\n@THIS_MODULE = dso_local local_unnamed_addr global i32 0, align 4\n@part_probe_types = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @octeon_flash_probe], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @octeon_flash_probe(ptr nocapture noundef readonly %0) #0 {\n  %2 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #3\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = call i32 @of_property_read_u32(ptr noundef %3, ptr noundef nonnull @.str, ptr noundef nonnull %2) #3\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %6, label %10\n\n6:                                                ; preds = %1\n  %7 = load i32, ptr %2, align 4, !tbaa !11\n  %8 = call i32 @CVMX_MIO_BOOT_REG_CFGX(i32 noundef %7) #3\n  %9 = call i32 @cvmx_read_csr(i32 noundef %8) #3\n  unreachable\n\n10:                                               ; preds = %1\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #3\n  ret i32 %4\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @of_property_read_u32(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cvmx_read_csr(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @CVMX_MIO_BOOT_REG_CFGX(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"platform_device\", !7, i64 0}\n!7 = !{!\"TYPE_8__\", !8, i64 0}\n!8 = !{!\"any pointer\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !9, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_piggyback.c_start_line.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function start_line\n\t.type\tstart_line,@function\nstart_line:                             # @start_line\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\taddq\t$10, %rdi\n\tmovl\t$.L.str, %esi\n\tcallq\tstrcmp@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_1\n# %bb.2:\n\taddq\t$18, %rbx\n\tmovl\t$.L.str, %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tstrcmp@PLT\n\tmovq\t%rax, %rcx\n\txorl\t%eax, %eax\n\ttestq\t%rcx, %rcx\n\tsete\t%al\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_1:\n\t.cfi_def_cfa_offset 16\n\tmovl\t$1, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tstart_line, .Lfunc_end0-start_line\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\" _start\\n\"\n\t.size\t.L.str, 9\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [9 x i8] c\" _start\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @start_line], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @start_line(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds i8, ptr %0, i64 10\n  %3 = tail call i64 @strcmp(ptr noundef nonnull %2, ptr noundef nonnull @.str) #2\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %9, label %5\n\n5:                                                ; preds = %1\n  %6 = getelementptr inbounds i8, ptr %0, i64 18\n  %7 = tail call i64 @strcmp(ptr noundef nonnull %6, ptr noundef nonnull @.str) #2\n  %8 = icmp eq i64 %7, 0\n  br label %9\n\n9:                                                ; preds = %5, %1\n  %10 = phi i32 [ 1, %1 ], [ 0, %5 ]\n  ret i32 %10\n}\n\ndeclare i64 @strcmp(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/arch/sparc/boot/extr_piggyback.c_start_line.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [9 x i8] c\" _start\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @start_line], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @start_line(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds i8, ptr %0, i64 10\n  %3 = tail call i64 @strcmp(ptr noundef nonnull %2, ptr noundef nonnull @.str) #2\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %10, label %5\n\n5:                                                ; preds = %1\n  %6 = getelementptr inbounds i8, ptr %0, i64 18\n  %7 = tail call i64 @strcmp(ptr noundef nonnull %6, ptr noundef nonnull @.str) #2\n  %8 = icmp eq i64 %7, 0\n  %9 = zext i1 %8 to i32\n  br label %10\n\n10:                                               ; preds = %5, %1\n  %11 = phi i32 [ 1, %1 ], [ %9, %5 ]\n  ret i32 %11\n}\n\ndeclare i64 @strcmp(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sta.c_iwl_mvm_rm_sta_id.ll\"\n\t.globl\tiwl_mvm_rm_sta_id               # -- Begin function iwl_mvm_rm_sta_id\n\t.p2align\t4, 0x90\n\t.type\tiwl_mvm_rm_sta_id,@function\niwl_mvm_rm_sta_id:                      # @iwl_mvm_rm_sta_id\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %r14\n\tmovq\t%rdi, %rbx\n\tmovq\t%rdx, %rsi\n\tcallq\tiwl_mvm_rm_sta_common@PLT\n\tmovl\t%eax, %ebp\n\tleaq\t8(%rbx), %rdi\n\tcallq\tlockdep_assert_held@PLT\n\tmovq\t(%rbx), %rax\n\tmovl\t(%rax,%r14,4), %edi\n\txorl\t%esi, %esi\n\tcallq\trcu_assign_pointer@PLT\n\tmovl\t%ebp, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tiwl_mvm_rm_sta_id, .Lfunc_end0-iwl_mvm_rm_sta_id\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iwl_mvm = type { ptr, i32 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @iwl_mvm_rm_sta_id(ptr noundef %0, ptr nocapture noundef readnone %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i32 @iwl_mvm_rm_sta_common(ptr noundef %0, i64 noundef %2) #2\n  %5 = getelementptr inbounds %struct.iwl_mvm, ptr %0, i64 0, i32 1\n  %6 = tail call i32 @lockdep_assert_held(ptr noundef nonnull %5) #2\n  %7 = load ptr, ptr %0, align 8, !tbaa !5\n  %8 = getelementptr inbounds i32, ptr %7, i64 %2\n  %9 = load i32, ptr %8, align 4, !tbaa !11\n  %10 = tail call i32 @rcu_assign_pointer(i32 noundef %9, ptr noundef null) #2\n  ret i32 %4\n}\n\ndeclare i32 @iwl_mvm_rm_sta_common(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @lockdep_assert_held(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"iwl_mvm\", !7, i64 0, !10, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!10, !10, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/drivers/net/wireless/iwlwifi/mvm/extr_sta.c_iwl_mvm_rm_sta_id.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iwl_mvm = type { ptr, i32 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @iwl_mvm_rm_sta_id(ptr noundef %0, ptr nocapture noundef readnone %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i32 @iwl_mvm_rm_sta_common(ptr noundef %0, i64 noundef %2) #2\n  %5 = getelementptr inbounds %struct.iwl_mvm, ptr %0, i64 0, i32 1\n  %6 = tail call i32 @lockdep_assert_held(ptr noundef nonnull %5) #2\n  %7 = load ptr, ptr %0, align 8, !tbaa !5\n  %8 = getelementptr inbounds i32, ptr %7, i64 %2\n  %9 = load i32, ptr %8, align 4, !tbaa !11\n  %10 = tail call i32 @rcu_assign_pointer(i32 noundef %9, ptr noundef null) #2\n  ret i32 %4\n}\n\ndeclare i32 @iwl_mvm_rm_sta_common(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @lockdep_assert_held(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"iwl_mvm\", !7, i64 0, !10, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!10, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_filter_kernels.c_mp_find_filter_window.ll\"\n\t.globl\tmp_find_filter_window           # -- Begin function mp_find_filter_window\n\t.p2align\t4, 0x90\n\t.type\tmp_find_filter_window,@function\nmp_find_filter_window:                  # @mp_find_filter_window\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_5\n# %bb.1:\n\tmovq\t%rdi, %r14\n\tmovq\tmp_filter_windows(%rip), %rbx\n\tmovq\t(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_5\n\t.p2align\t4, 0x90\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%r14, %rsi\n\tcallq\tstrcmp@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.4:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t8(%rbx), %rdi\n\taddq\t$8, %rbx\n\ttestq\t%rdi, %rdi\n\tjne\t.LBB0_3\n.LBB0_5:\n\txorl\t%ebx, %ebx\n.LBB0_6:\n\tmovq\t%rbx, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmp_find_filter_window, .Lfunc_end0-mp_find_filter_window\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tmp_filter_windows,@object       # @mp_filter_windows\n\t.bss\n\t.globl\tmp_filter_windows\n\t.p2align\t3\nmp_filter_windows:\n\t.quad\t0\n\t.size\tmp_filter_windows, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { ptr }\n\n@mp_filter_windows = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @mp_find_filter_window(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = icmp eq ptr %0, null\n  br i1 %2, label %13, label %3\n\n3:                                                ; preds = %1\n  %4 = load ptr, ptr @mp_filter_windows, align 8, !tbaa !5\n  %5 = load ptr, ptr %4, align 8, !tbaa !9\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %13, label %10\n\n7:                                                ; preds = %10\n  %8 = getelementptr inbounds %struct.TYPE_4__, ptr %11, i64 1\n  %9 = load ptr, ptr %8, align 8, !tbaa !9\n  br label %10, !llvm.loop !11\n\n10:                                               ; preds = %3, %7\n  %11 = phi ptr [ %9, %7 ], [ %5, %3 ]\n  %12 = tail call i64 @strcmp(ptr noundef nonnull %11, ptr noundef nonnull %0) #2\n  switch i64 %12, label %7 [\n    i64 0, label %13\n  ]\n\n13:                                               ; preds = %10, %3, %1\n  %14 = phi ptr [ null, %1 ], [ null, %3 ], [ %11, %10 ]\n  ret ptr %14\n}\n\ndeclare i64 @strcmp(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_4__\", !6, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./mpv/video/out/extr_filter_kernels.c_mp_find_filter_window.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.filter_window = type { i64 }\n\n@mp_filter_windows = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @mp_find_filter_window(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = icmp eq ptr %0, null\n  br i1 %2, label %16, label %3\n\n3:                                                ; preds = %1\n  %4 = load ptr, ptr @mp_filter_windows, align 8, !tbaa !5\n  %5 = load i64, ptr %4, align 8, !tbaa !9\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %16, label %7\n\n7:                                                ; preds = %3, %12\n  %8 = phi i64 [ %14, %12 ], [ %5, %3 ]\n  %9 = phi ptr [ %13, %12 ], [ %4, %3 ]\n  %10 = tail call i64 @strcmp(i64 noundef %8, ptr noundef nonnull %0) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %16, label %12\n\n12:                                               ; preds = %7\n  %13 = getelementptr inbounds %struct.filter_window, ptr %9, i64 1\n  %14 = load i64, ptr %13, align 8, !tbaa !9\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %16, label %7, !llvm.loop !12\n\n16:                                               ; preds = %7, %12, %3, %1\n  %17 = phi ptr [ null, %1 ], [ null, %3 ], [ %9, %7 ], [ null, %12 ]\n  ret ptr %17\n}\n\ndeclare i64 @strcmp(i64 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"filter_window\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pbi.c_PBI_ReadConfig.ll\"\n\t.globl\tPBI_ReadConfig                  # -- Begin function PBI_ReadConfig\n\t.p2align\t4, 0x90\n\t.type\tPBI_ReadConfig,@function\nPBI_ReadConfig:                         # @PBI_ReadConfig\n\t.cfi_startproc\n# %bb.0:\n\tmovl\tFALSE(%rip), %eax\n\tretq\n.Lfunc_end0:\n\t.size\tPBI_ReadConfig, .Lfunc_end0-PBI_ReadConfig\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tFALSE,@object                   # @FALSE\n\t.bss\n\t.globl\tFALSE\n\t.p2align\t2\nFALSE:\n\t.long\t0                               # 0x0\n\t.size\tFALSE, 4\n\n\t.type\tTRUE,@object                    # @TRUE\n\t.globl\tTRUE\n\t.p2align\t2\nTRUE:\n\t.long\t0                               # 0x0\n\t.size\tTRUE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine dso_local i32 @PBI_ReadConfig(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = load i32, ptr @FALSE, align 4, !tbaa !5\n  ret i32 %2\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./Provenance/Cores/Atari800/atari800-src/extr_pbi.c_PBI_ReadConfig.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine dso_local i32 @PBI_ReadConfig(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @FALSE, align 4, !tbaa !5\n  ret i32 %3\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_addrconf.c_addrconf_mod_rs_timer.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function addrconf_mod_rs_timer\n\t.type\taddrconf_mod_rs_timer,@function\naddrconf_mod_rs_timer:                  # @addrconf_mod_rs_timer\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\tcallq\ttimer_pending@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovq\t%r14, %rdi\n\tcallq\tin6_dev_hold@PLT\n.LBB0_2:\n\taddq\tjiffies(%rip), %rbx\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tmod_timer@PLT                   # TAILCALL\n.Lfunc_end0:\n\t.size\taddrconf_mod_rs_timer, .Lfunc_end0-addrconf_mod_rs_timer\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tjiffies,@object                 # @jiffies\n\t.bss\n\t.globl\tjiffies\n\t.p2align\t3\njiffies:\n\t.quad\t0                               # 0x0\n\t.size\tjiffies, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @addrconf_mod_rs_timer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @addrconf_mod_rs_timer(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = tail call i32 @timer_pending(ptr noundef %0) #2\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %2\n  %6 = tail call i32 @in6_dev_hold(ptr noundef %0) #2\n  br label %7\n\n7:                                                ; preds = %5, %2\n  %8 = load i64, ptr @jiffies, align 8, !tbaa !5\n  %9 = add nsw i64 %8, %1\n  %10 = tail call i32 @mod_timer(ptr noundef %0, i64 noundef %9) #2\n  ret void\n}\n\ndeclare i32 @timer_pending(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @in6_dev_hold(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/net/ipv6/extr_addrconf.c_addrconf_mod_rs_timer.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @addrconf_mod_rs_timer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @addrconf_mod_rs_timer(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = tail call i32 @timer_pending(ptr noundef %0) #2\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %2\n  %6 = tail call i32 @in6_dev_hold(ptr noundef %0) #2\n  br label %7\n\n7:                                                ; preds = %5, %2\n  %8 = load i64, ptr @jiffies, align 8, !tbaa !5\n  %9 = add i64 %8, %1\n  %10 = tail call i32 @mod_timer(ptr noundef %0, i64 noundef %9) #2\n  ret void\n}\n\ndeclare i32 @timer_pending(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @in6_dev_hold(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sds.h_sdslen.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function sdslen\n\t.type\tsdslen,@function\nsdslen:                                 # @sdslen\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovzbl\t-1(%rdi), %eax\n\tmovzbl\tSDS_TYPE_MASK(%rip), %ecx\n\tandl\t%eax, %ecx\n\taddl\t$-128, %ecx\n\tcmpl\t$4, %ecx\n\tja\t.LBB0_1\n# %bb.2:\n\tmovq\t%rdi, %rsi\n\tjmpq\t*.LJTI0_0(,%rcx,8)\n.LBB0_4:\n\tmovl\t$8, %edi\n\tjmp\t.LBB0_8\n.LBB0_1:\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_7:\n\t.cfi_def_cfa_offset 16\n\tmovl\t$64, %edi\n\tjmp\t.LBB0_8\n.LBB0_3:\n\tmovzbl\t%al, %edi\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tjmp\tSDS_TYPE_5_LEN@PLT              # TAILCALL\n.LBB0_6:\n\t.cfi_def_cfa_offset 16\n\tmovl\t$32, %edi\n\tjmp\t.LBB0_8\n.LBB0_5:\n\tmovl\t$16, %edi\n.LBB0_8:\n\tcallq\tSDS_HDR@PLT\n\tmovq\t(%rax), %rax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsdslen, .Lfunc_end0-sdslen\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_3\n\t.quad\t.LBB0_6\n\t.quad\t.LBB0_5\n                                        # -- End function\n\t.type\tSDS_TYPE_MASK,@object           # @SDS_TYPE_MASK\n\t.bss\n\t.globl\tSDS_TYPE_MASK\nSDS_TYPE_MASK:\n\t.byte\t0                               # 0x0\n\t.size\tSDS_TYPE_MASK, 1\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SDS_TYPE_MASK = dso_local local_unnamed_addr global i8 0, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdslen], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i64 @sdslen(ptr noundef %0) #0 {\n  %2 = load i8, ptr %0, align 1, !tbaa !5\n  %3 = load i8, ptr @SDS_TYPE_MASK, align 1, !tbaa !5\n  %4 = and i8 %3, %2\n  switch i8 %4, label %14 [\n    i8 -128, label %5\n    i8 -127, label %8\n    i8 -126, label %11\n    i8 -125, label %13\n    i8 -124, label %10\n  ]\n\n5:                                                ; preds = %1\n  %6 = tail call i64 @SDS_TYPE_5_LEN(i8 noundef zeroext %2) #2\n  %7 = add nsw i64 %6, 1\n  br label %14\n\n8:                                                ; preds = %1\n  %9 = tail call i64 @SDS_HDR(i32 noundef 8, ptr noundef nonnull %0) #2\n  br label %14\n\n10:                                               ; preds = %1\n  %11 = tail call i64 @SDS_HDR(i32 noundef 16, ptr noundef nonnull %0) #2\n  br label %14\n\n12:                                               ; preds = %1\n  %13 = tail call i64 @SDS_HDR(i32 noundef 32, ptr noundef nonnull %0) #2\n  br label %14\n\n14:                                               ; preds = %1, %12, %10, %8, %5\n  %15 = phi i64 [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %5 ], [ 0, %1 ]\n  ret i64 %15\n}\n\ndeclare i64 @SDS_TYPE_5_LEN(i8 noundef zeroext) local_unnamed_addr #1\n\ndeclare i64 @SDS_HDR(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./disque/src/extr_sds.h_sdslen.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SDS_TYPE_MASK = dso_local local_unnamed_addr global i8 0, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdslen], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i64 @sdslen(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds i8, ptr %0, i64 -1\n  %3 = load i8, ptr %2, align 1, !tbaa !5\n  %4 = load i8, ptr @SDS_TYPE_MASK, align 1, !tbaa !5\n  %5 = and i8 %4, %3\n  switch i8 %5, label %20 [\n    i8 -126, label %6\n    i8 -128, label %8\n    i8 -124, label %11\n    i8 -125, label %14\n    i8 -127, label %17\n  ]\n\n6:                                                ; preds = %1\n  %7 = tail call i64 @SDS_TYPE_5_LEN(i8 noundef zeroext %3) #2\n  br label %20\n\n8:                                                ; preds = %1\n  %9 = tail call ptr @SDS_HDR(i32 noundef 8, ptr noundef nonnull %0) #2\n  %10 = load i64, ptr %9, align 8, !tbaa !8\n  br label %20\n\n11:                                               ; preds = %1\n  %12 = tail call ptr @SDS_HDR(i32 noundef 16, ptr noundef nonnull %0) #2\n  %13 = load i64, ptr %12, align 8, !tbaa !8\n  br label %20\n\n14:                                               ; preds = %1\n  %15 = tail call ptr @SDS_HDR(i32 noundef 32, ptr noundef nonnull %0) #2\n  %16 = load i64, ptr %15, align 8, !tbaa !8\n  br label %20\n\n17:                                               ; preds = %1\n  %18 = tail call ptr @SDS_HDR(i32 noundef 64, ptr noundef nonnull %0) #2\n  %19 = load i64, ptr %18, align 8, !tbaa !8\n  br label %20\n\n20:                                               ; preds = %1, %17, %14, %11, %8, %6\n  %21 = phi i64 [ %19, %17 ], [ %16, %14 ], [ %13, %11 ], [ %10, %8 ], [ %7, %6 ], [ 0, %1 ]\n  ret i64 %21\n}\n\ndeclare i64 @SDS_TYPE_5_LEN(i8 noundef zeroext) local_unnamed_addr #1\n\ndeclare ptr @SDS_HDR(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = !{!9, !10, i64 0}\n!9 = !{!\"TYPE_2__\", !10, i64 0}\n!10 = !{!\"long\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_perdc.c_PERDCDeInit.ll\"\n\t.globl\tPERDCDeInit                     # -- Begin function PERDCDeInit\n\t.p2align\t4, 0x90\n\t.type\tPERDCDeInit,@function\nPERDCDeInit:                            # @PERDCDeInit\n\t.cfi_startproc\n# %bb.0:\n\tretq\n.Lfunc_end0:\n\t.size\tPERDCDeInit, .Lfunc_end0-PERDCDeInit\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @PERDCDeInit() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./Provenance/Cores/Yabause/yabause/src/dreamcast/extr_perdc.c_PERDCDeInit.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine dso_local void @PERDCDeInit() local_unnamed_addr #0 {\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_bond_alb.c_bond_alb_deinit_slave.ll\"\n\t.globl\tbond_alb_deinit_slave           # -- Begin function bond_alb_deinit_slave\n\t.p2align\t4, 0x90\n\t.type\tbond_alb_deinit_slave,@function\nbond_alb_deinit_slave:                  # @bond_alb_deinit_slave\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tcallq\tbond_has_slaves@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\talb_change_hw_addr_on_detach@PLT\n.LBB0_2:\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\txorl\t%edx, %edx\n\tcallq\ttlb_clear_slave@PLT\n\tcmpq\t$0, 8(%rbx)\n\tje\t.LBB0_3\n# %bb.4:\n\tmovq\t$0, (%rbx)\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\trlb_clear_slave@PLT             # TAILCALL\n.LBB0_3:\n\t.cfi_def_cfa_offset 32\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tbond_alb_deinit_slave, .Lfunc_end0-bond_alb_deinit_slave\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i64, i64 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @bond_alb_deinit_slave(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call i64 @bond_has_slaves(ptr noundef %0) #2\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %2\n  %6 = tail call i32 @alb_change_hw_addr_on_detach(ptr noundef %0, ptr noundef %1) #2\n  br label %7\n\n7:                                                ; preds = %5, %2\n  %8 = tail call i32 @tlb_clear_slave(ptr noundef %0, ptr noundef %1, i32 noundef 0) #2\n  %9 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 1\n  %10 = load i64, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %7\n  store i64 0, ptr %0, align 8, !tbaa !11\n  %13 = tail call i32 @rlb_clear_slave(ptr noundef nonnull %0, ptr noundef %1) #2\n  br label %14\n\n14:                                               ; preds = %12, %7\n  ret void\n}\n\ndeclare i64 @bond_has_slaves(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @alb_change_hw_addr_on_detach(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @tlb_clear_slave(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rlb_clear_slave(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 8}\n!6 = !{!\"bonding\", !7, i64 0}\n!7 = !{!\"TYPE_2__\", !8, i64 0, !8, i64 8}\n!8 = !{!\"long\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!6, !8, i64 0}\n</s><s>", "file:": "./linux/drivers/net/bonding/extr_bond_alb.c_bond_alb_deinit_slave.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr, i64 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @bond_alb_deinit_slave(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call i64 @bond_has_slaves(ptr noundef %0) #2\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %2\n  %6 = tail call i32 @alb_change_hw_addr_on_detach(ptr noundef %0, ptr noundef %1) #2\n  br label %7\n\n7:                                                ; preds = %5, %2\n  %8 = tail call i32 @tlb_clear_slave(ptr noundef %0, ptr noundef %1, i32 noundef 0) #2\n  %9 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 1\n  %10 = load i64, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %7\n  store ptr null, ptr %0, align 8, !tbaa !12\n  %13 = tail call i32 @rlb_clear_slave(ptr noundef nonnull %0, ptr noundef %1) #2\n  br label %14\n\n14:                                               ; preds = %12, %7\n  ret void\n}\n\ndeclare i64 @bond_has_slaves(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @alb_change_hw_addr_on_detach(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @tlb_clear_slave(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rlb_clear_slave(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 8}\n!6 = !{!\"bonding\", !7, i64 0}\n!7 = !{!\"TYPE_2__\", !8, i64 0, !11, i64 8}\n!8 = !{!\"any pointer\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!\"long\", !9, i64 0}\n!12 = !{!6, !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_cdc_ncm.c_cdc_ncm_show_min_tx_pkt.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function cdc_ncm_show_min_tx_pkt\n\t.type\tcdc_ncm_show_min_tx_pkt,@function\ncdc_ncm_show_min_tx_pkt:                # @cdc_ncm_show_min_tx_pkt\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdx, %rbx\n\tcallq\tto_net_dev@PLT\n\tmovl\t%eax, %edi\n\tcallq\tnetdev_priv@PLT\n\tmovq\t(%rax), %rax\n\tmovq\t(%rax), %rax\n\tmovl\t(%rax), %edx\n\tmovl\t$.L.str, %esi\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tsprintf@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\tcdc_ncm_show_min_tx_pkt, .Lfunc_end0-cdc_ncm_show_min_tx_pkt\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%u\\n\"\n\t.size\t.L.str, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"%u\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cdc_ncm_show_min_tx_pkt], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @cdc_ncm_show_min_tx_pkt(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call i32 @to_net_dev(ptr noundef %0) #3\n  %5 = tail call ptr @netdev_priv(i32 noundef %4) #3\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = load ptr, ptr %6, align 8, !tbaa !10\n  %8 = load i32, ptr %7, align 4, !tbaa !12\n  %9 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull @.str, i32 noundef %8)\n  ret i32 %9\n}\n\ndeclare ptr @netdev_priv(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @to_net_dev(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"cdc_ncm_ctx\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_4__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_3__\", !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./linux/drivers/net/usb/extr_cdc_ncm.c_cdc_ncm_show_min_tx_pkt.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"%u\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cdc_ncm_show_min_tx_pkt], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @cdc_ncm_show_min_tx_pkt(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call i32 @to_net_dev(ptr noundef %0) #3\n  %5 = tail call ptr @netdev_priv(i32 noundef %4) #3\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = load i64, ptr %6, align 8, !tbaa !10\n  %8 = inttoptr i64 %7 to ptr\n  %9 = load i32, ptr %8, align 4, !tbaa !12\n  %10 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull @.str, i32 noundef %9)\n  ret i32 %10\n}\n\ndeclare ptr @netdev_priv(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @to_net_dev(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"usbnet\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"cdc_ncm_ctx\", !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_zfcp_dbf.h_zfcp_dbf_hba_fsf_resp.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function zfcp_dbf_hba_fsf_resp\n\t.type\tzfcp_dbf_hba_fsf_resp,@function\nzfcp_dbf_hba_fsf_resp:                  # @zfcp_dbf_hba_fsf_resp\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %rbx\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %r14\n\tmovq\t(%rdx), %rax\n\tmovq\t(%rax), %rax\n\tmovl\t(%rax), %edi\n\tcallq\tdebug_level_enabled@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t%r14, %rdi\n\tmovl\t%ebp, %esi\n\tmovq\t%rbx, %rdx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tzfcp_dbf_hba_fsf_res@PLT        # TAILCALL\n.LBB0_1:\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tzfcp_dbf_hba_fsf_resp, .Lfunc_end0-zfcp_dbf_hba_fsf_resp\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_dbf_hba_fsf_resp], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @zfcp_dbf_hba_fsf_resp(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {\n  %4 = load ptr, ptr %2, align 8, !tbaa !5\n  %5 = load ptr, ptr %4, align 8, !tbaa !10\n  %6 = load i32, ptr %5, align 4, !tbaa !12\n  %7 = tail call i64 @debug_level_enabled(i32 noundef %6) #2\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @zfcp_dbf_hba_fsf_res(ptr noundef %0, i32 noundef %1, ptr noundef nonnull %2) #2\n  br label %11\n\n11:                                               ; preds = %9, %3\n  ret void\n}\n\ndeclare i64 @debug_level_enabled(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @zfcp_dbf_hba_fsf_res(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"zfcp_fsf_req\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_4__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_3__\", !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./linux/drivers/s390/scsi/extr_zfcp_dbf.h_zfcp_dbf_hba_fsf_resp.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_dbf_hba_fsf_resp], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @zfcp_dbf_hba_fsf_resp(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {\n  %4 = load ptr, ptr %2, align 8, !tbaa !5\n  %5 = load ptr, ptr %4, align 8, !tbaa !10\n  %6 = load i32, ptr %5, align 4, !tbaa !12\n  %7 = tail call i64 @debug_level_enabled(i32 noundef %6, i32 noundef %1) #2\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @zfcp_dbf_hba_fsf_res(ptr noundef %0, i32 noundef %1, ptr noundef nonnull %2) #2\n  br label %11\n\n11:                                               ; preds = %9, %3\n  ret void\n}\n\ndeclare i64 @debug_level_enabled(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @zfcp_dbf_hba_fsf_res(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"zfcp_fsf_req\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_4__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_3__\", !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_usb_driver.c__gett.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function _gett\n\t.type\t_gett,@function\n_gett:                                  # @_gett\n\t.cfi_startproc\n# %bb.0:\n\tjmp\tibqGetTimeout@PLT               # TAILCALL\n.Lfunc_end0:\n\t.size\t_gett, .Lfunc_end0-_gett\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @_gett], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @_gett(ptr noundef %0) #0 {\n  %2 = tail call i32 @ibqGetTimeout(ptr noundef %0) #2\n  ret i32 %2\n}\n\ndeclare i32 @ibqGetTimeout(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./qmk_firmware/tmk_core/protocol/chibios/extr_usb_driver.c__gett.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @_gett], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @_gett(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = tail call i32 @ibqGetTimeout(ptr noundef %0, i32 noundef %1) #2\n  ret i32 %3\n}\n\ndeclare i32 @ibqGetTimeout(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ofwpci.c_ofw_pci_adjust_resource.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ofw_pci_adjust_resource\n\t.type\tofw_pci_adjust_resource,@function\nofw_pci_adjust_resource:                # @ofw_pci_adjust_resource\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%r9d, 4(%rsp)                   # 4-byte Spill\n\tmovl\t%r8d, %r15d\n\tmovq\t%rcx, %rbx\n\tmovl\t%edx, %r13d\n\tmovl\t%esi, %r12d\n\tmovl\t%edi, %ebp\n\tcallq\tdevice_get_softc@PLT\n\tmovq\t%rax, %r14\n\tmovq\t%rbx, %rdi\n\tcallq\trman_get_flags@PLT\n\tmovq\t%r14, %rdi\n\tmovl\t%r13d, %esi\n\tmovl\t%eax, %edx\n\tcallq\tofw_pci_get_rman@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t%rbx, %rdi\n\tmovq\t%rax, %rsi\n\tcallq\trman_is_region_manager@PLT\n\tmovl\t$.L.str, %esi\n\tmovl\t%eax, %edi\n\tcallq\tKASSERT@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\trman_get_flags@PLT\n\txorl\t%edi, %edi\n\tandl\tRF_ACTIVE(%rip), %eax\n\tsete\t%dil\n\tmovl\t$.L.str.1, %esi\n\tcallq\tKASSERT@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t%r15d, %esi\n\tmovl\t4(%rsp), %edx                   # 4-byte Reload\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\trman_adjust_resource@PLT        # TAILCALL\n.LBB0_1:\n\t.cfi_def_cfa_offset 64\n\tmovl\t%ebp, %edi\n\tmovl\t%r12d, %esi\n\tmovl\t%r13d, %edx\n\tmovq\t%rbx, %rcx\n\tmovl\t%r15d, %r8d\n\tmovl\t4(%rsp), %r9d                   # 4-byte Reload\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tbus_generic_adjust_resource@PLT # TAILCALL\n.Lfunc_end0:\n\t.size\tofw_pci_adjust_resource, .Lfunc_end0-ofw_pci_adjust_resource\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"rman mismatch\"\n\t.size\t.L.str, 14\n\n\t.type\tRF_ACTIVE,@object               # @RF_ACTIVE\n\t.bss\n\t.globl\tRF_ACTIVE\n\t.p2align\t2\nRF_ACTIVE:\n\t.long\t0                               # 0x0\n\t.size\tRF_ACTIVE, 4\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"active resources cannot be adjusted\"\n\t.size\t.L.str.1, 36\n\n\t.type\tPCI_RES_BUS,@object             # @PCI_RES_BUS\n\t.bss\n\t.globl\tPCI_RES_BUS\n\t.p2align\t2\nPCI_RES_BUS:\n\t.long\t0                               # 0x0\n\t.size\tPCI_RES_BUS, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [14 x i8] c\"rman mismatch\\00\", align 1\n@RF_ACTIVE = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [36 x i8] c\"active resources cannot be adjusted\\00\", align 1\n@PCI_RES_BUS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ofw_pci_adjust_resource], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ofw_pci_adjust_resource(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4, i32 noundef %5) #0 {\n  %7 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %8 = tail call i32 @rman_get_flags(ptr noundef %3) #2\n  %9 = tail call ptr @ofw_pci_get_rman(ptr noundef %7, i32 noundef %2, i32 noundef %8) #2\n  %10 = icmp eq ptr %9, null\n  br i1 %10, label %11, label %13\n\n11:                                               ; preds = %6\n  %12 = tail call i32 @bus_generic_adjust_resource(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4, i32 noundef %5) #2\n  br label %21\n\n13:                                               ; preds = %6\n  %14 = tail call i32 @rman_is_region_manager(ptr noundef %3, ptr noundef nonnull %9) #2\n  %15 = tail call i32 @KASSERT(i32 noundef %14, ptr noundef nonnull @.str) #2\n  %16 = load i32, ptr @RF_ACTIVE, align 4, !tbaa !5\n  %17 = tail call i32 @rman_get_flags(ptr noundef %3) #2\n  %18 = and i32 %17, %16\n  %19 = icmp eq i32 %18, 0\n  %20 = zext i1 %19 to i32\n  br label %21\n\n21:                                               ; preds = %13, %11\n  %22 = phi i32 [ %12, %11 ], [ %20, %13 ]\n  %23 = tail call i32 @rman_adjust_resource(ptr noundef %3, i32 noundef %4, i32 noundef %5) #2\n  ret i32 %23\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @ofw_pci_get_rman(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rman_get_flags(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_generic_adjust_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @KASSERT(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rman_is_region_manager(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rman_adjust_resource(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/sys/dev/ofw/extr_ofwpci.c_ofw_pci_adjust_resource.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [14 x i8] c\"rman mismatch\\00\", align 1\n@RF_ACTIVE = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [36 x i8] c\"active resources cannot be adjusted\\00\", align 1\n@PCI_RES_BUS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ofw_pci_adjust_resource], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ofw_pci_adjust_resource(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4, i32 noundef %5) #0 {\n  %7 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %8 = tail call i32 @rman_get_flags(ptr noundef %3) #2\n  %9 = tail call ptr @ofw_pci_get_rman(ptr noundef %7, i32 noundef %2, i32 noundef %8) #2\n  %10 = icmp eq ptr %9, null\n  br i1 %10, label %11, label %13\n\n11:                                               ; preds = %6\n  %12 = tail call i32 @bus_generic_adjust_resource(i32 noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4, i32 noundef %5) #2\n  br label %23\n\n13:                                               ; preds = %6\n  %14 = tail call i32 @rman_is_region_manager(ptr noundef %3, ptr noundef nonnull %9) #2\n  %15 = tail call i32 @KASSERT(i32 noundef %14, ptr noundef nonnull @.str) #2\n  %16 = tail call i32 @rman_get_flags(ptr noundef %3) #2\n  %17 = load i32, ptr @RF_ACTIVE, align 4, !tbaa !5\n  %18 = and i32 %17, %16\n  %19 = icmp eq i32 %18, 0\n  %20 = zext i1 %19 to i32\n  %21 = tail call i32 @KASSERT(i32 noundef %20, ptr noundef nonnull @.str.1) #2\n  %22 = tail call i32 @rman_adjust_resource(ptr noundef %3, i32 noundef %4, i32 noundef %5) #2\n  br label %23\n\n23:                                               ; preds = %13, %11\n  %24 = phi i32 [ %12, %11 ], [ %22, %13 ]\n  ret i32 %24\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @ofw_pci_get_rman(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rman_get_flags(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_generic_adjust_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @KASSERT(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rman_is_region_manager(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rman_adjust_resource(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lbaselib.c_luaB_corunning.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function luaB_corunning\n\t.type\tluaB_corunning,@function\nluaB_corunning:                         # @luaB_corunning\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tcallq\tlua_pushthread@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\tlua_pushnil@PLT\n.LBB0_2:\n\tmovl\t$1, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tluaB_corunning, .Lfunc_end0-luaB_corunning\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @luaB_corunning], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @luaB_corunning(ptr noundef %0) #0 {\n  %2 = tail call i64 @lua_pushthread(ptr noundef %0) #2\n  %3 = icmp eq i64 %2, 0\n  br i1 %3, label %6, label %4\n\n4:                                                ; preds = %1\n  %5 = tail call i32 @lua_pushnil(ptr noundef %0) #2\n  br label %6\n\n6:                                                ; preds = %4, %1\n  ret i32 1\n}\n\ndeclare i64 @lua_pushthread(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @lua_pushnil(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./redis/deps/lua/src/extr_lbaselib.c_luaB_corunning.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @luaB_corunning], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @luaB_corunning(ptr noundef %0) #0 {\n  %2 = tail call i64 @lua_pushthread(ptr noundef %0) #2\n  %3 = icmp eq i64 %2, 0\n  br i1 %3, label %6, label %4\n\n4:                                                ; preds = %1\n  %5 = tail call i32 @lua_pushnil(ptr noundef %0) #2\n  br label %6\n\n6:                                                ; preds = %4, %1\n  ret i32 1\n}\n\ndeclare i64 @lua_pushthread(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @lua_pushnil(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_config.c_hisax_cardmsg.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function hisax_cardmsg\n\t.type\thisax_cardmsg,@function\nhisax_cardmsg:                          # @hisax_cardmsg\n\t.cfi_startproc\n# %bb.0:\n\txorl\t%eax, %eax\n\tretq\n.Lfunc_end0:\n\t.size\thisax_cardmsg, .Lfunc_end0-hisax_cardmsg\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hisax_cardmsg], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @hisax_cardmsg(ptr nocapture readnone %0, i32 %1, i32 %2, i32 %3) #0 {\n  ret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/isdn/hisax/extr_config.c_hisax_cardmsg.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hisax_cardmsg], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @hisax_cardmsg(ptr nocapture readnone %0, i32 %1, ptr nocapture readnone %2) #0 {\n  ret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tcp.c_rds_tcp_conn_free.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function rds_tcp_conn_free\n\t.type\trds_tcp_conn_free,@function\nrds_tcp_conn_free:                      # @rds_tcp_conn_free\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovl\t$.L.str, %edi\n\tmovq\t%rbx, %rsi\n\tcallq\trdsdebug@PLT\n\tmovl\t$rds_tcp_conn_lock, %edi\n\tcallq\tspin_lock_irqsave@PLT\n\tcmpl\t$0, 4(%rbx)\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\tlist_del@PLT\n.LBB0_2:\n\tmovl\t$rds_tcp_conn_lock, %edi\n\tcallq\tspin_unlock_irqrestore@PLT\n\tmovl\trds_tcp_conn_slab(%rip), %edi\n\tmovq\t%rbx, %rsi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tkmem_cache_free@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\trds_tcp_conn_free, .Lfunc_end0-rds_tcp_conn_free\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"freeing tc %p\\n\"\n\t.size\t.L.str, 15\n\n\t.type\trds_tcp_conn_lock,@object       # @rds_tcp_conn_lock\n\t.bss\n\t.globl\trds_tcp_conn_lock\n\t.p2align\t2\nrds_tcp_conn_lock:\n\t.long\t0                               # 0x0\n\t.size\trds_tcp_conn_lock, 4\n\n\t.type\trds_tcp_conn_slab,@object       # @rds_tcp_conn_slab\n\t.globl\trds_tcp_conn_slab\n\t.p2align\t2\nrds_tcp_conn_slab:\n\t.long\t0                               # 0x0\n\t.size\trds_tcp_conn_slab, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rds_tcp_connection = type { i32, i32 }\n\n@.str = private unnamed_addr constant [15 x i8] c\"freeing tc %p\\0A\\00\", align 1\n@rds_tcp_conn_lock = dso_local global i32 0, align 4\n@rds_tcp_conn_slab = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rds_tcp_conn_free], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @rds_tcp_conn_free(ptr noundef %0) #0 {\n  %2 = tail call i32 @rdsdebug(ptr noundef nonnull @.str, ptr noundef %0) #2\n  %3 = tail call i32 @spin_lock_irqsave(ptr noundef nonnull @rds_tcp_conn_lock, i64 noundef undef) #2\n  %4 = getelementptr inbounds %struct.rds_tcp_connection, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @list_del(ptr noundef nonnull %0) #2\n  br label %9\n\n9:                                                ; preds = %7, %1\n  %10 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull @rds_tcp_conn_lock, i64 noundef undef) #2\n  %11 = load i32, ptr @rds_tcp_conn_slab, align 4, !tbaa !10\n  %12 = tail call i32 @kmem_cache_free(i32 noundef %11, ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @rdsdebug(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @list_del(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @kmem_cache_free(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"rds_tcp_connection\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>", "file:": "./linux/net/rds/extr_tcp.c_rds_tcp_conn_free.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rds_tcp_connection = type { i32, i32 }\n\n@.str = private unnamed_addr constant [15 x i8] c\"freeing tc %p\\0A\\00\", align 1\n@rds_tcp_conn_lock = dso_local global i32 0, align 4\n@rds_tcp_conn_slab = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rds_tcp_conn_free], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @rds_tcp_conn_free(ptr noundef %0) #0 {\n  %2 = tail call i32 @rdsdebug(ptr noundef nonnull @.str, ptr noundef %0) #2\n  %3 = tail call i32 @spin_lock_irqsave(ptr noundef nonnull @rds_tcp_conn_lock, i64 noundef undef) #2\n  %4 = getelementptr inbounds %struct.rds_tcp_connection, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @list_del(ptr noundef nonnull %0) #2\n  br label %9\n\n9:                                                ; preds = %7, %1\n  %10 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull @rds_tcp_conn_lock, i64 noundef undef) #2\n  %11 = load i32, ptr @rds_tcp_conn_slab, align 4, !tbaa !10\n  %12 = tail call i32 @kmem_cache_free(i32 noundef %11, ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @rdsdebug(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @list_del(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @kmem_cache_free(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"rds_tcp_connection\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_matrix.c_matrix_init_kb.ll\"\n\t.weak\tmatrix_init_kb                  # -- Begin function matrix_init_kb\n\t.p2align\t4, 0x90\n\t.type\tmatrix_init_kb,@function\nmatrix_init_kb:                         # @matrix_init_kb\n\t.cfi_startproc\n# %bb.0:\n\txorl\t%eax, %eax\n\tjmp\tmatrix_init_user@PLT            # TAILCALL\n.Lfunc_end0:\n\t.size\tmatrix_init_kb, .Lfunc_end0-matrix_init_kb\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine weak dso_local void @matrix_init_kb() local_unnamed_addr #0 {\n  %1 = tail call i32 (...) @matrix_init_user() #2\n  ret void\n}\n\ndeclare i32 @matrix_init_user(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./qmk_firmware/keyboards/duck/lightsaver/extr_matrix.c_matrix_init_kb.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine weak dso_local void @matrix_init_kb() local_unnamed_addr #0 {\n  %1 = tail call i32 (...) @matrix_init_user() #2\n  ret void\n}\n\ndeclare i32 @matrix_init_user(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_n810.c_n810_get_jack.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function n810_get_jack\n\t.type\tn810_get_jack,@function\nn810_get_jack:                          # @n810_get_jack\n\t.cfi_startproc\n# %bb.0:\n\tmovl\tn810_jack_func(%rip), %eax\n\tmovq\t(%rsi), %rcx\n\tmovl\t%eax, (%rcx)\n\txorl\t%eax, %eax\n\tretq\n.Lfunc_end0:\n\t.size\tn810_get_jack, .Lfunc_end0-n810_get_jack\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tn810_jack_func,@object          # @n810_jack_func\n\t.bss\n\t.globl\tn810_jack_func\n\t.p2align\t2\nn810_jack_func:\n\t.long\t0                               # 0x0\n\t.size\tn810_jack_func, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@n810_jack_func = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @n810_get_jack], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine internal i32 @n810_get_jack(ptr nocapture readnone %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i32, ptr @n810_jack_func, align 4, !tbaa !5\n  %4 = load ptr, ptr %1, align 8, !tbaa !9\n  store i32 %3, ptr %4, align 4, !tbaa !5\n  ret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !13, i64 0}\n!10 = !{!\"snd_ctl_elem_value\", !11, i64 0}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"TYPE_3__\", !13, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "file:": "./linux/sound/soc/ti/extr_n810.c_n810_get_jack.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@n810_jack_func = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @n810_get_jack], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine internal i32 @n810_get_jack(ptr nocapture readnone %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i32, ptr @n810_jack_func, align 4, !tbaa !5\n  %4 = load ptr, ptr %1, align 8, !tbaa !9\n  store i32 %3, ptr %4, align 4, !tbaa !5\n  ret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !13, i64 0}\n!10 = !{!\"snd_ctl_elem_value\", !11, i64 0}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"TYPE_3__\", !13, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_vm_resident.c_kern_allocation_update_size.ll\"\n\t.globl\tkern_allocation_update_size     # -- Begin function kern_allocation_update_size\n\t.p2align\t4, 0x90\n\t.type\tkern_allocation_update_size,@function\nkern_allocation_update_size:            # @kern_allocation_update_size\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\ttestq\t%rsi, %rsi\n\tjns\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rax\n\tnegq\t%rax\n\txorl\t%edi, %edi\n\tcmpq\t%rax, (%r14)\n\tsetge\t%dil\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdx\n\tcallq\tassertf@PLT\n.LBB0_2:\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\tOSAddAtomic64@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_4\n# %bb.3:\n\tcmpl\t$0, 16(%r14)\n\tje\t.LBB0_5\n.LBB0_4:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_5:\n\t.cfi_def_cfa_offset 32\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tvm_tag_alloc@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tkern_allocation_update_size, .Lfunc_end0-kern_allocation_update_size\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"name %p\"\n\t.size\t.L.str, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i32 }\n\n@.str = private unnamed_addr constant [8 x i8] c\"name %p\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @kern_allocation_update_size(ptr noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = icmp slt i64 %1, 0\n  br i1 %3, label %4, label %9\n\n4:                                                ; preds = %2\n  %5 = sub nsw i64 0, %1\n  %6 = load i64, ptr %0, align 8, !tbaa !5\n  %7 = icmp sge i64 %6, %5\n  %8 = zext i1 %7 to i32\n  tail call void @assertf(i32 noundef %8, ptr noundef nonnull @.str, ptr noundef nonnull %0) #2\n\n9:                                                ; preds = %4, %2\n  %10 = tail call i64 @OSAddAtomic64(i64 noundef %1, ptr noundef %0) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %12, label %16\n\n12:                                               ; preds = %9\n  %13 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %14 = load i32, ptr %13, align 8, !tbaa !11\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %16, label %18\n\n16:                                               ; preds = %12, %9\n  %17 = tail call i32 @vm_tag_alloc(ptr noundef %0) #2\n  br label %18\n\n18:                                               ; preds = %16, %12\n  ret void\n}\n\ndeclare void @assertf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @OSAddAtomic64(i64 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @vm_tag_alloc(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n</s><s>", "file:": "./darwin-xnu/osfmk/vm/extr_vm_resident.c_kern_allocation_update_size.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i64, i64, i32 }\n\n@.str = private unnamed_addr constant [8 x i8] c\"name %p\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @kern_allocation_update_size(ptr noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = icmp slt i64 %1, 0\n  br i1 %3, label %4, label %10\n\n4:                                                ; preds = %2\n  %5 = load i64, ptr %0, align 8, !tbaa !5\n  %6 = sub nsw i64 0, %1\n  %7 = icmp sge i64 %5, %6\n  %8 = zext i1 %7 to i32\n  %9 = tail call i32 @assertf(i32 noundef %8, ptr noundef nonnull @.str, ptr noundef nonnull %0) #2\n  br label %10\n\n10:                                               ; preds = %4, %2\n  %11 = tail call i64 @OSAddAtomic64(i64 noundef %1, ptr noundef %0) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %13, label %19\n\n13:                                               ; preds = %10\n  %14 = getelementptr inbounds %struct.TYPE_5__, ptr %0, i64 0, i32 2\n  %15 = load i32, ptr %14, align 8, !tbaa !11\n  %16 = icmp eq i32 %15, 0\n  br i1 %16, label %17, label %19\n\n17:                                               ; preds = %13\n  %18 = tail call i32 @vm_tag_alloc(ptr noundef nonnull %0) #2\n  br label %19\n\n19:                                               ; preds = %17, %13, %10\n  ret void\n}\n\ndeclare i32 @assertf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @OSAddAtomic64(i64 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @vm_tag_alloc(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_wl_init.c__glfwPlatformTerminate.ll\"\n\t.globl\t_glfwPlatformTerminate          # -- Begin function _glfwPlatformTerminate\n\t.p2align\t4, 0x90\n\t.type\t_glfwPlatformTerminate,@function\n_glfwPlatformTerminate:                 # @_glfwPlatformTerminate\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\txorl\t%eax, %eax\n\tcallq\t_glfwTerminateEGL@PLT\n\txorl\t%eax, %eax\n\tcallq\t_glfwTerminateJoysticksLinux@PLT\n\txorl\t%eax, %eax\n\tcallq\t_glfwTerminateThreadLocalStoragePOSIX@PLT\n\tmovq\t_glfw+24(%rip), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_2\n# %bb.1:\n\tcallq\twl_cursor_theme_destroy@PLT\n.LBB0_2:\n\tmovq\t_glfw+16(%rip), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_4\n# %bb.3:\n\tcallq\twl_surface_destroy@PLT\n.LBB0_4:\n\tmovq\t_glfw+8(%rip), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_6\n# %bb.5:\n\tcallq\twl_registry_destroy@PLT\n.LBB0_6:\n\tmovq\t_glfw(%rip), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_8\n# %bb.7:\n\tcallq\twl_display_flush@PLT\n\tmovq\t_glfw(%rip), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_8\n# %bb.9:\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tjmp\twl_display_disconnect@PLT       # TAILCALL\n.LBB0_8:\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\t_glfwPlatformTerminate, .Lfunc_end0-_glfwPlatformTerminate\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t_glfw,@object                   # @_glfw\n\t.bss\n\t.globl\t_glfw\n\t.p2align\t3\n_glfw:\n\t.zero\t32\n\t.size\t_glfw, 32\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { ptr, ptr, ptr, ptr }\n\n@_glfw = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @_glfwPlatformTerminate() local_unnamed_addr #0 {\n  %1 = tail call i32 (...) @_glfwTerminateEGL() #2\n  %2 = tail call i32 (...) @_glfwTerminateJoysticksLinux() #2\n  %3 = tail call i32 (...) @_glfwTerminateThreadLocalStoragePOSIX() #2\n  %4 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @_glfw, i64 0, i32 3), align 8, !tbaa !5\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %8, label %6\n\n6:                                                ; preds = %0\n  %7 = tail call i32 @wl_cursor_theme_destroy(ptr noundef nonnull %4) #2\n  br label %8\n\n8:                                                ; preds = %6, %0\n  %9 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @_glfw, i64 0, i32 2), align 8, !tbaa !10\n  %10 = icmp eq ptr %9, null\n  br i1 %10, label %13, label %11\n\n11:                                               ; preds = %8\n  %12 = tail call i32 @wl_surface_destroy(ptr noundef nonnull %9) #2\n  br label %13\n\n13:                                               ; preds = %11, %8\n  %14 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @_glfw, i64 0, i32 1), align 8, !tbaa !11\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %13\n  %17 = tail call i32 @wl_registry_destroy(ptr noundef nonnull %14) #2\n  br label %18\n\n18:                                               ; preds = %16, %13\n  %19 = load ptr, ptr @_glfw, align 8, !tbaa !12\n  %20 = icmp eq ptr %19, null\n  br i1 %20, label %25, label %21\n\n21:                                               ; preds = %18\n  %22 = tail call i32 @wl_display_flush(ptr noundef nonnull %19) #2\n  %23 = load ptr, ptr @_glfw, align 8, !tbaa !12\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %25, label %26\n\n25:                                               ; preds = %21, %18\n  ret void\n\n26:                                               ; preds = %21\n  %27 = tail call i32 @wl_display_disconnect(ptr noundef nonnull %23) #2\n  ret void\n}\n\ndeclare i32 @_glfwTerminateEGL(...) local_unnamed_addr #1\n\ndeclare i32 @_glfwTerminateJoysticksLinux(...) local_unnamed_addr #1\n\ndeclare i32 @_glfwTerminateThreadLocalStoragePOSIX(...) local_unnamed_addr #1\n\ndeclare i32 @wl_cursor_theme_destroy(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_surface_destroy(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_registry_destroy(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_display_flush(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_display_disconnect(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 24}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 16}\n!11 = !{!6, !7, i64 8}\n!12 = !{!6, !7, i64 0}\n</s><s>", "file:": "./Cinder/src/glfw/src/extr_wl_init.c__glfwPlatformTerminate.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { %struct.TYPE_3__ }\n%struct.TYPE_3__ = type { i64, i64, i64, i64 }\n\n@_glfw = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @_glfwPlatformTerminate() local_unnamed_addr #0 {\n  %1 = tail call i32 (...) @_glfwTerminateEGL() #2\n  %2 = tail call i32 (...) @_glfwTerminateJoysticksLinux() #2\n  %3 = tail call i32 (...) @_glfwTerminateThreadLocalStoragePOSIX() #2\n  %4 = load i64, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @_glfw, i64 0, i32 0, i32 3), align 8, !tbaa !5\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %8, label %6\n\n6:                                                ; preds = %0\n  %7 = tail call i32 @wl_cursor_theme_destroy(i64 noundef %4) #2\n  br label %8\n\n8:                                                ; preds = %6, %0\n  %9 = load i64, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @_glfw, i64 0, i32 0, i32 2), align 8, !tbaa !11\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %13, label %11\n\n11:                                               ; preds = %8\n  %12 = tail call i32 @wl_surface_destroy(i64 noundef %9) #2\n  br label %13\n\n13:                                               ; preds = %11, %8\n  %14 = load i64, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @_glfw, i64 0, i32 0, i32 1), align 8, !tbaa !12\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %13\n  %17 = tail call i32 @wl_registry_destroy(i64 noundef %14) #2\n  br label %18\n\n18:                                               ; preds = %16, %13\n  %19 = load i64, ptr @_glfw, align 8, !tbaa !13\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %27, label %21\n\n21:                                               ; preds = %18\n  %22 = tail call i32 @wl_display_flush(i64 noundef %19) #2\n  %23 = load i64, ptr @_glfw, align 8, !tbaa !13\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %27, label %25\n\n25:                                               ; preds = %21\n  %26 = tail call i32 @wl_display_disconnect(i64 noundef %23) #2\n  br label %27\n\n27:                                               ; preds = %18, %25, %21\n  ret void\n}\n\ndeclare i32 @_glfwTerminateEGL(...) local_unnamed_addr #1\n\ndeclare i32 @_glfwTerminateJoysticksLinux(...) local_unnamed_addr #1\n\ndeclare i32 @_glfwTerminateThreadLocalStoragePOSIX(...) local_unnamed_addr #1\n\ndeclare i32 @wl_cursor_theme_destroy(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_surface_destroy(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_registry_destroy(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_display_flush(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @wl_display_disconnect(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 24}\n!6 = !{!\"TYPE_4__\", !7, i64 0}\n!7 = !{!\"TYPE_3__\", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24}\n!8 = !{!\"long\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!6, !8, i64 16}\n!12 = !{!6, !8, i64 8}\n!13 = !{!6, !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sprayd.c_spray_service.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function spray_service\n\t.type\tspray_service,@function\nspray_service:                          # @spray_service\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rsi, %rbx\n\tmovl\t(%rdi), %eax\n\taddl\t$-128, %eax\n\tcmpl\t$3, %eax\n\tja\t.LBB0_4\n# %bb.1:\n\tjmpq\t*.LJTI0_0(,%rax,8)\n.LBB0_7:\n\tincl\tspray_service.scum+8(%rip)\n\tjmp\t.LBB0_8\n.LBB0_4:\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tsvcerr_noproc@PLT               # TAILCALL\n.LBB0_5:\n\t.cfi_def_cfa_offset 16\n\tmovl\t$spray_service.get, %edi\n\txorl\t%esi, %esi\n\tcallq\tgettimeofday@PLT\n\tmovl\t$spray_service.get, %edi\n\tmovl\t$spray_service.clear, %esi\n\tmovl\t$spray_service.get, %edx\n\tcallq\ttimersub@PLT\n\tmovq\tspray_service.get(%rip), %rax\n\tmovq\t%rax, spray_service.scum(%rip)\n\tmovl\txdr_spraycumul(%rip), %esi\n\tmovl\t$spray_service.scum, %edx\n\tmovq\t%rbx, %rdi\n\tcallq\tsvc_sendreply@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_6\n.LBB0_8:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_2:\n\t.cfi_def_cfa_offset 16\n\tmovl\t$0, spray_service.scum+8(%rip)\n\tmovl\t$spray_service.clear, %edi\n\txorl\t%esi, %esi\n\tcallq\tgettimeofday@PLT\n.LBB0_3:\n\tmovl\txdr_void(%rip), %esi\n\tmovq\t%rbx, %rdi\n\txorl\t%edx, %edx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tsvc_sendreply@PLT               # TAILCALL\n.LBB0_6:\n\t.cfi_def_cfa_offset 16\n\tmovq\t%rbx, %rdi\n\tcallq\tsvcerr_systemerr@PLT\n\tmovl\tLOG_WARNING(%rip), %edi\n\tmovl\t$.L.str, %esi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tsyslog@PLT                      # TAILCALL\n.Lfunc_end0:\n\t.size\tspray_service, .Lfunc_end0-spray_service\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_3\n                                        # -- End function\n\t.type\tspray_service.scum,@object      # @spray_service.scum\n\t.local\tspray_service.scum\n\t.comm\tspray_service.scum,12,8\n\t.type\tspray_service.clear,@object     # @spray_service.clear\n\t.local\tspray_service.clear\n\t.comm\tspray_service.clear,8,4\n\t.type\tspray_service.get,@object       # @spray_service.get\n\t.local\tspray_service.get\n\t.comm\tspray_service.get,8,8\n\t.type\txdr_void,@object                # @xdr_void\n\t.bss\n\t.globl\txdr_void\n\t.p2align\t3\nxdr_void:\n\t.quad\t0                               # 0x0\n\t.size\txdr_void, 8\n\n\t.type\txdr_spraycumul,@object          # @xdr_spraycumul\n\t.globl\txdr_spraycumul\n\t.p2align\t3\nxdr_spraycumul:\n\t.quad\t0                               # 0x0\n\t.size\txdr_spraycumul, 8\n\n\t.type\tLOG_WARNING,@object             # @LOG_WARNING\n\t.globl\tLOG_WARNING\n\t.p2align\t2\nLOG_WARNING:\n\t.long\t0                               # 0x0\n\t.size\tLOG_WARNING, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"bad svc_sendreply\"\n\t.size\t.L.str, 18\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i64, i32 }\n\n@spray_service.scum = internal global %struct.TYPE_3__ zeroinitializer, align 8\n@spray_service.clear = internal global i32 zeroinitializer, align 4\n@spray_service.get = internal global i32 0, align 4\n@xdr_void = dso_local local_unnamed_addr global i64 0, align 8\n@xdr_spraycumul = dso_local local_unnamed_addr global i64 0, align 8\n@LOG_WARNING = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [18 x i8] c\"bad svc_sendreply\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spray_service], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spray_service(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %3, label %21 [\n    i32 130, label %4\n    i32 129, label %10\n    i32 128, label %14\n    i32 131, label %18\n  ]\n\n4:                                                ; preds = %2\n  store i32 0, ptr getelementptr inbounds (%struct.TYPE_3__, ptr @spray_service.scum, i64 0, i32 1), align 8, !tbaa !10\n  %5 = tail call i32 @gettimeofday(ptr noundef nonnull @spray_service.clear, ptr noundef null) #2\n  %6 = load i64, ptr @xdr_void, align 8, !tbaa !13\n  %7 = tail call i32 @svc_sendreply(ptr noundef %1, i64 noundef %6, ptr noundef null) #2\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %9, label %23\n\n9:                                                ; preds = %4\n  %10 = tail call i32 @svcerr_systemerr(ptr noundef %1) #2\n  %11 = load i32, ptr @LOG_WARNING, align 4, !tbaa !14\n  %12 = tail call i32 @syslog(i32 noundef %11, ptr noundef nonnull @.str) #2\n  br label %23\n\n13:                                               ; preds = %2\n  %14 = tail call i32 @gettimeofday(ptr noundef nonnull @spray_service.get, ptr noundef null) #2\n  %15 = tail call i32 @timersub(ptr noundef nonnull @spray_service.get, ptr noundef nonnull @spray_service.clear, ptr noundef nonnull @spray_service.get) #2\n  %16 = load i64, ptr @spray_service.get, align 8, !tbaa !13\n  store i64 %16, ptr @spray_service.scum, align 8, !tbaa !15\n  %17 = load i64, ptr @xdr_spraycumul, align 8, !tbaa !13\n  %18 = tail call i32 @svc_sendreply(ptr noundef %1, i64 noundef %17, ptr noundef nonnull @spray_service.scum) #2\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %20, label %23\n\n20:                                               ; preds = %13\n  %21 = tail call i32 @svcerr_systemerr(ptr noundef %1) #2\n  %22 = load i32, ptr @LOG_WARNING, align 4, !tbaa !14\n  br label %23\n\n23:                                               ; preds = %13, %20, %9, %4\n  ret void\n}\n\ndeclare i32 @gettimeofday(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @svc_sendreply(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @svcerr_systemerr(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @syslog(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @timersub(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"TYPE_3__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!11, !12, i64 0}\n</s><s>", "file:": "./freebsd/libexec/rpc.sprayd/extr_sprayd.c_spray_service.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { %struct.TYPE_4__, i32 }\n%struct.TYPE_4__ = type { i32, i32 }\n%struct.timeval = type { i32, i32 }\n\n@spray_service.scum = internal global %struct.TYPE_5__ zeroinitializer, align 8\n@spray_service.clear = internal global %struct.timeval zeroinitializer, align 4\n@spray_service.get = internal global %struct.timeval zeroinitializer, align 8\n@xdr_void = dso_local local_unnamed_addr global i64 0, align 8\n@xdr_spraycumul = dso_local local_unnamed_addr global i64 0, align 8\n@LOG_WARNING = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [18 x i8] c\"bad svc_sendreply\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spray_service], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spray_service(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %3, label %21 [\n    i32 130, label %4\n    i32 131, label %6\n    i32 128, label %10\n    i32 129, label %13\n  ]\n\n4:                                                ; preds = %2\n  store i32 0, ptr getelementptr inbounds (%struct.TYPE_5__, ptr @spray_service.scum, i64 0, i32 1), align 8, !tbaa !10\n  %5 = tail call i32 @gettimeofday(ptr noundef nonnull @spray_service.clear, i32 noundef 0) #2\n  br label %6\n\n6:                                                ; preds = %2, %4\n  %7 = load i64, ptr @xdr_void, align 8, !tbaa !13\n  %8 = trunc i64 %7 to i32\n  %9 = tail call i32 @svc_sendreply(ptr noundef %1, i32 noundef %8, ptr noundef null) #2\n  br label %27\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr getelementptr inbounds (%struct.TYPE_5__, ptr @spray_service.scum, i64 0, i32 1), align 8, !tbaa !10\n  %12 = add nsw i32 %11, 1\n  store i32 %12, ptr getelementptr inbounds (%struct.TYPE_5__, ptr @spray_service.scum, i64 0, i32 1), align 8, !tbaa !10\n  br label %27\n\n13:                                               ; preds = %2\n  %14 = tail call i32 @gettimeofday(ptr noundef nonnull @spray_service.get, i32 noundef 0) #2\n  %15 = tail call i32 @timersub(ptr noundef nonnull @spray_service.get, ptr noundef nonnull @spray_service.clear, ptr noundef nonnull @spray_service.get) #2\n  %16 = load <2 x i32>, ptr @spray_service.get, align 8, !tbaa !15\n  store <2 x i32> %16, ptr @spray_service.scum, align 8, !tbaa !15\n  %17 = load i64, ptr @xdr_spraycumul, align 8, !tbaa !13\n  %18 = trunc i64 %17 to i32\n  %19 = tail call i32 @svc_sendreply(ptr noundef %1, i32 noundef %18, ptr noundef nonnull @spray_service.scum) #2\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %23, label %27\n\n21:                                               ; preds = %2\n  %22 = tail call i32 @svcerr_noproc(ptr noundef %1) #2\n  br label %27\n\n23:                                               ; preds = %13\n  %24 = tail call i32 @svcerr_systemerr(ptr noundef %1) #2\n  %25 = load i32, ptr @LOG_WARNING, align 4, !tbaa !15\n  %26 = tail call i32 @syslog(i32 noundef %25, ptr noundef nonnull @.str) #2\n  br label %27\n\n27:                                               ; preds = %6, %10, %21, %23, %13\n  ret void\n}\n\ndeclare i32 @gettimeofday(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @svc_sendreply(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @timersub(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @svcerr_noproc(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @svcerr_systemerr(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @syslog(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"svc_req\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"TYPE_5__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 4}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_isp.c_omap3isp_pipeline_cancel_stream.ll\"\n\t.globl\tomap3isp_pipeline_cancel_stream # -- Begin function omap3isp_pipeline_cancel_stream\n\t.p2align\t4, 0x90\n\t.type\tomap3isp_pipeline_cancel_stream,@function\nomap3isp_pipeline_cancel_stream:        # @omap3isp_pipeline_cancel_stream\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovq\t8(%rdi), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_2\n# %bb.1:\n\tcallq\tomap3isp_video_cancel_stream@PLT\n.LBB0_2:\n\tmovq\t(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_3\n# %bb.4:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tomap3isp_video_cancel_stream@PLT # TAILCALL\n.LBB0_3:\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tomap3isp_pipeline_cancel_stream, .Lfunc_end0-omap3isp_pipeline_cancel_stream\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.isp_pipeline = type { ptr, ptr }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @omap3isp_pipeline_cancel_stream(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.isp_pipeline, ptr %0, i64 0, i32 1\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @omap3isp_video_cancel_stream(ptr noundef nonnull %3) #2\n  br label %7\n\n7:                                                ; preds = %5, %1\n  %8 = load ptr, ptr %0, align 8, !tbaa !10\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i32 @omap3isp_video_cancel_stream(ptr noundef nonnull %8) #2\n  br label %12\n\n12:                                               ; preds = %10, %7\n  ret void\n}\n\ndeclare i32 @omap3isp_video_cancel_stream(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"isp_pipeline\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n</s><s>", "file:": "./linux/drivers/media/platform/omap3isp/extr_isp.c_omap3isp_pipeline_cancel_stream.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.isp_pipeline = type { i64, i64 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @omap3isp_pipeline_cancel_stream(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.isp_pipeline, ptr %0, i64 0, i32 1\n  %3 = load i64, ptr %2, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @omap3isp_video_cancel_stream(i64 noundef %3) #2\n  br label %7\n\n7:                                                ; preds = %5, %1\n  %8 = load i64, ptr %0, align 8, !tbaa !10\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i32 @omap3isp_video_cancel_stream(i64 noundef %8) #2\n  br label %12\n\n12:                                               ; preds = %10, %7\n  ret void\n}\n\ndeclare i32 @omap3isp_video_cancel_stream(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"isp_pipeline\", !7, i64 0, !7, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n"}]