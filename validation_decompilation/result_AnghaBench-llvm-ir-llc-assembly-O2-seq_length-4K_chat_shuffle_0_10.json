[{"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_main.c_main.ll\"\n\t.globl\tmain                            # -- Begin function main\n\t.p2align\t4, 0x90\n\t.type\tmain,@function\nmain:                                   # @main\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\t$.Lstr, %edi\n\tcallq\tputs@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmain, .Lfunc_end0-main\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.Lstr,@object                   # @str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.Lstr:\n\t.asciz\t\"hello world ! \"\n\t.size\t.Lstr, 15\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@str = private unnamed_addr constant [15 x i8] c\"hello world ! \\00\", align 1\n\n; Function Attrs: nofree nounwind uwtable\ndefine dso_local i32 @main() local_unnamed_addr #0 {\n  %1 = tail call i32 @puts(ptr noundef nonnull @str)\n  ret i32 0\n}\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #1\n\nattributes #0 = { nofree nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nofree nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/userland/helloworld/extr_main.c_main.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@str = private unnamed_addr constant [15 x i8] c\"hello world ! \\00\", align 1\n\n; Function Attrs: nofree nounwind uwtable\ndefine dso_local i32 @main(i32 noundef %0, ptr nocapture noundef readnone %1) local_unnamed_addr #0 {\n  %3 = tail call i32 @puts(ptr nonnull @str)\n  ret i32 0\n}\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #1\n\nattributes #0 = { nofree nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nofree nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sscanf.c_simple_strtoul.ll\"\n\t.globl\tsimple_strtoul                  # -- Begin function simple_strtoul\n\t.p2align\t4, 0x90\n\t.type\tsimple_strtoul,@function\nsimple_strtoul:                         # @simple_strtoul\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %r15\n\ttestl\t%edx, %edx\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\t%edx, %ebx\n\tjmp\t.LBB0_6\n.LBB0_2:\n\tmovl\t$10, %ebx\n\tcmpb\t$48, (%r15)\n\tjne\t.LBB0_6\n# %bb.3:\n\tleaq\t1(%r15), %r12\n\tmovl\t$8, %ebx\n\tcmpb\t$120, 1(%r15)\n\tjne\t.LBB0_4\n# %bb.5:\n\tmovsbl\t2(%r15), %edi\n\taddq\t$2, %r15\n\tcallq\tisxdigit@PLT\n\txorl\t%ecx, %ecx\n\ttestq\t%rax, %rax\n\tsetne\t%cl\n\tleal\t8(,%rcx,8), %ebx\n\tcmoveq\t%r12, %r15\n\tjmp\t.LBB0_6\n.LBB0_4:\n\tmovq\t%r12, %r15\n.LBB0_6:\n\tmovsbl\t(%r15), %edi\n\tcallq\tisxdigit@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_7\n# %bb.8:\n\tmovl\t%ebx, %r12d\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_9:                                # =>This Inner Loop Header: Depth=1\n\tmovsbl\t(%r15), %edi\n\tcallq\tisdigit@PLT\n\tmovq\t%rax, %rcx\n\tmovzbl\t(%r15), %eax\n\tmovq\t$-48, %rdx\n\ttestq\t%rcx, %rcx\n\tjne\t.LBB0_11\n# %bb.10:                               #   in Loop: Header=BB0_9 Depth=1\n\tmovsbl\t%al, %edi\n\tcallq\ttoupper@PLT\n\tmovq\t$-55, %rdx\n.LBB0_11:                               #   in Loop: Header=BB0_9 Depth=1\n\tmovsbq\t%al, %rax\n\taddq\t%rdx, %rax\n\tcmpq\t%r12, %rax\n\tjae\t.LBB0_13\n# %bb.12:                               #   in Loop: Header=BB0_9 Depth=1\n\timulq\t%r12, %rbx\n\taddq\t%rax, %rbx\n\tmovsbl\t1(%r15), %edi\n\tincq\t%r15\n\tcallq\tisxdigit@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_9\n.LBB0_13:\n\ttestq\t%r14, %r14\n\tje\t.LBB0_15\n.LBB0_14:\n\tmovq\t%r15, (%r14)\n.LBB0_15:\n\tmovq\t%rbx, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_7:\n\t.cfi_def_cfa_offset 48\n\txorl\t%ebx, %ebx\n\ttestq\t%r14, %r14\n\tjne\t.LBB0_14\n\tjmp\t.LBB0_15\n.Lfunc_end0:\n\t.size\tsimple_strtoul, .Lfunc_end0-simple_strtoul\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i64 @simple_strtoul(ptr noundef %0, ptr noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %3\n  %6 = load i8, ptr %0, align 1, !tbaa !5\n  switch i8 %6, label %21 [\n    i8 0, label %14\n  ]\n\n7:                                                ; preds = %5\n  %8 = icmp eq i32 %2, 0\n  %9 = select i1 %8, i64 10, i64 %2\n  %10 = load i8, ptr %0, align 1, !tbaa !5\n  %11 = icmp eq i8 %10, 48\n  br i1 %11, label %12, label %21\n\n12:                                               ; preds = %7\n  %13 = getelementptr inbounds i8, ptr %0, i64 1\n  br label %14\n\n14:                                               ; preds = %5, %12\n  %15 = phi ptr [ %13, %12 ], [ %0, %5 ]\n  %16 = phi i64 [ %9, %12 ], [ %2, %5 ]\n  %17 = load i8, ptr %15, align 1, !tbaa !5\n  %18 = tail call i64 @isxdigit(i8 noundef signext %17) #2\n  %19 = icmp ne i64 %18, 0\n  %20 = select i1 %19, i64 8, i64 %16\n  br label %21\n\n21:                                               ; preds = %14, %7, %5\n  %22 = phi i64 [ %20, %14 ], [ %9, %7 ], [ 0, %5 ]\n  %23 = phi ptr [ %15, %14 ], [ %0, %7 ], [ %0, %5 ]\n  %24 = load i8, ptr %23, align 1, !tbaa !5\n  %25 = tail call i64 @isdigit(i8 noundef signext %24) #2\n  %26 = icmp eq i64 %25, 0\n  br i1 %26, label %30, label %27\n\n27:                                               ; preds = %21\n  %28 = add i64 %22, -48\n  %29 = getelementptr inbounds i8, ptr %23, i64 1\n  br label %30\n\n30:                                               ; preds = %27, %21\n  %31 = phi i64 [ %28, %27 ], [ 0, %21 ]\n  %32 = phi ptr [ %29, %27 ], [ %23, %21 ]\n  %33 = load i8, ptr %32, align 1, !tbaa !5\n  %34 = tail call i64 @isxdigit(i8 noundef signext %33) #2\n  %35 = icmp ne i64 %34, 0\n  %36 = select i1 %35, i64 8, i64 %22\n  %37 = add i64 %36, -55\n  %38 = icmp ult i64 %31, %37\n  br i1 %38, label %39, label %43\n\n39:                                               ; preds = %30\n  %40 = mul i64 %31, %36\n  %41 = add i64 %40, %37\n  %42 = getelementptr inbounds i8, ptr %32, i64 1\n  br label %43\n\n43:                                               ; preds = %39, %30\n  %44 = phi i64 [ %41, %39 ], [ %31, %30 ]\n  %45 = icmp eq ptr %1, null\n  br i1 %45, label %48, label %46\n\n46:                                               ; preds = %43\n  store ptr %42, ptr %1, align 8, !tbaa !8\n  br label %48\n\n48:                                               ; preds = %46, %43\n  ret i64 %44\n}\n\ndeclare i64 @isxdigit(i8 noundef signext) local_unnamed_addr #1\n\ndeclare i64 @isdigit(i8 noundef signext) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = !{!9, !9, i64 0}\n!9 = !{!\"any pointer\", !6, i64 0}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/extr_sscanf.c_simple_strtoul.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i64 @simple_strtoul(ptr noundef %0, ptr noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %5, label %19\n\n5:                                                ; preds = %3\n  %6 = load i8, ptr %0, align 1, !tbaa !5\n  %7 = icmp eq i8 %6, 48\n  br i1 %7, label %8, label %19\n\n8:                                                ; preds = %5\n  %9 = getelementptr inbounds i8, ptr %0, i64 1\n  %10 = load i8, ptr %9, align 1, !tbaa !5\n  %11 = icmp eq i8 %10, 120\n  br i1 %11, label %12, label %19\n\n12:                                               ; preds = %8\n  %13 = getelementptr inbounds i8, ptr %0, i64 2\n  %14 = load i8, ptr %13, align 1, !tbaa !5\n  %15 = tail call i64 @isxdigit(i8 noundef signext %14) #2\n  %16 = icmp eq i64 %15, 0\n  %17 = select i1 %16, i32 8, i32 16\n  %18 = select i1 %16, ptr %9, ptr %13\n  br label %19\n\n19:                                               ; preds = %12, %5, %8, %3\n  %20 = phi i32 [ %2, %3 ], [ 8, %8 ], [ 10, %5 ], [ %17, %12 ]\n  %21 = phi ptr [ %0, %3 ], [ %9, %8 ], [ %0, %5 ], [ %18, %12 ]\n  %22 = load i8, ptr %21, align 1, !tbaa !5\n  %23 = tail call i64 @isxdigit(i8 noundef signext %22) #2\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %49, label %25\n\n25:                                               ; preds = %19\n  %26 = zext i32 %20 to i64\n  br label %27\n\n27:                                               ; preds = %25, %42\n  %28 = phi ptr [ %21, %25 ], [ %45, %42 ]\n  %29 = phi i64 [ 0, %25 ], [ %44, %42 ]\n  %30 = load i8, ptr %28, align 1, !tbaa !5\n  %31 = tail call i64 @isdigit(i8 noundef signext %30) #2\n  %32 = icmp eq i64 %31, 0\n  %33 = load i8, ptr %28, align 1, !tbaa !5\n  br i1 %32, label %34, label %36\n\n34:                                               ; preds = %27\n  %35 = tail call signext i8 @toupper(i8 noundef signext %33) #2\n  br label %36\n\n36:                                               ; preds = %27, %34\n  %37 = phi i8 [ %35, %34 ], [ %33, %27 ]\n  %38 = phi i64 [ -55, %34 ], [ -48, %27 ]\n  %39 = sext i8 %37 to i64\n  %40 = add nsw i64 %38, %39\n  %41 = icmp ult i64 %40, %26\n  br i1 %41, label %42, label %49\n\n42:                                               ; preds = %36\n  %43 = mul i64 %29, %26\n  %44 = add i64 %40, %43\n  %45 = getelementptr inbounds i8, ptr %28, i64 1\n  %46 = load i8, ptr %45, align 1, !tbaa !5\n  %47 = tail call i64 @isxdigit(i8 noundef signext %46) #2\n  %48 = icmp eq i64 %47, 0\n  br i1 %48, label %49, label %27, !llvm.loop !8\n\n49:                                               ; preds = %36, %42, %19\n  %50 = phi i64 [ 0, %19 ], [ %44, %42 ], [ %29, %36 ]\n  %51 = phi ptr [ %21, %19 ], [ %45, %42 ], [ %28, %36 ]\n  %52 = icmp eq ptr %1, null\n  br i1 %52, label %54, label %53\n\n53:                                               ; preds = %49\n  store ptr %51, ptr %1, align 8, !tbaa !10\n  br label %54\n\n54:                                               ; preds = %53, %49\n  ret i64 %50\n}\n\ndeclare i64 @isxdigit(i8 noundef signext) local_unnamed_addr #1\n\ndeclare i64 @isdigit(i8 noundef signext) local_unnamed_addr #1\n\ndeclare signext i8 @toupper(i8 noundef signext) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = distinct !{!8, !9}\n!9 = !{!\"llvm.loop.mustprogress\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_s_ldexp.c_ldexp.ll\"\n\t.section\t.rodata.cst16,\"aM\",@progbits,16\n\t.p2align\t4                               # -- Begin function ldexp\n.LCPI0_0:\n\t.quad\t0x7fffffffffffffff              # double NaN\n\t.quad\t0x7fffffffffffffff              # double NaN\n\t.section\t.rodata.cst8,\"aM\",@progbits,8\n\t.p2align\t3\n.LCPI0_1:\n\t.quad\t0x7ff0000000000000              # double +Inf\n\t.text\n\t.globl\tldexp\n\t.p2align\t4, 0x90\n\t.type\tldexp,@function\nldexp:                                  # @ldexp\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\txorpd\t%xmm1, %xmm1\n\tucomisd\t%xmm1, %xmm0\n\tjne\t.LBB0_1\n\tjnp\t.LBB0_5\n.LBB0_1:\n\tmovapd\t.LCPI0_0(%rip), %xmm1           # xmm1 = [NaN,NaN]\n\tandpd\t%xmm0, %xmm1\n\tucomisd\t.LCPI0_1(%rip), %xmm1\n\tje\t.LBB0_5\n# %bb.2:\n\tcallq\tscalbn@PLT\n\tmovapd\t.LCPI0_0(%rip), %xmm1           # xmm1 = [NaN,NaN]\n\tandpd\t%xmm0, %xmm1\n\tucomisd\t.LCPI0_1(%rip), %xmm1\n\tje\t.LBB0_4\n# %bb.3:\n\txorpd\t%xmm1, %xmm1\n\tucomisd\t%xmm1, %xmm0\n\tjne\t.LBB0_5\n\tjnp\t.LBB0_4\n.LBB0_5:\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_4:\n\t.cfi_def_cfa_offset 16\n\tmovl\tERANGE(%rip), %eax\n\tmovl\t%eax, errno(%rip)\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tldexp, .Lfunc_end0-ldexp\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tERANGE,@object                  # @ERANGE\n\t.bss\n\t.globl\tERANGE\n\t.p2align\t2\nERANGE:\n\t.long\t0                               # 0x0\n\t.size\tERANGE, 4\n\n\t.type\terrno,@object                   # @errno\n\t.globl\terrno\n\t.p2align\t2\nerrno:\n\t.long\t0                               # 0x0\n\t.size\terrno, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ERANGE = dso_local local_unnamed_addr global i32 0, align 4\n@errno = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local double @ldexp(double noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = fcmp une double %0, 0.000000e+00\n  %4 = fcmp ogt double %0, -0.000000e+00\n  %5 = or i1 %4, %3\n  %6 = fcmp oeq double %0, 0.000000e+00\n  %7 = select i1 %5, i1 %6, i1 false\n  br i1 %7, label %8, label %11\n\n8:                                                ; preds = %2\n  %9 = tail call double @scalbn(double noundef %0, i32 noundef %1) #3\n  %10 = fcmp oeq double %9, 0.000000e+00\n  br i1 %10, label %11, label %13\n\n11:                                               ; preds = %8, %2\n  %12 = load i32, ptr @ERANGE, align 4, !tbaa !5\n  store i32 %12, ptr @errno, align 4, !tbaa !5\n  br label %15\n\n13:                                               ; preds = %8\n  %14 = fcmp oeq double %0, 0.000000e+00\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %13, %11\n  ret double %9\n\n16:                                               ; preds = %17\n  ret double %18\n\n17:                                               ; preds = %13\n  %18 = tail call double @scalbn(double noundef %0, i32 noundef %1) #3\n  %19 = fcmp oeq double %18, 0.000000e+00\n  br i1 %19, label %16, label %20\n\n20:                                               ; preds = %17\n  %21 = load i32, ptr @ERANGE, align 4, !tbaa !5\n  store i32 %21, ptr @errno, align 4, !tbaa !5\n  ret double %18\n}\n\n; Function Attrs: mustprogress nofree nounwind willreturn\ndeclare double @scalbn(double noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nofree nounwind willreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/math/extr_s_ldexp.c_ldexp.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ERANGE = dso_local local_unnamed_addr global i32 0, align 4\n@errno = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local double @ldexp(double noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call double @llvm.fabs.f64(double %0) #3\n  %4 = fcmp ueq double %3, 0x7FF0000000000000\n  %5 = fcmp oeq double %0, 0.000000e+00\n  %6 = or i1 %5, %4\n  br i1 %6, label %15, label %7\n\n7:                                                ; preds = %2\n  %8 = tail call double @scalbn(double noundef %0, i32 noundef %1) #4\n  %9 = tail call double @llvm.fabs.f64(double %8) #3\n  %10 = fcmp ueq double %9, 0x7FF0000000000000\n  %11 = fcmp oeq double %8, 0.000000e+00\n  %12 = select i1 %10, i1 true, i1 %11\n  br i1 %12, label %13, label %15\n\n13:                                               ; preds = %7\n  %14 = load i32, ptr @ERANGE, align 4, !tbaa !5\n  store i32 %14, ptr @errno, align 4, !tbaa !5\n  br label %15\n\n15:                                               ; preds = %13, %7, %2\n  %16 = phi double [ %0, %2 ], [ %8, %7 ], [ %8, %13 ]\n  ret double %16\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare double @llvm.fabs.f64(double) #1\n\n; Function Attrs: nounwind\ndeclare double @scalbn(double noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #2 = { nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { readnone }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_s_modf.c_modf.ll\"\n\t.globl\tmodf                            # -- Begin function modf\n\t.p2align\t4, 0x90\n\t.type\tmodf,@function\nmodf:                                   # @modf\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovsd\t%xmm0, 8(%rsp)                  # 8-byte Spill\n\tcallq\tEXTRACT_WORDS@PLT\n\tmovsd\t(%rbx), %xmm0                   # xmm0 = mem[0],zero\n\txorl\t%edi, %edi\n\txorl\t%esi, %esi\n\tcallq\tINSERT_WORDS@PLT\n\tmovsd\t8(%rsp), %xmm0                  # 8-byte Reload\n                                        # xmm0 = mem[0],zero\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmodf, .Lfunc_end0-modf\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tone,@object                     # @one\n\t.bss\n\t.globl\tone\n\t.p2align\t3\none:\n\t.quad\t0x0000000000000000              # double 0\n\t.size\tone, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@one = dso_local double 0.000000e+00, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local double @modf(double noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #0 {\n  %3 = tail call i32 @EXTRACT_WORDS(double noundef %0, i32 noundef 0, i32 noundef 0) #3\n  %4 = load double, ptr %1, align 8, !tbaa !5\n  %5 = tail call double @INSERT_WORDS(double noundef %4, i32 noundef 0, i32 noundef 0) #3\n  ret double %5\n}\n\ndeclare i32 @EXTRACT_WORDS(double noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare double @INSERT_WORDS(double noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"double\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/math/extr_s_modf.c_modf.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@one = dso_local local_unnamed_addr global double 0.000000e+00, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local double @modf(double noundef returned %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  %3 = tail call i32 @EXTRACT_WORDS(i32 noundef undef, i32 noundef undef, double noundef %0) #2\n  %4 = load double, ptr %1, align 8, !tbaa !5\n  %5 = tail call i32 @INSERT_WORDS(double noundef %4, i32 noundef 0, i32 noundef 0) #2\n  ret double %0\n}\n\ndeclare i32 @EXTRACT_WORDS(i32 noundef, i32 noundef, double noundef) local_unnamed_addr #1\n\ndeclare i32 @INSERT_WORDS(double noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"double\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_start.c__start.ll\"\n\t.globl\t_start                          # -- Begin function _start\n\t.p2align\t4, 0x90\n\t.type\t_start,@function\n_start:                                 # @_start\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovl\t%edi, %ebp\n\tmovl\t$.L.str, %esi\n\txorl\t%edi, %edi\n\tcallq\tfdopen@PLT\n\tmovq\t%rax, stdout(%rip)\n\tmovl\t$.L.str, %esi\n\tmovl\t$1, %edi\n\tcallq\tfdopen@PLT\n\tmovq\t%rax, stdin(%rip)\n\tmovl\t$.L.str, %esi\n\tmovl\t$2, %edi\n\tcallq\tfdopen@PLT\n\tmovq\t%rax, stderr(%rip)\n\tmovq\t$0, environ(%rip)\n\tmovq\t$0, __environ_allocated(%rip)\n\tmovl\t%ebp, %edi\n\tmovq\t%rbx, %rsi\n\tcallq\tmain@PLT\n\tmovl\t%eax, %edi\n\tcallq\texit@PLT\n.Lfunc_end0:\n\t.size\t_start, .Lfunc_end0-_start\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"rw\"\n\t.size\t.L.str, 3\n\n\t.type\tstdout,@object                  # @stdout\n\t.bss\n\t.globl\tstdout\n\t.p2align\t3\nstdout:\n\t.quad\t0\n\t.size\tstdout, 8\n\n\t.type\tstdin,@object                   # @stdin\n\t.globl\tstdin\n\t.p2align\t3\nstdin:\n\t.quad\t0\n\t.size\tstdin, 8\n\n\t.type\tstderr,@object                  # @stderr\n\t.globl\tstderr\n\t.p2align\t3\nstderr:\n\t.quad\t0\n\t.size\tstderr, 8\n\n\t.type\tenviron,@object                 # @environ\n\t.globl\tenviron\n\t.p2align\t3\nenviron:\n\t.quad\t0                               # 0x0\n\t.size\tenviron, 8\n\n\t.type\t__environ_allocated,@object     # @__environ_allocated\n\t.globl\t__environ_allocated\n\t.p2align\t3\n__environ_allocated:\n\t.quad\t0                               # 0x0\n\t.size\t__environ_allocated, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [3 x i8] c\"rw\\00\", align 1\n@stdout = dso_local local_unnamed_addr global ptr null, align 8\n@stdin = dso_local local_unnamed_addr global ptr null, align 8\n@stderr = dso_local local_unnamed_addr global ptr null, align 8\n@environ = dso_local local_unnamed_addr global i64 0, align 8\n@__environ_allocated = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @_start(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @fdopen(i32 noundef 0, ptr noundef nonnull @.str) #3\n  store ptr %3, ptr @stdout, align 8, !tbaa !5\n  %4 = tail call ptr @fdopen(i32 noundef 1, ptr noundef nonnull @.str) #3\n  store ptr %4, ptr @stdin, align 8, !tbaa !5\n  %5 = tail call ptr @fdopen(i32 noundef 2, ptr noundef nonnull @.str) #3\n  store ptr %5, ptr @stderr, align 8, !tbaa !5\n  store i64 0, ptr @environ, align 8, !tbaa !9\n  store i64 0, ptr @__environ_allocated, align 8, !tbaa !9\n  %6 = tail call i32 @main(i32 noundef %0, ptr noundef %1) #3\n  %7 = tail call i32 @exit(i32 noundef %6) #4\n  unreachable\n}\n\ndeclare ptr @fdopen(i32 noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @exit(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @main(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { noreturn nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/extr_start.c__start.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [3 x i8] c\"rw\\00\", align 1\n@stdout = dso_local local_unnamed_addr global ptr null, align 8\n@stdin = dso_local local_unnamed_addr global ptr null, align 8\n@stderr = dso_local local_unnamed_addr global ptr null, align 8\n@environ = dso_local local_unnamed_addr global i64 0, align 8\n@__environ_allocated = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: noreturn nounwind uwtable\ndefine dso_local void @_start(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @fdopen(i32 noundef 0, ptr noundef nonnull @.str)\n  store ptr %3, ptr @stdout, align 8, !tbaa !5\n  %4 = tail call ptr @fdopen(i32 noundef 1, ptr noundef nonnull @.str)\n  store ptr %4, ptr @stdin, align 8, !tbaa !5\n  %5 = tail call ptr @fdopen(i32 noundef 2, ptr noundef nonnull @.str)\n  store ptr %5, ptr @stderr, align 8, !tbaa !5\n  store i64 0, ptr @environ, align 8, !tbaa !9\n  store i64 0, ptr @__environ_allocated, align 8, !tbaa !9\n  %6 = tail call i32 @main(i32 noundef %0, ptr noundef %1) #4\n  %7 = tail call i32 @exit(i32 noundef %6) #5\n  unreachable\n}\n\n; Function Attrs: nofree nounwind\ndeclare noalias noundef ptr @fdopen(i32 noundef, ptr nocapture noundef readonly) local_unnamed_addr #1\n\ndeclare i32 @main(i32 noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: noreturn\ndeclare i32 @exit(i32 noundef) local_unnamed_addr #3\n\nattributes #0 = { noreturn nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\nattributes #5 = { noreturn nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_inet_aton.c_inet_aton.ll\"\n\t.globl\tinet_aton                       # -- Begin function inet_aton\n\t.p2align\t4, 0x90\n\t.type\tinet_aton,@function\ninet_aton:                              # @inet_aton\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %r14\n\txorl\t%r15d, %r15d\n\tmovl\t$24, %ebp\n\tleaq\t8(%rsp), %r12\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_1:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rdi, 8(%rsp)\n\tmovq\t%r12, %rsi\n\txorl\t%edx, %edx\n\tcallq\tstrtoul@PLT\n\tmovq\t8(%rsp), %rdi\n\tmovzbl\t(%rdi), %ecx\n\tcmpl\t$46, %ecx\n\tjne\t.LBB0_2\n# %bb.5:                                #   in Loop: Header=BB0_1 Depth=1\n\tcmpq\t$255, %rax\n\tjg\t.LBB0_4\n# %bb.6:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovl\t%ebp, %ecx\n\tshlq\t%cl, %rax\n\torl\t%eax, %ebx\n\tleal\t-8(%rbp), %eax\n\ttestl\t%ebp, %ebp\n\tcmovlel\t%ebp, %eax\n\tincq\t%rdi\n\tmovl\t%eax, %ebp\n\tjmp\t.LBB0_1\n.LBB0_2:\n\ttestl\t%ecx, %ecx\n\tjne\t.LBB0_4\n# %bb.3:\n\torl\t%eax, %ebx\n\tmovl\t%ebx, %edi\n\tcallq\thtonl@PLT\n\tmovl\t%eax, (%r14)\n\tmovl\t$1, %r15d\n.LBB0_4:\n\tmovl\t%r15d, %eax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tinet_aton, .Lfunc_end0-inet_aton\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @inet_aton(ptr noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #0 {\n  %3 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #3\n  store ptr %0, ptr %3, align 8, !tbaa !5\n  br label %4\n\n4:                                                ; preds = %2, %13\n  %5 = phi ptr [ %14, %13 ], [ %0, %2 ]\n  %6 = phi i32 [ %15, %13 ], [ 0, %2 ]\n  %7 = phi i32 [ %16, %13 ], [ 24, %2 ]\n  %8 = call i64 @strtoul(ptr noundef %5, ptr noundef nonnull %3, i32 noundef 0) #3\n  %9 = load ptr, ptr %3, align 8, !tbaa !5\n  %10 = load i8, ptr %9, align 1, !tbaa !9\n  switch i8 %10, label %13 [\n    i8 0, label %11\n    i8 46, label %12\n  ]\n\n11:                                               ; preds = %4\n  %12 = trunc i64 %8 to i32\n  %13 = or i32 %12, %6\n  call i32 @htonl(i32 noundef %13) #3\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %17\n\n12:                                               ; preds = %4\n  %14 = getelementptr inbounds i8, ptr %9, i64 1\n  %15 = trunc i64 %8 to i32\n  %16 = add nsw i32 %7, -8\n  %17 = icmp slt i32 %7, 1\n  %18 = select i1 %17, i32 %7, i32 %16\n  %19 = shl i32 %15, %18\n  %20 = or i32 %19, %6\n  store ptr %14, ptr %3, align 8, !tbaa !5\n  br label %4, !llvm.loop !12\n\n13:                                               ; preds = %4\n  call void @llvm.assume(i1 false)\n  br label %17\n\n17:                                               ; preds = %12, %13, %11\n  %18 = phi i32 [ 1, %11 ], [ 0, %13 ], [ 0, %12 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #3\n  ret i32 %18\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @strtoul(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @htonl(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @llvm.assume(i1 noundef) #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/network/extr_inet_aton.c_inet_aton.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nofree nounwind uwtable\ndefine dso_local i32 @inet_aton(ptr noundef %0, ptr nocapture noundef writeonly %1) local_unnamed_addr #0 {\n  %3 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  br label %4\n\n4:                                                ; preds = %13, %2\n  %5 = phi ptr [ %0, %2 ], [ %21, %13 ]\n  %6 = phi i32 [ 24, %2 ], [ %20, %13 ]\n  %7 = phi i32 [ 0, %2 ], [ %17, %13 ]\n  store ptr %5, ptr %3, align 8, !tbaa !5\n  %8 = call i64 @strtoul(ptr noundef %5, ptr noundef nonnull %3, i32 noundef 0)\n  %9 = load ptr, ptr %3, align 8, !tbaa !5\n  %10 = load i8, ptr %9, align 1, !tbaa !9\n  switch i8 %10, label %26 [\n    i8 0, label %22\n    i8 46, label %11\n  ]\n\n11:                                               ; preds = %4\n  %12 = icmp sgt i64 %8, 255\n  br i1 %12, label %26, label %13\n\n13:                                               ; preds = %11\n  %14 = zext i32 %6 to i64\n  %15 = shl i64 %8, %14\n  %16 = trunc i64 %15 to i32\n  %17 = or i32 %7, %16\n  %18 = icmp sgt i32 %6, 0\n  %19 = add nsw i32 %6, -8\n  %20 = select i1 %18, i32 %19, i32 %6\n  %21 = getelementptr inbounds i8, ptr %9, i64 1\n  br label %4\n\n22:                                               ; preds = %4\n  %23 = trunc i64 %8 to i32\n  %24 = or i32 %7, %23\n  %25 = tail call i32 @htonl(i32 noundef %24)\n  store i32 %25, ptr %1, align 4, !tbaa !10\n  br label %26\n\n26:                                               ; preds = %4, %11, %22\n  %27 = phi i32 [ 1, %22 ], [ 0, %11 ], [ 0, %4 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  ret i32 %27\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: mustprogress nofree nounwind willreturn\ndeclare i64 @strtoul(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: nofree nosync nounwind readnone\ndeclare i32 @htonl(i32 noundef) local_unnamed_addr #3\n\nattributes #0 = { nofree nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { mustprogress nofree nounwind willreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nofree nosync nounwind readnone \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"in_addr\", !12, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_inet_ntoa.c_inet_ntoa.ll\"\n\t.globl\tinet_ntoa                       # -- Begin function inet_ntoa\n\t.p2align\t4, 0x90\n\t.type\tinet_ntoa,@function\ninet_ntoa:                              # @inet_ntoa\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\t%edi, %ecx\n\tmovl\t$inet_ntoa.__inet_ntoa_result, %edi\n\tmovl\t$.L.str, %edx\n\tmovl\t$18, %esi\n\tcallq\tsnprintf@PLT\n\tmovl\t$inet_ntoa.__inet_ntoa_result, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tinet_ntoa, .Lfunc_end0-inet_ntoa\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tinet_ntoa.__inet_ntoa_result,@object # @inet_ntoa.__inet_ntoa_result\n\t.local\tinet_ntoa.__inet_ntoa_result\n\t.comm\tinet_ntoa.__inet_ntoa_result,18,16\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%d.%d.%d.%d\"\n\t.size\t.L.str, 12\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@inet_ntoa.__inet_ntoa_result = internal global [18 x i8] zeroinitializer, align 16\n@.str = private unnamed_addr constant [12 x i8] c\"%d.%d.%d.%d\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local nonnull ptr @inet_ntoa(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @snprintf(ptr noundef nonnull @inet_ntoa.__inet_ntoa_result, i32 noundef 18, ptr noundef nonnull @.str, i32 noundef %0) #2\n  ret ptr @inet_ntoa.__inet_ntoa_result\n}\n\ndeclare i32 @snprintf(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/network/extr_inet_ntoa.c_inet_ntoa.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@inet_ntoa.__inet_ntoa_result = internal global [18 x i8] zeroinitializer, align 16\n@.str = private unnamed_addr constant [12 x i8] c\"%d.%d.%d.%d\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local nonnull ptr @inet_ntoa(i32 %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @snprintf(ptr noundef nonnull @inet_ntoa.__inet_ntoa_result, i32 noundef 18, ptr noundef nonnull @.str, i32 noundef %0, i32 noundef poison, i32 noundef poison, i32 noundef poison) #2\n  ret ptr @inet_ntoa.__inet_ntoa_result\n}\n\ndeclare i32 @snprintf(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_srand.c_srand.ll\"\n\t.globl\tsrand                           # -- Begin function srand\n\t.p2align\t4, 0x90\n\t.type\tsrand,@function\nsrand:                                  # @srand\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t%edi, _seed2(%rip)\n\tretq\n.Lfunc_end0:\n\t.size\tsrand, .Lfunc_end0-srand\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t_seed2,@object                  # @_seed2\n\t.bss\n\t.globl\t_seed2\n\t.p2align\t2\n_seed2:\n\t.long\t0                               # 0x0\n\t.size\t_seed2, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_seed2 = dso_local global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable\ndefine dso_local void @srand(i32 noundef %0) local_unnamed_addr #0 {\n  store i32 %0, ptr @_seed2, align 4, !tbaa !5\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/stdlib/extr_srand.c_srand.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_seed2 = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable\ndefine dso_local void @srand(i32 noundef %0) local_unnamed_addr #0 {\n  store i32 %0, ptr @_seed2, align 4, !tbaa !5\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_malloc.c_free.ll\"\n\t.globl\tfree                            # -- Begin function free\n\t.p2align\t4, 0x90\n\t.type\tfree,@function\nfree:                                   # @free\n\t.cfi_startproc\n# %bb.0:\n\tmovq\te_heap(%rip), %rax\n\tmovslq\t-16(%rdi), %rcx\n\tleaq\t(%rdi,%rcx), %rsi\n\taddq\t$-16, %rsi\n\tcmpq\t%rax, %rsi\n\tjae\t.LBB0_4\n# %bb.1:                                # %.preheader\n\tleaq\t-16(%rdi), %rdx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tcmpq\t$0, 8(%rsi)\n\tjne\t.LBB0_4\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovslq\t(%rsi), %rsi\n\tmovslq\t%ecx, %rcx\n\taddq\t%rsi, %rcx\n\tmovl\t%ecx, (%rdx)\n\tmovq\t%rcx, %rsi\n\taddq\t%rdx, %rsi\n\tcmpq\t%rax, %rsi\n\tjb\t.LBB0_2\n.LBB0_4:\n\tmovq\t$0, -8(%rdi)\n\tretq\n.Lfunc_end0:\n\t.size\tfree, .Lfunc_end0-free\n\t.cfi_endproc\n                                        # -- End function\n\t.type\te_heap,@object                  # @e_heap\n\t.bss\n\t.globl\te_heap\n\t.p2align\t3\ne_heap:\n\t.quad\t0                               # 0x0\n\t.size\te_heap, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i64 }\n\n@e_heap = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine dso_local void @free(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load i64, ptr @e_heap, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 -1\n  %4 = load i32, ptr %3, align 8, !tbaa !9\n  %5 = sext i32 %4 to i64\n  %6 = sub nsw i64 %5, 16\n  %7 = icmp ult i64 %6, %2\n  br i1 %7, label %8, label %19\n\n8:                                                ; preds = %1\n  %9 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 -1, i32 1\n  br label %10\n\n10:                                               ; preds = %8, %16\n  %11 = phi i64 [ %6, %8 ], [ %17, %16 ]\n  %12 = phi ptr [ %9, %8 ], [ %18, %16 ]\n  %13 = load i64, ptr %12, align 8, !tbaa !12\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %19\n\n15:                                               ; preds = %10\n  %16 = add nsw i64 %11, %2\n  store i64 %16, ptr %3, align 8, !tbaa !9\n  %17 = add nsw i64 %16, -16\n  %18 = getelementptr inbounds %struct.TYPE_4__, ptr %17\n  %19 = icmp ult i64 %17, %2\n  br i1 %19, label %10, label %20, !llvm.loop !13\n\n20:                                               ; preds = %15\n  store i64 0, ptr %9, align 8, !tbaa !12\n  ret void\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_4__\", !11, i64 0, !6, i64 8}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!10, !6, i64 8}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/stdlib/extr_malloc.c_free.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.malloc_header = type { i32, i64 }\n\n@e_heap = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine dso_local void @free(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr i8, ptr %0, i64 -16\n  %3 = load i64, ptr @e_heap, align 8, !tbaa !5\n  %4 = inttoptr i64 %3 to ptr\n  %5 = load i32, ptr %2, align 8, !tbaa !9\n  %6 = sext i32 %5 to i64\n  %7 = getelementptr inbounds i8, ptr %2, i64 %6\n  %8 = icmp ult ptr %7, %4\n  br i1 %8, label %9, label %21\n\n9:                                                ; preds = %1, %15\n  %10 = phi ptr [ %19, %15 ], [ %7, %1 ]\n  %11 = phi i32 [ %17, %15 ], [ %5, %1 ]\n  %12 = getelementptr inbounds %struct.malloc_header, ptr %10, i64 0, i32 1\n  %13 = load i64, ptr %12, align 8, !tbaa !12\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %9\n  %16 = load i32, ptr %10, align 8, !tbaa !9\n  %17 = add nsw i32 %16, %11\n  store i32 %17, ptr %2, align 8, !tbaa !9\n  %18 = sext i32 %17 to i64\n  %19 = getelementptr inbounds i8, ptr %2, i64 %18\n  %20 = icmp ult ptr %19, %4\n  br i1 %20, label %9, label %21, !llvm.loop !13\n\n21:                                               ; preds = %9, %15, %1\n  %22 = getelementptr i8, ptr %0, i64 -8\n  store i64 0, ptr %22, align 8, !tbaa !12\n  ret void\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"malloc_header\", !11, i64 0, !6, i64 8}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!10, !6, i64 8}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_random.c_random.ll\"\n\t.globl\trandom                          # -- Begin function random\n\t.p2align\t4, 0x90\n\t.type\trandom,@function\nrandom:                                 # @random\n\t.cfi_startproc\n# %bb.0:\n\timull\t$1103515245, _seed(%rip), %eax  # imm = 0x41C64E6D\n\taddl\t$12345, %eax                    # imm = 0x3039\n\timull\t$1103515245, %eax, %ecx         # imm = 0x41C64E6D\n\taddl\t$12345, %ecx                    # imm = 0x3039\n\tshrl\t$6, %eax\n\tandl\t$2096128, %eax                  # imm = 0x1FFC00\n\timull\t$1103515245, %ecx, %edx         # imm = 0x41C64E6D\n\tshrl\t$16, %ecx\n\tandl\t$1023, %ecx                     # imm = 0x3FF\n\torl\t%eax, %ecx\n\taddl\t$12345, %edx                    # imm = 0x3039\n\tshll\t$10, %ecx\n\tmovl\t%edx, _seed(%rip)\n\tmovl\t%edx, %eax\n\tshrl\t$16, %eax\n\tandl\t$1023, %eax                     # imm = 0x3FF\n\torl\t%ecx, %eax\n\tretq\n.Lfunc_end0:\n\t.size\trandom, .Lfunc_end0-random\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t_seed,@object                   # @_seed\n\t.bss\n\t.globl\t_seed\n\t.p2align\t2\n_seed:\n\t.long\t0                               # 0x0\n\t.size\t_seed, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_seed = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local i32 @random() local_unnamed_addr #0 {\n  %1 = load i32, ptr @_seed, align 4, !tbaa !5\n  %2 = mul nsw i32 %1, 1103515245\n  %3 = add nsw i32 %2, 12345\n  %4 = mul nsw i32 %3, 1103515245\n  %5 = add nsw i32 %4, 12345\n  %6 = lshr i32 %5, 6\n  %7 = and i32 %6, 2096128\n  %8 = lshr i32 %5, 16\n  %9 = and i32 %8, 1023\n  %10 = or i32 %7, %9\n  %11 = add nsw i32 %4, 12345\n  %12 = shl i32 %10, 10\n  store i32 %11, ptr @_seed, align 4, !tbaa !5\n  %13 = lshr i32 %11, 16\n  %14 = and i32 %13, 1023\n  %15 = or i32 %12, %14\n  ret i32 %15\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./How-to-Make-a-Computer-Operating-System/src/sdk/src/libc/src/stdlib/extr_random.c_random.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_seed = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local i64 @random() local_unnamed_addr #0 {\n  %1 = load i32, ptr @_seed, align 4, !tbaa !5\n  %2 = mul i32 %1, 1103515245\n  %3 = add i32 %2, 12345\n  %4 = mul i32 %3, 1103515245\n  %5 = add i32 %4, 12345\n  %6 = lshr i32 %3, 6\n  %7 = and i32 %6, 2096128\n  %8 = lshr i32 %5, 16\n  %9 = and i32 %8, 1023\n  %10 = or i32 %9, %7\n  %11 = mul i32 %5, 1103515245\n  %12 = add i32 %11, 12345\n  %13 = shl nuw nsw i32 %10, 10\n  %14 = lshr i32 %12, 16\n  %15 = and i32 %14, 1023\n  %16 = or i32 %13, %15\n  %17 = zext i32 %16 to i64\n  store i32 %12, ptr @_seed, align 4, !tbaa !5\n  ret i64 %17\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}]