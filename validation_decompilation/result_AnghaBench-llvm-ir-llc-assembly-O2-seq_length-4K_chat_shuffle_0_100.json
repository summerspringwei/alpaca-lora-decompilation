[{"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_parse.c_test_ldap_search_extW.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function test_ldap_search_extW\n\t.type\ttest_ldap_search_extW,@function\ntest_ldap_search_extW:                  # @test_ldap_search_extW\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tsubq\t$72, %rsp\n\t.cfi_def_cfa_offset 96\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tmovb\t$0, 55(%rsp)\n\tmovb\t$0, 60(%rsp)\n\tmovl\t$708670831, 56(%rsp)            # imm = 0x2A3D756F\n\tmovl\tLDAP_SCOPE_SUBTREE(%rip), %edx\n\tleaq\t64(%rsp), %r14\n\tmovq\t%r14, 32(%rsp)\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, (%rsp)\n\tmovl\t$0, 24(%rsp)\n\tmovq\t$20, 16(%rsp)\n\tleaq\t55(%rsp), %rsi\n\tleaq\t56(%rsp), %rcx\n\txorl\t%r8d, %r8d\n\txorl\t%r9d, %r9d\n\tcallq\tldap_search_extW@PLT\n\tcmpq\tLDAP_SERVER_DOWN(%rip), %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tcmpq\tLDAP_UNAVAILABLE(%rip), %rax\n\tje\t.LBB0_2\n# %bb.3:\n\txorl\t%edi, %edi\n\ttestq\t%rax, %rax\n\tsete\t%dil\n\tmovl\t$.L.str.1, %esi\n\tmovq\t%rax, %rdx\n\tcallq\tok@PLT\n\tmovl\tLDAP_SCOPE_SUBTREE(%rip), %edx\n\tmovq\t%r14, 32(%rsp)\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, (%rsp)\n\tmovl\t$0, 24(%rsp)\n\tmovq\t$0, 16(%rsp)\n\tleaq\t55(%rsp), %rsi\n\tleaq\t56(%rsp), %rcx\n\tmovq\t%rbx, %rdi\n\txorl\t%r8d, %r8d\n\txorl\t%r9d, %r9d\n\tcallq\tldap_search_extW@PLT\n\txorl\t%edi, %edi\n\ttestq\t%rax, %rax\n\tsete\t%dil\n\tmovl\t$.L.str.1, %esi\n\tmovq\t%rax, %rdx\n\tcallq\tok@PLT\n\tjmp\t.LBB0_4\n.LBB0_2:\n\tmovl\t$.L.str, %edi\n\tcallq\tskip@PLT\n.LBB0_4:\n\taddq\t$72, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\ttest_ldap_search_extW, .Lfunc_end0-test_ldap_search_extW\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L__const.test_ldap_search_extW.filter,@object # @__const.test_ldap_search_extW.filter\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L__const.test_ldap_search_extW.filter:\n\t.asciz\t\"ou=*\"\n\t.size\t.L__const.test_ldap_search_extW.filter, 5\n\n\t.type\tLDAP_SCOPE_SUBTREE,@object      # @LDAP_SCOPE_SUBTREE\n\t.bss\n\t.globl\tLDAP_SCOPE_SUBTREE\n\t.p2align\t2\nLDAP_SCOPE_SUBTREE:\n\t.long\t0                               # 0x0\n\t.size\tLDAP_SCOPE_SUBTREE, 4\n\n\t.type\tLDAP_SERVER_DOWN,@object        # @LDAP_SERVER_DOWN\n\t.globl\tLDAP_SERVER_DOWN\n\t.p2align\t3\nLDAP_SERVER_DOWN:\n\t.quad\t0                               # 0x0\n\t.size\tLDAP_SERVER_DOWN, 8\n\n\t.type\tLDAP_UNAVAILABLE,@object        # @LDAP_UNAVAILABLE\n\t.globl\tLDAP_UNAVAILABLE\n\t.p2align\t3\nLDAP_UNAVAILABLE:\n\t.quad\t0                               # 0x0\n\t.size\tLDAP_UNAVAILABLE, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"test server can't be reached\\n\"\n\t.size\t.L.str, 30\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"ldap_search_extW failed 0x%08x\\n\"\n\t.size\t.L.str.1, 32\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i", "file:": "./reactos/modules/rostests/winetests/wldap32/extr_parse.c_test_ldap_search_extW.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@__const.test_ldap_search_extW.filter = private unnamed_addr constant [5 x i8] c\"ou=*\\00\", align 1\n@LDAP_SCOPE_SUBTREE = dso_local local_unnamed_addr global i32 0, align 4\n@LDAP_SERVER_DOWN = dso_local local_unnamed_addr global i64 0, align 8\n@LDAP_UNAVAILABLE = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [30 x i8] c\"test server can't be reached\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [32 x i8] c\"ldap_search_extW failed 0x%08x\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @test_ldap_search_extW], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @test_ldap_search_extW(ptr noundef %0) #0 {\n  %2 = alloca i64, align 8\n  %3 = alloca [1 x i8], align 1\n  %4 = alloca [5 x i8], align 1\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #4\n  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #4\n  store i8 0, ptr %3, align 1\n  call void @llvm.lifetime.start.p0(i64 5, ptr nonnull %4) #4\n  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(5) %4, ptr noundef nonnull align 1 dereferenceable(5) @__const.test_ldap_search_extW.filter, i64 5, i1 false)\n  %5 = load i32, ptr @LDAP_SCOPE_SUBTREE, align 4, !tbaa !5\n  %6 = call i64 @ldap_search_extW(ptr noundef %0, ptr noundef nonnull %3, i32 noundef %5, ptr noundef nonnull %4, ptr noundef null, i32 noundef 0, ptr noundef null, ptr noundef null, i64 noundef 20, i32 noundef 0, ptr noundef nonnull %2) #4\n  %7 = load i64, ptr @LDAP_SERVER_DOWN, align 8, !tbaa !9\n  %8 = icmp eq i64 %6, %7\n  %9 = load i64, ptr @LDAP_UNAVAILABLE, align 8\n  %10 = icmp eq i64 %6, %9\n  %11 = select i1 %8, i1 true, i1 %10\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %1\n  %13 = call i32 @skip(ptr noundef nonnull @.str) #4\n  br label %23\n\n14:                                               ; preds = %1\n  %15 = icmp eq i64 %6, 0\n  %16 = zext i1 %15 to i32\n  %17 = call i32 @ok(i32 noundef %16, ptr noundef nonnull @.str.1, i64 noundef %6) #4\n  %18 = load i32, ptr @LDAP_SCOPE_SUBTREE, align 4, !tbaa !5\n  %19 = call i64 @ldap_search_extW(ptr noundef %0, ptr noundef nonnull %3, i32 noundef %18, ptr noundef nonnull %4, ptr noundef null, i32 noundef 0, ptr noundef null, ptr noundef null, i64 noundef 0, i32 noundef 0, ptr noundef nonnull %2) #4\n  %20 = icmp eq i64 %19, 0\n  %21 = zext i1 %20 to i32\n  %22 = call i32 @ok(i32 noundef %21, ptr noundef nonnull @.str.1, i64 noundef %19) #4\n  br label %23\n\n23:                                               ; preds = %14, %12\n  call void @llvm.lifetime.end.p0(i64 5, ptr nonnull %4) #4\n  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #4\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2\n\ndeclare i64 @ldap_search_extW(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @skip(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @ok(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { argmemonly mustprogress nocallback nofree nounwind willreturn }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_joydev.c_joydev_install_chrdev.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function joydev_install_chrdev\n\t.type\tjoydev_install_chrdev,@function\njoydev_install_chrdev:                  # @joydev_install_chrdev\n\t.cfi_startproc\n# %bb.0:\n\tmovq\tjoydev_table(%rip), %rax\n\tmovq\t(%rdi), %rcx\n\tmovq\t%rdi, (%rax,%rcx,8)\n\txorl\t%eax, %eax\n\tretq\n.Lfunc_end0:\n\t.size\tjoydev_install_chrdev, .Lfunc_end0-joydev_install_chrdev\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tjoydev_table,@object            # @joydev_table\n\t.bss\n\t.globl\tjoydev_table\n\t.p2align\t3\njoydev_table:\n\t.quad\t0\n\t.size\tjoydev_table, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@joydev_table = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @joydev_install_chrdev], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine internal i32 @joydev_install_chrdev(ptr noundef %0) #0 {\n  %2 = load ptr, ptr @joydev_table, align 8, !tbaa !5\n  %3 = load i64, ptr %0, align 8, !tbaa !9\n  %4 = getelementptr inbounds ptr, ptr %2, i64 %3\n  store ptr %0, ptr %4, align 8, !tbaa !5\n  ret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"joystick_dev\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/drivers/input/extr_joydev.c_joydev_install_chrdev.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@joydev_table = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @joydev_install_chrdev], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine internal i32 @joydev_install_chrdev(ptr noundef %0) #0 {\n  %2 = load ptr, ptr @joydev_table, align 8, !tbaa !5\n  %3 = load i64, ptr %0, align 8, !tbaa !9\n  %4 = getelementptr inbounds ptr, ptr %2, i64 %3\n  store ptr %0, ptr %4, align 8, !tbaa !5\n  ret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"joydev\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mpeg4videoenc.c_mpeg4_encode_visual_object_header.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mpeg4_encode_visual_object_header\n\t.type\tmpeg4_encode_visual_object_header,@function\nmpeg4_encode_visual_object_header:      # @mpeg4_encode_visual_object_header\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tmovq\t8(%rdi), %rcx\n\tmovl\t(%rcx), %eax\n\tcmpl\tFF_PROFILE_UNKNOWN(%rip), %eax\n\tjne\t.LBB0_1\n# %bb.2:\n\tmovl\t$240, %eax\n\tcmpq\t$0, 24(%rbx)\n\tjne\t.LBB0_4\n# %bb.3:\n\txorl\t%edx, %edx\n\tcmpq\t$0, 16(%rbx)\n\tmovl\t$240, %eax\n\tcmovel\t%edx, %eax\n\tjmp\t.LBB0_4\n.LBB0_1:\n\tshll\t$4, %eax\n.LBB0_4:\n\tmovl\t4(%rcx), %ebp\n\tcmpl\tFF_LEVEL_UNKNOWN(%rip), %ebp\n\tmovl\t$1, %ecx\n\tcmovel\t%ecx, %ebp\n\torl\t%eax, %ebp\n\tmovl\t%ebp, %eax\n\tandl\t$-16, %eax\n\txorl\t%ecx, %ecx\n\tcmpl\t$240, %eax\n\tsete\t%cl\n\tleal\t1(,%rcx,4), %r14d\n\tmovq\t%rbx, %rdi\n\tmovl\t$16, %esi\n\txorl\t%edx, %edx\n\tcallq\tput_bits@PLT\n\tmovl\tVOS_STARTCODE(%rip), %edx\n\tmovq\t%rbx, %rdi\n\tmovl\t$16, %esi\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t$8, %esi\n\tmovl\t%ebp, %edx\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t$16, %esi\n\txorl\t%edx, %edx\n\tcallq\tput_bits@PLT\n\tmovl\tVISUAL_OBJ_STARTCODE(%rip), %edx\n\tmovq\t%rbx, %rdi\n\tmovl\t$16, %esi\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t$1, %esi\n\tmovl\t$1, %edx\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t$4, %esi\n\tmovl\t%r14d, %edx\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t$3, %esi\n\tmovl\t$1, %edx\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t$4, %esi\n\tmovl\t$1, %edx\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t$1, %esi\n\txorl\t%edx, %edx\n\tcallq\tput_bits@PLT\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tff_mpeg4_stuffing@PLT           # TAILCALL\n.Lfunc_end0:\n\t.size\tmpeg4_encode_visual_object_header, .Lfunc_end0-mpeg4_encode_visual_object_header\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tFF_PROFILE_UNKNOWN,@object      # @FF_PROFILE_UNKNOWN\n\t.bss\n\t.globl\tFF_PROFILE_UNKNOWN\n\t.p2align\t2\nFF_PROFILE_UNKNOWN:\n\t.long\t0                               # 0x0\n\t.size\tFF_PROFILE_UNKNOWN, 4\n\n\t.type\tFF_LEVEL_UNKNOWN,@object        # @FF_LEVEL_UNKNOWN\n\t.globl\tFF_LEVEL_UNKNOWN\n\t.p2align\t2\nFF_LEVEL_UNKNOWN:\n\t.long\t0                               # 0x0\n\t.size\tFF_LEVEL_UNKNOWN, 4\n\n\t.type\tVOS_STARTCODE,@object           # @VOS_STARTCODE\n\t.globl\tVOS_STARTCODE\n\t.p2align\t2\nVOS_STARTCODE:\n\t.long\t0                               # 0x0\n\t.size\tVOS_STARTCODE, 4\n\n\t.type\tVISUAL_OBJ_STARTCODE,@object    # @VISUAL_OBJ_STARTCODE\n\t.globl\tVISUAL_OBJ_STARTCODE\n\t.p2align\t2\nVISUAL_OBJ_STARTCODE:\n\t.long\t0                               # 0x0\n\t.size\tVISUAL_OBJ_STARTCODE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, ptr, i64, i64 }\n\n@FF_PROFILE_UNKNOWN = dso_local local_unnamed_addr global i32 0, align 4\n@FF_LEVEL_UNKNOWN = dso_local local_unnamed_addr global i32 0, align 4\n@VOS_STARTCODE = dso_local local_unnamed_addr global i32 0, align 4\n@VISUAL_OBJ_STARTCODE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mpeg4_encode_visual_object_header], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mpeg4_encode_visual_object_header(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  %5 = load i32, ptr @FF_PROFILE_UNKNOWN, align 4, !tbaa !13\n  %6 = icmp eq i32 %4, %5\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  %9 = load i64, ptr %8, align 8, !tbaa !14\n  br i1 %9, label %14, label %10\n\n10:                                               ; preds = %7, %1\n  %11 = phi i32 [ %4, %1 ], [ 240, %7 ]\n  %12 = shl i32 %11, 4\n  %13 = load i32, ptr @FF_LEVEL_UNKNOWN, align 4, !tbaa !13\n  br label %14\n\n14:                                               ; preds = %10, %7\n  %15 = phi i32 [ %12, %10 ], [ %11, %7 ]\n  %16 = phi i32 [ 0, %7 ], [ %13, %10 ]\n  %17 = or i32 %15, %16\n  %18 = and i32 %17, -16\n  %19 = icmp eq i32 %18, 240\n  %20 = zext i1 %19 to i32\n  %21 = add nuw nsw i32 %20, 1\n  %22 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 16, i32 noundef 0) #2\n  %23 = load i32, ptr @VOS_STARTCODE, align 4, !tbaa !13\n  %24 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 16, i32 noundef %23) #2\n  %25 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 8, i32 noundef %17) #2\n  %26 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 16, i32 noundef 0) #2\n  %27 = load i32, ptr @VISUAL_OBJ_STARTCODE, align 4, !tbaa !13\n  %28 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 16, i32 noundef %27) #2\n  %29 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 1, i32 noundef 1) #2\n  %30 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 4, i32 noundef %21) #2\n  %31 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 3, i32 noundef 1) #2\n  %32 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 4, i32 noundef 1) #2\n  %33 = tail call i32 @put_bits(ptr noundef %0, i32 noundef 1, i32 noundef 0) #2\n  %34 = tail call i32 @ff_mpeg4_stuffing(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @put_bits(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ff_mpeg4_stuffing(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !10, i64 8, !12, i64 16, !12, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !12, i64 24}\n</s><s>", "file:": "./FFmpeg/libavcodec/extr_mpeg4videoenc.c_mpeg4_encode_visual_object_header.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, ptr, i64, i64 }\n%struct.TYPE_4__ = type { i32, i32 }\n\n@FF_PROFILE_UNKNOWN = dso_local local_unnamed_addr global i32 0, align 4\n@FF_LEVEL_UNKNOWN = dso_local local_unnamed_addr global i32 0, align 4\n@VOS_STARTCODE = dso_local local_unnamed_addr global i32 0, align 4\n@VISUAL_OBJ_STARTCODE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mpeg4_encode_visual_object_header], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mpeg4_encode_visual_object_header(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.TYPE_5__, ptr %0, i64 0, i32 1\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr %3, align 4, !tbaa !12\n  %5 = load i32, ptr @FF_PROFILE_UNKNOWN, align 4, !tbaa !14\n  %6 = icmp eq i32 %4, %5\n  br i1 %6, label %9, label %7\n\n7:                                                ; preds = %1\n  %8 = shl i32 %4, 4\n  br label %18\n\n9:                                                ; preds = %1\n  %10 = getelementptr inbounds %struct.TYPE_5__, ptr %0, i64 0, i32 3\n  %11 = load i64, ptr %10, align 8, !tbaa !15\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %13, label %18\n\n13:                                               ; preds = %9\n  %14 = getelementptr inbounds %struct.TYPE_5__, ptr %0, i64 0, i32 2\n  %15 = load i64, ptr %14, align 8, !tbaa !16\n  %16 = icmp eq i64 %15, 0\n  %17 = select i1 %16, i32 0, i32 240\n  br label %18\n\n18:                                               ; preds = %13, %9, %7\n  %19 = phi i32 [ %8, %7 ], [ 240, %9 ], [ %17, %13 ]\n  %20 = getelementptr inbounds %struct.TYPE_4__, ptr %3, i64 0, i32 1\n  %21 = load i32, ptr %20, align 4, !tbaa !17\n  %22 = load i32, ptr @FF_LEVEL_UNKNOWN, align 4, !tbaa !14\n  %23 = icmp eq i32 %21, %22\n  %24 = select i1 %23, i32 1, i32 %21\n  %25 = or i32 %24, %19\n  %26 = and i32 %25, -16\n  %27 = icmp eq i32 %26, 240\n  %28 = select i1 %27, i32 5, i32 1\n  %29 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 16, i32 noundef 0) #2\n  %30 = load i32, ptr @VOS_STARTCODE, align 4, !tbaa !14\n  %31 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 16, i32 noundef %30) #2\n  %32 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 8, i32 noundef %25) #2\n  %33 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 16, i32 noundef 0) #2\n  %34 = load i32, ptr @VISUAL_OBJ_STARTCODE, align 4, !tbaa !14\n  %35 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 16, i32 noundef %34) #2\n  %36 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 1) #2\n  %37 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 4, i32 noundef %28) #2\n  %38 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 3, i32 noundef 1) #2\n  %39 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 4, i32 noundef 1) #2\n  %40 = tail call i32 @put_bits(ptr noundef nonnull %0, i32 noundef 1, i32 noundef 0) #2\n  %41 = tail call i32 @ff_mpeg4_stuffing(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @put_bits(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ff_mpeg4_stuffing(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_5__\", !7, i64 0, !10, i64 8, !11, i64 16, !11, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 4}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !11, i64 24}\n!16 = !{!6, !11, i64 16}\n!17 = !{!13, !7, i64 4}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_config_entries.c_git_config_entries_get_unique.ll\"\n\t.globl\tgit_config_entries_get_unique   # -- Begin function git_config_entries_get_unique\n\t.p2align\t4, 0x90\n\t.type\tgit_config_entries_get_unique,@function\ngit_config_entries_get_unique:          # @git_config_entries_get_unique\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tleaq\t8(%rsp), %rdi\n\tcallq\tconfig_entry_get@PLT\n\ttestl\t%eax, %eax\n\tjs\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rsp), %rax\n\tcmpq\t$0, 8(%rax)\n\tje\t.LBB0_4\n# %bb.2:\n\tmovl\tGIT_ERROR_CONFIG(%rip), %edi\n\tmovl\t$.L.str, %esi\n\tjmp\t.LBB0_3\n.LBB0_4:\n\tmovq\t(%rax), %rax\n\tcmpq\t$0, (%rax)\n\tje\t.LBB0_6\n# %bb.5:\n\tmovl\tGIT_ERROR_CONFIG(%rip), %edi\n\tmovl\t$.L.str.1, %esi\n.LBB0_3:\n\tcallq\tgit_error_set@PLT\n\tmovl\t$-1, %eax\n.LBB0_7:\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_6:\n\t.cfi_def_cfa_offset 32\n\tmovq\t%rax, (%rbx)\n\txorl\t%eax, %eax\n\tjmp\t.LBB0_7\n.Lfunc_end0:\n\t.size\tgit_config_entries_get_unique, .Lfunc_end0-git_config_entries_get_unique\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tGIT_ERROR_CONFIG,@object        # @GIT_ERROR_CONFIG\n\t.bss\n\t.globl\tGIT_ERROR_CONFIG\n\t.p2align\t2\nGIT_ERROR_CONFIG:\n\t.long\t0                               # 0x0\n\t.size\tGIT_ERROR_CONFIG, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"entry is not unique due to being a multivar\"\n\t.size\t.L.str, 44\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"entry is not unique due to being included\"\n\t.size\t.L.str.1, 42\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { ptr, ptr }\n\n@GIT_ERROR_CONFIG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [44 x i8] c\"entry is not unique due to being a multivar\\00\", align 1\n@.str.1 = private unnamed_addr constant [42 x i8] c\"entry is not unique due to being included\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @git_config_entries_get_unique(ptr nocapture noundef writeonly %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #3\n  %5 = call i32 @config_entry_get(ptr noundef nonnull %4, ptr noundef %1, ptr noundef %2) #3\n  %6 = icmp slt i32 %5, 0\n  br i1 %6, label %16, label %7\n\n7:                                                ; preds = %3\n  %8 = load ptr, ptr %4, align 8, !tbaa !5\n  %9 = getelementptr inbounds %struct.TYPE_4__, ptr %8, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %7\n  %13 = load i32, ptr @GIT_ERROR_CONFIG, align 4, !tbaa !11\n  br label %15\n\n14:                                               ; preds = %7\n  %15 = load ptr, ptr %8, align 8, !tbaa !13\n  %16 = icmp eq ptr %15, null\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %14\n  %18 = load i32, ptr @GIT_ERROR_CONFIG, align 4, !tbaa !11\n  br label %15\n\n19:                                               ; preds = %14\n  store ptr %8, ptr %0, align 8, !tbaa !13\n  br label %20\n\n20:                                               ; preds = %19, %3\n  %21 = phi i32 [ -1, %3 ], [ 0, %19 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #3\n  ret i32 %21\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @config_entry_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"TYPE_4__\", !6, i64 0, !6, i64 8}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!10, !6, i64 0}\n</s><s>", "file:": "./libgit2/src/extr_config_entries.c_git_config_entries_get_unique.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { ptr, ptr }\n\n@GIT_ERROR_CONFIG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [44 x i8] c\"entry is not unique due to being a multivar\\00\", align 1\n@.str.1 = private unnamed_addr constant [42 x i8] c\"entry is not unique due to being included\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @git_config_entries_get_unique(ptr nocapture noundef writeonly %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #3\n  %5 = call i32 @config_entry_get(ptr noundef nonnull %4, ptr noundef %1, ptr noundef %2) #3\n  %6 = icmp slt i32 %5, 0\n  br i1 %6, label %23, label %7\n\n7:                                                ; preds = %3\n  %8 = load ptr, ptr %4, align 8, !tbaa !5\n  %9 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %15, label %12\n\n12:                                               ; preds = %7\n  %13 = load i32, ptr @GIT_ERROR_CONFIG, align 4, !tbaa !11\n  %14 = call i32 @git_error_set(i32 noundef %13, ptr noundef nonnull @.str) #3\n  br label %23\n\n15:                                               ; preds = %7\n  %16 = load ptr, ptr %8, align 8, !tbaa !13\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %15\n  %20 = load i32, ptr @GIT_ERROR_CONFIG, align 4, !tbaa !11\n  %21 = call i32 @git_error_set(i32 noundef %20, ptr noundef nonnull @.str.1) #3\n  br label %23\n\n22:                                               ; preds = %15\n  store ptr %16, ptr %0, align 8, !tbaa !5\n  br label %23\n\n23:                                               ; preds = %3, %22, %19, %12\n  %24 = phi i32 [ -1, %12 ], [ -1, %19 ], [ 0, %22 ], [ %5, %3 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #3\n  ret i32 %24\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @config_entry_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @git_error_set(i32 noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"TYPE_6__\", !6, i64 0, !6, i64 8}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!10, !6, i64 0}\n!14 = !{!15, !16, i64 0}\n!15 = !{!\"TYPE_5__\", !16, i64 0}\n!16 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mdp5.xml.h_MDP5_CTL_LAYER_REG_RGB3.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function MDP5_CTL_LAYER_REG_RGB3\n\t.type\tMDP5_CTL_LAYER_REG_RGB3,@function\nMDP5_CTL_LAYER_REG_RGB3:                # @MDP5_CTL_LAYER_REG_RGB3\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t%edi, %eax\n\tmovzbl\tMDP5_CTL_LAYER_REG_RGB3__SHIFT(%rip), %ecx\n\tshll\t%cl, %eax\n\tandl\tMDP5_CTL_LAYER_REG_RGB3__MASK(%rip), %eax\n\tretq\n.Lfunc_end0:\n\t.size\tMDP5_CTL_LAYER_REG_RGB3, .Lfunc_end0-MDP5_CTL_LAYER_REG_RGB3\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMDP5_CTL_LAYER_REG_RGB3__SHIFT,@object # @MDP5_CTL_LAYER_REG_RGB3__SHIFT\n\t.bss\n\t.globl\tMDP5_CTL_LAYER_REG_RGB3__SHIFT\n\t.p2align\t2\nMDP5_CTL_LAYER_REG_RGB3__SHIFT:\n\t.long\t0                               # 0x0\n\t.size\tMDP5_CTL_LAYER_REG_RGB3__SHIFT, 4\n\n\t.type\tMDP5_CTL_LAYER_REG_RGB3__MASK,@object # @MDP5_CTL_LAYER_REG_RGB3__MASK\n\t.globl\tMDP5_CTL_LAYER_REG_RGB3__MASK\n\t.p2align\t2\nMDP5_CTL_LAYER_REG_RGB3__MASK:\n\t.long\t0                               # 0x0\n\t.size\tMDP5_CTL_LAYER_REG_RGB3__MASK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@MDP5_CTL_LAYER_REG_RGB3__SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@MDP5_CTL_LAYER_REG_RGB3__MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @MDP5_CTL_LAYER_REG_RGB3], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @MDP5_CTL_LAYER_REG_RGB3(i32 noundef %0) #0 {\n  %2 = load i32, ptr @MDP5_CTL_LAYER_REG_RGB3__SHIFT, align 4, !tbaa !5\n  %3 = shl i32 %0, %2\n  %4 = load i32, ptr @MDP5_CTL_LAYER_REG_RGB3__MASK, align 4, !tbaa !5\n  %5 = and i32 %3, %4\n  ret i32 %5\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/gpu/drm/msm/disp/mdp5/extr_mdp5.xml.h_MDP5_CTL_LAYER_REG_RGB3.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@MDP5_CTL_LAYER_REG_RGB3__SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@MDP5_CTL_LAYER_REG_RGB3__MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @MDP5_CTL_LAYER_REG_RGB3], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @MDP5_CTL_LAYER_REG_RGB3(i32 noundef %0) #0 {\n  %2 = load i32, ptr @MDP5_CTL_LAYER_REG_RGB3__SHIFT, align 4, !tbaa !5\n  %3 = shl i32 %0, %2\n  %4 = load i32, ptr @MDP5_CTL_LAYER_REG_RGB3__MASK, align 4, !tbaa !5\n  %5 = and i32 %3, %4\n  ret i32 %5\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_kvmclock.c_kvm_clock_read.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function kvm_clock_read\n\t.type\tkvm_clock_read,@function\nkvm_clock_read:                         # @kvm_clock_read\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\txorl\t%eax, %eax\n\tcallq\tpreempt_disable_notrace@PLT\n\txorl\t%eax, %eax\n\tcallq\tthis_cpu_pvti@PLT\n\tmovl\t%eax, %edi\n\tcallq\tpvclock_clocksource_read@PLT\n\tmovl\t%eax, %ebx\n\txorl\t%eax, %eax\n\tcallq\tpreempt_enable_notrace@PLT\n\tmovl\t%ebx, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tkvm_clock_read, .Lfunc_end0-kvm_clock_read\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @kvm_clock_read], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @kvm_clock_read() #0 {\n  %1 = tail call i32 (...) @preempt_disable_notrace() #2\n  %2 = tail call i32 (...) @this_cpu_pvti() #2\n  %3 = tail call i32 @pvclock_clocksource_read(i32 noundef %2) #2\n  %4 = tail call i32 (...) @preempt_enable_notrace() #2\n  ret i32 %3\n}\n\ndeclare i32 @preempt_disable_notrace(...) local_unnamed_addr #1\n\ndeclare i32 @pvclock_clocksource_read(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @this_cpu_pvti(...) local_unnamed_addr #1\n\ndeclare i32 @preempt_enable_notrace(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/arch/x86/kernel/extr_kvmclock.c_kvm_clock_read.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @kvm_clock_read], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @kvm_clock_read() #0 {\n  %1 = tail call i32 (...) @preempt_disable_notrace() #2\n  %2 = tail call i32 (...) @this_cpu_pvti() #2\n  %3 = tail call i32 @pvclock_clocksource_read(i32 noundef %2) #2\n  %4 = tail call i32 (...) @preempt_enable_notrace() #2\n  ret i32 %3\n}\n\ndeclare i32 @preempt_disable_notrace(...) local_unnamed_addr #1\n\ndeclare i32 @pvclock_clocksource_read(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @this_cpu_pvti(...) local_unnamed_addr #1\n\ndeclare i32 @preempt_enable_notrace(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ui_signup.c_Signup_MenuEvent.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function Signup_MenuEvent\n\t.type\tSignup_MenuEvent,@function\nSignup_MenuEvent:                       # @Signup_MenuEvent\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcmpl\t%esi, QM_ACTIVATED(%rip)\n\tjne\t.LBB0_6\n# %bb.1:\n\tmovl\t(%rdi), %eax\n\tcmpl\t$129, %eax\n\tje\t.LBB0_5\n# %bb.2:\n\tcmpl\t$128, %eax\n\tjne\t.LBB0_6\n# %bb.3:\n\tmovl\ts_signup+4(%rip), %edi\n\tmovl\ts_signup+12(%rip), %esi\n\tcallq\tstrcmp@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_4\n.LBB0_6:\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_5:\n\t.cfi_def_cfa_offset 16\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tjmp\tUI_PopMenu@PLT                  # TAILCALL\n.LBB0_4:\n\t.cfi_def_cfa_offset 16\n\tmovl\ts_signup+8(%rip), %edi\n\tmovl\ts_signup+4(%rip), %esi\n\tmovl\ts_signup(%rip), %edx\n\tcallq\ttrap_CL_UI_RankUserCreate@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tjmp\tUI_ForceMenuOff@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\tSignup_MenuEvent, .Lfunc_end0-Signup_MenuEvent\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tQM_ACTIVATED,@object            # @QM_ACTIVATED\n\t.bss\n\t.globl\tQM_ACTIVATED\n\t.p2align\t2\nQM_ACTIVATED:\n\t.long\t0                               # 0x0\n\t.size\tQM_ACTIVATED, 4\n\n\t.type\ts_signup,@object                # @s_signup\n\t.globl\ts_signup\n\t.p2align\t2\ns_signup:\n\t.zero\t16\n\t.size\ts_signup, 16\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i32, i32, i32 }\n\n@QM_ACTIVATED = dso_local local_unnamed_addr global i32 0, align 4\n@s_signup = dso_local global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Signup_MenuEvent], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @Signup_MenuEvent(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {\n  %3 = load i32, ptr @QM_ACTIVATED, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, %1\n  br i1 %4, label %5, label %18\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  switch i32 %6, label %18 [\n    i32 128, label %7\n    i32 129, label %11\n  ]\n\n7:                                                ; preds = %5\n  %8 = load i32, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @s_signup, i64 0, i32 2), align 4, !tbaa !11\n  %9 = load i32, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @s_signup, i64 0, i32 3), align 4, !tbaa !11\n  %10 = tail call i32 @strcmp(i32 noundef %8, i32 noundef %9) #2\n  br label %18\n\n11:                                               ; preds = %5\n  %12 = tail call i32 (...) @UI_PopMenu() #2\n  br label %18\n\n13:                                               ; preds = %17\n  %14 = load i32, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @s_signup, i64 0, i32 1), align 4, !tbaa !11\n  %15 = load i32, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @s_signup, i64 0, i32 2), align 4, !tbaa !11\n  %16 = load i32, ptr @s_signup, align 4, !tbaa !11\n  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(4) %13, ptr noundef nonnull align 4 dereferenceable(4) %14, i64 4, i1 false)\n  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(4) %13, ptr noundef nonnull align 4 dereferenceable(4) %15, i64 4, i1 false)\n  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(4) %13, ptr noundef nonnull align 4 dereferenceable(4) %16, i64 4, i1 false)\n  br label %18\n\n17:                                               ; preds = %13\n  ret void\n\n18:                                               ; preds = %2, %5, %7, %11, %17\n  ret void\n}\n\ndeclare i32 @strcmp(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @UI_PopMenu(...) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly nocallback nofree nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_5__\", !6, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"TYPE_4__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n</s><s>", "file:": "./Quake-III-Arena/code/q3_ui/extr_ui_signup.c_Signup_MenuEvent.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_11__ = type { %struct.TYPE_19__, %struct.TYPE_17__, %struct.TYPE_15__, %struct.TYPE_13__ }\n%struct.TYPE_19__ = type { %struct.TYPE_18__ }\n%struct.TYPE_18__ = type { i32 }\n%struct.TYPE_17__ = type { %struct.TYPE_16__ }\n%struct.TYPE_16__ = type { i32 }\n%struct.TYPE_15__ = type { %struct.TYPE_14__ }\n%struct.TYPE_14__ = type { i32 }\n%struct.TYPE_13__ = type { %struct.TYPE_12__ }\n%struct.TYPE_12__ = type { i32 }\n\n@QM_ACTIVATED = dso_local local_unnamed_addr global i32 0, align 4\n@s_signup = dso_local local_unnamed_addr global %struct.TYPE_11__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Signup_MenuEvent], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @Signup_MenuEvent(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {\n  %3 = load i32, ptr @QM_ACTIVATED, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, %1\n  br i1 %4, label %5, label %20\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  switch i32 %6, label %20 [\n    i32 128, label %7\n    i32 129, label %18\n  ]\n\n7:                                                ; preds = %5\n  %8 = load i32, ptr getelementptr inbounds (%struct.TYPE_11__, ptr @s_signup, i64 0, i32 1), align 4, !tbaa !11\n  %9 = load i32, ptr getelementptr inbounds (%struct.TYPE_11__, ptr @s_signup, i64 0, i32 3), align 4, !tbaa !21\n  %10 = tail call i32 @strcmp(i32 noundef %8, i32 noundef %9) #2\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %12, label %20\n\n12:                                               ; preds = %7\n  %13 = load i32, ptr getelementptr inbounds (%struct.TYPE_11__, ptr @s_signup, i64 0, i32 2), align 4, !tbaa !22\n  %14 = load i32, ptr getelementptr inbounds (%struct.TYPE_11__, ptr @s_signup, i64 0, i32 1), align 4, !tbaa !11\n  %15 = load i32, ptr @s_signup, align 4, !tbaa !23\n  %16 = tail call i32 @trap_CL_UI_RankUserCreate(i32 noundef %13, i32 noundef %14, i32 noundef %15) #2\n  %17 = tail call i32 (...) @UI_ForceMenuOff() #2\n  br label %20\n\n18:                                               ; preds = %5\n  %19 = tail call i32 (...) @UI_PopMenu() #2\n  br label %20\n\n20:                                               ; preds = %7, %2, %5, %18, %12\n  ret void\n}\n\ndeclare i32 @strcmp(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @trap_CL_UI_RankUserCreate(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @UI_ForceMenuOff(...) local_unnamed_addr #1\n\ndeclare i32 @UI_PopMenu(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_20__\", !6, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"TYPE_11__\", !13, i64 0, !15, i64 4, !17, i64 8, !19, i64 12}\n!13 = !{!\"TYPE_19__\", !14, i64 0}\n!14 = !{!\"TYPE_18__\", !6, i64 0}\n!15 = !{!\"TYPE_17__\", !16, i64 0}\n!16 = !{!\"TYPE_16__\", !6, i64 0}\n!17 = !{!\"TYPE_15__\", !18, i64 0}\n!18 = !{!\"TYPE_14__\", !6, i64 0}\n!19 = !{!\"TYPE_13__\", !20, i64 0}\n!20 = !{!\"TYPE_12__\", !6, i64 0}\n!21 = !{!12, !6, i64 12}\n!22 = !{!12, !6, i64 8}\n!23 = !{!12, !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sti_hdmi.c_hdmi_dbg_sta.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function hdmi_dbg_sta\n\t.type\thdmi_dbg_sta,@function\nhdmi_dbg_sta:                           # @hdmi_dbg_sta\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovl\t%esi, %ebx\n\tmovq\t%rdi, %r14\n\tmovl\t$9, %esi\n\tcallq\tseq_putc@PLT\n\tmovl\tHDMI_STA_DLL_LCK(%rip), %eax\n\tandl\t%ebx, %eax\n\tmovl\t$.L.str.2, %eax\n\tmovl\t$.L.str.1, %esi\n\tcmoveq\t%rax, %rsi\n\tmovl\t$.L.str, %edi\n\tcallq\tDBGFS_PRINT_STR@PLT\n\tmovl\t$.L.str.3, %esi\n\tmovq\t%r14, %rdi\n\tcallq\tseq_puts@PLT\n\tandl\tHDMI_STA_HOT_PLUG(%rip), %ebx\n\tmovl\t$.L.str.6, %eax\n\tmovl\t$.L.str.5, %esi\n\tcmoveq\t%rax, %rsi\n\tmovl\t$.L.str.4, %edi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tDBGFS_PRINT_STR@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\thdmi_dbg_sta, .Lfunc_end0-hdmi_dbg_sta\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tHDMI_STA_DLL_LCK,@object        # @HDMI_STA_DLL_LCK\n\t.bss\n\t.globl\tHDMI_STA_DLL_LCK\n\t.p2align\t2\nHDMI_STA_DLL_LCK:\n\t.long\t0                               # 0x0\n\t.size\tHDMI_STA_DLL_LCK, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"pll:\"\n\t.size\t.L.str, 5\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"locked\"\n\t.size\t.L.str.1, 7\n\n\t.type\t.L.str.2,@object                # @.str.2\n.L.str.2:\n\t.asciz\t\"not locked\"\n\t.size\t.L.str.2, 11\n\n\t.type\t.L.str.3,@object                # @.str.3\n.L.str.3:\n\t.asciz\t\"\\t\\t\\t\\t\\t\"\n\t.size\t.L.str.3, 6\n\n\t.type\tHDMI_STA_HOT_PLUG,@object       # @HDMI_STA_HOT_PLUG\n\t.bss\n\t.globl\tHDMI_STA_HOT_PLUG\n\t.p2align\t2\nHDMI_STA_HOT_PLUG:\n\t.long\t0                               # 0x0\n\t.size\tHDMI_STA_HOT_PLUG, 4\n\n\t.type\t.L.str.4,@object                # @.str.4\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.4:\n\t.asciz\t\"hdmi cable:\"\n\t.size\t.L.str.4, 12\n\n\t.type\t.L.str.5,@object                # @.str.5\n.L.str.5:\n\t.asciz\t\"connected\"\n\t.size\t.L.str.5, 10\n\n\t.type\t.L.str.6,@object                # @.str.6\n.L.str.6:\n\t.asciz\t\"not connected\"\n\t.size\t.L.str.6, 14\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@HDMI_STA_DLL_LCK = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"pll:\\00\", align 1\n@.str.1 = private unnamed_addr constant [7 x i8] c\"locked\\00\", align 1\n@.str.2 = private unnamed_addr constant [11 x i8] c\"not locked\\00\", align 1\n@.str.3 = private unnamed_addr constant [6 x i8] c\"\\09\\09\\09\\09\\09\\00\", align 1\n@HDMI_STA_HOT_PLUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str.4 = private unnamed_addr constant [12 x i8] c\"hdmi cable:\\00\", align 1\n@.str.5 = private unnamed_addr constant [10 x i8] c\"connected\\00\", align 1\n@.str.6 = private unnamed_addr constant [14 x i8] c\"not connected\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hdmi_dbg_sta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @hdmi_dbg_sta(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = tail call i32 @seq_putc(ptr noundef %0, i8 noundef signext 9) #2\n  %4 = load i32, ptr @HDMI_STA_DLL_LCK, align 4, !tbaa !5\n  %5 = and i32 %4, %1\n  %6 = icmp eq i32 %5, 0\n  %7 = select i1 %6, ptr @.str.2, ptr @.str.1\n  %8 = tail call i32 @DBGFS_PRINT_STR(ptr noundef nonnull @.str, ptr noundef nonnull %7) #2\n  %9 = tail call i32 @seq_puts(ptr noundef %0, ptr noundef nonnull @.str.3) #2\n  %10 = load i32, ptr @HDMI_STA_HOT_PLUG, align 4, !tbaa !5\n  %11 = and i32 %10, %1\n  %12 = icmp eq i32 %11, 0\n  %13 = select i1 %12, ptr @.str.6, ptr @.str.5\n  %14 = tail call i32 @DBGFS_PRINT_STR(ptr noundef nonnull @.str.4, ptr noundef nonnull %13) #2\n  ret void\n}\n\ndeclare i32 @seq_putc(ptr noundef, i8 noundef signext) local_unnamed_addr #1\n\ndeclare i32 @DBGFS_PRINT_STR(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/gpu/drm/sti/extr_sti_hdmi.c_hdmi_dbg_sta.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@HDMI_STA_DLL_LCK = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"pll:\\00\", align 1\n@.str.1 = private unnamed_addr constant [7 x i8] c\"locked\\00\", align 1\n@.str.2 = private unnamed_addr constant [11 x i8] c\"not locked\\00\", align 1\n@.str.3 = private unnamed_addr constant [6 x i8] c\"\\09\\09\\09\\09\\09\\00\", align 1\n@HDMI_STA_HOT_PLUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str.4 = private unnamed_addr constant [12 x i8] c\"hdmi cable:\\00\", align 1\n@.str.5 = private unnamed_addr constant [10 x i8] c\"connected\\00\", align 1\n@.str.6 = private unnamed_addr constant [14 x i8] c\"not connected\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hdmi_dbg_sta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @hdmi_dbg_sta(ptr noundef %0, i32 noundef %1) #0 {\n  %3 = tail call i32 @seq_putc(ptr noundef %0, i8 noundef signext 9) #2\n  %4 = load i32, ptr @HDMI_STA_DLL_LCK, align 4, !tbaa !5\n  %5 = and i32 %4, %1\n  %6 = icmp eq i32 %5, 0\n  %7 = select i1 %6, ptr @.str.2, ptr @.str.1\n  %8 = tail call i32 @DBGFS_PRINT_STR(ptr noundef nonnull @.str, ptr noundef nonnull %7) #2\n  %9 = tail call i32 @seq_puts(ptr noundef %0, ptr noundef nonnull @.str.3) #2\n  %10 = load i32, ptr @HDMI_STA_HOT_PLUG, align 4, !tbaa !5\n  %11 = and i32 %10, %1\n  %12 = icmp eq i32 %11, 0\n  %13 = select i1 %12, ptr @.str.6, ptr @.str.5\n  %14 = tail call i32 @DBGFS_PRINT_STR(ptr noundef nonnull @.str.4, ptr noundef nonnull %13) #2\n  ret void\n}\n\ndeclare i32 @seq_putc(ptr noundef, i8 noundef signext) local_unnamed_addr #1\n\ndeclare i32 @DBGFS_PRINT_STR(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_printf.c_a2d.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function a2d\n\t.type\ta2d,@function\na2d:                                    # @a2d\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t%edi, %eax\n\tleal\t-48(%rax), %ecx\n\tcmpb\t$9, %cl\n\tja\t.LBB0_2\n# %bb.1:\n\taddl\t$-48, %eax\n                                        # kill: def $eax killed $eax killed $rax\n\tretq\n.LBB0_2:\n\tleal\t-97(%rax), %ecx\n\tcmpb\t$5, %cl\n\tja\t.LBB0_4\n# %bb.3:\n\taddl\t$-87, %eax\n                                        # kill: def $eax killed $eax killed $rax\n\tretq\n.LBB0_4:\n\tleal\t-65(%rax), %ecx\n\taddl\t$-55, %eax\n\tcmpb\t$6, %cl\n\tmovl\t$-1, %ecx\n\tcmovbl\t%eax, %ecx\n\tmovl\t%ecx, %eax\n                                        # kill: def $eax killed $eax killed $rax\n\tretq\n.Lfunc_end0:\n\t.size\ta2d, .Lfunc_end0-a2d\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @a2d], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @a2d(i8 noundef signext %0) #0 {\n  %2 = sext i8 %0 to i32\n  %3 = add i8 %0, -48\n  %4 = icmp ult i8 %3, 10\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %1\n  %6 = add nsw i32 %2, -48\n  br label %15\n\n7:                                                ; preds = %1\n  %8 = add i8 %0, -97\n  %9 = icmp ult i8 %8, 6\n  %10 = add i8 %0, -87\n  %11 = icmp ult i8 %8, 5\n  %12 = select i1 %11, i8 %10, i8 -1\n  %13 = select i1 %9, i8 %12, i8 -1\n  %14 = zext i8 %13 to i32\n  br label %15\n\n15:                                               ; preds = %7, %5\n  %16 = phi i32 [ %6, %5 ], [ %14, %7 ]\n  ret i32 %16\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./raspberry-pi-os/exercises/lesson03/1/avenito/src/extr_printf.c_a2d.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @a2d], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @a2d(i8 noundef signext %0) #0 {\n  %2 = sext i8 %0 to i32\n  %3 = add i8 %0, -48\n  %4 = icmp ult i8 %3, 10\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %1\n  %6 = add nsw i32 %2, -48\n  br label %17\n\n7:                                                ; preds = %1\n  %8 = add i8 %0, -97\n  %9 = icmp ult i8 %8, 6\n  br i1 %9, label %10, label %12\n\n10:                                               ; preds = %7\n  %11 = add nsw i32 %2, -87\n  br label %17\n\n12:                                               ; preds = %7\n  %13 = add i8 %0, -65\n  %14 = icmp ult i8 %13, 6\n  %15 = add nsw i32 %2, -55\n  %16 = select i1 %14, i32 %15, i32 -1\n  br label %17\n\n17:                                               ; preds = %12, %10, %5\n  %18 = phi i32 [ %6, %5 ], [ %11, %10 ], [ %16, %12 ]\n  ret i32 %18\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_hisi_sas_main.c_hisi_sas_debugfs_bist_phy_open.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function hisi_sas_debugfs_bist_phy_open\n\t.type\thisi_sas_debugfs_bist_phy_open,@function\nhisi_sas_debugfs_bist_phy_open:         # @hisi_sas_debugfs_bist_phy_open\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rsi, %rax\n\tmovl\thisi_sas_debugfs_bist_phy_show(%rip), %esi\n\tmovl\t(%rdi), %edx\n\tmovq\t%rax, %rdi\n\tjmp\tsingle_open@PLT                 # TAILCALL\n.Lfunc_end0:\n\t.size\thisi_sas_debugfs_bist_phy_open, .Lfunc_end0-hisi_sas_debugfs_bist_phy_open\n\t.cfi_endproc\n                                        # -- End function\n\t.type\thisi_sas_debugfs_bist_phy_show,@object # @hisi_sas_debugfs_bist_phy_show\n\t.bss\n\t.globl\thisi_sas_debugfs_bist_phy_show\n\t.p2align\t2\nhisi_sas_debugfs_bist_phy_show:\n\t.long\t0                               # 0x0\n\t.size\thisi_sas_debugfs_bist_phy_show, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@hisi_sas_debugfs_bist_phy_show = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hisi_sas_debugfs_bist_phy_open], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hisi_sas_debugfs_bist_phy_open(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @hisi_sas_debugfs_bist_phy_show, align 4, !tbaa !5\n  %4 = load i32, ptr %0, align 4, !tbaa !9\n  %5 = tail call i32 @single_open(ptr noundef %1, i32 noundef %3, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @single_open(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"hisi_hba\", !6, i64 0}\n</s><s>", "file:": "./linux/drivers/scsi/hisi_sas/extr_hisi_sas_main.c_hisi_sas_debugfs_bist_phy_open.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@hisi_sas_debugfs_bist_phy_show = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hisi_sas_debugfs_bist_phy_open], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hisi_sas_debugfs_bist_phy_open(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @hisi_sas_debugfs_bist_phy_show, align 4, !tbaa !5\n  %4 = load i32, ptr %0, align 4, !tbaa !9\n  %5 = tail call i32 @single_open(ptr noundef %1, i32 noundef %3, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @single_open(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"inode\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ai_dmnet.c_BotNearbyGoal.ll\"\n\t.section\t.rodata.cst4,\"aM\",@progbits,4\n\t.p2align\t2                               # -- Begin function BotNearbyGoal\n.LCPI0_0:\n\t.long\t0x42480000                      # float 50\n\t.text\n\t.globl\tBotNearbyGoal\n\t.p2align\t4, 0x90\n\t.type\tBotNearbyGoal,@function\nBotNearbyGoal:                          # @BotNearbyGoal\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %r14\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %rbx\n\tmovss\t%xmm0, 12(%rsp)                 # 4-byte Spill\n\tcallq\tBotGoForAir@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_1\n# %bb.6:\n\tmovl\tqtrue(%rip), %eax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_1:\n\t.cfi_def_cfa_offset 48\n\tmovq\t%rbx, %rdi\n\tcallq\tBotCTFCarryingFlag@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.2:\n\tmovl\t16(%rbx), %edi\n\tmovl\t4(%rbx), %esi\n\tmovl\t12(%rbx), %edx\n\tmovl\tTFL_DEFAULT(%rip), %ecx\n\tcallq\ttrap_AAS_AreaTravelTimeToGoalArea@PLT\n\tcmpl\t$300, %eax                      # imm = 0x12C\n\tjl\t.LBB0_3\n.LBB0_4:\n\tmovss\t12(%rsp), %xmm0                 # 4-byte Reload\n                                        # xmm0 = mem[0],zero,zero,zero\n\tjmp\t.LBB0_5\n.LBB0_3:\n\tmovss\t.LCPI0_0(%rip), %xmm0           # xmm0 = mem[0],zero,zero,zero\n.LBB0_5:\n\tmovl\t8(%rbx), %edi\n\tmovl\t(%rbx), %edx\n\tmovl\t4(%rbx), %esi\n\tmovl\t%ebp, %ecx\n\tmovq\t%r14, %r8\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\ttrap_BotChooseNBGItem@PLT       # TAILCALL\n.Lfunc_end0:\n\t.size\tBotNearbyGoal, .Lfunc_end0-BotNearbyGoal\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tqtrue,@object                   # @qtrue\n\t.bss\n\t.globl\tqtrue\n\t.p2align\t2\nqtrue:\n\t.long\t0                               # 0x0\n\t.size\tqtrue, 4\n\n\t.type\tTFL_DEFAULT,@object             # @TFL_DEFAULT\n\t.globl\tTFL_DEFAULT\n\t.p2align\t2\nTFL_DEFAULT:\n\t.long\t0                               # 0x0\n\t.size\tTFL_DEFAULT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i32, i32, i32 }\n\n@qtrue = dso_local local_unnamed_addr global i32 0, align 4\n@TFL_DEFAULT = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @BotNearbyGoal(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i64 @BotGoForAir(ptr noundef %0, i32 noundef %1) #2\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %6, label %12\n\n6:                                                ; preds = %3\n  %7 = tail call i64 @BotCTFCarryingFlag(ptr noundef %0) #2\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %14, label %9\n\n9:                                                ; preds = %6\n  %10 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 3\n  %11 = load i32, ptr %10, align 4, !tbaa !5\n  br label %12\n\n12:                                               ; preds = %9, %3\n  %13 = load i32, ptr @qtrue, align 4, !tbaa !10\n  ret i32 %13\n\n14:                                               ; preds = %6\n  %15 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %16 = load i32, ptr %15, align 4, !tbaa !11\n  %17 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %18 = load i32, ptr %17, align 4, !tbaa !12\n  %19 = load i32, ptr %0, align 4, !tbaa !13\n  %20 = load i32, ptr @TFL_DEFAULT, align 4, !tbaa !10\n  %21 = tail call i32 @trap_AAS_AreaTravelTimeToGoalArea(i32 noundef %16, i32 noundef %18, i32 noundef %19, i32 noundef %20) #2\n  %22 = icmp sgt i32 %21, 300\n  br i1 %22, label %23, label %25\n\n23:                                               ; preds = %14\n  %24 = load float, ptr @.LCPI0_0, align 4, !tbaa !14\n  br label %25\n\n25:                                               ; preds = %23, %14\n  %26 = phi float [ %24, %23 ], [ 50.000000, %14 ]\n  %27 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %28 = load i32, ptr %27, align 4, !tbaa !12\n  %29 = load i32, ptr %0, align 4, !tbaa !13\n  %30 = tail call i32 @trap_BotChooseNBGItem(i32 noundef %28, i32 noundef %29, i32 noundef %1, i32 noundef %1, ptr noundef %2) #2\n  ret i32 %30\n}\n\ndeclare i64 @BotGoForAir(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @BotCTFCarryingFlag(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @trap_AAS_AreaTravelTimeToGoalArea(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @trap_BotChooseNBGItem(i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!6, !7, i64 4}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"float\", !8, i64 0}\n</s><s>", "file:": "./Quake-III-Arena/code/game/extr_ai_dmnet.c_BotNearbyGoal.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { i32, i32, i32, %struct.TYPE_6__, i32 }\n%struct.TYPE_6__ = type { i32 }\n\n@qtrue = dso_local local_unnamed_addr global i32 0, align 4\n@TFL_DEFAULT = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @BotNearbyGoal(ptr noundef %0, i32 noundef %1, ptr noundef %2, float noundef %3) local_unnamed_addr #0 {\n  %5 = tail call i64 @BotGoForAir(ptr noundef %0, i32 noundef %1, ptr noundef %2, float noundef %3) #2\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %9, label %7\n\n7:                                                ; preds = %4\n  %8 = load i32, ptr @qtrue, align 4, !tbaa !5\n  br label %31\n\n9:                                                ; preds = %4\n  %10 = tail call i64 @BotCTFCarryingFlag(ptr noundef %0) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %23, label %12\n\n12:                                               ; preds = %9\n  %13 = getelementptr inbounds %struct.TYPE_7__, ptr %0, i64 0, i32 4\n  %14 = load i32, ptr %13, align 4, !tbaa !9\n  %15 = getelementptr inbounds %struct.TYPE_7__, ptr %0, i64 0, i32 1\n  %16 = load i32, ptr %15, align 4, !tbaa !12\n  %17 = getelementptr inbounds %struct.TYPE_7__, ptr %0, i64 0, i32 3\n  %18 = load i32, ptr %17, align 4, !tbaa !13\n  %19 = load i32, ptr @TFL_DEFAULT, align 4, !tbaa !5\n  %20 = tail call i32 @trap_AAS_AreaTravelTimeToGoalArea(i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %19) #2\n  %21 = icmp slt i32 %20, 300\n  %22 = select i1 %21, float 5.000000e+01, float %3\n  br label %23\n\n23:                                               ; preds = %12, %9\n  %24 = phi float [ %3, %9 ], [ %22, %12 ]\n  %25 = getelementptr inbounds %struct.TYPE_7__, ptr %0, i64 0, i32 2\n  %26 = load i32, ptr %25, align 4, !tbaa !14\n  %27 = getelementptr inbounds %struct.TYPE_7__, ptr %0, i64 0, i32 1\n  %28 = load i32, ptr %27, align 4, !tbaa !12\n  %29 = load i32, ptr %0, align 4, !tbaa !15\n  %30 = tail call i32 @trap_BotChooseNBGItem(i32 noundef %26, i32 noundef %28, i32 noundef %29, i32 noundef %1, ptr noundef %2, float noundef %24) #2\n  br label %31\n\n31:                                               ; preds = %23, %7\n  %32 = phi i32 [ %8, %7 ], [ %30, %23 ]\n  ret i32 %32\n}\n\ndeclare i64 @BotGoForAir(ptr noundef, i32 noundef, ptr noundef, float noundef) local_unnamed_addr #1\n\ndeclare i64 @BotCTFCarryingFlag(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @trap_AAS_AreaTravelTimeToGoalArea(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @trap_BotChooseNBGItem(i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, float noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"TYPE_7__\", !6, i64 0, !6, i64 4, !6, i64 8, !11, i64 12, !6, i64 16}\n!11 = !{!\"TYPE_6__\", !6, i64 0}\n!12 = !{!10, !6, i64 4}\n!13 = !{!10, !6, i64 12}\n!14 = !{!10, !6, i64 8}\n!15 = !{!10, !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_phy.c_b43legacy_power_saving_ctl_bits.ll\"\n\t.globl\tb43legacy_power_saving_ctl_bits # -- Begin function b43legacy_power_saving_ctl_bits\n\t.p2align\t4, 0x90\n\t.type\tb43legacy_power_saving_ctl_bits,@function\nb43legacy_power_saving_ctl_bits:        # @b43legacy_power_saving_ctl_bits\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tmovl\tB43legacy_MMIO_MACCTL(%rip), %esi\n\tcallq\tb43legacy_read32@PLT\n\tmovl\tB43legacy_MACCTL_HWPS(%rip), %edx\n\tnotl\t%edx\n\tandl\t%eax, %edx\n\torl\tB43legacy_MACCTL_AWAKE(%rip), %edx\n\tmovl\tB43legacy_MMIO_MACCTL(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tb43legacy_write32@PLT\n\tmovq\t(%rbx), %rax\n\tcmpl\t$5, (%rax)\n\tjl\t.LBB0_4\n# %bb.1:                                # %.preheader\n\tmovl\t$100, %ebp\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovl\tB43legacy_SHM_SHARED(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t$64, %edx\n\tcallq\tb43legacy_shm_read32@PLT\n\tcmpl\t$4, %eax\n\tjne\t.LBB0_4\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\t$10, %edi\n\tcallq\tudelay@PLT\n\tdecl\t%ebp\n\tjne\t.LBB0_2\n.LBB0_4:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tb43legacy_power_saving_ctl_bits, .Lfunc_end0-b43legacy_power_saving_ctl_bits\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tB43legacy_MMIO_MACCTL,@object   # @B43legacy_MMIO_MACCTL\n\t.bss\n\t.globl\tB43legacy_MMIO_MACCTL\n\t.p2align\t2\nB43legacy_MMIO_MACCTL:\n\t.long\t0                               # 0x0\n\t.size\tB43legacy_MMIO_MACCTL, 4\n\n\t.type\tB43legacy_MACCTL_HWPS,@object   # @B43legacy_MACCTL_HWPS\n\t.globl\tB43legacy_MACCTL_HWPS\n\t.p2align\t2\nB43legacy_MACCTL_HWPS:\n\t.long\t0                               # 0x0\n\t.size\tB43legacy_MACCTL_HWPS, 4\n\n\t.type\tB43legacy_MACCTL_AWAKE,@object  # @B43legacy_MACCTL_AWAKE\n\t.globl\tB43legacy_MACCTL_AWAKE\n\t.p2align\t2\nB43legacy_MACCTL_AWAKE:\n\t.long\t0                               # 0x0\n\t.size\tB43legacy_MACCTL_AWAKE, 4\n\n\t.type\tB43legacy_SHM_SHARED,@object    # @B43legacy_SHM_SHARED\n\t.globl\tB43legacy_SHM_SHARED\n\t.p2align\t2\nB43legacy_SHM_SHARED:\n\t.long\t0                               # 0x0\n\t.size\tB43legacy_SHM_SHARED, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@B43legacy_MMIO_MACCTL = dso_local local_unnamed_addr global i32 0, align 4\n@B43legacy_MACCTL_HWPS = dso_local local_unnamed_addr global i32 0, align 4\n@B43legacy_MACCTL_AWAKE = dso_local local_unnamed_addr global i32 0, align 4\n@B43legacy_SHM_SHARED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @b43legacy_power_saving_ctl_bits(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load i32, ptr @B43legacy_MMIO_MACCTL, align 4, !tbaa !5\n  %3 = tail call i32 @b43legacy_read32(ptr noundef %0, i32 noundef %2) #2\n  %4 = load i32, ptr @B43legacy_MACCTL_HWPS, align 4, !tbaa !5\n  %5 = xor i32 %4, -1\n  %6 = and i32 %3, %5\n  %7 = load i32, ptr @B43legacy_MACCTL_AWAKE, align 4, !tbaa !5\n  %8 = or i32 %6, %7\n  %9 = load i32, ptr @B43legacy_MMIO_MACCTL, align 4, !tbaa !5\n  %10 = tail call i32 @b43legacy_write32(ptr noundef %0, i32 noundef %9, i32 noundef %8) #2\n  %11 = load ptr, ptr %0, align 8, !tbaa !9\n  %12 = load i32, ptr %11, align 4, !tbaa !12\n  %13 = icmp sgt i32 %12, 4\n  br i1 %13, label %14, label %24\n\n14:                                               ; preds = %1\n  %15 = load i32, ptr @B43legacy_SHM_SHARED, align 4, !tbaa !5\n  br label %16\n\n16:                                               ; preds = %14, %20\n  %17 = phi i32 [ 100, %14 ], [ %21, %20 ]\n  %18 = tail call i32 @b43legacy_shm_read32(ptr noundef nonnull %0, i32 noundef %15, i32 noundef 64) #2\n  %19 = icmp eq i32 %18, 4\n  br i1 %19, label %20, label %24\n\n20:                                               ; preds = %16\n  %21 = add nsw i32 %17, -1\n  %22 = tail call i32 @udelay(i32 noundef 10) #2\n  br label %16, !llvm.loop !14\n\n24:                                               ; preds = %16, %1, %20\n  ret void\n}\n\ndeclare i32 @b43legacy_read32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @b43legacy_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @b43legacy_shm_read32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @udelay(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"b43legacy_wldev\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !6, i64 0}\n!13 = !{!\"TYPE_2__\", !6, i64 0}\n!14 = distinct !{!14, !15}\n!15 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./linux/drivers/net/wireless/broadcom/b43legacy/extr_phy.c_b43legacy_power_saving_ctl_bits.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@B43legacy_MMIO_MACCTL = dso_local local_unnamed_addr global i32 0, align 4\n@B43legacy_MACCTL_HWPS = dso_local local_unnamed_addr global i32 0, align 4\n@B43legacy_MACCTL_AWAKE = dso_local local_unnamed_addr global i32 0, align 4\n@B43legacy_SHM_SHARED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @b43legacy_power_saving_ctl_bits(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr @B43legacy_MMIO_MACCTL, align 4, !tbaa !5\n  %5 = tail call i32 @b43legacy_read32(ptr noundef %0, i32 noundef %4) #2\n  %6 = load i32, ptr @B43legacy_MACCTL_HWPS, align 4, !tbaa !5\n  %7 = xor i32 %6, -1\n  %8 = and i32 %5, %7\n  %9 = load i32, ptr @B43legacy_MACCTL_AWAKE, align 4, !tbaa !5\n  %10 = or i32 %8, %9\n  %11 = load i32, ptr @B43legacy_MMIO_MACCTL, align 4, !tbaa !5\n  %12 = tail call i32 @b43legacy_write32(ptr noundef %0, i32 noundef %11, i32 noundef %10) #2\n  %13 = load ptr, ptr %0, align 8, !tbaa !9\n  %14 = load i32, ptr %13, align 4, !tbaa !12\n  %15 = icmp sgt i32 %14, 4\n  br i1 %15, label %16, label %25\n\n16:                                               ; preds = %3, %21\n  %17 = phi i32 [ %23, %21 ], [ 0, %3 ]\n  %18 = load i32, ptr @B43legacy_SHM_SHARED, align 4, !tbaa !5\n  %19 = tail call i32 @b43legacy_shm_read32(ptr noundef nonnull %0, i32 noundef %18, i32 noundef 64) #2\n  %20 = icmp eq i32 %19, 4\n  br i1 %20, label %21, label %25\n\n21:                                               ; preds = %16\n  %22 = tail call i32 @udelay(i32 noundef 10) #2\n  %23 = add nuw nsw i32 %17, 1\n  %24 = icmp eq i32 %23, 100\n  br i1 %24, label %25, label %16, !llvm.loop !15\n\n25:                                               ; preds = %21, %16, %3\n  ret void\n}\n\ndeclare i32 @b43legacy_read32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @b43legacy_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @b43legacy_shm_read32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @udelay(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"b43legacy_wldev\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !6, i64 0}\n!13 = !{!\"TYPE_4__\", !14, i64 0}\n!14 = !{!\"TYPE_3__\", !6, i64 0}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_hash_haval.c_Encode.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function Encode\n\t.type\tEncode,@function\nEncode:                                 # @Encode\n\t.cfi_startproc\n# %bb.0:\n                                        # kill: def $edx killed $edx def $rdx\n\ttestl\t%edx, %edx\n\tje\t.LBB0_3\n# %bb.1:\n\tdecl\t%edx\n\tshrl\t$2, %edx\n\tincl\t%edx\n\txorl\t%eax, %eax\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovzbl\t(%rsi,%rax,4), %ecx\n\tmovb\t%cl, (%rdi,%rax,4)\n\tmovzbl\t1(%rsi,%rax,4), %ecx\n\tmovb\t%cl, 1(%rdi,%rax,4)\n\tmovzbl\t2(%rsi,%rax,4), %ecx\n\tmovb\t%cl, 2(%rdi,%rax,4)\n\tmovzbl\t3(%rsi,%rax,4), %ecx\n\tmovb\t%cl, 3(%rdi,%rax,4)\n\tincq\t%rax\n\tcmpq\t%rax, %rdx\n\tjne\t.LBB0_2\n.LBB0_3:\n\tretq\n.Lfunc_end0:\n\t.size\tEncode, .Lfunc_end0-Encode\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Encode], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly nofree norecurse nosync nounwind uwtable\ndefine internal void @Encode(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {\n  %4 = icmp eq i64 %2, 0\n  br i1 %4, label %15, label %5\n\n5:                                                ; preds = %3\n  %6 = add nsw i64 %2, -1\n  %7 = lshr i64 %6, 2\n  %8 = trunc i64 %7 to i32\n  br label %9\n\n9:                                                ; preds = %5, %9\n  %10 = phi i32 [ %8, %5 ], [ %13, %9 ]\n  %11 = phi ptr [ %0, %5 ], [ %14, %9 ]\n  %12 = getelementptr inbounds i8, ptr %1, i64 %10\n  %13 = add nuw nsw i32 %10, 1\n  %14 = getelementptr inbounds i8, ptr %11, i64 %13\n  %15 = load i8, ptr %12, align 1, !tbaa !5\n  store i8 %15, ptr %11, align 1, !tbaa !5\n  %16 = getelementptr inbounds i8, ptr %12, i64 1\n  %17 = load i8, ptr %16, align 1, !tbaa !5\n  %18 = getelementptr inbounds i8, ptr %11, i64 1\n  store i8 %17, ptr %18, align 1, !tbaa !5\n  %19 = getelementptr inbounds i8, ptr %12, i64 2\n  %20 = load i8, ptr %19, align 1, !tbaa !5\n  %21 = getelementptr inbounds i8, ptr %11, i64 2\n  store i8 %20, ptr %21, align 1, !tbaa !5\n  %22 = getelementptr inbounds i8, ptr %12, i64 3\n  %23 = load i8, ptr %22, align 1, !tbaa !5\n  %24 = getelementptr inbounds i8, ptr %11, i64 3\n  store i8 %23, ptr %24, align 1, !tbaa !5\n  %25 = icmp eq i32 %13, %10\n  br i1 %25, label %26, label %9, !llvm.loop !8\n\n26:                                               ; preds = %9\n  ret void\n}\n\nattributes #0 = { argmemonly nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"omnipotent char\", !7, i64 0}\n!7 = !{!\"Simple C/C++ TBAA\"}\n!8 = distinct !{!8, !9}\n!9 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./php-src/ext/hash/extr_hash_haval.c_Encode.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Encode], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly nofree norecurse nosync nounwind uwtable\ndefine internal void @Encode(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %35, label %5\n\n5:                                                ; preds = %3\n  %6 = add i32 %2, -1\n  %7 = lshr i32 %6, 2\n  %8 = add nuw nsw i32 %7, 1\n  %9 = zext i32 %8 to i64\n  br label %10\n\n10:                                               ; preds = %5, %10\n  %11 = phi i64 [ 0, %5 ], [ %32, %10 ]\n  %12 = phi i64 [ 0, %5 ], [ %33, %10 ]\n  %13 = getelementptr inbounds i32, ptr %1, i64 %11\n  %14 = load i32, ptr %13, align 4, !tbaa !5\n  %15 = trunc i32 %14 to i8\n  %16 = getelementptr inbounds i8, ptr %0, i64 %12\n  store i8 %15, ptr %16, align 1, !tbaa !9\n  %17 = load i32, ptr %13, align 4, !tbaa !5\n  %18 = lshr i32 %17, 8\n  %19 = trunc i32 %18 to i8\n  %20 = or i64 %12, 1\n  %21 = getelementptr inbounds i8, ptr %0, i64 %20\n  store i8 %19, ptr %21, align 1, !tbaa !9\n  %22 = load i32, ptr %13, align 4, !tbaa !5\n  %23 = lshr i32 %22, 16\n  %24 = trunc i32 %23 to i8\n  %25 = or i64 %12, 2\n  %26 = getelementptr inbounds i8, ptr %0, i64 %25\n  store i8 %24, ptr %26, align 1, !tbaa !9\n  %27 = load i32, ptr %13, align 4, !tbaa !5\n  %28 = lshr i32 %27, 24\n  %29 = trunc i32 %28 to i8\n  %30 = or i64 %12, 3\n  %31 = getelementptr inbounds i8, ptr %0, i64 %30\n  store i8 %29, ptr %31, align 1, !tbaa !9\n  %32 = add nuw nsw i64 %11, 1\n  %33 = add nuw nsw i64 %12, 4\n  %34 = icmp eq i64 %32, %9\n  br i1 %34, label %35, label %10, !llvm.loop !10\n\n35:                                               ; preds = %10, %3\n  ret void\n}\n\nattributes #0 = { argmemonly nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = distinct !{!10, !11}\n!11 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_flow_offload.c_flow_block_cb_priv.ll\"\n\t.globl\tflow_block_cb_priv              # -- Begin function flow_block_cb_priv\n\t.p2align\t4, 0x90\n\t.type\tflow_block_cb_priv,@function\nflow_block_cb_priv:                     # @flow_block_cb_priv\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t(%rdi), %rax\n\tretq\n.Lfunc_end0:\n\t.size\tflow_block_cb_priv, .Lfunc_end0-flow_block_cb_priv\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine dso_local ptr @flow_block_cb_priv(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  ret ptr %2\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"flow_block_cb\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/net/core/extr_flow_offload.c_flow_block_cb_priv.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine dso_local ptr @flow_block_cb_priv(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  ret ptr %2\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"flow_block_cb\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_hda_codec.c_snd_hda_input_mux_info.ll\"\n\t.globl\tsnd_hda_input_mux_info          # -- Begin function snd_hda_input_mux_info\n\t.p2align\t4, 0x90\n\t.type\tsnd_hda_input_mux_info,@function\nsnd_hda_input_mux_info:                 # @snd_hda_input_mux_info\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tSNDRV_CTL_ELEM_TYPE_ENUMERATED(%rip), %eax\n\tmovl\t%eax, 16(%rsi)\n\tmovl\t$1, (%rsi)\n\tmovl\t(%rdi), %ecx\n\tmovl\t%ecx, 4(%rsi)\n\ttestl\t%ecx, %ecx\n\tje\t.LBB0_2\n# %bb.1:\n\tleal\t-1(%rcx), %edx\n\tmovl\t8(%rsi), %eax\n\tmovl\t12(%rsi), %r8d\n\tcmpl\t%ecx, %eax\n\tcmovbl\t%eax, %edx\n\tmovq\t8(%rdi), %rax\n\tmovl\t(%rax,%rdx,4), %esi\n\tmovl\t%r8d, %edi\n\tcallq\tstrcpy@PLT\n.LBB0_2:\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsnd_hda_input_mux_info, .Lfunc_end0-snd_hda_input_mux_info\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSNDRV_CTL_ELEM_TYPE_ENUMERATED,@object # @SNDRV_CTL_ELEM_TYPE_ENUMERATED\n\t.bss\n\t.globl\tSNDRV_CTL_ELEM_TYPE_ENUMERATED\n\t.p2align\t2\nSNDRV_CTL_ELEM_TYPE_ENUMERATED:\n\t.long\t0                               # 0x0\n\t.size\tSNDRV_CTL_ELEM_TYPE_ENUMERATED, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_ctl_elem_info = type { i32, i32, i32, i32, i32 }\n%struct.hda_input_mux = type { i32, i32, i32, i32, ptr }\n\n@SNDRV_CTL_ELEM_TYPE_ENUMERATED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @snd_hda_input_mux_info(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @SNDRV_CTL_ELEM_TYPE_ENUMERATED, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %1, i64 0, i32 4\n  store i32 %3, ptr %4, align 8, !tbaa !9\n  store i32 1, ptr %1, align 8, !tbaa !11\n  %5 = load i32, ptr %0, align 8, !tbaa !12\n  %6 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %1, i64 0, i32 1\n  store i32 %5, ptr %6, align 4, !tbaa !14\n  %7 = icmp eq i32 %5, 0\n  br i1 %7, label %16, label %8\n\n8:                                                ; preds = %2\n  %9 = add nsw i32 %5, -1\n  %10 = getelementptr inbounds %struct.hda_input_mux, ptr %1, i64 0, i32 2\n  %11 = load i32, ptr %10, align 8, !tbaa !15\n  %12 = getelementptr inbounds %struct.hda_input_mux, ptr %1, i64 0, i32 3\n  %13 = load i32, ptr %12, align 4, !tbaa !16\n  %14 = icmp ult i32 %11, %5\n  %15 = select i1 %14, i32 %9, i32 %11\n  %16 = load ptr, ptr %0, align 8, !tbaa !17\n  %17 = zext i32 %15 to i64\n  %18 = getelementptr inbounds i32, ptr %16, i64 %17\n  %19 = load i32, ptr %18, align 4, !tbaa !5\n  %20 = tail call i32 @strcpy(i32 noundef %13, i32 noundef %19) #2\n  br label %21\n\n21:                                               ; preds = %8, %2\n  ret i32 0\n}\n\ndeclare i32 @strcpy(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"snd_ctl_elem_info\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16}\n!11 = !{!10, !6, i64 0}\n!12 = !{!13, !6, i64 0}\n!13 = !{!\"hda_input_mux\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !14, i64 16}\n!14 = !{!\"any pointer\", !7, i64 0}\n!15 = !{!13, !6, i64 8}\n!16 = !{!13, !6, i64 12}\n!17 = !{!13, !14, i64 16}\n</s><s>", "file:": "./linux/sound/pci/hda/extr_hda_codec.c_snd_hda_input_mux_info.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_ctl_elem_info = type { i32, %struct.TYPE_4__, i32 }\n%struct.TYPE_4__ = type { %struct.TYPE_6__ }\n%struct.TYPE_6__ = type { i32, i32, i32 }\n%struct.hda_input_mux = type { i32, ptr }\n%struct.TYPE_5__ = type { i32 }\n\n@SNDRV_CTL_ELEM_TYPE_ENUMERATED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @snd_hda_input_mux_info(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @SNDRV_CTL_ELEM_TYPE_ENUMERATED, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %1, i64 0, i32 2\n  store i32 %3, ptr %4, align 4, !tbaa !9\n  store i32 1, ptr %1, align 4, !tbaa !13\n  %5 = load i32, ptr %0, align 8, !tbaa !14\n  %6 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %1, i64 0, i32 1\n  store i32 %5, ptr %6, align 4, !tbaa !17\n  %7 = icmp eq i32 %5, 0\n  br i1 %7, label %22, label %8\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %1, i64 0, i32 1, i32 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !18\n  %11 = icmp ult i32 %10, %5\n  %12 = add i32 %5, -1\n  %13 = select i1 %11, i32 %10, i32 %12\n  %14 = getelementptr inbounds %struct.snd_ctl_elem_info, ptr %1, i64 0, i32 1, i32 0, i32 2\n  %15 = load i32, ptr %14, align 4, !tbaa !19\n  %16 = getelementptr inbounds %struct.hda_input_mux, ptr %0, i64 0, i32 1\n  %17 = load ptr, ptr %16, align 8, !tbaa !20\n  %18 = zext i32 %13 to i64\n  %19 = getelementptr inbounds %struct.TYPE_5__, ptr %17, i64 %18\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  %21 = tail call i32 @strcpy(i32 noundef %15, i32 noundef %20) #2\n  br label %22\n\n22:                                               ; preds = %2, %8\n  ret i32 0\n}\n\ndeclare i32 @strcpy(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"snd_ctl_elem_info\", !6, i64 0, !11, i64 4, !6, i64 16}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"TYPE_6__\", !6, i64 0, !6, i64 4, !6, i64 8}\n!13 = !{!10, !6, i64 0}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"hda_input_mux\", !6, i64 0, !16, i64 8}\n!16 = !{!\"any pointer\", !7, i64 0}\n!17 = !{!10, !6, i64 4}\n!18 = !{!10, !6, i64 8}\n!19 = !{!10, !6, i64 12}\n!20 = !{!15, !16, i64 8}\n!21 = !{!22, !6, i64 0}\n!22 = !{!\"TYPE_5__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ps2kbd.c_ps2kbd_event.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ps2kbd_event\n\t.type\tps2kbd_event,@function\nps2kbd_event:                           # @ps2kbd_event\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %rbx\n\tmovl\t%esi, %r15d\n\tmovl\t%edi, %ebp\n\tleaq\t4(%rdx), %r14\n\tmovq\t%r14, %rdi\n\tcallq\tpthread_mutex_lock@PLT\n\tcmpl\t$0, 16(%rbx)\n\tje\t.LBB0_3\n# %bb.1:\n\tmovq\t8(%rbx), %r12\n\tmovq\tPS2KBD_FIFOSZ(%rip), %r13\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\tmovl\t%r15d, %edx\n\tcallq\tps2kbd_keysym_queue@PLT\n\tmovq\t%r14, %rdi\n\tcallq\tpthread_mutex_unlock@PLT\n\tcmpq\t%r13, %r12\n\tjne\t.LBB0_4\n# %bb.2:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_3:\n\t.cfi_def_cfa_offset 64\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tpthread_mutex_unlock@PLT        # TAILCALL\n.LBB0_4:\n\t.cfi_def_cfa_offset 64\n\tmovl\t(%rbx), %edi\n\tmovl\t$1, %esi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tatkbdc_event@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tps2kbd_event, .Lfunc_end0-ps2kbd_event\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPS2KBD_FIFOSZ,@object           # @PS2KBD_FIFOSZ\n\t.bss\n\t.globl\tPS2KBD_FIFOSZ\n\t.p2align\t3\nPS2KBD_FIFOSZ:\n\t.quad\t0                               # 0x0\n\t.size\tPS2KBD_FIFOSZ, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ps2kbd_softc = type { i32, i32, i64, i32 }\n\n@PS2KBD_FIFOSZ = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ps2kbd_event], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ps2kbd_event(i32 noundef %0, i32 noundef %1, ptr noundef %2) #0 {\n  %4 = getelementptr inbounds %struct.ps2kbd_softc, ptr %2, i64 0, i32 1\n  %5 = tail call i32 @pthread_mutex_lock(ptr noundef nonnull %4) #2\n  %6 = getelementptr inbounds %struct.ps2kbd_softc, ptr %2, i64 0, i32 3\n  %7 = load i32, ptr %6, align 8, !tbaa !5\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %13, label %9\n\n9:                                                ; preds = %3\n  %10 = getelementptr inbounds %struct.ps2kbd_softc, ptr %2, i64 0, i32 2\n  %11 = load i64, ptr %10, align 8, !tbaa !11\n  %12 = load i64, ptr @PS2KBD_FIFOSZ, align 8, !tbaa !12\n  tail call void @ps2kbd_keysym_queue(ptr noundef %2, i32 noundef %0, i32 noundef %1) #2\n  tail call i32 @pthread_mutex_unlock(ptr noundef nonnull %4) #2\n  %13 = icmp eq i64 %11, %12\n  br i1 %13, label %16, label %14\n\n14:                                               ; preds = %9\n  %15 = load i32, ptr %2, align 8, !tbaa !13\n  tail call i32 @atkbdc_event(i32 noundef %15, i32 noundef 1) #2\n  br label %16\n\n16:                                               ; preds = %14, %9\n  ret void\n}\n\ndeclare i32 @pthread_mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare void @ps2kbd_keysym_queue(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @pthread_mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @atkbdc_event(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"ps2kbd_softc\", !7, i64 0, !7, i64 4, !10, i64 8, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!10, !10, i64 0}\n!13 = !{!6, !7, i64 0}\n</s><s>", "file:": "./xhyve/src/extr_ps2kbd.c_ps2kbd_event.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ps2kbd_softc = type { i32, i32, %struct.TYPE_2__, i32 }\n%struct.TYPE_2__ = type { i64 }\n\n@PS2KBD_FIFOSZ = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ps2kbd_event], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ps2kbd_event(i32 noundef %0, i32 noundef %1, ptr noundef %2) #0 {\n  %4 = getelementptr inbounds %struct.ps2kbd_softc, ptr %2, i64 0, i32 1\n  %5 = tail call i32 @pthread_mutex_lock(ptr noundef nonnull %4) #2\n  %6 = getelementptr inbounds %struct.ps2kbd_softc, ptr %2, i64 0, i32 3\n  %7 = load i32, ptr %6, align 8, !tbaa !5\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %9, label %11\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @pthread_mutex_unlock(ptr noundef nonnull %4) #2\n  br label %21\n\n11:                                               ; preds = %3\n  %12 = getelementptr inbounds %struct.ps2kbd_softc, ptr %2, i64 0, i32 2\n  %13 = load i64, ptr %12, align 8, !tbaa !12\n  %14 = load i64, ptr @PS2KBD_FIFOSZ, align 8, !tbaa !13\n  %15 = icmp eq i64 %13, %14\n  %16 = tail call i32 @ps2kbd_keysym_queue(ptr noundef nonnull %2, i32 noundef %0, i32 noundef %1) #2\n  %17 = tail call i32 @pthread_mutex_unlock(ptr noundef nonnull %4) #2\n  br i1 %15, label %21, label %18\n\n18:                                               ; preds = %11\n  %19 = load i32, ptr %2, align 8, !tbaa !14\n  %20 = tail call i32 @atkbdc_event(i32 noundef %19, i32 noundef 1) #2\n  br label %21\n\n21:                                               ; preds = %11, %18, %9\n  ret void\n}\n\ndeclare i32 @pthread_mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pthread_mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ps2kbd_keysym_queue(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @atkbdc_event(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"ps2kbd_softc\", !7, i64 0, !7, i64 4, !10, i64 8, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!6, !11, i64 8}\n!13 = !{!11, !11, i64 0}\n!14 = !{!6, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_rtsx_card.c_turn_off_led.ll\"\n\t.globl\tturn_off_led                    # -- Begin function turn_off_led\n\t.p2align\t4, 0x90\n\t.type\tturn_off_led,@function\nturn_off_led:                           # @turn_off_led\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %rbx\n\tmovl\t$21128, %esi                    # imm = 0x5288\n\tcallq\tCHECK_PID@PLT\n\tmovl\t$1, %edx\n\tmovl\t%ebp, %ecx\n\tshll\t%cl, %edx\n\txorl\t%ecx, %ecx\n\ttestq\t%rax, %rax\n\tmovl\tCARD_GPIO(%rip), %esi\n\tcmovel\t%edx, %ecx\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\trtsx_write_register@PLT         # TAILCALL\n.Lfunc_end0:\n\t.size\tturn_off_led, .Lfunc_end0-turn_off_led\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCARD_GPIO,@object               # @CARD_GPIO\n\t.bss\n\t.globl\tCARD_GPIO\n\t.p2align\t2\nCARD_GPIO:\n\t.long\t0                               # 0x0\n\t.size\tCARD_GPIO, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@CARD_GPIO = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @turn_off_led(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call i64 @CHECK_PID(ptr noundef %0, i32 noundef 21128) #2\n  %4 = icmp eq i64 %3, 0\n  %5 = shl nuw i32 1, %1\n  %6 = load i32, ptr @CARD_GPIO, align 4\n  %7 = select i1 %4, i32 0, i32 %5\n  %8 = tail call i32 @rtsx_write_register(ptr noundef %0, i32 noundef %6, i32 noundef %7) #2\n  ret i32 %8\n}\n\ndeclare i64 @CHECK_PID(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rtsx_write_register(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/drivers/staging/rts5208/extr_rtsx_card.c_turn_off_led.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@CARD_GPIO = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @turn_off_led(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call i64 @CHECK_PID(ptr noundef %0, i32 noundef 21128) #2\n  %4 = icmp eq i64 %3, 0\n  %5 = load i32, ptr @CARD_GPIO, align 4, !tbaa !5\n  %6 = shl nuw i32 1, %1\n  %7 = select i1 %4, i32 %6, i32 0\n  %8 = tail call i32 @rtsx_write_register(ptr noundef %0, i32 noundef %5, i32 noundef %6, i32 noundef %7) #2\n  ret void\n}\n\ndeclare i64 @CHECK_PID(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rtsx_write_register(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tscFunctionImpl.c_no_next_step.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function no_next_step\n\t.type\tno_next_step,@function\nno_next_step:                           # @no_next_step\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcallq\tGET_RES_INFO@PLT\n\tmovl\t$1, (%rax)\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tno_next_step, .Lfunc_end0-no_next_step\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @no_next_step], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @no_next_step(ptr noundef %0) #0 {\n  %2 = tail call ptr @GET_RES_INFO(ptr noundef %0) #2\n  store i32 1, ptr %2, align 4, !tbaa !5\n  ret void\n}\n\ndeclare ptr @GET_RES_INFO(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_2__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./TDengine/src/client/src/extr_tscFunctionImpl.c_no_next_step.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @no_next_step], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @no_next_step(ptr noundef %0) #0 {\n  %2 = tail call ptr @GET_RES_INFO(ptr noundef %0) #2\n  store i32 1, ptr %2, align 4, !tbaa !5\n  ret void\n}\n\ndeclare ptr @GET_RES_INFO(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_gas_serv.c_convert_to_protected_dual.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function convert_to_protected_dual\n\t.type\tconvert_to_protected_dual,@function\nconvert_to_protected_dual:              # @convert_to_protected_dual\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcallq\twpabuf_mhead_u8@PLT\n\tmovl\tWLAN_ACTION_PROTECTED_DUAL(%rip), %ecx\n\tmovl\t%ecx, (%rax)\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tconvert_to_protected_dual, .Lfunc_end0-convert_to_protected_dual\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tWLAN_ACTION_PROTECTED_DUAL,@object # @WLAN_ACTION_PROTECTED_DUAL\n\t.bss\n\t.globl\tWLAN_ACTION_PROTECTED_DUAL\n\t.p2align\t2\nWLAN_ACTION_PROTECTED_DUAL:\n\t.long\t0                               # 0x0\n\t.size\tWLAN_ACTION_PROTECTED_DUAL, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WLAN_ACTION_PROTECTED_DUAL = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @convert_to_protected_dual], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @convert_to_protected_dual(ptr noundef %0) #0 {\n  %2 = tail call ptr @wpabuf_mhead_u8(ptr noundef %0) #2\n  %3 = load i32, ptr @WLAN_ACTION_PROTECTED_DUAL, align 4, !tbaa !5\n  store i32 %3, ptr %2, align 4, !tbaa !5\n  ret void\n}\n\ndeclare ptr @wpabuf_mhead_u8(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/contrib/wpa/src/ap/extr_gas_serv.c_convert_to_protected_dual.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WLAN_ACTION_PROTECTED_DUAL = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @convert_to_protected_dual], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @convert_to_protected_dual(ptr noundef %0) #0 {\n  %2 = tail call ptr @wpabuf_mhead_u8(ptr noundef %0) #2\n  %3 = load i32, ptr @WLAN_ACTION_PROTECTED_DUAL, align 4, !tbaa !5\n  store i32 %3, ptr %2, align 4, !tbaa !5\n  ret void\n}\n\ndeclare ptr @wpabuf_mhead_u8(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_amdgpu_amdkfd_gfx_v10.c_get_sdma_base_addr.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function get_sdma_base_addr\n\t.type\tget_sdma_base_addr,@function\nget_sdma_base_addr:                     # @get_sdma_base_addr\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %ebx\n\tmovl\t%esi, %ebp\n\tmovl\tSDMA0(%rip), %edi\n\tmovl\tmmSDMA0_RLC0_RB_CNTL(%rip), %edx\n\txorl\t%esi, %esi\n\tcallq\tSOC15_REG_OFFSET@PLT\n\tsubl\tmmSDMA0_RLC0_RB_CNTL(%rip), %eax\n\tmovl\t%eax, (%rsp)\n\tmovl\tSDMA1(%rip), %edi\n\tmovl\tmmSDMA1_RLC0_RB_CNTL(%rip), %edx\n\txorl\t%esi, %esi\n\tcallq\tSOC15_REG_OFFSET@PLT\n\tmovl\tmmSDMA0_RLC0_RB_CNTL(%rip), %ecx\n\tsubl\t%ecx, %eax\n\tmovl\t%eax, 4(%rsp)\n\tmovl\t%ebp, %eax\n\tmovl\tmmSDMA0_RLC1_RB_CNTL(%rip), %ebp\n\tsubl\t%ecx, %ebp\n\timull\t%ebx, %ebp\n\taddl\t(%rsp,%rax,4), %ebp\n\tmovl\t$.L.str, %edi\n\tmovl\t%ebp, %esi\n\tcallq\tpr_debug@PLT\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tget_sdma_base_addr, .Lfunc_end0-get_sdma_base_addr\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSDMA0,@object                   # @SDMA0\n\t.bss\n\t.globl\tSDMA0\n\t.p2align\t2\nSDMA0:\n\t.long\t0                               # 0x0\n\t.size\tSDMA0, 4\n\n\t.type\tmmSDMA0_RLC0_RB_CNTL,@object    # @mmSDMA0_RLC0_RB_CNTL\n\t.globl\tmmSDMA0_RLC0_RB_CNTL\n\t.p2align\t2\nmmSDMA0_RLC0_RB_CNTL:\n\t.long\t0                               # 0x0\n\t.size\tmmSDMA0_RLC0_RB_CNTL, 4\n\n\t.type\tSDMA1,@object                   # @SDMA1\n\t.globl\tSDMA1\n\t.p2align\t2\nSDMA1:\n\t.long\t0                               # 0x0\n\t.size\tSDMA1, 4\n\n\t.type\tmmSDMA1_RLC0_RB_CNTL,@object    # @mmSDMA1_RLC0_RB_CNTL\n\t.globl\tmmSDMA1_RLC0_RB_CNTL\n\t.p2align\t2\nmmSDMA1_RLC0_RB_CNTL:\n\t.long\t0                               # 0x0\n\t.size\tmmSDMA1_RLC0_RB_CNTL, 4\n\n\t.type\tmmSDMA0_RLC1_RB_CNTL,@object    # @mmSDMA0_RLC1_RB_CNTL\n\t.globl\tmmSDMA0_RLC1_RB_CNTL\n\t.p2align\t2\nmmSDMA0_RLC1_RB_CNTL:\n\t.long\t0                               # 0x0\n\t.size\tmmSDMA0_RLC1_RB_CNTL, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"sdma base address: 0x%x\\n\"\n\t.size\t.L.str, 25\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SDMA0 = dso_local local_unnamed_addr global i32 0, align 4\n@mmSDMA0_RLC0_RB_CNTL = dso_local local_unnamed_addr global i32 0, align 4\n@SDMA1 = dso_local local_unnamed_addr global i32 0, align 4\n@mmSDMA1_RLC0_RB_CNTL = dso_local local_unnamed_addr global i32 0, align 4\n@mmSDMA0_RLC1_RB_CNTL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [25 x i8] c\"sdma base address: 0x%x\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_sdma_base_addr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @get_sdma_base_addr(ptr nocapture readnone %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = alloca [2 x i32], align 4\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #3\n  %5 = load i32, ptr @SDMA0, align 4, !tbaa !5\n  %6 = load i32, ptr @mmSDMA0_RLC0_RB_CNTL, align 4, !tbaa !5\n  %7 = tail call i32 @SOC15_REG_OFFSET(i32 noundef %5, i32 noundef 0, i32 noundef %6) #3\n  %8 = load i32, ptr @mmSDMA0_RLC0_RB_CNTL, align 4, !tbaa !5\n  %9 = sub nsw i32 %7, %8\n  store i32 %9, ptr %4, align 4, !tbaa !5\n  %10 = load i32, ptr @SDMA1, align 4, !tbaa !5\n  %11 = load i32, ptr @mmSDMA1_RLC0_RB_CNTL, align 4, !tbaa !5\n  %12 = tail call i32 @SOC15_REG_OFFSET(i32 noundef %10, i32 noundef 0, i32 noundef %11) #3\n  %13 = load i32, ptr @mmSDMA0_RLC0_RB_CNTL, align 4, !tbaa !5\n  %14 = sub nsw i32 %12, %13\n  %15 = getelementptr inbounds [2 x i32], ptr %4, i64 0, i64 1\n  store i32 %14, ptr %15, align 4, !tbaa !5\n  %16 = load i32, ptr @mmSDMA0_RLC1_RB_CNTL, align 4, !tbaa !5\n  %17 = sub nsw i32 %16, %13\n  %18 = mul nsw i32 %17, %2\n  %19 = load i32, ptr %4, align 4, !tbaa !5\n  %20 = add nsw i32 %19, %18\n  %21 = tail call i32 @pr_debug(ptr noundef nonnull @.str, i32 noundef %20) #3\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #3\n  ret i32 %20\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @SOC15_REG_OFFSET(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @pr_debug(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/gpu/drm/amd/amdgpu/extr_amdgpu_amdkfd_gfx_v10.c_get_sdma_base_addr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SDMA0 = dso_local local_unnamed_addr global i32 0, align 4\n@mmSDMA0_RLC0_RB_CNTL = dso_local local_unnamed_addr global i32 0, align 4\n@SDMA1 = dso_local local_unnamed_addr global i32 0, align 4\n@mmSDMA1_RLC0_RB_CNTL = dso_local local_unnamed_addr global i32 0, align 4\n@mmSDMA0_RLC1_RB_CNTL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [25 x i8] c\"sdma base address: 0x%x\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_sdma_base_addr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @get_sdma_base_addr(ptr nocapture readnone %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = alloca [2 x i32], align 4\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #3\n  %5 = load i32, ptr @SDMA0, align 4, !tbaa !5\n  %6 = load i32, ptr @mmSDMA0_RLC0_RB_CNTL, align 4, !tbaa !5\n  %7 = tail call i32 @SOC15_REG_OFFSET(i32 noundef %5, i32 noundef 0, i32 noundef %6) #3\n  %8 = load i32, ptr @mmSDMA0_RLC0_RB_CNTL, align 4, !tbaa !5\n  %9 = sub i32 %7, %8\n  store i32 %9, ptr %4, align 4, !tbaa !5\n  %10 = getelementptr inbounds i32, ptr %4, i64 1\n  %11 = load i32, ptr @SDMA1, align 4, !tbaa !5\n  %12 = load i32, ptr @mmSDMA1_RLC0_RB_CNTL, align 4, !tbaa !5\n  %13 = tail call i32 @SOC15_REG_OFFSET(i32 noundef %11, i32 noundef 0, i32 noundef %12) #3\n  %14 = load i32, ptr @mmSDMA0_RLC0_RB_CNTL, align 4, !tbaa !5\n  %15 = sub i32 %13, %14\n  store i32 %15, ptr %10, align 4, !tbaa !5\n  %16 = zext i32 %1 to i64\n  %17 = getelementptr inbounds [2 x i32], ptr %4, i64 0, i64 %16\n  %18 = load i32, ptr %17, align 4, !tbaa !5\n  %19 = load i32, ptr @mmSDMA0_RLC1_RB_CNTL, align 4, !tbaa !5\n  %20 = sub i32 %19, %14\n  %21 = mul i32 %20, %2\n  %22 = add i32 %21, %18\n  %23 = tail call i32 @pr_debug(ptr noundef nonnull @.str, i32 noundef %22) #3\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #3\n  ret i32 %22\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @SOC15_REG_OFFSET(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @pr_debug(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_zx_vou.c_zx_vou_disable_vblank.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function zx_vou_disable_vblank\n\t.type\tzx_vou_disable_vblank,@function\nzx_vou_disable_vblank:                  # @zx_vou_disable_vblank\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tcallq\tto_zx_crtc@PLT\n\tmovq\t%rax, %r14\n\tmovq\t%rbx, %rdi\n\tcallq\tcrtc_to_vou@PLT\n\tmovq\tTIMING_INT_CTRL(%rip), %rdi\n\taddq\t(%rax), %rdi\n\tmovq\t(%r14), %rax\n\tmovl\t(%rax), %esi\n\txorl\t%edx, %edx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tzx_writel_mask@PLT              # TAILCALL\n.Lfunc_end0:\n\t.size\tzx_vou_disable_vblank, .Lfunc_end0-zx_vou_disable_vblank\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tTIMING_INT_CTRL,@object         # @TIMING_INT_CTRL\n\t.bss\n\t.globl\tTIMING_INT_CTRL\n\t.p2align\t3\nTIMING_INT_CTRL:\n\t.quad\t0                               # 0x0\n\t.size\tTIMING_INT_CTRL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@TIMING_INT_CTRL = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zx_vou_disable_vblank], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @zx_vou_disable_vblank(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_zx_crtc(ptr noundef %0) #2\n  %3 = tail call ptr @crtc_to_vou(ptr noundef %0) #2\n  %4 = load i64, ptr %3, align 8, !tbaa !5\n  %5 = load i64, ptr @TIMING_INT_CTRL, align 8, !tbaa !10\n  %6 = add nsw i64 %5, %4\n  %7 = load ptr, ptr %2, align 8, !tbaa !11\n  %8 = load i32, ptr %7, align 4, !tbaa !13\n  %9 = tail call i32 @zx_writel_mask(i64 noundef %6, i32 noundef %8, i32 noundef 0) #2\n  ret void\n}\n\ndeclare ptr @to_zx_crtc(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @crtc_to_vou(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @zx_writel_mask(i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"zx_vou\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"any pointer\", !8, i64 0}\n!13 = !{!14, !15, i64 0}\n!14 = !{!\"TYPE_2__\", !15, i64 0}\n!15 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./linux/drivers/gpu/drm/zte/extr_zx_vou.c_zx_vou_disable_vblank.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@TIMING_INT_CTRL = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zx_vou_disable_vblank], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @zx_vou_disable_vblank(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_zx_crtc(ptr noundef %0) #2\n  %3 = tail call ptr @crtc_to_vou(ptr noundef %0) #2\n  %4 = load i64, ptr %3, align 8, !tbaa !5\n  %5 = load i64, ptr @TIMING_INT_CTRL, align 8, !tbaa !10\n  %6 = add nsw i64 %5, %4\n  %7 = load ptr, ptr %2, align 8, !tbaa !11\n  %8 = load i32, ptr %7, align 4, !tbaa !14\n  %9 = tail call i32 @zx_writel_mask(i64 noundef %6, i32 noundef %8, i32 noundef 0) #2\n  ret void\n}\n\ndeclare ptr @to_zx_crtc(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @crtc_to_vou(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @zx_writel_mask(i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"zx_vou_hw\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !13, i64 0}\n!12 = !{!\"zx_crtc\", !13, i64 0}\n!13 = !{!\"any pointer\", !8, i64 0}\n!14 = !{!15, !16, i64 0}\n!15 = !{!\"TYPE_2__\", !16, i64 0}\n!16 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sdp.c_Read.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function Read\n\t.type\tRead,@function\nRead:                                   # @Read\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t(%rdi), %r8\n\ttestq\t%rdx, %rdx\n\tje\t.LBB0_1\n# %bb.2:                                # %.preheader\n\tmovq\t%rdx, %rax\n\txorl\t%edx, %edx\n\t.p2align\t4, 0x90\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovzbl\t(%r8,%rdx), %ecx\n\ttestb\t%cl, %cl\n\tje\t.LBB0_6\n# %bb.4:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovb\t%cl, (%rsi,%rdx)\n\tincq\t%rdx\n\tcmpq\t%rdx, %rax\n\tjne\t.LBB0_3\n# %bb.5:                                # %.loopexitsplit\n\taddq\t%rdx, %r8\n\tmovq\t%r8, (%rdi)\n\tretq\n.LBB0_1:\n\txorl\t%eax, %eax\n\tmovq\t%r8, (%rdi)\n\tretq\n.LBB0_6:                                # %..loopexit_crit_edge\n\taddq\t%rdx, %r8\n\tmovq\t%rdx, %rax\n\tmovq\t%r8, (%rdi)\n\tretq\n.Lfunc_end0:\n\t.size\tRead, .Lfunc_end0-Read\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Read], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine internal i64 @Read(ptr nocapture noundef %0, ptr nocapture noundef writeonly %1, i64 noundef %2) #0 {\n  %4 = load ptr, ptr %0, align 8, !tbaa !5\n  %5 = icmp eq i64 %2, 0\n  br i1 %5, label %11, label %6\n\n6:                                                ; preds = %3, %6\n  %7 = phi i64 [ %10, %6 ], [ 0, %3 ]\n  %8 = getelementptr inbounds i8, ptr %4, i64 %7\n  %9 = load i8, ptr %8, align 1, !tbaa !9\n  %10 = add i64 %7, 1\n  %11 = icmp eq i8 %9, 0\n  br i1 %11, label %12, label %6\n\n12:                                               ; preds = %6\n  %13 = add i64 %7, %2\n  %14 = icmp eq i64 %13, %2\n  %15 = add i64 %7, %4\n  %16 = select i1 %14, i64 %15, i64 %7\n  store ptr %16, ptr %0, align 8, !tbaa !5\n  %17 = select i1 %14, i64 %2, i64 %7\n  ret i64 %17\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n</s><s>", "file:": "./vlc/modules/access/extr_sdp.c_Read.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Read], section \"llvm.metadata\"\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine internal i64 @Read(ptr nocapture noundef %0, ptr nocapture noundef writeonly %1, i64 noundef %2) #0 {\n  %4 = load ptr, ptr %0, align 8, !tbaa !5\n  %5 = icmp eq i64 %2, 0\n  br i1 %5, label %17, label %6\n\n6:                                                ; preds = %3, %12\n  %7 = phi i64 [ %15, %12 ], [ 0, %3 ]\n  %8 = phi ptr [ %14, %12 ], [ %1, %3 ]\n  %9 = phi ptr [ %13, %12 ], [ %4, %3 ]\n  %10 = load i8, ptr %9, align 1, !tbaa !10\n  %11 = icmp eq i8 %10, 0\n  br i1 %11, label %17, label %12\n\n12:                                               ; preds = %6\n  %13 = getelementptr inbounds i8, ptr %9, i64 1\n  %14 = getelementptr inbounds i8, ptr %8, i64 1\n  store i8 %10, ptr %8, align 1, !tbaa !10\n  %15 = add nuw i64 %7, 1\n  %16 = icmp eq i64 %15, %2\n  br i1 %16, label %17, label %6, !llvm.loop !11\n\n17:                                               ; preds = %6, %12, %3\n  %18 = phi ptr [ %4, %3 ], [ %13, %12 ], [ %9, %6 ]\n  %19 = phi i64 [ 0, %3 ], [ %2, %12 ], [ %7, %6 ]\n  store ptr %18, ptr %0, align 8, !tbaa !5\n  ret i64 %19\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!8, !8, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_aarch64-opc.c_set_syntax_error.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function set_syntax_error\n\t.type\tset_syntax_error,@function\nset_syntax_error:                       # @set_syntax_error\n\t.cfi_startproc\n# %bb.0:\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t%rdx, %rcx\n\tmovl\t%esi, %edx\n\tmovl\tAARCH64_OPDE_SYNTAX_ERROR(%rip), %esi\n\tjmp\tset_error@PLT                   # TAILCALL\n.LBB0_1:\n\tretq\n.Lfunc_end0:\n\t.size\tset_syntax_error, .Lfunc_end0-set_syntax_error\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tAARCH64_OPDE_SYNTAX_ERROR,@object # @AARCH64_OPDE_SYNTAX_ERROR\n\t.bss\n\t.globl\tAARCH64_OPDE_SYNTAX_ERROR\n\t.p2align\t2\nAARCH64_OPDE_SYNTAX_ERROR:\n\t.long\t0                               # 0x0\n\t.size\tAARCH64_OPDE_SYNTAX_ERROR, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@AARCH64_OPDE_SYNTAX_ERROR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @set_syntax_error], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @set_syntax_error(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {\n  %4 = icmp eq ptr %0, null\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr @AARCH64_OPDE_SYNTAX_ERROR, align 4, !tbaa !5\n  tail call void @set_error(ptr noundef nonnull %0, i32 noundef %6, i32 noundef %1, ptr noundef %2) #2\n  br label %7\n\n7:                                                ; preds = %5, %3\n  ret void\n}\n\ndeclare void @set_error(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./radare2/libr/asm/arch/arm/aarch64/extr_aarch64-opc.c_set_syntax_error.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@AARCH64_OPDE_SYNTAX_ERROR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @set_syntax_error], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @set_syntax_error(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {\n  %4 = icmp eq ptr %0, null\n  br i1 %4, label %8, label %5\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr @AARCH64_OPDE_SYNTAX_ERROR, align 4, !tbaa !5\n  %7 = tail call i32 @set_error(ptr noundef nonnull %0, i32 noundef %6, i32 noundef %1, ptr noundef %2) #2\n  br label %8\n\n8:                                                ; preds = %3, %5\n  ret void\n}\n\ndeclare i32 @set_error(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_nouveau_debugfs.c_nouveau_debugfs_fini.ll\"\n\t.globl\tnouveau_debugfs_fini            # -- Begin function nouveau_debugfs_fini\n\t.p2align\t4, 0x90\n\t.type\tnouveau_debugfs_fini,@function\nnouveau_debugfs_fini:                   # @nouveau_debugfs_fini\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovq\t(%rdi), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_1\n# %bb.2:\n\tcmpq\t$0, (%rdi)\n\tje\t.LBB0_4\n# %bb.3:\n\tcallq\tnvif_object_fini@PLT\n\tmovq\t(%rbx), %rdi\n\tjmp\t.LBB0_4\n.LBB0_1:\n\txorl\t%edi, %edi\n.LBB0_4:\n\tcallq\tkfree@PLT\n\tmovq\t$0, (%rbx)\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tnouveau_debugfs_fini, .Lfunc_end0-nouveau_debugfs_fini\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @nouveau_debugfs_fini(ptr nocapture noundef %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = icmp eq ptr %2, null\n  br i1 %3, label %8, label %4\n\n4:                                                ; preds = %1\n  %5 = load ptr, ptr %2, align 8, !tbaa !10\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %8, label %7\n\n7:                                                ; preds = %4\n  %8 = tail call i32 @nvif_object_fini(ptr noundef nonnull %2) #2\n  %9 = load ptr, ptr %0, align 8, !tbaa !5\n  %10 = tail call i32 @kfree(ptr noundef %9) #2\n  store ptr null, ptr %0, align 8, !tbaa !5\n  ret void\n}\n\ndeclare i32 @nvif_object_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"nouveau_drm\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n</s><s>", "file:": "./linux/drivers/gpu/drm/nouveau/extr_nouveau_debugfs.c_nouveau_debugfs_fini.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @nouveau_debugfs_fini(ptr nocapture noundef %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = icmp eq ptr %2, null\n  br i1 %3, label %10, label %4\n\n4:                                                ; preds = %1\n  %5 = load i64, ptr %2, align 8, !tbaa !10\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %10, label %7\n\n7:                                                ; preds = %4\n  %8 = tail call i32 @nvif_object_fini(ptr noundef nonnull %2) #2\n  %9 = load ptr, ptr %0, align 8, !tbaa !5\n  br label %10\n\n10:                                               ; preds = %7, %4, %1\n  %11 = phi ptr [ %9, %7 ], [ %2, %4 ], [ null, %1 ]\n  %12 = tail call i32 @kfree(ptr noundef %11) #2\n  store ptr null, ptr %0, align 8, !tbaa !5\n  ret void\n}\n\ndeclare i32 @nvif_object_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"nouveau_drm\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !13, i64 0}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"TYPE_3__\", !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_obs-source.c_get_new_filter_name.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function get_new_filter_name\n\t.type\tget_new_filter_name,@function\nget_new_filter_name:                    # @get_new_filter_name\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\txorps\t%xmm0, %xmm0\n\tmovaps\t%xmm0, (%rsp)\n\tmovq\t%rsp, %rdi\n\tcallq\tdstr_copy@PLT\n\tmovq\t(%rsp), %rsi\n\tmovq\t%rbx, %rdi\n\tcallq\tobs_source_get_filter_by_name@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n# %bb.1:                                # %.preheader\n\tmovl\t$2, %ebp\n\tmovq\t%rsp, %r15\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rax, %rdi\n\tcallq\tobs_source_release@PLT\n\tmovl\t$.L.str, %esi\n\tmovq\t%r15, %rdi\n\tmovq\t%r14, %rdx\n\tmovl\t%ebp, %ecx\n\tcallq\tdstr_printf@PLT\n\tmovq\t(%rsp), %rsi\n\tmovq\t%rbx, %rdi\n\tcallq\tobs_source_get_filter_by_name@PLT\n\tincl\t%ebp\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_2\n.LBB0_3:\n\tmovq\t(%rsp), %rax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tget_new_filter_name, .Lfunc_end0-get_new_filter_name\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%s %d\"\n\t.size\t.L.str, 6\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [6 x i8] c\"%s %d\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_new_filter_name], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @get_new_filter_name(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #3\n  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(8) %3, i8 0, i64 8, i1 false)\n  %4 = call i32 @dstr_copy(ptr noundef nonnull %3, ptr noundef %1) #3\n  %5 = load ptr, ptr %3, align 8, !tbaa !5\n  %6 = call ptr @obs_source_get_filter_by_name(ptr noundef %0, ptr noundef %5) #3\n  %7 = icmp eq ptr %6, null\n  br i1 %7, label %14, label %8\n\n8:                                                ; preds = %2, %8\n  %9 = phi ptr [ %12, %8 ], [ %6, %2 ]\n  %10 = phi i32 [ %11, %8 ], [ 2, %2 ]\n  %11 = add nsw i32 %10, 1\n  %12 = call i32 @obs_source_release(ptr noundef nonnull %9) #3\n  %13 = call i32 @dstr_printf(ptr noundef nonnull %3, ptr noundef nonnull @.str, ptr noundef %1, i32 noundef %11) #3\n  %14 = load ptr, ptr %3, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #3\n  ret ptr %14\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\ndeclare i32 @dstr_copy(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare ptr @obs_source_get_filter_by_name(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @obs_source_release(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @dstr_printf(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { argmemonly mustprogress nocallback nofree nounwind willreturn writeonly }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./obs-studio/libobs/extr_obs-source.c_get_new_filter_name.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dstr = type { ptr, i32 }\n\n@.str = private unnamed_addr constant [6 x i8] c\"%s %d\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_new_filter_name], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @get_new_filter_name(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = alloca %struct.dstr, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #4\n  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)\n  %4 = call i32 @dstr_copy(ptr noundef nonnull %3, ptr noundef %1) #4\n  %5 = load ptr, ptr %3, align 8, !tbaa !5\n  %6 = call ptr @obs_source_get_filter_by_name(ptr noundef %0, ptr noundef %5) #4\n  %7 = icmp eq ptr %6, null\n  br i1 %7, label %18, label %8\n\n8:                                                ; preds = %2, %8\n  %9 = phi ptr [ %16, %8 ], [ %6, %2 ]\n  %10 = phi i32 [ %12, %8 ], [ 0, %2 ]\n  %11 = call i32 @obs_source_release(ptr noundef nonnull %9) #4\n  %12 = add nuw nsw i32 %10, 1\n  %13 = add nuw nsw i32 %10, 2\n  %14 = call i32 @dstr_printf(ptr noundef nonnull %3, ptr noundef nonnull @.str, ptr noundef %1, i32 noundef %13) #4\n  %15 = load ptr, ptr %3, align 8, !tbaa !5\n  %16 = call ptr @obs_source_get_filter_by_name(ptr noundef %0, ptr noundef %15) #4\n  %17 = icmp eq ptr %16, null\n  br i1 %17, label %18, label %8\n\n18:                                               ; preds = %8, %2\n  %19 = load ptr, ptr %3, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #4\n  ret ptr %19\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\ndeclare i32 @dstr_copy(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare ptr @obs_source_get_filter_by_name(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @obs_source_release(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @dstr_printf(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { argmemonly mustprogress nocallback nofree nounwind willreturn writeonly }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dstr\", !7, i64 0, !10, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ib_umem_odp.c_invalidate_page_trampoline.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function invalidate_page_trampoline\n\t.type\tinvalidate_page_trampoline,@function\ninvalidate_page_trampoline:             # @invalidate_page_trampoline\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tcallq\tib_umem_notifier_start_account@PLT\n\tmovq\t(%rbx), %rax\n\tmovq\tPAGE_SIZE(%rip), %rdx\n\taddq\t%r14, %rdx\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\t*(%rax)\n\tmovq\t%rbx, %rdi\n\tcallq\tib_umem_notifier_end_account@PLT\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tinvalidate_page_trampoline, .Lfunc_end0-invalidate_page_trampoline\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPAGE_SIZE,@object               # @PAGE_SIZE\n\t.bss\n\t.globl\tPAGE_SIZE\n\t.p2align\t3\nPAGE_SIZE:\n\t.quad\t0                               # 0x0\n\t.size\tPAGE_SIZE, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PAGE_SIZE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @invalidate_page_trampoline], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @invalidate_page_trampoline(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = tail call i32 @ib_umem_notifier_start_account(ptr noundef %0, i64 noundef %1) #2\n  %4 = load ptr, ptr %0, align 8, !tbaa !5\n  %5 = load ptr, ptr %4, align 8, !tbaa !10\n  %6 = load i64, ptr @PAGE_SIZE, align 8, !tbaa !12\n  %7 = add nsw i64 %6, %1\n  %8 = tail call i32 %5(ptr noundef nonnull %0, i64 noundef %1, i64 noundef %7) #2\n  %9 = tail call i32 @ib_umem_notifier_end_account(ptr noundef nonnull %0) #2\n  ret i32 0\n}\n\ndeclare i32 @ib_umem_notifier_start_account(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ib_umem_notifier_end_account(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ib_umem\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n</s><s>", "file:": "./freebsd/sys/ofed/drivers/infiniband/core/extr_ib_umem_odp.c_invalidate_page_trampoline.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PAGE_SIZE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @invalidate_page_trampoline], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @invalidate_page_trampoline(ptr noundef %0, i64 noundef %1, i64 %2, ptr nocapture readnone %3) #0 {\n  %5 = tail call i32 @ib_umem_notifier_start_account(ptr noundef %0) #2\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = load ptr, ptr %6, align 8, !tbaa !10\n  %8 = load i64, ptr @PAGE_SIZE, align 8, !tbaa !12\n  %9 = add nsw i64 %8, %1\n  %10 = tail call i32 %7(ptr noundef nonnull %0, i64 noundef %1, i64 noundef %9) #2\n  %11 = tail call i32 @ib_umem_notifier_end_account(ptr noundef nonnull %0) #2\n  ret i32 0\n}\n\ndeclare i32 @ib_umem_notifier_start_account(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ib_umem_notifier_end_account(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ib_umem\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_upload-pack.c_check_non_tip.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function check_non_tip\n\t.type\tcheck_non_tip,@function\ncheck_non_tip:                          # @check_non_tip\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %r15\n\tcmpl\t$0, stateless_rpc(%rip)\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovl\tALLOW_REACHABLE_SHA1(%rip), %eax\n\ttestl\t%eax, allow_unadvertised_object_request(%rip)\n\tje\t.LBB0_3\n.LBB0_2:\n\tmovq\t%r15, %rdi\n\tcallq\thas_unreachable@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_8\n.LBB0_3:\n\tcmpl\t$0, (%r15)\n\tjle\t.LBB0_8\n# %bb.4:\n\txorl\t%ebx, %ebx\n\tjmp\t.LBB0_5\n\t.p2align\t4, 0x90\n.LBB0_7:                                #   in Loop: Header=BB0_5 Depth=1\n\tincq\t%rbx\n\tmovslq\t(%r15), %rax\n\tcmpq\t%rax, %rbx\n\tjge\t.LBB0_8\n.LBB0_5:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t8(%r15), %rax\n\tmovq\t(%rax,%rbx,8), %r12\n\tmovq\t%r12, %rdi\n\tcallq\tis_our_ref@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_7\n# %bb.6:                                #   in Loop: Header=BB0_5 Depth=1\n\tmovq\t%r12, %rdi\n\tcallq\toid_to_hex@PLT\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %edx\n\tcallq\tpacket_writer_error@PLT\n\tmovq\t%r12, %rdi\n\tcallq\toid_to_hex@PLT\n\tmovl\t$.L.str.1, %edi\n\tmovl\t%eax, %esi\n\tcallq\tdie@PLT\n\tjmp\t.LBB0_7\n.LBB0_8:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcheck_non_tip, .Lfunc_end0-check_non_tip\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tstateless_rpc,@object           # @stateless_rpc\n\t.bss\n\t.globl\tstateless_rpc\n\t.p2align\t2\nstateless_rpc:\n\t.long\t0                               # 0x0\n\t.size\tstateless_rpc, 4\n\n\t.type\tallow_unadvertised_object_request,@object # @allow_unadvertised_object_request\n\t.globl\tallow_unadvertised_object_request\n\t.p2align\t2\nallow_unadvertised_object_request:\n\t.long\t0                               # 0x0\n\t.size\tallow_unadvertised_object_request, 4\n\n\t.type\tALLOW_REACHABLE_SHA1,@object    # @ALLOW_REACHABLE_SHA1\n\t.globl\tALLOW_REACHABLE_SHA1\n\t.p2align\t2\nALLOW_REACHABLE_SHA1:\n\t.long\t0                               # 0x0\n\t.size\tALLOW_REACHABLE_SHA1, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"upload-pack: not our ref %s\"\n\t.size\t.L.str, 28\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"git upload-pack: not our ref %s\"\n\t.size\t.L.str.1, 32\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ref_list = type { i32, ptr }\n%struct.TYPE_2__ = type { ptr }\n\n@stateless_rpc = dso_local local_unnamed_addr global i32 0, align 4\n@allow_unadvertised_object_request = dso_local local_unnamed_addr global i32 0, align 4\n@ALLOW_REACHABLE_SHA1 = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [28 x i8] c\"upload-pack: not our ref %s\\00\", align 1\n@.str.1 = private unnamed_addr constant [32 x i8] c\"git upload-pack: not our ref %s\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @check_non_tip], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @check_non_tip(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @stateless_rpc, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %5, label %8\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr @allow_unadvertised_object_request, align 4, !tbaa !5\n  %7 = load i32, ptr @ALLOW_REACHABLE_SHA1, align 4, !tbaa !5\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %5\n  %11 = tail call i32 @has_unreachable(ptr noundef %0) #2\n  br label %12\n\n12:                                               ; preds = %10, %5\n  %13 = load i32, ptr %0, align 8, !tbaa !9\n  %14 = icmp sgt i32 %13, 0\n  br i1 %14, label %15, label %31\n\n15:                                               ; preds = %12\n  %16 = getelementptr inbounds %struct.ref_list, ptr %0, i64 0, i32 1\n  br label %17\n\n17:                                               ; preds = %15, %27\n  %18 = phi i64 [ 0, %15 ], [ %28, %27 ]\n  %19 = load ptr, ptr %16, align 8, !tbaa !12\n  %20 = getelementptr inbounds %struct.TYPE_2__, ptr %19, i64 %18\n  %21 = load ptr, ptr %20, align 8, !tbaa !13\n  %22 = tail call i32 @is_our_ref(ptr noundef %21) #2\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %24, label %27\n\n24:                                               ; preds = %17\n  %25 = tail call i32 @oid_to_hex(ptr noundef %21) #2\n  %26 = tail call i32 @packet_writer_error(ptr noundef %1, ptr noundef nonnull @.str, i32 noundef %25) #2\n  br label %27\n\n27:                                               ; preds = %24, %17\n  %28 = add nuw nsw i64 %18, 1\n  %29 = load i32, ptr %0, align 8, !tbaa !9\n  %30 = sext i32 %29 to i64\n  %31 = icmp slt i64 %28, %30\n  br i1 %31, label %17, label %33\n\n32:                                               ; preds = %31\n  %33 = tail call i32 @oid_to_hex(ptr noundef %21) #2\n  %34 = tail call i32 @die(ptr noundef nonnull @.str.1, i32 noundef %33) #2\n  br label %31\n\n31:                                               ; preds = %27, %32\n  ret void\n}\n\ndeclare i32 @has_unreachable(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_our_ref(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @packet_writer_error(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @oid_to_hex(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @die(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"ref_list\", !6, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n!13 = !{!14, !11, i64 0}\n!14 = !{!\"TYPE_2__\", !11, i64 0}\n</s><s>", "file:": "./git/extr_upload-pack.c_check_non_tip.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.object_array = type { i32, ptr }\n%struct.TYPE_2__ = type { ptr }\n\n@stateless_rpc = dso_local local_unnamed_addr global i32 0, align 4\n@allow_unadvertised_object_request = dso_local local_unnamed_addr global i32 0, align 4\n@ALLOW_REACHABLE_SHA1 = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [28 x i8] c\"upload-pack: not our ref %s\\00\", align 1\n@.str.1 = private unnamed_addr constant [32 x i8] c\"git upload-pack: not our ref %s\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @check_non_tip], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @check_non_tip(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @stateless_rpc, align 4, !tbaa !5\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %5, label %10\n\n5:                                                ; preds = %2\n  %6 = load i32, ptr @allow_unadvertised_object_request, align 4, !tbaa !5\n  %7 = load i32, ptr @ALLOW_REACHABLE_SHA1, align 4, !tbaa !5\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %13, label %10\n\n10:                                               ; preds = %5, %2\n  %11 = tail call i32 @has_unreachable(ptr noundef %0) #2\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %35, label %13\n\n13:                                               ; preds = %10, %5\n  %14 = load i32, ptr %0, align 8, !tbaa !9\n  %15 = icmp sgt i32 %14, 0\n  br i1 %15, label %16, label %35\n\n16:                                               ; preds = %13\n  %17 = getelementptr inbounds %struct.object_array, ptr %0, i64 0, i32 1\n  br label %18\n\n18:                                               ; preds = %16, %30\n  %19 = phi i64 [ 0, %16 ], [ %31, %30 ]\n  %20 = load ptr, ptr %17, align 8, !tbaa !12\n  %21 = getelementptr inbounds %struct.TYPE_2__, ptr %20, i64 %19\n  %22 = load ptr, ptr %21, align 8, !tbaa !13\n  %23 = tail call i32 @is_our_ref(ptr noundef %22) #2\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %25, label %30\n\n25:                                               ; preds = %18\n  %26 = tail call i32 @oid_to_hex(ptr noundef %22) #2\n  %27 = tail call i32 @packet_writer_error(ptr noundef %1, ptr noundef nonnull @.str, i32 noundef %26) #2\n  %28 = tail call i32 @oid_to_hex(ptr noundef %22) #2\n  %29 = tail call i32 @die(ptr noundef nonnull @.str.1, i32 noundef %28) #2\n  br label %30\n\n30:                                               ; preds = %25, %18\n  %31 = add nuw nsw i64 %19, 1\n  %32 = load i32, ptr %0, align 8, !tbaa !9\n  %33 = sext i32 %32 to i64\n  %34 = icmp slt i64 %31, %33\n  br i1 %34, label %18, label %35, !llvm.loop !15\n\n35:                                               ; preds = %30, %13, %10\n  ret void\n}\n\ndeclare i32 @has_unreachable(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_our_ref(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @packet_writer_error(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @oid_to_hex(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @die(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"object_array\", !6, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n!13 = !{!14, !11, i64 0}\n!14 = !{!\"TYPE_2__\", !11, i64 0}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dsl_prop.c_dsl_prop_get_hasrecvd.ll\"\n\t.globl\tdsl_prop_get_hasrecvd           # -- Begin function dsl_prop_get_hasrecvd\n\t.p2align\t4, 0x90\n\t.type\tdsl_prop_get_hasrecvd,@function\ndsl_prop_get_hasrecvd:                  # @dsl_prop_get_hasrecvd\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tZPROP_HAS_RECVD(%rip), %esi\n\tleaq\t4(%rsp), %rdx\n\txorl\t%ecx, %ecx\n\tcallq\tdsl_prop_get_integer@PLT\n\txorl\t%ecx, %ecx\n\ttestq\t%rax, %rax\n\tsete\t%cl\n\tmovl\t%ecx, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tdsl_prop_get_hasrecvd, .Lfunc_end0-dsl_prop_get_hasrecvd\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tZPROP_HAS_RECVD,@object         # @ZPROP_HAS_RECVD\n\t.bss\n\t.globl\tZPROP_HAS_RECVD\n\t.p2align\t2\nZPROP_HAS_RECVD:\n\t.long\t0                               # 0x0\n\t.size\tZPROP_HAS_RECVD, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ZPROP_HAS_RECVD = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @dsl_prop_get_hasrecvd(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #3\n  %3 = load i32, ptr @ZPROP_HAS_RECVD, align 4, !tbaa !5\n  %4 = call i64 @dsl_prop_get_integer(ptr noundef %0, i32 noundef %3, ptr noundef nonnull %2, ptr noundef null) #3\n  %5 = icmp eq i64 %4, 0\n  %6 = zext i1 %5 to i32\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #3\n  ret i32 %6\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @dsl_prop_get_integer(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/extr_dsl_prop.c_dsl_prop_get_hasrecvd.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ZPROP_HAS_RECVD = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @dsl_prop_get_hasrecvd(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #3\n  %3 = load i32, ptr @ZPROP_HAS_RECVD, align 4, !tbaa !5\n  %4 = call i64 @dsl_prop_get_integer(ptr noundef %0, i32 noundef %3, ptr noundef nonnull %2, ptr noundef null) #3\n  %5 = icmp eq i64 %4, 0\n  %6 = zext i1 %5 to i32\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #3\n  ret i32 %6\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @dsl_prop_get_integer(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ep93xx_eth.c_ep93xx_eth_remove.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ep93xx_eth_remove\n\t.type\tep93xx_eth_remove,@function\nep93xx_eth_remove:                      # @ep93xx_eth_remove\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tcallq\tplatform_get_drvdata@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.1:\n\tmovq\t%rax, %r14\n\tmovq\t%rbx, %rdi\n\txorl\t%esi, %esi\n\tcallq\tplatform_set_drvdata@PLT\n\tmovq\t%r14, %rdi\n\tcallq\tnetdev_priv@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%r14, %rdi\n\tcallq\tunregister_netdev@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tep93xx_free_buffers@PLT\n\tmovq\t8(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_3\n# %bb.2:\n\tcallq\tiounmap@PLT\n.LBB0_3:\n\tmovq\t(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_5\n# %bb.4:\n\tcallq\trelease_resource@PLT\n\tmovq\t(%rbx), %rdi\n\tcallq\tkfree@PLT\n.LBB0_5:\n\tmovq\t%r14, %rdi\n\tcallq\tfree_netdev@PLT\n.LBB0_6:\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tep93xx_eth_remove, .Lfunc_end0-ep93xx_eth_remove\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ep93xx_eth_priv = type { ptr, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ep93xx_eth_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ep93xx_eth_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @platform_get_drvdata(ptr noundef %0) #2\n  %3 = icmp eq ptr %2, null\n  br i1 %3, label %16, label %4\n\n4:                                                ; preds = %1\n  %5 = tail call i32 @platform_set_drvdata(ptr noundef %0, ptr noundef null) #2\n  %6 = tail call ptr @netdev_priv(ptr noundef nonnull %2) #2\n  %7 = tail call i32 @unregister_netdev(ptr noundef nonnull %2) #2\n  %8 = tail call i32 @ep93xx_free_buffers(ptr noundef %6) #2\n  %9 = getelementptr inbounds %struct.ep93xx_eth_priv, ptr %6, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %4\n  %13 = tail call i32 @iounmap(ptr noundef nonnull %10) #2\n  br label %14\n\n14:                                               ; preds = %12, %4\n  %15 = load ptr, ptr %6, align 8, !tbaa !10\n  br label %18\n\n16:                                               ; preds = %1\n  ret i32 0\n\n17:                                               ; preds = %14\n  %18 = tail call i32 @free_netdev(ptr noundef nonnull %2) #2\n  br label %16\n}\n\ndeclare ptr @platform_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @platform_set_drvdata(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @unregister_netdev(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ep93xx_free_buffers(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iounmap(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_netdev(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"ep93xx_eth_priv\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/drivers/net/arm/extr_ep93xx_eth.c_ep93xx_eth_remove.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ep93xx_priv = type { ptr, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ep93xx_eth_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ep93xx_eth_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @platform_get_drvdata(ptr noundef %0) #2\n  %3 = icmp eq ptr %2, null\n  br i1 %3, label %23, label %4\n\n4:                                                ; preds = %1\n  %5 = tail call i32 @platform_set_drvdata(ptr noundef %0, ptr noundef null) #2\n  %6 = tail call ptr @netdev_priv(ptr noundef nonnull %2) #2\n  %7 = tail call i32 @unregister_netdev(ptr noundef nonnull %2) #2\n  %8 = tail call i32 @ep93xx_free_buffers(ptr noundef %6) #2\n  %9 = getelementptr inbounds %struct.ep93xx_priv, ptr %6, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %4\n  %13 = tail call i32 @iounmap(ptr noundef nonnull %10) #2\n  br label %14\n\n14:                                               ; preds = %12, %4\n  %15 = load ptr, ptr %6, align 8, !tbaa !10\n  %16 = icmp eq ptr %15, null\n  br i1 %16, label %21, label %17\n\n17:                                               ; preds = %14\n  %18 = tail call i32 @release_resource(ptr noundef nonnull %15) #2\n  %19 = load ptr, ptr %6, align 8, !tbaa !10\n  %20 = tail call i32 @kfree(ptr noundef %19) #2\n  br label %21\n\n21:                                               ; preds = %17, %14\n  %22 = tail call i32 @free_netdev(ptr noundef nonnull %2) #2\n  br label %23\n\n23:                                               ; preds = %1, %21\n  ret i32 0\n}\n\ndeclare ptr @platform_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @platform_set_drvdata(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @unregister_netdev(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ep93xx_free_buffers(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iounmap(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @release_resource(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_netdev(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"ep93xx_priv\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_r420.c_r420_fini.ll\"\n\t.globl\tr420_fini                       # -- Begin function r420_fini\n\t.p2align\t4, 0x90\n\t.type\tr420_fini,@function\nr420_fini:                              # @r420_fini\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tcallq\tr100_cp_fini@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_wb_fini@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_ib_pool_fini@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_gem_fini@PLT\n\tmovl\t(%rbx), %eax\n\ttestl\t%eax, RADEON_IS_PCIE(%rip)\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\trv370_pcie_gart_fini@PLT\n\tmovl\t(%rbx), %eax\n.LBB0_2:\n\ttestl\t%eax, RADEON_IS_PCI(%rip)\n\tje\t.LBB0_4\n# %bb.3:\n\tmovq\t%rbx, %rdi\n\tcallq\tr100_pci_gart_fini@PLT\n.LBB0_4:\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_agp_fini@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_irq_kms_fini@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_fence_driver_fini@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_bo_fini@PLT\n\tcmpq\t$0, 16(%rbx)\n\tje\t.LBB0_6\n# %bb.5:\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_atombios_fini@PLT\n\tjmp\t.LBB0_7\n.LBB0_6:\n\tmovq\t%rbx, %rdi\n\tcallq\tradeon_combios_fini@PLT\n.LBB0_7:\n\tmovq\t8(%rbx), %rdi\n\tcallq\tkfree@PLT\n\tmovq\t$0, 8(%rbx)\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tr420_fini, .Lfunc_end0-r420_fini\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tRADEON_IS_PCIE,@object          # @RADEON_IS_PCIE\n\t.bss\n\t.globl\tRADEON_IS_PCIE\n\t.p2align\t2\nRADEON_IS_PCIE:\n\t.long\t0                               # 0x0\n\t.size\tRADEON_IS_PCIE, 4\n\n\t.type\tRADEON_IS_PCI,@object           # @RADEON_IS_PCI\n\t.globl\tRADEON_IS_PCI\n\t.p2align\t2\nRADEON_IS_PCI:\n\t.long\t0                               # 0x0\n\t.size\tRADEON_IS_PCI, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.radeon_device = type { i32, ptr, i64 }\n\n@RADEON_IS_PCIE = dso_local local_unnamed_addr global i32 0, align 4\n@RADEON_IS_PCI = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @r420_fini(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @radeon_cp_fini(ptr noundef %0) #2\n  %3 = tail call i32 @radeon_wb_fini(ptr noundef %0) #2\n  %4 = tail call i32 @radeon_ib_pool_fini(ptr noundef %0) #2\n  %5 = tail call i32 @radeon_gem_fini(ptr noundef %0) #2\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = load i32, ptr @RADEON_IS_PCIE, align 4, !tbaa !11\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %1\n  %11 = tail call i32 @rv370_pcie_gart_fini(ptr noundef nonnull %0) #2\n  br label %12\n\n12:                                               ; preds = %10, %1\n  %13 = load i32, ptr @RADEON_IS_PCI, align 4, !tbaa !11\n  %14 = and i32 %13, %6\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %12\n  %17 = tail call i32 @r100_pci_gart_fini(ptr noundef nonnull %0) #2\n  br label %18\n\n18:                                               ; preds = %16, %12\n  %19 = tail call i32 @radeon_agp_fini(ptr noundef nonnull %0) #2\n  %20 = tail call i32 @radeon_irq_kms_fini(ptr noundef nonnull %0) #2\n  %21 = tail call i32 @radeon_fence_driver_fini(ptr noundef nonnull %0) #2\n  %22 = tail call i32 @radeon_bo_fini(ptr noundef nonnull %0) #2\n  %23 = getelementptr inbounds %struct.radeon_device, ptr %0, i64 0, i32 2\n  %24 = load i64, ptr %23, align 8, !tbaa !12\n  %25 = icmp eq i64 %24, 0\n  br i1 %25, label %28, label %26\n\n26:                                               ; preds = %18\n  %27 = tail call i32 @radeon_atombios_fini(ptr noundef nonnull %0) #2\n  br label %29\n\n28:                                               ; preds = %18\n  %29 = tail call i32 @radeon_combios_fini(ptr noundef nonnull %0) #2\n  br label %30\n\n30:                                               ; preds = %28, %29\n  %31 = getelementptr inbounds %struct.radeon_device, ptr %0, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !13\n  %33 = tail call i32 @kfree(ptr noundef %32) #2\n  store ptr null, ptr %31, align 8, !tbaa !13\n  ret void\n}\n\ndeclare i32 @radeon_cp_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_wb_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_ib_pool_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_gem_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rv370_pcie_gart_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @r100_pci_gart_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_agp_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_irq_kms_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_fence_driver_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_bo_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_atombios_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_combios_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"radeon_device\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8", "file:": "./fastsocket/kernel/drivers/gpu/drm/radeon/extr_r420.c_r420_fini.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.radeon_device = type { i32, ptr, i64 }\n\n@RADEON_IS_PCIE = dso_local local_unnamed_addr global i32 0, align 4\n@RADEON_IS_PCI = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @r420_fini(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @r100_cp_fini(ptr noundef %0) #2\n  %3 = tail call i32 @radeon_wb_fini(ptr noundef %0) #2\n  %4 = tail call i32 @radeon_ib_pool_fini(ptr noundef %0) #2\n  %5 = tail call i32 @radeon_gem_fini(ptr noundef %0) #2\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = load i32, ptr @RADEON_IS_PCIE, align 4, !tbaa !12\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %13, label %10\n\n10:                                               ; preds = %1\n  %11 = tail call i32 @rv370_pcie_gart_fini(ptr noundef nonnull %0) #2\n  %12 = load i32, ptr %0, align 8, !tbaa !5\n  br label %13\n\n13:                                               ; preds = %10, %1\n  %14 = phi i32 [ %12, %10 ], [ %6, %1 ]\n  %15 = load i32, ptr @RADEON_IS_PCI, align 4, !tbaa !12\n  %16 = and i32 %15, %14\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %20, label %18\n\n18:                                               ; preds = %13\n  %19 = tail call i32 @r100_pci_gart_fini(ptr noundef nonnull %0) #2\n  br label %20\n\n20:                                               ; preds = %18, %13\n  %21 = tail call i32 @radeon_agp_fini(ptr noundef nonnull %0) #2\n  %22 = tail call i32 @radeon_irq_kms_fini(ptr noundef nonnull %0) #2\n  %23 = tail call i32 @radeon_fence_driver_fini(ptr noundef nonnull %0) #2\n  %24 = tail call i32 @radeon_bo_fini(ptr noundef nonnull %0) #2\n  %25 = getelementptr inbounds %struct.radeon_device, ptr %0, i64 0, i32 2\n  %26 = load i64, ptr %25, align 8, !tbaa !13\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %20\n  %29 = tail call i32 @radeon_atombios_fini(ptr noundef nonnull %0) #2\n  br label %32\n\n30:                                               ; preds = %20\n  %31 = tail call i32 @radeon_combios_fini(ptr noundef nonnull %0) #2\n  br label %32\n\n32:                                               ; preds = %30, %28\n  %33 = getelementptr inbounds %struct.radeon_device, ptr %0, i64 0, i32 1\n  %34 = load ptr, ptr %33, align 8, !tbaa !14\n  %35 = tail call i32 @kfree(ptr noundef %34) #2\n  store ptr null, ptr %33, align 8, !tbaa !14\n  ret void\n}\n\ndeclare i32 @r100_cp_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_wb_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_ib_pool_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_gem_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rv370_pcie_gart_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @r100_pci_gart_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_agp_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_irq_kms_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_fence_driver_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_bo_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_atombios_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @radeon_combios_fini(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"radeon_device\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !11, i64 16}\n!14 = !{!6, !10, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mt76x02_debugfs.c_mt76x02_ampdu_stat_open.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mt76x02_ampdu_stat_open\n\t.type\tmt76x02_ampdu_stat_open,@function\nmt76x02_ampdu_stat_open:                # @mt76x02_ampdu_stat_open\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t%rsi, %rax\n\tmovl\tmt76x02_ampdu_stat_read(%rip), %esi\n\tmovl\t(%rdi), %edx\n\tmovq\t%rax, %rdi\n\tjmp\tsingle_open@PLT                 # TAILCALL\n.Lfunc_end0:\n\t.size\tmt76x02_ampdu_stat_open, .Lfunc_end0-mt76x02_ampdu_stat_open\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tmt76x02_ampdu_stat_read,@object # @mt76x02_ampdu_stat_read\n\t.bss\n\t.globl\tmt76x02_ampdu_stat_read\n\t.p2align\t2\nmt76x02_ampdu_stat_read:\n\t.long\t0                               # 0x0\n\t.size\tmt76x02_ampdu_stat_read, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@mt76x02_ampdu_stat_read = dso_local global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mt76x02_ampdu_stat_open], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mt76x02_ampdu_stat_open(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @mt76x02_ampdu_stat_read, align 4, !tbaa !5\n  %4 = load i32, ptr %0, align 4, !tbaa !9\n  %5 = tail call i32 @single_open(ptr noundef %1, i32 noundef %3, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @single_open(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"mt76x02_dev\", !6, i64 0}\n</s><s>", "file:": "./linux/drivers/net/wireless/mediatek/mt76/extr_mt76x02_debugfs.c_mt76x02_ampdu_stat_open.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@mt76x02_ampdu_stat_read = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mt76x02_ampdu_stat_open], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mt76x02_ampdu_stat_open(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @mt76x02_ampdu_stat_read, align 4, !tbaa !5\n  %4 = load i32, ptr %0, align 4, !tbaa !9\n  %5 = tail call i32 @single_open(ptr noundef %1, i32 noundef %3, i32 noundef %4) #2\n  ret i32 %5\n}\n\ndeclare i32 @single_open(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"inode\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_powerdomain.c__pwrdm_post_transition_cb.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function _pwrdm_post_transition_cb\n\t.type\t_pwrdm_post_transition_cb,@function\n_pwrdm_post_transition_cb:              # @_pwrdm_post_transition_cb\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tPWRDM_STATE_PREV(%rip), %esi\n\tcallq\t_pwrdm_state_switch@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\t_pwrdm_post_transition_cb, .Lfunc_end0-_pwrdm_post_transition_cb\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPWRDM_STATE_PREV,@object        # @PWRDM_STATE_PREV\n\t.bss\n\t.globl\tPWRDM_STATE_PREV\n\t.p2align\t2\nPWRDM_STATE_PREV:\n\t.long\t0                               # 0x0\n\t.size\tPWRDM_STATE_PREV, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PWRDM_STATE_PREV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @_pwrdm_post_transition_cb], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @_pwrdm_post_transition_cb(ptr noundef %0) #0 {\n  %2 = load i32, ptr @PWRDM_STATE_PREV, align 4, !tbaa !5\n  %3 = tail call i32 @_pwrdm_state_switch(ptr noundef %0, i32 noundef %2) #2\n  ret i32 0\n}\n\ndeclare i32 @_pwrdm_state_switch(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/arch/arm/mach-omap2/extr_powerdomain.c__pwrdm_post_transition_cb.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PWRDM_STATE_PREV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @_pwrdm_post_transition_cb], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @_pwrdm_post_transition_cb(ptr noundef %0, ptr nocapture readnone %1) #0 {\n  %3 = load i32, ptr @PWRDM_STATE_PREV, align 4, !tbaa !5\n  %4 = tail call i32 @_pwrdm_state_switch(ptr noundef %0, i32 noundef %3) #2\n  ret i32 0\n}\n\ndeclare i32 @_pwrdm_state_switch(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_optimize.c_count_blocks.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function count_blocks\n\t.type\tcount_blocks,@function\ncount_blocks:                           # @count_blocks\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r15\n\txorl\t%r14d, %r14d\n\ttestq\t%rbx, %rbx\n\tje\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\tisMarked@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_3\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\tMark@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tJT@PLT\n\tmovq\t%r15, %rdi\n\tmovq\t%rax, %rsi\n\tcallq\tcount_blocks\n\tmovl\t%eax, %r12d\n\tmovq\t%rbx, %rdi\n\tcallq\tJF@PLT\n\tmovq\t%rax, %rbx\n\taddl\t%r12d, %r14d\n\tincl\t%r14d\n\ttestq\t%rbx, %rbx\n\tjne\t.LBB0_2\n.LBB0_3:\n\tmovl\t%r14d, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcount_blocks, .Lfunc_end0-count_blocks\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @count_blocks], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @count_blocks(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp eq ptr %1, null\n  br i1 %3, label %14, label %4\n\n4:                                                ; preds = %2\n  %5 = tail call i64 @isMarked(ptr noundef %0, ptr noundef nonnull %1) #2\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %7, label %14\n\n7:                                                ; preds = %4\n  %8 = tail call i32 @Mark(ptr noundef %0, ptr noundef nonnull %1) #2\n  %9 = tail call ptr @JT(ptr noundef %0, ptr noundef nonnull %1) #2\n  %10 = tail call i32 @count_blocks(ptr noundef %0, ptr noundef %9) #2\n  %11 = add nsw i32 %10, 1\n  %12 = tail call ptr @JF(ptr noundef %1) #2\n  %13 = icmp eq ptr %12, null\n  br i1 %13, label %14, label %4\n\n14:                                               ; preds = %7, %4, %2\n  %15 = phi i32 [ 0, %2 ], [ %11, %7 ], [ 0, %4 ]\n  ret i32 %15\n}\n\ndeclare i64 @isMarked(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @Mark(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @JT(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @JF(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./freebsd/contrib/libpcap/extr_optimize.c_count_blocks.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @count_blocks], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @count_blocks(ptr noundef %0, ptr noundef %1) #0 {\n  br label %3\n\n3:                                                ; preds = %12, %2\n  %4 = phi i32 [ 0, %2 ], [ %18, %12 ]\n  %5 = phi ptr [ %1, %2 ], [ %16, %12 ]\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %10, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @isMarked(ptr noundef %0, ptr noundef nonnull %5) #2\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7, %3\n  %11 = add i32 0, %4\n  ret i32 %11\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @Mark(ptr noundef %0, ptr noundef nonnull %5) #2\n  %14 = tail call ptr @JT(ptr noundef nonnull %5) #2\n  %15 = tail call i32 @count_blocks(ptr noundef %0, ptr noundef %14)\n  %16 = tail call ptr @JF(ptr noundef nonnull %5) #2\n  %17 = add i32 %15, 1\n  %18 = add i32 %17, %4\n  br label %3\n}\n\ndeclare i64 @isMarked(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @Mark(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @JT(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @JF(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_cygnus-pcm.c_configure_ringbuf_regs.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function configure_ringbuf_regs\n\t.type\tconfigure_ringbuf_regs,@function\nconfigure_ringbuf_regs:                 # @configure_ringbuf_regs\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbp\n\tcallq\tcygnus_dai_get_dma_data@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t(%rbp), %rax\n\tcmpq\tSNDRV_PCM_STREAM_PLAYBACK(%rip), %rax\n\tjne\t.LBB0_4\n# %bb.1:\n\tmovl\t(%rbx), %eax\n\tcmpq\t$3, %rax\n\tja\t.LBB0_8\n# %bb.2:\n\tjmpq\t*.LJTI0_0(,%rax,8)\n.LBB0_3:\n\txorl\t%ebp, %ebp\n\txorl\t%edi, %edi\n\tcallq\tRINGBUF_REG_PLAYBACK@PLT\n\tmovl\t%eax, 8(%rbx)\n\tjmp\t.LBB0_17\n.LBB0_4:\n\tmovl\t(%rbx), %eax\n\tcmpl\t$2, %eax\n\tje\t.LBB0_9\n# %bb.5:\n\tcmpl\t$1, %eax\n\tje\t.LBB0_10\n# %bb.6:\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_8\n# %bb.7:\n\txorl\t%ebp, %ebp\n\txorl\t%edi, %edi\n\tcallq\tRINGBUF_REG_CAPTURE@PLT\n\tmovl\t%eax, 4(%rbx)\n\tjmp\t.LBB0_17\n.LBB0_8:\n\txorl\t%ebp, %ebp\n\tsubl\tEINVAL(%rip), %ebp\n\tjmp\t.LBB0_17\n.LBB0_9:\n\tmovl\t$4, %edi\n\tjmp\t.LBB0_11\n.LBB0_10:\n\tmovl\t$2, %edi\n.LBB0_11:\n\tcallq\tRINGBUF_REG_CAPTURE@PLT\n\tmovl\t%eax, 4(%rbx)\n\tjmp\t.LBB0_16\n.LBB0_12:\n\tmovl\t$2, %edi\n\tjmp\t.LBB0_15\n.LBB0_13:\n\tmovl\t$4, %edi\n\tjmp\t.LBB0_15\n.LBB0_14:\n\tmovl\t$6, %edi\n.LBB0_15:\n\tcallq\tRINGBUF_REG_PLAYBACK@PLT\n\tmovl\t%eax, 8(%rbx)\n.LBB0_16:\n\txorl\t%ebp, %ebp\n.LBB0_17:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tconfigure_ringbuf_regs, .Lfunc_end0-configure_ringbuf_regs\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_3\n\t.quad\t.LBB0_12\n\t.quad\t.LBB0_13\n\t.quad\t.LBB0_14\n                                        # -- End function\n\t.type\tSNDRV_PCM_STREAM_PLAYBACK,@object # @SNDRV_PCM_STREAM_PLAYBACK\n\t.bss\n\t.globl\tSNDRV_PCM_STREAM_PLAYBACK\n\t.p2align\t3\nSNDRV_PCM_STREAM_PLAYBACK:\n\t.quad\t0                               # 0x0\n\t.size\tSNDRV_PCM_STREAM_PLAYBACK, 8\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cygnus_pcm_dma_data = type { i32, i32, i32 }\n\n@SNDRV_PCM_STREAM_PLAYBACK = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @configure_ringbuf_regs], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @configure_ringbuf_regs(ptr noundef %0) #0 {\n  %2 = tail call ptr @cygnus_dai_get_dma_data(ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @SNDRV_PCM_STREAM_PLAYBACK, align 8, !tbaa !10\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %1\n  %7 = load i32, ptr %2, align 4, !tbaa !11\n  switch i32 %7, label %20 [\n    i32 0, label %8\n    i32 1, label %12\n    i32 2, label %16\n    i32 3, label %18\n  ]\n\n8:                                                ; preds = %6\n  %9 = tail call i32 @RINGBUF_REG_CAPTURE(i32 noundef 0) #2\n  %10 = getelementptr inbounds %struct.cygnus_pcm_dma_data, ptr %2, i64 0, i32 1\n  store i32 %9, ptr %10, align 4, !tbaa !13\n  br label %29\n\n12:                                               ; preds = %6\n  %13 = tail call i32 @RINGBUF_REG_CAPTURE(i32 noundef 2) #2\n  %14 = getelementptr inbounds %struct.cygnus_pcm_dma_data, ptr %2, i64 0, i32 1\n  store i32 %13, ptr %14, align 4, !tbaa !13\n  br label %29\n\n16:                                               ; preds = %6\n  %17 = tail call i32 @RINGBUF_REG_PLAYBACK(i32 noundef 4) #2\n  store i32 %17, ptr %2, align 4, !tbaa !13\n  br label %29\n\n18:                                               ; preds = %6\n  %19 = load i32, ptr @EINVAL, align 4, !tbaa !14\n  sub nsw i32 0, %19\n  br label %29\n\n20:                                               ; preds = %1, %6\n  %21 = phi i32 [ %19, %18 ], [ 0, %6 ]\n  ret i32 %21\n\n22:                                               ; preds = %6\n  %23 = tail call i32 @RINGBUF_REG_CAPTURE(i32 noundef 2) #2\n  %24 = getelementptr inbounds %struct.cygnus_pcm_dma_data, ptr %2, i64 0, i32 1\n  store i32 %23, ptr %24, align 4, !tbaa !13\n  br label %29\n\n25:                                               ; preds = %6\n  %26 = tail call i32 @RINGBUF_REG_CAPTURE(i32 noundef 4) #2\n  %27 = getelementptr inbounds %struct.cygnus_pcm_dma_data, ptr %2, i64 0, i32 1\n  store i32 %26, ptr %27, align 4, !tbaa !13\n  br label %29\n\n28:                                               ; preds = %6\n  %29 = phi i32 [ %21, %18 ], [ 0, %6 ]\n  ret i32 %29\n}\n\ndeclare ptr @cygnus_dai_get_dma_data(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @RINGBUF_REG_CAPTURE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @RINGBUF_REG_PLAYBACK(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_pcm_substream\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!14, !12, i64 4}\n!14 = !{!\"cygnus_pcm_dma_data\", !12, i64 0, !12, i64 4, !12, i64 8}\n</s><s>", "file:": "./linux/sound/soc/bcm/extr_cygnus-pcm.c_configure_ringbuf_regs.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cygnus_aio_port = type { i32, %struct.ringbuf_regs, %struct.ringbuf_regs }\n%struct.ringbuf_regs = type { i32 }\n\n@SNDRV_PCM_STREAM_PLAYBACK = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @configure_ringbuf_regs], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @configure_ringbuf_regs(ptr noundef %0) #0 {\n  %2 = tail call ptr @cygnus_dai_get_dma_data(ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @SNDRV_PCM_STREAM_PLAYBACK, align 8, !tbaa !10\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %1\n  %7 = getelementptr inbounds %struct.cygnus_aio_port, ptr %2, i64 0, i32 2\n  %8 = load i32, ptr %2, align 4, !tbaa !11\n  switch i32 %8, label %17 [\n    i32 0, label %9\n    i32 1, label %11\n    i32 2, label %13\n    i32 3, label %15\n  ]\n\n9:                                                ; preds = %6\n  %10 = tail call i32 @RINGBUF_REG_PLAYBACK(i32 noundef 0) #2\n  store i32 %10, ptr %7, align 4, !tbaa.struct !15\n  br label %32\n\n11:                                               ; preds = %6\n  %12 = tail call i32 @RINGBUF_REG_PLAYBACK(i32 noundef 2) #2\n  store i32 %12, ptr %7, align 4, !tbaa.struct !15\n  br label %32\n\n13:                                               ; preds = %6\n  %14 = tail call i32 @RINGBUF_REG_PLAYBACK(i32 noundef 4) #2\n  store i32 %14, ptr %7, align 4, !tbaa.struct !15\n  br label %32\n\n15:                                               ; preds = %6\n  %16 = tail call i32 @RINGBUF_REG_PLAYBACK(i32 noundef 6) #2\n  store i32 %16, ptr %7, align 4, !tbaa.struct !15\n  br label %32\n\n17:                                               ; preds = %6\n  %18 = load i32, ptr @EINVAL, align 4, !tbaa !16\n  %19 = sub nsw i32 0, %18\n  br label %32\n\n20:                                               ; preds = %1\n  %21 = getelementptr inbounds %struct.cygnus_aio_port, ptr %2, i64 0, i32 1\n  %22 = load i32, ptr %2, align 4, !tbaa !11\n  switch i32 %22, label %29 [\n    i32 0, label %23\n    i32 1, label %25\n    i32 2, label %27\n  ]\n\n23:                                               ; preds = %20\n  %24 = tail call i32 @RINGBUF_REG_CAPTURE(i32 noundef 0) #2\n  store i32 %24, ptr %21, align 4, !tbaa.struct !15\n  br label %32\n\n25:                                               ; preds = %20\n  %26 = tail call i32 @RINGBUF_REG_CAPTURE(i32 noundef 2) #2\n  store i32 %26, ptr %21, align 4, !tbaa.struct !15\n  br label %32\n\n27:                                               ; preds = %20\n  %28 = tail call i32 @RINGBUF_REG_CAPTURE(i32 noundef 4) #2\n  store i32 %28, ptr %21, align 4, !tbaa.struct !15\n  br label %32\n\n29:                                               ; preds = %20\n  %30 = load i32, ptr @EINVAL, align 4, !tbaa !16\n  %31 = sub nsw i32 0, %30\n  br label %32\n\n32:                                               ; preds = %23, %25, %27, %29, %9, %11, %13, %15, %17\n  %33 = phi i32 [ %19, %17 ], [ 0, %15 ], [ 0, %13 ], [ 0, %11 ], [ 0, %9 ], [ %31, %29 ], [ 0, %27 ], [ 0, %25 ], [ 0, %23 ]\n  ret i32 %33\n}\n\ndeclare ptr @cygnus_dai_get_dma_data(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @RINGBUF_REG_PLAYBACK(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @RINGBUF_REG_CAPTURE(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_pcm_substream\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !13, i64 0}\n!12 = !{!\"cygnus_aio_port\", !13, i64 0, !14, i64 4, !14, i64 8}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!\"ringbuf_regs\", !13, i64 0}\n!15 = !{i64 0, i64 4, !16}\n!16 = !{!13, !13, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_nfs4state.c_nfs4_clear_state_manager_bit.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function nfs4_clear_state_manager_bit\n\t.type\tnfs4_clear_state_manager_bit,@function\nnfs4_clear_state_manager_bit:           # @nfs4_clear_state_manager_bit\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %r14\n\txorl\t%eax, %eax\n\tcallq\tsmp_mb__before_clear_bit@PLT\n\tmovl\tNFS4CLNT_MANAGER_RUNNING(%rip), %edi\n\tleaq\t4(%r14), %rbx\n\tmovq\t%rbx, %rsi\n\tcallq\tclear_bit@PLT\n\txorl\t%eax, %eax\n\tcallq\tsmp_mb__after_clear_bit@PLT\n\tmovl\tNFS4CLNT_MANAGER_RUNNING(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\twake_up_bit@PLT\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\trpc_wake_up@PLT                 # TAILCALL\n.Lfunc_end0:\n\t.size\tnfs4_clear_state_manager_bit, .Lfunc_end0-nfs4_clear_state_manager_bit\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNFS4CLNT_MANAGER_RUNNING,@object # @NFS4CLNT_MANAGER_RUNNING\n\t.bss\n\t.globl\tNFS4CLNT_MANAGER_RUNNING\n\t.p2align\t2\nNFS4CLNT_MANAGER_RUNNING:\n\t.long\t0                               # 0x0\n\t.size\tNFS4CLNT_MANAGER_RUNNING, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.nfs_client = type { i32, i32 }\n\n@NFS4CLNT_MANAGER_RUNNING = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @nfs4_clear_state_manager_bit], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @nfs4_clear_state_manager_bit(ptr noundef %0) #0 {\n  %2 = tail call i32 (...) @smp_mb__before_clear_bit() #2\n  %3 = load i32, ptr @NFS4CLNT_MANAGER_RUNNING, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.nfs_client, ptr %0, i64 0, i32 1\n  %5 = tail call i32 @clear_bit(i32 noundef %3, ptr noundef nonnull %4) #2\n  %6 = tail call i32 (...) @smp_mb__after_clear_bit() #2\n  %7 = load i32, ptr @NFS4CLNT_MANAGER_RUNNING, align 4, !tbaa !5\n  %8 = tail call i32 @wake_up_bit(ptr noundef nonnull %4, i32 noundef %7) #2\n  %9 = tail call i32 @rpc_wake_up(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @smp_mb__before_clear_bit(...) local_unnamed_addr #1\n\ndeclare i32 @clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @smp_mb__after_clear_bit(...) local_unnamed_addr #1\n\ndeclare i32 @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rpc_wake_up(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/fs/nfs/extr_nfs4state.c_nfs4_clear_state_manager_bit.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.nfs_client = type { i32, i32 }\n\n@NFS4CLNT_MANAGER_RUNNING = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @nfs4_clear_state_manager_bit], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @nfs4_clear_state_manager_bit(ptr noundef %0) #0 {\n  %2 = tail call i32 (...) @smp_mb__before_clear_bit() #2\n  %3 = load i32, ptr @NFS4CLNT_MANAGER_RUNNING, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.nfs_client, ptr %0, i64 0, i32 1\n  %5 = tail call i32 @clear_bit(i32 noundef %3, ptr noundef nonnull %4) #2\n  %6 = tail call i32 (...) @smp_mb__after_clear_bit() #2\n  %7 = load i32, ptr @NFS4CLNT_MANAGER_RUNNING, align 4, !tbaa !5\n  %8 = tail call i32 @wake_up_bit(ptr noundef nonnull %4, i32 noundef %7) #2\n  %9 = tail call i32 @rpc_wake_up(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @smp_mb__before_clear_bit(...) local_unnamed_addr #1\n\ndeclare i32 @clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @smp_mb__after_clear_bit(...) local_unnamed_addr #1\n\ndeclare i32 @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rpc_wake_up(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_help.c_uniq.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function uniq\n\t.type\tuniq,@function\nuniq:                                   # @uniq\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t(%rdi), %r14d\n\ttestl\t%r14d, %r14d\n\tje\t.LBB0_7\n# %bb.1:\n\tmovq\t%rdi, %rbx\n\tcmpl\t$1, %r14d\n\tjne\t.LBB0_2\n.LBB0_6:\n\tmovl\t%r14d, (%rbx)\n.LBB0_7:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_2:\n\t.cfi_def_cfa_offset 32\n\tmovl\t$1, %r14d\n\tmovl\t$1, %ebp\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   in Loop: Header=BB0_3 Depth=1\n\tincq\t%rbp\n\tmovl\t(%rbx), %eax\n\tcmpq\t%rax, %rbp\n\tjae\t.LBB0_6\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t8(%rbx), %rax\n\tmovq\t-8(%rax,%rbp,8), %rcx\n\tmovq\t(%rax,%rbp,8), %rax\n\tmovl\t(%rax), %edi\n\tmovl\t(%rcx), %esi\n\tcallq\tstrcmp@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.4:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax,%rbp,8), %rcx\n\tmovl\t%r14d, %edx\n\tincl\t%r14d\n\tmovq\t%rcx, (%rax,%rdx,8)\n\tjmp\t.LBB0_5\n.Lfunc_end0:\n\t.size\tuniq, .Lfunc_end0-uniq\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @uniq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @uniq(ptr nocapture noundef %0) #0 {\n  %2 = load i32, ptr %0, align 8, !tbaa !5\n  %3 = icmp eq i32 %2, 0\n  br i1 %3, label %15, label %4\n\n4:                                                ; preds = %1\n  %5 = icmp eq i32 %2, 1\n  br i1 %5, label %14, label %6\n\n6:                                                ; preds = %4\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  br label %8\n\n8:                                                ; preds = %6, %12\n  %9 = phi i32 [ %13, %12 ], [ 1, %6 ]\n  %10 = phi i32 [ %11, %12 ], [ %2, %6 ]\n  %11 = load ptr, ptr %7, align 8, !tbaa !11\n  %12 = add nsw i32 %9, 1\n  %13 = add i32 %10, -1\n  %14 = icmp ult i32 %13, %10\n  br i1 %14, label %15, label %8\n\n15:                                               ; preds = %8, %1\n  %16 = phi i32 [ %2, %1 ], [ %13, %8 ]\n  store i32 %16, ptr %0, align 8, !tbaa !5\n  ret void\n}\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n</s><s>", "file:": "./fastsocket/kernel/tools/perf/util/extr_help.c_uniq.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cmdnames = type { i32, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @uniq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @uniq(ptr nocapture noundef %0) #0 {\n  %2 = load i32, ptr %0, align 8, !tbaa !5\n  switch i32 %2, label %3 [\n    i32 0, label %33\n    i32 1, label %31\n  ]\n\n3:                                                ; preds = %1\n  %4 = getelementptr inbounds %struct.cmdnames, ptr %0, i64 0, i32 1\n  br label %5\n\n5:                                                ; preds = %3, %25\n  %6 = phi i64 [ 1, %3 ], [ %27, %25 ]\n  %7 = phi i32 [ 1, %3 ], [ %26, %25 ]\n  %8 = load ptr, ptr %4, align 8, !tbaa !11\n  %9 = getelementptr inbounds ptr, ptr %8, i64 %6\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load i32, ptr %10, align 4, !tbaa !13\n  %12 = add nsw i64 %6, -1\n  %13 = getelementptr inbounds ptr, ptr %8, i64 %12\n  %14 = load ptr, ptr %13, align 8, !tbaa !12\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = tail call i64 @strcmp(i32 noundef %11, i32 noundef %15) #2\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %25, label %18\n\n18:                                               ; preds = %5\n  %19 = load ptr, ptr %4, align 8, !tbaa !11\n  %20 = getelementptr inbounds ptr, ptr %19, i64 %6\n  %21 = load ptr, ptr %20, align 8, !tbaa !12\n  %22 = add i32 %7, 1\n  %23 = zext i32 %7 to i64\n  %24 = getelementptr inbounds ptr, ptr %19, i64 %23\n  store ptr %21, ptr %24, align 8, !tbaa !12\n  br label %25\n\n25:                                               ; preds = %5, %18\n  %26 = phi i32 [ %22, %18 ], [ %7, %5 ]\n  %27 = add nuw nsw i64 %6, 1\n  %28 = load i32, ptr %0, align 8, !tbaa !5\n  %29 = zext i32 %28 to i64\n  %30 = icmp ult i64 %27, %29\n  br i1 %30, label %5, label %31, !llvm.loop !15\n\n31:                                               ; preds = %25, %1\n  %32 = phi i32 [ %2, %1 ], [ %26, %25 ]\n  store i32 %32, ptr %0, align 8, !tbaa !5\n  br label %33\n\n33:                                               ; preds = %1, %31\n  ret void\n}\n\ndeclare i64 @strcmp(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"cmdnames\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!10, !10, i64 0}\n!13 = !{!14, !7, i64 0}\n!14 = !{!\"TYPE_2__\", !7, i64 0}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lm90.c_temp_to_u8.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function temp_to_u8\n\t.type\ttemp_to_u8,@function\ntemp_to_u8:                             # @temp_to_u8\n\t.cfi_startproc\n# %bb.0:\n\ttestq\t%rdi, %rdi\n\tjle\t.LBB0_1\n# %bb.2:\n\tmovl\t$255, %eax\n\tcmpq\t$254999, %rdi                   # imm = 0x3E417\n\tja\t.LBB0_4\n# %bb.3:\n\taddl\t$500, %edi                      # imm = 0x1F4\n\timulq\t$274877907, %rdi, %rax          # imm = 0x10624DD3\n\tshrq\t$38, %rax\n.LBB0_4:\n                                        # kill: def $eax killed $eax killed $rax\n\tretq\n.LBB0_1:\n\txorl\t%eax, %eax\n                                        # kill: def $eax killed $eax killed $rax\n\tretq\n.Lfunc_end0:\n\t.size\ttemp_to_u8, .Lfunc_end0-temp_to_u8\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @temp_to_u8], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @temp_to_u8(i64 noundef %0) #0 {\n  %2 = icmp sgt i64 %0, 0\n  br i1 %2, label %3, label %9\n\n3:                                                ; preds = %1\n  %4 = icmp ugt i64 %0, 254999\n  br i1 %4, label %9, label %5\n\n5:                                                ; preds = %3\n  %6 = trunc i64 %0 to i32\n  %7 = add i32 %6, 500\n  %8 = udiv i32 %7, 1000\n  br label %9\n\n9:                                                ; preds = %5, %3, %1\n  %10 = phi i32 [ 0, %1 ], [ 255, %3 ], [ %8, %5 ]\n  ret i32 %10\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/drivers/hwmon/extr_lm90.c_temp_to_u8.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @temp_to_u8], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @temp_to_u8(i64 noundef %0) #0 {\n  %2 = icmp slt i64 %0, 1\n  br i1 %2, label %9, label %3\n\n3:                                                ; preds = %1\n  %4 = icmp ugt i64 %0, 254999\n  br i1 %4, label %9, label %5\n\n5:                                                ; preds = %3\n  %6 = trunc i64 %0 to i32\n  %7 = add nuw nsw i32 %6, 500\n  %8 = udiv i32 %7, 1000\n  br label %9\n\n9:                                                ; preds = %3, %1, %5\n  %10 = phi i32 [ %8, %5 ], [ 0, %1 ], [ 255, %3 ]\n  ret i32 %10\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_debug.h_ath5k_debug_printrxbuffs.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ath5k_debug_printrxbuffs\n\t.type\tath5k_debug_printrxbuffs,@function\nath5k_debug_printrxbuffs:               # @ath5k_debug_printrxbuffs\n\t.cfi_startproc\n# %bb.0:\n\tretq\n.Lfunc_end0:\n\t.size\tath5k_debug_printrxbuffs, .Lfunc_end0-ath5k_debug_printrxbuffs\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath5k_debug_printrxbuffs], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal void @ath5k_debug_printrxbuffs(ptr nocapture %0, ptr nocapture %1, i32 %2) #0 {\n  ret void\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/drivers/net/wireless/ath/ath5k/extr_debug.h_ath5k_debug_printrxbuffs.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath5k_debug_printrxbuffs], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal void @ath5k_debug_printrxbuffs(ptr nocapture %0) #0 {\n  ret void\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_kern_proc.c_proc_self.ll\"\n\t.globl\tproc_self                       # -- Begin function proc_self\n\t.p2align\t4, 0x90\n\t.type\tproc_self,@function\nproc_self:                              # @proc_self\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\txorl\t%eax, %eax\n\tcallq\tcurrent_proc@PLT\n\tmovq\t%rax, %rbx\n\txorl\t%eax, %eax\n\tcallq\tproc_list_lock@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tproc_ref_locked@PLT\n\tcmpq\t%rax, %rbx\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\tPROC_NULL(%rip), %rbx\n.LBB0_2:\n\txorl\t%eax, %eax\n\tcallq\tproc_list_unlock@PLT\n\tmovq\t%rbx, %rax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tproc_self, .Lfunc_end0-proc_self\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPROC_NULL,@object               # @PROC_NULL\n\t.bss\n\t.globl\tPROC_NULL\n\t.p2align\t3\nPROC_NULL:\n\t.quad\t0\n\t.size\tPROC_NULL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PROC_NULL = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @proc_self() local_unnamed_addr #0 {\n  %1 = tail call ptr (...) @current_proc() #2\n  %2 = tail call i32 (...) @proc_list_lock() #2\n  %3 = tail call ptr @proc_ref_locked(ptr noundef %1) #2\n  %4 = icmp eq ptr %3, %1\n  %5 = load ptr, ptr @PROC_NULL, align 8\n  %6 = select i1 %4, ptr %3, ptr %5\n  %7 = tail call i32 (...) @proc_list_unlock() #2\n  ret ptr %6\n}\n\ndeclare ptr @current_proc(...) local_unnamed_addr #1\n\ndeclare i32 @proc_list_lock(...) local_unnamed_addr #1\n\ndeclare ptr @proc_ref_locked(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @proc_list_unlock(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./darwin-xnu/bsd/kern/extr_kern_proc.c_proc_self.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PROC_NULL = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @proc_self() local_unnamed_addr #0 {\n  %1 = tail call ptr (...) @current_proc() #2\n  %2 = tail call i32 (...) @proc_list_lock() #2\n  %3 = tail call ptr @proc_ref_locked(ptr noundef %1) #2\n  %4 = icmp eq ptr %1, %3\n  %5 = load ptr, ptr @PROC_NULL, align 8\n  %6 = select i1 %4, ptr %1, ptr %5\n  %7 = tail call i32 (...) @proc_list_unlock() #2\n  ret ptr %6\n}\n\ndeclare ptr @current_proc(...) local_unnamed_addr #1\n\ndeclare i32 @proc_list_lock(...) local_unnamed_addr #1\n\ndeclare ptr @proc_ref_locked(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @proc_list_unlock(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dsi_pll.h_msm_dsi_pll_28nm_8960_init.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function msm_dsi_pll_28nm_8960_init\n\t.type\tmsm_dsi_pll_28nm_8960_init,@function\nmsm_dsi_pll_28nm_8960_init:             # @msm_dsi_pll_28nm_8960_init\n\t.cfi_startproc\n# %bb.0:\n\txorl\t%edi, %edi\n\tsubl\tENODEV(%rip), %edi\n\tjmp\tERR_PTR@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\tmsm_dsi_pll_28nm_8960_init, .Lfunc_end0-msm_dsi_pll_28nm_8960_init\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tENODEV,@object                  # @ENODEV\n\t.bss\n\t.globl\tENODEV\n\t.p2align\t2\nENODEV:\n\t.long\t0                               # 0x0\n\t.size\tENODEV, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @msm_dsi_pll_28nm_8960_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @msm_dsi_pll_28nm_8960_init(ptr nocapture readnone %0) #0 {\n  %2 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %3 = sub nsw i32 0, %2\n  %4 = tail call ptr @ERR_PTR(i32 noundef %3) #2\n  ret ptr %4\n}\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/gpu/drm/msm/dsi/pll/extr_dsi_pll.h_msm_dsi_pll_28nm_8960_init.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @msm_dsi_pll_28nm_8960_init], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal ptr @msm_dsi_pll_28nm_8960_init(ptr nocapture readnone %0, i32 %1) #0 {\n  %3 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %4 = sub nsw i32 0, %3\n  %5 = tail call ptr @ERR_PTR(i32 noundef %4) #2\n  ret ptr %5\n}\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_w83781d.c_FAN_FROM_REG.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function FAN_FROM_REG\n\t.type\tFAN_FROM_REG,@function\nFAN_FROM_REG:                           # @FAN_FROM_REG\n\t.cfi_startproc\n# %bb.0:\n\ttestl\t%edi, %edi\n\tje\t.LBB0_1\n# %bb.2:\n\tcmpl\t$255, %edi\n\tjne\t.LBB0_4\n# %bb.3:\n\txorl\t%eax, %eax\n\tretq\n.LBB0_1:\n\tmovq\t$-1, %rax\n\tretq\n.LBB0_4:\n\timull\t%edi, %esi\n\tmovl\t$1350000, %eax                  # imm = 0x149970\n\txorl\t%edx, %edx\n\tidivl\t%esi\n\tcltq\n\tretq\n.Lfunc_end0:\n\t.size\tFAN_FROM_REG, .Lfunc_end0-FAN_FROM_REG\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @FAN_FROM_REG], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i64 @FAN_FROM_REG(i32 noundef %0, i32 noundef %1) #0 {\n  %3 = icmp eq i32 %0, 0\n  br i1 %3, label %8, label %4\n\n4:                                                ; preds = %2\n  %5 = icmp eq i32 %0, 255\n  br i1 %5, label %8, label %6\n\n6:                                                ; preds = %4\n  %7 = mul nsw i32 %1, %0\n  br label %8\n\n8:                                                ; preds = %2, %4, %6\n  %9 = phi i32 [ %7, %6 ], [ -1, %4 ], [ -1, %2 ]\n  %10 = sext i32 %9 to i64\n  ret i64 %10\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/drivers/hwmon/extr_w83781d.c_FAN_FROM_REG.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @FAN_FROM_REG], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i64 @FAN_FROM_REG(i32 noundef %0, i32 noundef %1) #0 {\n  switch i32 %0, label %4 [\n    i32 0, label %8\n    i32 255, label %3\n  ]\n\n3:                                                ; preds = %2\n  br label %8\n\n4:                                                ; preds = %2\n  %5 = mul nsw i32 %1, %0\n  %6 = sdiv i32 1350000, %5\n  %7 = sext i32 %6 to i64\n  br label %8\n\n8:                                                ; preds = %2, %4, %3\n  %9 = phi i64 [ 0, %3 ], [ %7, %4 ], [ -1, %2 ]\n  ret i64 %9\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sound.c_snd_mtxfree.ll\"\n\t.globl\tsnd_mtxfree                     # -- Begin function snd_mtxfree\n\t.p2align\t4, 0x90\n\t.type\tsnd_mtxfree,@function\nsnd_mtxfree:                            # @snd_mtxfree\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tcallq\tmtx_destroy@PLT\n\tmovl\tM_DEVBUF(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tfree@PLT                        # TAILCALL\n.Lfunc_end0:\n\t.size\tsnd_mtxfree, .Lfunc_end0-snd_mtxfree\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tM_DEVBUF,@object                # @M_DEVBUF\n\t.bss\n\t.globl\tM_DEVBUF\n\t.p2align\t2\nM_DEVBUF:\n\t.long\t0                               # 0x0\n\t.size\tM_DEVBUF, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@M_DEVBUF = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @snd_mtxfree(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @mtx_destroy(ptr noundef %0) #3\n  %3 = load i32, ptr @M_DEVBUF, align 4, !tbaa !5\n  %4 = tail call i32 @free(ptr noundef %0, i32 noundef %3) #3\n  ret void\n}\n\ndeclare i32 @mtx_destroy(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/sys/dev/sound/pcm/extr_sound.c_snd_mtxfree.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@M_DEVBUF = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @snd_mtxfree(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @mtx_destroy(ptr noundef %0) #3\n  %3 = load i32, ptr @M_DEVBUF, align 4, !tbaa !5\n  %4 = tail call i32 @free(ptr noundef %0, i32 noundef %3)\n  ret void\n}\n\ndeclare i32 @mtx_destroy(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_nsp32_io.h_nsp32_mmio_write1.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function nsp32_mmio_write1\n\t.type\tnsp32_mmio_write1,@function\nnsp32_mmio_write1:                      # @nsp32_mmio_write1\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t%esi, %esi\n\taddq\t%rdi, %rsi\n\taddq\tNSP32_MMIO_OFFSET(%rip), %rsi\n\tmovl\t%edx, %edi\n\tjmp\twriteb@PLT                      # TAILCALL\n.Lfunc_end0:\n\t.size\tnsp32_mmio_write1, .Lfunc_end0-nsp32_mmio_write1\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNSP32_MMIO_OFFSET,@object       # @NSP32_MMIO_OFFSET\n\t.bss\n\t.globl\tNSP32_MMIO_OFFSET\n\t.p2align\t3\nNSP32_MMIO_OFFSET:\n\t.quad\t0                               # 0x0\n\t.size\tNSP32_MMIO_OFFSET, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NSP32_MMIO_OFFSET = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @nsp32_mmio_write1], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @nsp32_mmio_write1(i64 noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = load i64, ptr @NSP32_MMIO_OFFSET, align 8, !tbaa !5\n  %5 = add nsw i64 %4, %0\n  %6 = zext i32 %1 to i64\n  %7 = add nsw i64 %5, %6\n  %8 = tail call i32 @writeb(i32 noundef %2, i64 noundef %7) #2\n  ret void\n}\n\ndeclare i32 @writeb(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/scsi/extr_nsp32_io.h_nsp32_mmio_write1.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NSP32_MMIO_OFFSET = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @nsp32_mmio_write1], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @nsp32_mmio_write1(i64 noundef %0, i32 noundef %1, i8 noundef zeroext %2) #0 {\n  %4 = load i64, ptr @NSP32_MMIO_OFFSET, align 8, !tbaa !5\n  %5 = zext i32 %1 to i64\n  %6 = add i64 %5, %0\n  %7 = add i64 %6, %4\n  %8 = inttoptr i64 %7 to ptr\n  %9 = tail call i32 @writeb(i8 noundef zeroext %2, ptr noundef %8) #2\n  ret void\n}\n\ndeclare i32 @writeb(i8 noundef zeroext, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_wmt.c_wmt_cont_max_parse.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function wmt_cont_max_parse\n\t.type\twmt_cont_max_parse,@function\nwmt_cont_max_parse:                     # @wmt_cont_max_parse\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tleaq\t4(%rsi), %rdi\n\tleaq\t-1(%rdx), %rsi\n\tleaq\t16(%rbx), %rdx\n\tcallq\thid_get_data_unsigned@PLT\n\tmovq\tMAX_MT_SLOTS(%rip), %rdx\n\tcmpq\t%rdx, %rax\n\tjle\t.LBB0_2\n# %bb.1:\n\tmovl\t$.L.str, %edi\n\tmovl\t%eax, %esi\n\tcallq\tDPRINTF@PLT\n\tmovq\tMAX_MT_SLOTS(%rip), %rax\n.LBB0_2:\n\ttestq\t%rax, %rax\n\tjle\t.LBB0_4\n# %bb.3:\n\tmovq\t8(%rbx), %rcx\n\tmovq\tWMT_SLOT(%rip), %rdx\n\tmovq\t(%rcx,%rdx,8), %rsi\n\tincq\t%rsi\n\tcmpq\t%rsi, %rax\n\tjne\t.LBB0_5\n.LBB0_4:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_5:\n\t.cfi_def_cfa_offset 16\n\tleaq\t-1(%rax), %rsi\n\tmovq\t%rsi, (%rcx,%rdx,8)\n\tmovl\t(%rbx), %edi\n\tmovl\t$.L.str.1, %esi\n\tmovq\t%rax, %rdx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tdevice_printf@PLT               # TAILCALL\n.Lfunc_end0:\n\t.size\twmt_cont_max_parse, .Lfunc_end0-wmt_cont_max_parse\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMAX_MT_SLOTS,@object            # @MAX_MT_SLOTS\n\t.bss\n\t.globl\tMAX_MT_SLOTS\n\t.p2align\t3\nMAX_MT_SLOTS:\n\t.quad\t0                               # 0x0\n\t.size\tMAX_MT_SLOTS, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Hardware reported %d contacts while only %d is supported\\n\"\n\t.size\t.L.str, 58\n\n\t.type\tWMT_SLOT,@object                # @WMT_SLOT\n\t.bss\n\t.globl\tWMT_SLOT\n\t.p2align\t3\nWMT_SLOT:\n\t.quad\t0                               # 0x0\n\t.size\tWMT_SLOT, 8\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"%d feature report contacts\"\n\t.size\t.L.str.1, 27\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wmt_softc = type { i32, ptr, i32 }\n\n@MAX_MT_SLOTS = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [58 x i8] c\"Hardware reported %d contacts while only %d is supported\\0A\\00\", align 1\n@WMT_SLOT = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"%d feature report contacts\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wmt_cont_max_parse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @wmt_cont_max_parse(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 {\n  %4 = getelementptr inbounds i32, ptr %1, i64 1\n  %5 = add i64 %2, -1\n  %6 = getelementptr inbounds %struct.wmt_softc, ptr %0, i64 0, i32 2\n  %7 = tail call i64 @hid_get_data_unsigned(ptr noundef nonnull %4, i64 noundef %5, ptr noundef nonnull %6) #2\n  %8 = load i64, ptr @MAX_MT_SLOTS, align 8, !tbaa !5\n  %9 = icmp sgt i64 %7, %8\n  br i1 %9, label %10, label %12\n\n10:                                               ; preds = %3\n  %11 = tail call i32 @DPRINTF(ptr noundef nonnull @.str, i64 noundef %7, i64 noundef %8) #2\n  br label %12\n\n12:                                               ; preds = %10, %3\n  %13 = phi i64 [ %8, %10 ], [ %7, %3 ]\n  %14 = icmp sgt i64 %13, 0\n  br i1 %14, label %15, label %23\n\n15:                                               ; preds = %12\n  %16 = getelementptr inbounds %struct.wmt_softc, ptr %0, i64 0, i32 1\n  %17 = load ptr, ptr %16, align 8, !tbaa !9\n  %18 = load i64, ptr @WMT_SLOT, align 8, !tbaa !5\n  %19 = getelementptr inbounds i64, ptr %17, i64 %18\n  %20 = load i64, ptr %19, align 8, !tbaa !5\n  %21 = add nsw i64 %20, 1\n  %22 = icmp eq i64 %21, %13\n  br i1 %22, label %23, label %25\n\n23:                                               ; preds = %15, %12\n  %24 = trunc i64 %13 to i32\n  br label %25\n\n25:                                               ; preds = %15, %23\n  %26 = phi i32 [ %24, %23 ], [ %13, %15 ]\n  %27 = add nsw i32 %26, -1\n  store i32 %27, ptr %19, align 8, !tbaa !5\n  %28 = load i32, ptr %0, align 8, !tbaa !12\n  %29 = tail call i32 @device_printf(i32 noundef %28, ptr noundef nonnull @.str.1, i64 noundef %13) #2\n  ret void\n}\n\ndeclare i64 @hid_get_data_unsigned(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @DPRINTF(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @device_printf(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 8}\n!10 = !{!\"wmt_softc\", !11, i64 0, !11, i64 8, !11, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 0}\n</s><s>", "file:": "./freebsd/sys/dev/usb/input/extr_wmt.c_wmt_cont_max_parse.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wmt_softc = type { i32, ptr, i32 }\n%struct.TYPE_2__ = type { i64 }\n\n@MAX_MT_SLOTS = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [58 x i8] c\"Hardware reported %d contacts while only %d is supported\\0A\\00\", align 1\n@WMT_SLOT = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"%d feature report contacts\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wmt_cont_max_parse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @wmt_cont_max_parse(ptr noundef %0, ptr noundef %1, i64 noundef %2) #0 {\n  %4 = getelementptr inbounds i32, ptr %1, i64 1\n  %5 = add nsw i64 %2, -1\n  %6 = getelementptr inbounds %struct.wmt_softc, ptr %0, i64 0, i32 2\n  %7 = tail call i64 @hid_get_data_unsigned(ptr noundef nonnull %4, i64 noundef %5, ptr noundef nonnull %6) #2\n  %8 = load i64, ptr @MAX_MT_SLOTS, align 8, !tbaa !5\n  %9 = icmp sgt i64 %7, %8\n  br i1 %9, label %10, label %14\n\n10:                                               ; preds = %3\n  %11 = trunc i64 %7 to i32\n  %12 = tail call i32 @DPRINTF(ptr noundef nonnull @.str, i32 noundef %11, i64 noundef %8) #2\n  %13 = load i64, ptr @MAX_MT_SLOTS, align 8, !tbaa !5\n  br label %14\n\n14:                                               ; preds = %10, %3\n  %15 = phi i64 [ %13, %10 ], [ %7, %3 ]\n  %16 = icmp sgt i64 %15, 0\n  br i1 %16, label %17, label %29\n\n17:                                               ; preds = %14\n  %18 = getelementptr inbounds %struct.wmt_softc, ptr %0, i64 0, i32 1\n  %19 = load ptr, ptr %18, align 8, !tbaa !9\n  %20 = load i64, ptr @WMT_SLOT, align 8, !tbaa !5\n  %21 = getelementptr inbounds %struct.TYPE_2__, ptr %19, i64 %20\n  %22 = load i64, ptr %21, align 8, !tbaa !13\n  %23 = add nsw i64 %22, 1\n  %24 = icmp eq i64 %15, %23\n  br i1 %24, label %29, label %25\n\n25:                                               ; preds = %17\n  %26 = add nsw i64 %15, -1\n  store i64 %26, ptr %21, align 8, !tbaa !13\n  %27 = load i32, ptr %0, align 8, !tbaa !15\n  %28 = tail call i32 @device_printf(i32 noundef %27, ptr noundef nonnull @.str.1, i64 noundef %15) #2\n  br label %29\n\n29:                                               ; preds = %25, %17, %14\n  ret void\n}\n\ndeclare i64 @hid_get_data_unsigned(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @DPRINTF(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @device_printf(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !12, i64 8}\n!10 = !{!\"wmt_softc\", !11, i64 0, !12, i64 8, !11, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n!13 = !{!14, !6, i64 0}\n!14 = !{!\"TYPE_2__\", !6, i64 0}\n!15 = !{!10, !11, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tcb_common.c_tcb_startswith_nc.ll\"\n\t.globl\ttcb_startswith_nc               # -- Begin function tcb_startswith_nc\n\t.p2align\t4, 0x90\n\t.type\ttcb_startswith_nc,@function\ntcb_startswith_nc:                      # @tcb_startswith_nc\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\tmovq\t%rsi, %rdi\n\tcallq\tstrlen@PLT\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\tmovl\t%eax, %edx\n\tcallq\ttcb_strncmp_nc@PLT\n\txorl\t%ecx, %ecx\n\ttestq\t%rax, %rax\n\tsete\t%cl\n\tmovl\t%ecx, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\ttcb_startswith_nc, .Lfunc_end0-tcb_startswith_nc\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @tcb_startswith_nc(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call i32 @strlen(ptr noundef %1) #2\n  %4 = tail call i64 @tcb_strncmp_nc(ptr noundef %0, ptr noundef %1, i32 noundef %3) #2\n  %5 = icmp eq i64 %4, 0\n  %6 = zext i1 %5 to i32\n  ret i32 %6\n}\n\ndeclare i64 @tcb_strncmp_nc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strlen(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./freebsd/usr.sbin/cxgbetool/extr_tcb_common.c_tcb_startswith_nc.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @tcb_startswith_nc(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1)\n  %4 = trunc i64 %3 to i32\n  %5 = tail call i64 @tcb_strncmp_nc(ptr noundef %0, ptr noundef %1, i32 noundef %4) #3\n  %6 = icmp eq i64 %5, 0\n  %7 = zext i1 %6 to i32\n  ret i32 %7\n}\n\ndeclare i64 @tcb_strncmp_nc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn\ndeclare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { argmemonly mustprogress nofree nounwind readonly willreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mmu.c_xen_release_ptpage.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function xen_release_ptpage\n\t.type\txen_release_ptpage,@function\nxen_release_ptpage:                     # @xen_release_ptpage\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %r14\n\tcallq\tpfn_to_page@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\tcallq\tPagePinned@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_7\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\tPageHighMem@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_6\n# %bb.2:\n\tcmpl\t%ebp, PT_PTE(%rip)\n\tjne\t.LBB0_5\n# %bb.3:\n\tcmpq\t$0, USE_SPLIT_PTLOCKS(%rip)\n\tje\t.LBB0_5\n# %bb.4:\n\tmovl\tMMUEXT_UNPIN_TABLE(%rip), %edi\n\tmovq\t%r14, %rsi\n\tcallq\tpin_pagetable_pfn@PLT\n.LBB0_5:\n\tmovq\t%r14, %rdi\n\tcallq\tPFN_PHYS@PLT\n\tmovl\t%eax, %edi\n\tcallq\t__va@PLT\n\tmovl\t%eax, %edi\n\tcallq\tmake_lowmem_page_readwrite@PLT\n.LBB0_6:\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tClearPagePinned@PLT             # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\txen_release_ptpage, .Lfunc_end0-xen_release_ptpage\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPT_PTE,@object                  # @PT_PTE\n\t.bss\n\t.globl\tPT_PTE\n\t.p2align\t2\nPT_PTE:\n\t.long\t0                               # 0x0\n\t.size\tPT_PTE, 4\n\n\t.type\tUSE_SPLIT_PTLOCKS,@object       # @USE_SPLIT_PTLOCKS\n\t.globl\tUSE_SPLIT_PTLOCKS\n\t.p2align\t3\nUSE_SPLIT_PTLOCKS:\n\t.quad\t0                               # 0x0\n\t.size\tUSE_SPLIT_PTLOCKS, 8\n\n\t.type\tMMUEXT_UNPIN_TABLE,@object      # @MMUEXT_UNPIN_TABLE\n\t.globl\tMMUEXT_UNPIN_TABLE\n\t.p2align\t2\nMMUEXT_UNPIN_TABLE:\n\t.long\t0                               # 0x0\n\t.size\tMMUEXT_UNPIN_TABLE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PT_PTE = dso_local local_unnamed_addr global i32 0, align 4\n@USE_SPLIT_PTLOCKS = dso_local local_unnamed_addr global i64 0, align 8\n@MMUEXT_UNPIN_TABLE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xen_release_ptpage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @xen_release_ptpage(i64 noundef %0, i32 noundef %1) #0 {\n  %3 = tail call ptr @pfn_to_page(i64 noundef %0) #2\n  %4 = tail call i64 @PagePinned(ptr noundef %3) #2\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %17, label %6\n\n6:                                                ; preds = %2\n  %7 = tail call i32 @PageHighMem(ptr noundef %3) #2\n  %8 = icmp eq i32 %7, 0\n  %9 = load i32, ptr @PT_PTE, align 4\n  %10 = icmp eq i32 %9, %1\n  %11 = select i1 %8, i1 true, i1 %10\n  br i1 %11, label %12, label %15\n\n12:                                               ; preds = %6\n  %13 = load i64, ptr @USE_SPLIT_PTLOCKS, align 8, !tbaa !5\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %12, %6\n  %16 = tail call i32 @pin_pagetable_pfn(i32 noundef @MMUEXT_UNPIN_TABLE, i64 noundef %0) #2\n  br label %17\n\n17:                                               ; preds = %12, %15, %2\n  %18 = tail call i32 @PFN_PHYS(i64 noundef %0) #2\n  %19 = tail call i32 @__va(i32 noundef %18) #2\n  %20 = tail call i32 @make_lowmem_page_readwrite(i32 noundef %19) #2\n  %21 = tail call i32 @ClearPagePinned(ptr noundef %3) #2\n  ret void\n}\n\ndeclare ptr @pfn_to_page(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @PagePinned(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @PageHighMem(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pin_pagetable_pfn(i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @__va(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @make_lowmem_page_readwrite(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @PFN_PHYS(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ClearPagePinned(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/arch/x86/xen/extr_mmu.c_xen_release_ptpage.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PT_PTE = dso_local local_unnamed_addr global i32 0, align 4\n@USE_SPLIT_PTLOCKS = dso_local local_unnamed_addr global i64 0, align 8\n@MMUEXT_UNPIN_TABLE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xen_release_ptpage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @xen_release_ptpage(i64 noundef %0, i32 noundef %1) #0 {\n  %3 = tail call ptr @pfn_to_page(i64 noundef %0) #2\n  %4 = tail call i64 @PagePinned(ptr noundef %3) #2\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %24, label %6\n\n6:                                                ; preds = %2\n  %7 = tail call i32 @PageHighMem(ptr noundef %3) #2\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %9, label %22\n\n9:                                                ; preds = %6\n  %10 = load i32, ptr @PT_PTE, align 4, !tbaa !5\n  %11 = icmp eq i32 %10, %1\n  %12 = load i64, ptr @USE_SPLIT_PTLOCKS, align 8\n  %13 = icmp ne i64 %12, 0\n  %14 = select i1 %11, i1 %13, i1 false\n  br i1 %14, label %15, label %18\n\n15:                                               ; preds = %9\n  %16 = load i32, ptr @MMUEXT_UNPIN_TABLE, align 4, !tbaa !5\n  %17 = tail call i32 @pin_pagetable_pfn(i32 noundef %16, i64 noundef %0) #2\n  br label %18\n\n18:                                               ; preds = %15, %9\n  %19 = tail call i32 @PFN_PHYS(i64 noundef %0) #2\n  %20 = tail call i32 @__va(i32 noundef %19) #2\n  %21 = tail call i32 @make_lowmem_page_readwrite(i32 noundef %20) #2\n  br label %22\n\n22:                                               ; preds = %18, %6\n  %23 = tail call i32 @ClearPagePinned(ptr noundef %3) #2\n  br label %24\n\n24:                                               ; preds = %22, %2\n  ret void\n}\n\ndeclare ptr @pfn_to_page(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @PagePinned(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @PageHighMem(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pin_pagetable_pfn(i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @make_lowmem_page_readwrite(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @__va(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @PFN_PHYS(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ClearPagePinned(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_octagon-5066.c_oct5066_copy_from.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function oct5066_copy_from\n\t.type\toct5066_copy_from,@function\noct5066_copy_from:                      # @oct5066_copy_from\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r13, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\ttestq\t%rcx, %rcx\n\tje\t.LBB0_3\n# %bb.1:                                # %.preheader\n\tmovq\t%rcx, %r14\n\tmovq\t%rdx, %r13\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %r12\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\tWINDOW_LENGTH(%rip), %rbx\n\tmovq\tWINDOW_MASK(%rip), %rax\n\tandq\t%r13, %rax\n\tsubq\t%rax, %rbx\n\tcmpq\t%rbx, %r14\n\tcmovbq\t%r14, %rbx\n\tmovl\t$oct5066_spin, %edi\n\tcallq\tspin_lock@PLT\n\tmovq\t%r12, %rdi\n\tmovq\t%r13, %rsi\n\tcallq\toct5066_page@PLT\n\tmovq\tiomapadr(%rip), %rsi\n\taddq\t%r13, %rsi\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rdx\n\tcallq\tmemcpy_fromio@PLT\n\tmovl\t$oct5066_spin, %edi\n\tcallq\tspin_unlock@PLT\n\taddq\t%rbx, %r15\n\taddq\t%rbx, %r13\n\tsubq\t%rbx, %r14\n\tjne\t.LBB0_2\n.LBB0_3:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\toct5066_copy_from, .Lfunc_end0-oct5066_copy_from\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tWINDOW_LENGTH,@object           # @WINDOW_LENGTH\n\t.bss\n\t.globl\tWINDOW_LENGTH\n\t.p2align\t3\nWINDOW_LENGTH:\n\t.quad\t0                               # 0x0\n\t.size\tWINDOW_LENGTH, 8\n\n\t.type\tWINDOW_MASK,@object             # @WINDOW_MASK\n\t.globl\tWINDOW_MASK\n\t.p2align\t3\nWINDOW_MASK:\n\t.quad\t0                               # 0x0\n\t.size\tWINDOW_MASK, 8\n\n\t.type\toct5066_spin,@object            # @oct5066_spin\n\t.globl\toct5066_spin\n\t.p2align\t2\noct5066_spin:\n\t.long\t0                               # 0x0\n\t.size\toct5066_spin, 4\n\n\t.type\tiomapadr,@object                # @iomapadr\n\t.globl\tiomapadr\n\t.p2align\t3\niomapadr:\n\t.quad\t0                               # 0x0\n\t.size\tiomapadr, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WINDOW_LENGTH = dso_local local_unnamed_addr global i64 0, align 8\n@WINDOW_MASK = dso_local local_unnamed_addr global i64 0, align 8\n@oct5066_spin = dso_local global i32 0, align 4\n@iomapadr = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @oct5066_copy_from], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @oct5066_copy_from(i64 noundef %0, i64 noundef %1, i64 noundef %2, i64 noundef %3) #0 {\n  %5 = icmp eq i64 %3, 0\n  br i1 %5, label %19, label %6\n\n6:                                                ; preds = %4, %6\n  %7 = phi i64 [ %15, %6 ], [ %3, %4 ]\n  %8 = phi i64 [ %13, %6 ], [ %2, %4 ]\n  %9 = phi i64 [ %11, %6 ], [ %1, %4 ]\n  %10 = load i64, ptr @WINDOW_LENGTH, align 8, !tbaa !5\n  %11 = add i64 %10, %8\n  %12 = load i64, ptr @WINDOW_MASK, align 8, !tbaa !5\n  %13 = and i64 %12, %8\n  %14 = sub i64 %11, %13\n  %15 = tail call i64 @llvm.umin.i64(i64 %14, i64 %7)\n  %16 = tail call i32 @spin_lock(ptr noundef nonnull @oct5066_spin) #3\n  %17 = tail call i32 @oct5066_page(i64 noundef %0, i64 noundef %8) #3\n  %18 = load i64, ptr @iomapadr, align 8, !tbaa !5\n  %19 = add nsw i64 %18, %8\n  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %9, ptr align 1 %19, i64 %15, i1 false)\n  %20 = tail call i32 @spin_unlock(ptr noundef nonnull @oct5066_spin) #3\n  %21 = add i64 %9, %15\n  %22 = add i64 %8, %15\n  %23 = sub i64 %7, %15\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %25, label %6, !llvm.loop !9\n\n25:                                               ; preds = %6\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @oct5066_page(i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare void @llvm.memcpy.p0.p0.i64(ptr noalias noundef writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i64 @llvm.umin.i64(i64, i64) #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind readonly willreturn }\nattributes #4 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = distinct !{!9, !10}\n!10 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/mtd/maps/extr_octagon-5066.c_oct5066_copy_from.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WINDOW_LENGTH = dso_local local_unnamed_addr global i64 0, align 8\n@WINDOW_MASK = dso_local local_unnamed_addr global i64 0, align 8\n@oct5066_spin = dso_local global i32 0, align 4\n@iomapadr = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @oct5066_copy_from], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @oct5066_copy_from(ptr noundef %0, ptr noundef %1, i64 noundef %2, i64 noundef %3) #0 {\n  %5 = icmp eq i64 %3, 0\n  br i1 %5, label %25, label %6\n\n6:                                                ; preds = %4, %6\n  %7 = phi i64 [ %23, %6 ], [ %3, %4 ]\n  %8 = phi i64 [ %22, %6 ], [ %2, %4 ]\n  %9 = phi ptr [ %21, %6 ], [ %1, %4 ]\n  %10 = load i64, ptr @WINDOW_LENGTH, align 8, !tbaa !5\n  %11 = load i64, ptr @WINDOW_MASK, align 8, !tbaa !5\n  %12 = and i64 %11, %8\n  %13 = sub i64 %10, %12\n  %14 = tail call i64 @llvm.umin.i64(i64 %7, i64 %13)\n  %15 = tail call i32 @spin_lock(ptr noundef nonnull @oct5066_spin) #3\n  %16 = tail call i32 @oct5066_page(ptr noundef %0, i64 noundef %8) #3\n  %17 = load i64, ptr @iomapadr, align 8, !tbaa !5\n  %18 = add i64 %17, %8\n  %19 = tail call i32 @memcpy_fromio(ptr noundef %9, i64 noundef %18, i64 noundef %14) #3\n  %20 = tail call i32 @spin_unlock(ptr noundef nonnull @oct5066_spin) #3\n  %21 = getelementptr i8, ptr %9, i64 %14\n  %22 = add i64 %14, %8\n  %23 = sub i64 %7, %14\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %25, label %6, !llvm.loop !9\n\n25:                                               ; preds = %6, %4\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @oct5066_page(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @memcpy_fromio(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i64 @llvm.umin.i64(i64, i64) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = distinct !{!9, !10}\n!10 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dlltool.c_match_exclude.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function match_exclude\n\t.type\tmatch_exclude,@function\nmatch_exclude:                          # @match_exclude\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\texcludes(%rip), %rbx\n\tmovl\t$FALSE, %r14d\n\ttestq\t%rbx, %rbx\n\tje\t.LBB0_5\n# %bb.1:\n\tmovq\t%rdi, %r15\n\t.p2align\t4, 0x90\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovl\t(%rbx), %esi\n\tmovq\t%r15, %rdi\n\tcallq\tstrcmp@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.2:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t8(%rbx), %rbx\n\ttestq\t%rbx, %rbx\n\tjne\t.LBB0_3\n\tjmp\t.LBB0_5\n.LBB0_4:\n\tmovl\t$TRUE, %r14d\n.LBB0_5:\n\tmovl\t(%r14), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmatch_exclude, .Lfunc_end0-match_exclude\n\t.cfi_endproc\n                                        # -- End function\n\t.type\texcludes,@object                # @excludes\n\t.bss\n\t.globl\texcludes\n\t.p2align\t3\nexcludes:\n\t.quad\t0\n\t.size\texcludes, 8\n\n\t.type\tTRUE,@object                    # @TRUE\n\t.globl\tTRUE\n\t.p2align\t2\nTRUE:\n\t.long\t0                               # 0x0\n\t.size\tTRUE, 4\n\n\t.type\tFALSE,@object                   # @FALSE\n\t.globl\tFALSE\n\t.p2align\t2\nFALSE:\n\t.long\t0                               # 0x0\n\t.size\tFALSE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.exclude = type { i32, ptr }\n\n@excludes = dso_local local_unnamed_addr global ptr null, align 8\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @match_exclude], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @match_exclude(ptr noundef %0) #0 {\n  %2 = load ptr, ptr @excludes, align 8, !tbaa !5\n  %3 = icmp eq ptr %2, null\n  br i1 %3, label %11, label %4\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.exclude, ptr %2, i64 0, i32 1\n  br label %6\n\n6:                                                ; preds = %4, %9\n  %7 = phi ptr [ %5, %4 ], [ %10, %9 ]\n  %8 = load i32, ptr %7, align 8, !tbaa !9\n  tail call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #3\n  %9 = tail call i64 @strcmp(ptr noundef %0, i32 noundef %8) #3\n  tail call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #3\n  %10 = getelementptr inbounds %struct.exclude, ptr %2, i64 1\n  %11 = icmp eq i64 %9, 0\n  br i1 %11, label %12, label %6, !llvm.loop !12\n\n12:                                               ; preds = %6\n  %13 = load i32, ptr @TRUE, align 4, !tbaa !14\n  ret i32 %13\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @strcmp(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"exclude\", !11, i64 0, !6, i64 8}\n!11 = !{!\"int\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = !{!11, !11, i64 0}\n</s><s>", "file:": "./freebsd/contrib/binutils/binutils/extr_dlltool.c_match_exclude.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.string_list = type { i32, ptr }\n\n@excludes = dso_local local_unnamed_addr global ptr null, align 8\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @match_exclude], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @match_exclude(ptr noundef %0) #0 {\n  %2 = load ptr, ptr @excludes, align 8, !tbaa !5\n  %3 = icmp eq ptr %2, null\n  br i1 %3, label %13, label %8\n\n4:                                                ; preds = %8\n  %5 = getelementptr inbounds %struct.string_list, ptr %9, i64 0, i32 1\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = icmp eq ptr %6, null\n  br i1 %7, label %13, label %8, !llvm.loop !9\n\n8:                                                ; preds = %1, %4\n  %9 = phi ptr [ %6, %4 ], [ %2, %1 ]\n  %10 = load i32, ptr %9, align 8, !tbaa !11\n  %11 = tail call i64 @strcmp(ptr noundef %0, i32 noundef %10) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %13, label %4\n\n13:                                               ; preds = %8, %4, %1\n  %14 = phi ptr [ @FALSE, %1 ], [ @FALSE, %4 ], [ @TRUE, %8 ]\n  %15 = load i32, ptr %14, align 4, !tbaa !14\n  ret i32 %15\n}\n\ndeclare i64 @strcmp(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = distinct !{!9, !10}\n!10 = !{!\"llvm.loop.mustprogress\"}\n!11 = !{!12, !13, i64 0}\n!12 = !{!\"string_list\", !13, i64 0, !6, i64 8}\n!13 = !{!\"int\", !7, i64 0}\n!14 = !{!13, !13, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_port.c_dsa_port_get_phy_device.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function dsa_port_get_phy_device\n\t.type\tdsa_port_get_phy_device,@function\ndsa_port_get_phy_device:                # @dsa_port_get_phy_device\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovl\t(%rdi), %edi\n\txorl\t%r14d, %r14d\n\tmovl\t$.L.str, %esi\n\txorl\t%edx, %edx\n\tcallq\tof_parse_phandle@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\tcallq\tof_phy_find_device@PLT\n\tmovq\t%rax, %r14\n\tmovq\t%rbx, %rdi\n\tcallq\tof_node_put@PLT\n\ttestq\t%r14, %r14\n\tje\t.LBB0_3\n.LBB0_2:\n\tmovq\t%r14, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_3:\n\t.cfi_def_cfa_offset 32\n\txorl\t%edi, %edi\n\tsubl\tEPROBE_DEFER(%rip), %edi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tERR_PTR@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\tdsa_port_get_phy_device, .Lfunc_end0-dsa_port_get_phy_device\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"phy-handle\"\n\t.size\t.L.str, 11\n\n\t.type\tEPROBE_DEFER,@object            # @EPROBE_DEFER\n\t.bss\n\t.globl\tEPROBE_DEFER\n\t.p2align\t2\nEPROBE_DEFER:\n\t.long\t0                               # 0x0\n\t.size\tEPROBE_DEFER, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [11 x i8] c\"phy-handle\\00\", align 1\n@EPROBE_DEFER = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dsa_port_get_phy_device], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @dsa_port_get_phy_device(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i32, ptr %0, align 4, !tbaa !5\n  %3 = tail call ptr @of_parse_phandle(i32 noundef %2, ptr noundef nonnull @.str, ptr noundef null) #2\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %9, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call ptr @of_phy_find_device(ptr noundef nonnull %3) #2\n  %7 = tail call i32 @of_node_put(ptr noundef nonnull %3) #2\n  %8 = icmp eq ptr %6, null\n  br i1 %8, label %9, label %11\n\n9:                                                ; preds = %5, %1\n  %10 = load i32, ptr @EPROBE_DEFER, align 4, !tbaa !10\n  %11 = sub nsw i32 0, %10\n  %12 = tail call ptr @ERR_PTR(i32 noundef %11) #2\n  br label %14\n\n13:                                               ; preds = %14\n  %14 = phi ptr [ %12, %13 ], [ %6, %10 ]\n  ret ptr %14\n}\n\ndeclare ptr @of_parse_phandle(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @of_phy_find_device(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @of_node_put(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dsa_port\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>", "file:": "./linux/net/dsa/extr_port.c_dsa_port_get_phy_device.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [11 x i8] c\"phy-handle\\00\", align 1\n@EPROBE_DEFER = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dsa_port_get_phy_device], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @dsa_port_get_phy_device(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i32, ptr %0, align 4, !tbaa !5\n  %3 = tail call ptr @of_parse_phandle(i32 noundef %2, ptr noundef nonnull @.str, i32 noundef 0) #2\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %13, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call ptr @of_phy_find_device(ptr noundef nonnull %3) #2\n  %7 = icmp eq ptr %6, null\n  %8 = tail call i32 @of_node_put(ptr noundef nonnull %3) #2\n  br i1 %7, label %9, label %13\n\n9:                                                ; preds = %5\n  %10 = load i32, ptr @EPROBE_DEFER, align 4, !tbaa !10\n  %11 = sub nsw i32 0, %10\n  %12 = tail call ptr @ERR_PTR(i32 noundef %11) #2\n  br label %13\n\n13:                                               ; preds = %5, %1, %9\n  %14 = phi ptr [ %12, %9 ], [ null, %1 ], [ %6, %5 ]\n  ret ptr %14\n}\n\ndeclare ptr @of_parse_phandle(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @of_phy_find_device(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @of_node_put(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dsa_port\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_rt2800mmio.c_rt2800mmio_probe_hw.ll\"\n\t.globl\trt2800mmio_probe_hw             # -- Begin function rt2800mmio_probe_hw\n\t.p2align\t4, 0x90\n\t.type\trt2800mmio_probe_hw,@function\nrt2800mmio_probe_hw:                    # @rt2800mmio_probe_hw\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %r14\n\tcallq\trt2800_probe_hw@PLT\n\tmovl\t%eax, %ebx\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovl\trt2800mmio_tx_sta_fifo_timeout(%rip), %eax\n\tmovl\t%eax, 4(%r14)\n\tmovl\trt2800mmio_work_txdone(%rip), %esi\n\tmovq\t%r14, %rdi\n\tcallq\tINIT_WORK@PLT\n.LBB0_2:\n\tmovl\t%ebx, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\trt2800mmio_probe_hw, .Lfunc_end0-rt2800mmio_probe_hw\n\t.cfi_endproc\n                                        # -- End function\n\t.type\trt2800mmio_tx_sta_fifo_timeout,@object # @rt2800mmio_tx_sta_fifo_timeout\n\t.bss\n\t.globl\trt2800mmio_tx_sta_fifo_timeout\n\t.p2align\t2\nrt2800mmio_tx_sta_fifo_timeout:\n\t.long\t0                               # 0x0\n\t.size\trt2800mmio_tx_sta_fifo_timeout, 4\n\n\t.type\trt2800mmio_work_txdone,@object  # @rt2800mmio_work_txdone\n\t.globl\trt2800mmio_work_txdone\n\t.p2align\t2\nrt2800mmio_work_txdone:\n\t.long\t0                               # 0x0\n\t.size\trt2800mmio_work_txdone, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rt2x00_dev = type { i32, i32 }\n\n@rt2800mmio_tx_sta_fifo_timeout = dso_local local_unnamed_addr global i32 0, align 4\n@rt2800mmio_work_txdone = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @rt2800mmio_probe_hw(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @rt2800_probe_hw(ptr noundef %0) #2\n  %3 = icmp eq i32 %2, 0\n  br i1 %3, label %4, label %7\n\n4:                                                ; preds = %1\n  %5 = load i32, ptr @rt2800mmio_tx_sta_fifo_timeout, align 4, !tbaa !5\n  %6 = getelementptr inbounds %struct.rt2x00_dev, ptr %0, i64 0, i32 1\n  store i32 %5, ptr %6, align 4, !tbaa !9\n  br label %7\n\n7:                                                ; preds = %4, %1\n  ret i32 %2\n}\n\ndeclare i32 @rt2800_probe_hw(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"rt2x00_dev\", !6, i64 0, !6, i64 4}\n</s><s>", "file:": "./linux/drivers/net/wireless/ralink/rt2x00/extr_rt2800mmio.c_rt2800mmio_probe_hw.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rt2x00_dev = type { i32, %struct.TYPE_2__ }\n%struct.TYPE_2__ = type { i32 }\n\n@rt2800mmio_tx_sta_fifo_timeout = dso_local local_unnamed_addr global i32 0, align 4\n@rt2800mmio_work_txdone = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @rt2800mmio_probe_hw(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = tail call i32 @rt2800_probe_hw(ptr noundef %0) #2\n  %3 = icmp eq i32 %2, 0\n  br i1 %3, label %4, label %9\n\n4:                                                ; preds = %1\n  %5 = load i32, ptr @rt2800mmio_tx_sta_fifo_timeout, align 4, !tbaa !5\n  %6 = getelementptr inbounds %struct.rt2x00_dev, ptr %0, i64 0, i32 1\n  store i32 %5, ptr %6, align 4, !tbaa !9\n  %7 = load i32, ptr @rt2800mmio_work_txdone, align 4, !tbaa !5\n  %8 = tail call i32 @INIT_WORK(ptr noundef %0, i32 noundef %7) #2\n  br label %9\n\n9:                                                ; preds = %1, %4\n  ret i32 %2\n}\n\ndeclare i32 @rt2800_probe_hw(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @INIT_WORK(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"rt2x00_dev\", !6, i64 0, !11, i64 4}\n!11 = !{!\"TYPE_2__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_M68KDisassembler.c_d68020_tst_i_8.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function d68020_tst_i_8\n\t.type\td68020_tst_i_8,@function\nd68020_tst_i_8:                         # @d68020_tst_i_8\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovl\tM68020_PLUS(%rip), %esi\n\tcallq\tLIMIT_CPU_TYPES@PLT\n\tmovl\tM68K_INS_TST(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t$1, %edx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tbuild_ea@PLT                    # TAILCALL\n.Lfunc_end0:\n\t.size\td68020_tst_i_8, .Lfunc_end0-d68020_tst_i_8\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tM68020_PLUS,@object             # @M68020_PLUS\n\t.bss\n\t.globl\tM68020_PLUS\n\t.p2align\t2\nM68020_PLUS:\n\t.long\t0                               # 0x0\n\t.size\tM68020_PLUS, 4\n\n\t.type\tM68K_INS_TST,@object            # @M68K_INS_TST\n\t.globl\tM68K_INS_TST\n\t.p2align\t2\nM68K_INS_TST:\n\t.long\t0                               # 0x0\n\t.size\tM68K_INS_TST, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@M68020_PLUS = dso_local local_unnamed_addr global i32 0, align 4\n@M68K_INS_TST = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @d68020_tst_i_8], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @d68020_tst_i_8(ptr noundef %0) #0 {\n  %2 = load i32, ptr @M68020_PLUS, align 4, !tbaa !5\n  %3 = tail call i32 @LIMIT_CPU_TYPES(ptr noundef %0, i32 noundef %2) #2\n  %4 = load i32, ptr @M68K_INS_TST, align 4, !tbaa !5\n  %5 = tail call i32 @build_ea(ptr noundef %0, i32 noundef %4, i32 noundef 1) #2\n  ret void\n}\n\ndeclare i32 @LIMIT_CPU_TYPES(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @build_ea(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./capstone/arch/M68K/extr_M68KDisassembler.c_d68020_tst_i_8.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@M68020_PLUS = dso_local local_unnamed_addr global i32 0, align 4\n@M68K_INS_TST = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @d68020_tst_i_8], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @d68020_tst_i_8(ptr noundef %0) #0 {\n  %2 = load i32, ptr @M68020_PLUS, align 4, !tbaa !5\n  %3 = tail call i32 @LIMIT_CPU_TYPES(ptr noundef %0, i32 noundef %2) #2\n  %4 = load i32, ptr @M68K_INS_TST, align 4, !tbaa !5\n  %5 = tail call i32 @build_ea(ptr noundef %0, i32 noundef %4, i32 noundef 1) #2\n  ret void\n}\n\ndeclare i32 @LIMIT_CPU_TYPES(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @build_ea(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_h3600_ts_input.c_npower_button_handler.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function npower_button_handler\n\t.type\tnpower_button_handler,@function\nnpower_button_handler:                  # @npower_button_handler\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovl\tGPIO_BITSY_NPOWER_BUTTON(%rip), %eax\n\txorl\t%ebp, %ebp\n\tandl\tGPLR(%rip), %eax\n\tsete\t%bpl\n\tmovl\tKEY_SUSPEND(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t$1, %edx\n\tcallq\tinput_report_key@PLT\n\tmovl\tKEY_SUSPEND(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %edx\n\tcallq\tinput_report_key@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tinput_sync@PLT\n\tmovl\tIRQ_HANDLED(%rip), %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tnpower_button_handler, .Lfunc_end0-npower_button_handler\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tGPLR,@object                    # @GPLR\n\t.bss\n\t.globl\tGPLR\n\t.p2align\t2\nGPLR:\n\t.long\t0                               # 0x0\n\t.size\tGPLR, 4\n\n\t.type\tGPIO_BITSY_NPOWER_BUTTON,@object # @GPIO_BITSY_NPOWER_BUTTON\n\t.globl\tGPIO_BITSY_NPOWER_BUTTON\n\t.p2align\t2\nGPIO_BITSY_NPOWER_BUTTON:\n\t.long\t0                               # 0x0\n\t.size\tGPIO_BITSY_NPOWER_BUTTON, 4\n\n\t.type\tKEY_SUSPEND,@object             # @KEY_SUSPEND\n\t.globl\tKEY_SUSPEND\n\t.p2align\t2\nKEY_SUSPEND:\n\t.long\t0                               # 0x0\n\t.size\tKEY_SUSPEND, 4\n\n\t.type\tIRQ_HANDLED,@object             # @IRQ_HANDLED\n\t.globl\tIRQ_HANDLED\n\t.p2align\t2\nIRQ_HANDLED:\n\t.long\t0                               # 0x0\n\t.size\tIRQ_HANDLED, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@GPLR = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_BITSY_NPOWER_BUTTON = dso_local local_unnamed_addr global i32 0, align 4\n@KEY_SUSPEND = dso_local local_unnamed_addr global i32 0, align 4\n@IRQ_HANDLED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @npower_button_handler], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @npower_button_handler(i32 %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @GPLR, align 4, !tbaa !5\n  %4 = load i32, ptr @GPIO_BITSY_NPOWER_BUTTON, align 4, !tbaa !5\n  %5 = and i32 %4, %3\n  %6 = icmp eq i32 %5, 0\n  %7 = zext i1 %6 to i32\n  %8 = load i32, ptr @KEY_SUSPEND, align 4, !tbaa !5\n  %9 = tail call i32 @input_report_key(ptr noundef %1, i32 noundef %8, i32 noundef %7) #2\n  %10 = load i32, ptr @KEY_SUSPEND, align 4, !tbaa !5\n  %11 = tail call i32 @input_report_key(ptr noundef %1, i32 noundef %10, i32 noundef %7) #2\n  %12 = tail call i32 @input_sync(ptr noundef %1) #2\n  %13 = load i32, ptr @IRQ_HANDLED, align 4, !tbaa !5\n  ret i32 %13\n}\n\ndeclare i32 @input_report_key(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @input_sync(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/input/touchscreen/extr_h3600_ts_input.c_npower_button_handler.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@GPLR = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_BITSY_NPOWER_BUTTON = dso_local local_unnamed_addr global i32 0, align 4\n@KEY_SUSPEND = dso_local local_unnamed_addr global i32 0, align 4\n@IRQ_HANDLED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @npower_button_handler], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @npower_button_handler(i32 %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @GPLR, align 4, !tbaa !5\n  %4 = load i32, ptr @GPIO_BITSY_NPOWER_BUTTON, align 4, !tbaa !5\n  %5 = and i32 %4, %3\n  %6 = icmp eq i32 %5, 0\n  %7 = zext i1 %6 to i32\n  %8 = load i32, ptr @KEY_SUSPEND, align 4, !tbaa !5\n  %9 = tail call i32 @input_report_key(ptr noundef %1, i32 noundef %8, i32 noundef 1) #2\n  %10 = load i32, ptr @KEY_SUSPEND, align 4, !tbaa !5\n  %11 = tail call i32 @input_report_key(ptr noundef %1, i32 noundef %10, i32 noundef %7) #2\n  %12 = tail call i32 @input_sync(ptr noundef %1) #2\n  %13 = load i32, ptr @IRQ_HANDLED, align 4, !tbaa !5\n  ret i32 %13\n}\n\ndeclare i32 @input_report_key(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @input_sync(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_nwbutton.c_button_handler.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function button_handler\n\t.type\tbutton_handler,@function\nbutton_handler:                         # @button_handler\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tincl\tbutton_press_count(%rip)\n\tmovq\tbdelay(%rip), %rsi\n\taddq\tjiffies(%rip), %rsi\n\tmovl\t$button_timer, %edi\n\tcallq\tmod_timer@PLT\n\tmovl\tIRQ_HANDLED(%rip), %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tbutton_handler, .Lfunc_end0-button_handler\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tbutton_press_count,@object      # @button_press_count\n\t.bss\n\t.globl\tbutton_press_count\n\t.p2align\t2\nbutton_press_count:\n\t.long\t0                               # 0x0\n\t.size\tbutton_press_count, 4\n\n\t.type\tbutton_timer,@object            # @button_timer\n\t.globl\tbutton_timer\n\t.p2align\t2\nbutton_timer:\n\t.long\t0                               # 0x0\n\t.size\tbutton_timer, 4\n\n\t.type\tjiffies,@object                 # @jiffies\n\t.globl\tjiffies\n\t.p2align\t3\njiffies:\n\t.quad\t0                               # 0x0\n\t.size\tjiffies, 8\n\n\t.type\tbdelay,@object                  # @bdelay\n\t.globl\tbdelay\n\t.p2align\t3\nbdelay:\n\t.quad\t0                               # 0x0\n\t.size\tbdelay, 8\n\n\t.type\tIRQ_HANDLED,@object             # @IRQ_HANDLED\n\t.globl\tIRQ_HANDLED\n\t.p2align\t2\nIRQ_HANDLED:\n\t.long\t0                               # 0x0\n\t.size\tIRQ_HANDLED, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@button_press_count = dso_local local_unnamed_addr global i32 0, align 4\n@button_timer = dso_local global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@bdelay = dso_local local_unnamed_addr global i64 0, align 8\n@IRQ_HANDLED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @button_handler], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @button_handler(i32 %0) #0 {\n  %2 = load i32, ptr @button_press_count, align 4, !tbaa !5\n  %3 = add nsw i32 %2, 1\n  store i32 %3, ptr @button_press_count, align 4, !tbaa !5\n  %4 = load i64, ptr @jiffies, align 8, !tbaa !9\n  %5 = load i64, ptr @bdelay, align 8, !tbaa !9\n  %6 = add nsw i64 %5, %4\n  %7 = tail call i32 @mod_timer(ptr noundef nonnull @button_timer, i64 noundef %6) #2\n  %8 = load i32, ptr @IRQ_HANDLED, align 4, !tbaa !5\n  ret i32 %8\n}\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/drivers/char/extr_nwbutton.c_button_handler.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@button_press_count = dso_local local_unnamed_addr global i32 0, align 4\n@button_timer = dso_local global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@bdelay = dso_local local_unnamed_addr global i64 0, align 8\n@IRQ_HANDLED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @button_handler], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @button_handler(i32 %0, ptr nocapture readnone %1) #0 {\n  %3 = load i32, ptr @button_press_count, align 4, !tbaa !5\n  %4 = add nsw i32 %3, 1\n  store i32 %4, ptr @button_press_count, align 4, !tbaa !5\n  %5 = load i64, ptr @jiffies, align 8, !tbaa !9\n  %6 = load i64, ptr @bdelay, align 8, !tbaa !9\n  %7 = add nsw i64 %6, %5\n  %8 = tail call i32 @mod_timer(ptr noundef nonnull @button_timer, i64 noundef %7) #2\n  %9 = load i32, ptr @IRQ_HANDLED, align 4, !tbaa !5\n  ret i32 %9\n}\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_cx231xx-audio.c_snd_pcm_alloc_vmalloc_buffer.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function snd_pcm_alloc_vmalloc_buffer\n\t.type\tsnd_pcm_alloc_vmalloc_buffer,@function\nsnd_pcm_alloc_vmalloc_buffer:           # @snd_pcm_alloc_vmalloc_buffer\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t(%rdi), %rbx\n\tmovl\t$.L.str, %edi\n\tcallq\tdprintk@PLT\n\tmovq\t8(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_3\n# %bb.1:\n\txorl\t%eax, %eax\n\tcmpq\t%r14, (%rbx)\n\tja\t.LBB0_6\n# %bb.2:\n\tcallq\tvfree@PLT\n.LBB0_3:\n\tmovq\t%r14, %rdi\n\tcallq\tvmalloc@PLT\n\tmovq\t%rax, 8(%rbx)\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.5:\n\tmovq\t%r14, (%rbx)\n\txorl\t%eax, %eax\n\tjmp\t.LBB0_6\n.LBB0_4:\n\txorl\t%eax, %eax\n\tsubl\tENOMEM(%rip), %eax\n.LBB0_6:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsnd_pcm_alloc_vmalloc_buffer, .Lfunc_end0-snd_pcm_alloc_vmalloc_buffer\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Allocating vbuffer\\n\"\n\t.size\t.L.str, 20\n\n\t.type\tENOMEM,@object                  # @ENOMEM\n\t.bss\n\t.globl\tENOMEM\n\t.p2align\t2\nENOMEM:\n\t.long\t0                               # 0x0\n\t.size\tENOMEM, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cx231xx = type { i64, i64 }\n\n@.str = private unnamed_addr constant [20 x i8] c\"Allocating vbuffer\\0A\\00\", align 1\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @snd_pcm_alloc_vmalloc_buffer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @snd_pcm_alloc_vmalloc_buffer(ptr nocapture noundef readonly %0, i64 noundef %1) #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = inttoptr i64 %3 to ptr\n  %5 = tail call i32 @dprintk(ptr noundef nonnull @.str) #2\n  %6 = getelementptr inbounds %struct.cx231xx, ptr %4, i64 0, i32 1\n  %7 = load i64, ptr %6, align 8, !tbaa !10\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %13, label %9\n\n9:                                                ; preds = %2\n  %10 = load i64, ptr %4, align 8, !tbaa !12\n  %11 = icmp ugt i64 %10, %1\n  br i1 %11, label %13, label %12\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @vfree(i64 noundef %7) #2\n  br label %14\n\n14:                                               ; preds = %12, %9\n  %15 = tail call i64 @vmalloc(i64 noundef %1) #2\n  store i64 %15, ptr %6, align 8, !tbaa !10\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %17, label %19\n\n17:                                               ; preds = %14\n  %18 = load i32, ptr @ENOMEM, align 4, !tbaa !13\n  %19 = sub nsw i32 0, %18\n  br label %21\n\n20:                                               ; preds = %21\n  br label %21\n\n21:                                               ; preds = %14, %20\n  %22 = phi i32 [ 0, %20 ], [ 0, %14 ]\n  ret i32 %22\n}\n\ndeclare i32 @dprintk(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @vfree(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @vmalloc(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_pcm_substream\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"cx231xx\", !7, i64 0, !7, i64 8}\n!12 = !{!11, !7, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/drivers/media/video/cx231xx/extr_cx231xx-audio.c_snd_pcm_alloc_vmalloc_buffer.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_pcm_runtime = type { i64, i64 }\n\n@.str = private unnamed_addr constant [20 x i8] c\"Allocating vbuffer\\0A\\00\", align 1\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @snd_pcm_alloc_vmalloc_buffer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @snd_pcm_alloc_vmalloc_buffer(ptr nocapture noundef readonly %0, i64 noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = tail call i32 @dprintk(ptr noundef nonnull @.str) #2\n  %5 = getelementptr inbounds %struct.snd_pcm_runtime, ptr %3, i64 0, i32 1\n  %6 = load i64, ptr %5, align 8, !tbaa !10\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %13, label %8\n\n8:                                                ; preds = %2\n  %9 = load i64, ptr %3, align 8, !tbaa !13\n  %10 = icmp ugt i64 %9, %1\n  br i1 %10, label %20, label %11\n\n11:                                               ; preds = %8\n  %12 = tail call i32 @vfree(i64 noundef %6) #2\n  br label %13\n\n13:                                               ; preds = %11, %2\n  %14 = tail call i64 @vmalloc(i64 noundef %1) #2\n  store i64 %14, ptr %5, align 8, !tbaa !10\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %16, label %19\n\n16:                                               ; preds = %13\n  %17 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  %18 = sub nsw i32 0, %17\n  br label %20\n\n19:                                               ; preds = %13\n  store i64 %1, ptr %3, align 8, !tbaa !13\n  br label %20\n\n20:                                               ; preds = %8, %19, %16\n  %21 = phi i32 [ 0, %19 ], [ %18, %16 ], [ 0, %8 ]\n  ret i32 %21\n}\n\ndeclare i32 @dprintk(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @vfree(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @vmalloc(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_pcm_substream\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 8}\n!11 = !{!\"snd_pcm_runtime\", !12, i64 0, !12, i64 8}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!11, !12, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ex_tag.c_linear_search.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function linear_search\n\t.type\tlinear_search,@function\nlinear_search:                          # @linear_search\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tcmpq\t%rdx, %rsi\n\tjae\t.LBB0_5\n# %bb.1:\n\tmovq\t%rdx, %r14\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r15\n\tmovq\t%rdx, %rax\n\tsubq\t%rsi, %rax\n\tleaq\t(%rsi,%rcx), %r12\n\tcmpq\t%rcx, %rax\n\tcmovleq\t%rdx, %r12\n\ttestq\t%rcx, %rcx\n\tcmoveq\t%rdx, %r12\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\tmovq\t%r12, %rdx\n\tcallq\tcompare@PLT\n\tcmpl\t$128, %eax\n\tje\t.LBB0_5\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tcmpl\t$130, %eax\n\tje\t.LBB0_6\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\tSKIP_PAST_NEWLINE@PLT\n\tjmp\t.LBB0_2\n.LBB0_5:                                # %.loopexit\n\txorl\t%ebx, %ebx\n.LBB0_6:\n\tmovq\t%rbx, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tlinear_search, .Lfunc_end0-linear_search\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @linear_search], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @linear_search(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 {\n  %5 = icmp ult ptr %1, %2\n  br i1 %5, label %6, label %17\n\n6:                                                ; preds = %4\n  %7 = ptrtoint ptr %2 to i64\n  %8 = ptrtoint ptr %1 to i64\n  %9 = sub i64 %7, %8\n  %10 = icmp slt i64 %9, %3\n  %11 = select i1 %10, i64 %3, i64 %9\n  %12 = icmp eq i64 %11, 0\n  %13 = select i1 %12, i64 %7, i64 %11\n  br label %14\n\n14:                                               ; preds = %6, %10\n  %15 = phi i64 [ %13, %6 ], [ %11, %10 ]\n  %16 = tail call i32 @compare(ptr noundef %0, ptr noundef %1, i64 noundef %15) #2\n  switch i32 %16, label %17 [\n    i32 130, label %19\n    i32 128, label %19\n  ]\n\n17:                                               ; preds = %14, %4\n  %18 = ptrtoint ptr %1 to i64\n  br label %19\n\n19:                                               ; preds = %14, %14, %17\n  %20 = phi ptr [ null, %17 ], [ %1, %14 ], [ %1, %14 ]\n  ret ptr %20\n}\n\ndeclare i32 @compare(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./freebsd/contrib/nvi/ex/extr_ex_tag.c_linear_search.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @linear_search], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @linear_search(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 {\n  %5 = icmp ult ptr %1, %2\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %4\n  %7 = icmp ne i64 %3, 0\n  %8 = ptrtoint ptr %2 to i64\n  %9 = ptrtoint ptr %1 to i64\n  %10 = sub i64 %8, %9\n  %11 = icmp sgt i64 %10, %3\n  %12 = and i1 %7, %11\n  %13 = getelementptr inbounds i8, ptr %1, i64 %3\n  %14 = select i1 %12, ptr %13, ptr %2\n  br label %15\n\n15:                                               ; preds = %17, %6\n  %16 = tail call i32 @compare(ptr noundef %0, ptr noundef %1, ptr noundef %14) #2\n  switch i32 %16, label %17 [\n    i32 130, label %19\n    i32 128, label %20\n  ]\n\n17:                                               ; preds = %15\n  %18 = tail call i32 @SKIP_PAST_NEWLINE(ptr noundef %1, ptr noundef nonnull %2) #2\n  br label %15\n\n19:                                               ; preds = %15\n  br label %20\n\n20:                                               ; preds = %15, %19, %4\n  %21 = phi ptr [ null, %4 ], [ %1, %19 ], [ null, %15 ]\n  ret ptr %21\n}\n\ndeclare i32 @compare(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SKIP_PAST_NEWLINE(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_atari_ps2.c_PLATFORM_Time.ll\"\n\t.section\t.rodata.cst8,\"aM\",@progbits,8\n\t.p2align\t3                               # -- Begin function PLATFORM_Time\n.LCPI0_0:\n\t.quad\t0x3ff0000000000000              # double 1\n\t.text\n\t.globl\tPLATFORM_Time\n\t.p2align\t4, 0x90\n\t.type\tPLATFORM_Time,@function\nPLATFORM_Time:                          # @PLATFORM_Time\n\t.cfi_startproc\n# %bb.0:\n\tmovsd\tPLATFORM_Time.fake_timer(%rip), %xmm0 # xmm0 = mem[0],zero\n\tmovsd\t.LCPI0_0(%rip), %xmm1           # xmm1 = mem[0],zero\n\taddsd\t%xmm0, %xmm1\n\tmovsd\t%xmm1, PLATFORM_Time.fake_timer(%rip)\n\tretq\n.Lfunc_end0:\n\t.size\tPLATFORM_Time, .Lfunc_end0-PLATFORM_Time\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPLATFORM_Time.fake_timer,@object # @PLATFORM_Time.fake_timer\n\t.local\tPLATFORM_Time.fake_timer\n\t.comm\tPLATFORM_Time.fake_timer,8,8\n\t.type\tT0_COUNT,@object                # @T0_COUNT\n\t.bss\n\t.globl\tT0_COUNT\n\t.p2align\t3\nT0_COUNT:\n\t.quad\t0x0000000000000000              # double 0\n\t.size\tT0_COUNT, 8\n\n\t.type\ttimer_interrupt_ticks,@object   # @timer_interrupt_ticks\n\t.globl\ttimer_interrupt_ticks\n\t.p2align\t3\ntimer_interrupt_ticks:\n\t.quad\t0x0000000000000000              # double 0\n\t.size\ttimer_interrupt_ticks, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PLATFORM_Time.fake_timer = internal unnamed_addr global double 0.000000e+00, align 8\n@T0_COUNT = dso_local local_unnamed_addr global double 0.000000e+00, align 8\n@timer_interrupt_ticks = dso_local local_unnamed_addr global double 0.000000e+00, align 8\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local double @PLATFORM_Time() local_unnamed_addr #0 {\n  %1 = load double, ptr @PLATFORM_Time.fake_timer, align 8, !tbaa !5\n  %2 = fadd double %1, 1.000000e+00\n  store double %2, ptr @PLATFORM_Time.fake_timer, align 8, !tbaa !5\n  ret double %2\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"double\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./Provenance/Cores/Atari800/atari800-src/extr_atari_ps2.c_PLATFORM_Time.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PLATFORM_Time.fake_timer = internal unnamed_addr global double 0.000000e+00, align 8\n@T0_COUNT = dso_local local_unnamed_addr global double 0.000000e+00, align 8\n@timer_interrupt_ticks = dso_local local_unnamed_addr global double 0.000000e+00, align 8\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine dso_local double @PLATFORM_Time() local_unnamed_addr #0 {\n  %1 = load double, ptr @PLATFORM_Time.fake_timer, align 8, !tbaa !5\n  %2 = fadd double %1, 1.000000e+00\n  store double %2, ptr @PLATFORM_Time.fake_timer, align 8, !tbaa !5\n  ret double %1\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"double\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_proc_net.c_get_proc_task_net.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function get_proc_task_net\n\t.type\tget_proc_task_net,@function\nget_proc_task_net:                      # @get_proc_task_net\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\txorl\t%r14d, %r14d\n\txorl\t%eax, %eax\n\tcallq\trcu_read_lock@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tproc_pid@PLT\n\tmovl\tPIDTYPE_PID(%rip), %esi\n\tmovl\t%eax, %edi\n\tcallq\tpid_task@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.1:\n\tmovq\t%rax, %rdi\n\tcallq\ttask_nsproxy@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.3:\n\tmovl\t(%rax), %edi\n\tcallq\tget_net@PLT\n\tmovq\t%rax, %r14\n\tjmp\t.LBB0_4\n.LBB0_2:\n\txorl\t%r14d, %r14d\n.LBB0_4:\n\txorl\t%eax, %eax\n\tcallq\trcu_read_unlock@PLT\n\tmovq\t%r14, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tget_proc_task_net, .Lfunc_end0-get_proc_task_net\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tPIDTYPE_PID,@object             # @PIDTYPE_PID\n\t.bss\n\t.globl\tPIDTYPE_PID\n\t.p2align\t2\nPIDTYPE_PID:\n\t.long\t0                               # 0x0\n\t.size\tPIDTYPE_PID, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PIDTYPE_PID = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_proc_task_net], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @get_proc_task_net(i64 noundef %0) #0 {\n  %2 = tail call i32 (...) @rcu_read_lock() #2\n  %3 = tail call i32 @proc_pid(i64 noundef %0) #2\n  %4 = load i32, ptr @PIDTYPE_PID, align 4, !tbaa !5\n  %5 = tail call ptr @pid_task(i32 noundef %3, i32 noundef %4) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %11, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call ptr @task_nsproxy(ptr noundef nonnull %5) #2\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %11, label %10\n\n10:                                               ; preds = %7\n  %11 = load i32, ptr %8, align 4, !tbaa !9\n  %12 = tail call ptr @get_net(i32 noundef %11) #2\n  br label %13\n\n13:                                               ; preds = %10, %7\n  %14 = phi ptr [ %12, %10 ], [ null, %7 ]\n  %15 = tail call i32 (...) @rcu_read_unlock() #2\n  ret ptr %14\n}\n\ndeclare i32 @rcu_read_lock(...) local_unnamed_addr #1\n\ndeclare ptr @pid_task(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @proc_pid(i64 noundef) local_unnamed_addr #1\n\ndeclare ptr @task_nsproxy(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @get_net(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_read_unlock(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_2__\", !6, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/fs/proc/extr_proc_net.c_get_proc_task_net.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@PIDTYPE_PID = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_proc_task_net], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @get_proc_task_net(ptr noundef %0) #0 {\n  %2 = tail call i32 (...) @rcu_read_lock() #2\n  %3 = tail call i32 @proc_pid(ptr noundef %0) #2\n  %4 = load i32, ptr @PIDTYPE_PID, align 4, !tbaa !5\n  %5 = tail call ptr @pid_task(i32 noundef %3, i32 noundef %4) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %13, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call ptr @task_nsproxy(ptr noundef nonnull %5) #2\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %13, label %10\n\n10:                                               ; preds = %7\n  %11 = load i32, ptr %8, align 4, !tbaa !9\n  %12 = tail call ptr @get_net(i32 noundef %11) #2\n  br label %13\n\n13:                                               ; preds = %7, %10, %1\n  %14 = phi ptr [ %12, %10 ], [ null, %7 ], [ null, %1 ]\n  %15 = tail call i32 (...) @rcu_read_unlock() #2\n  ret ptr %14\n}\n\ndeclare i32 @rcu_read_lock(...) local_unnamed_addr #1\n\ndeclare ptr @pid_task(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @proc_pid(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @task_nsproxy(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @get_net(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_read_unlock(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"nsproxy\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mmu.c_mmu_free_memory_cache.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mmu_free_memory_cache\n\t.type\tmmu_free_memory_cache,@function\nmmu_free_memory_cache:                  # @mmu_free_memory_cache\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovl\t(%rdi), %eax\n\ttestl\t%eax, %eax\n\tje\t.LBB0_3\n# %bb.1:\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t8(%rbx), %rcx\n\tleal\t-1(%rax), %edx\n\tmovl\t%edx, (%rbx)\n\tcltq\n\tmovl\t-4(%rcx,%rax,4), %esi\n\tmovq\t%r14, %rdi\n\tcallq\tkmem_cache_free@PLT\n\tmovl\t(%rbx), %eax\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_2\n.LBB0_3:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmmu_free_memory_cache, .Lfunc_end0-mmu_free_memory_cache\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mmu_memory_cache = type { i32, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mmu_free_memory_cache], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mmu_free_memory_cache(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %12, label %5\n\n5:                                                ; preds = %2\n  %6 = getelementptr inbounds %struct.mmu_memory_cache, ptr %0, i64 0, i32 1\n  br label %7\n\n7:                                                ; preds = %5, %7\n  %8 = phi i32 [ %3, %5 ], [ %10, %7 ]\n  %9 = load ptr, ptr %6, align 8, !tbaa !11\n  %10 = add nsw i32 %8, -1\n  store i32 %10, ptr %0, align 8, !tbaa !5\n  %11 = sext i32 %10 to i64\n  tail call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %1, i64 %11, i1 false), !tbaa !12\n  br i1 %4, label %12, label %7\n\n12:                                               ; preds = %7, %2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"mmu_memory_cache\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n</s><s>", "file:": "./linux/arch/x86/kvm/extr_mmu.c_mmu_free_memory_cache.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.kvm_mmu_memory_cache = type { i32, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mmu_free_memory_cache], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mmu_free_memory_cache(ptr nocapture noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i32 %3, 0\n  br i1 %4, label %17, label %5\n\n5:                                                ; preds = %2\n  %6 = getelementptr inbounds %struct.kvm_mmu_memory_cache, ptr %0, i64 0, i32 1\n  br label %7\n\n7:                                                ; preds = %5, %7\n  %8 = phi i32 [ %3, %5 ], [ %15, %7 ]\n  %9 = load ptr, ptr %6, align 8, !tbaa !11\n  %10 = add nsw i32 %8, -1\n  store i32 %10, ptr %0, align 8, !tbaa !5\n  %11 = sext i32 %10 to i64\n  %12 = getelementptr inbounds i32, ptr %9, i64 %11\n  %13 = load i32, ptr %12, align 4, !tbaa !12\n  %14 = tail call i32 @kmem_cache_free(ptr noundef %1, i32 noundef %13) #2\n  %15 = load i32, ptr %0, align 8, !tbaa !5\n  %16 = icmp eq i32 %15, 0\n  br i1 %16, label %17, label %7, !llvm.loop !13\n\n17:                                               ; preds = %7, %2\n  ret void\n}\n\ndeclare i32 @kmem_cache_free(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"kvm_mmu_memory_cache\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_stub_tx.c_setup_ret_unlink_pdu.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function setup_ret_unlink_pdu\n\t.type\tsetup_ret_unlink_pdu,@function\nsetup_ret_unlink_pdu:                   # @setup_ret_unlink_pdu\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\taddq\t$4, %rdi\n\tmovl\tUSBIP_RET_UNLINK(%rip), %esi\n\tmovl\t4(%rbx), %edx\n\tcallq\tsetup_base_pdu@PLT\n\tmovl\t(%rbx), %eax\n\tmovl\t%eax, (%r14)\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsetup_ret_unlink_pdu, .Lfunc_end0-setup_ret_unlink_pdu\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tUSBIP_RET_UNLINK,@object        # @USBIP_RET_UNLINK\n\t.bss\n\t.globl\tUSBIP_RET_UNLINK\n\t.p2align\t2\nUSBIP_RET_UNLINK:\n\t.long\t0                               # 0x0\n\t.size\tUSBIP_RET_UNLINK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.usbip_header = type { i32, i32 }\n%struct.usbip_ret_unlink = type { i32, i32 }\n\n@USBIP_RET_UNLINK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @setup_ret_unlink_pdu], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @setup_ret_unlink_pdu(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = getelementptr inbounds %struct.usbip_header, ptr %0, i64 0, i32 1\n  %4 = load i32, ptr @USBIP_RET_UNLINK, align 4, !tbaa !5\n  %5 = getelementptr inbounds %struct.usbip_ret_unlink, ptr %1, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !9\n  %7 = tail call i32 @setup_base_pdu(ptr noundef nonnull %3, i32 noundef %4, i32 noundef %6) #2\n  %8 = load i32, ptr %1, align 4, !tbaa !11\n  store i32 %8, ptr %0, align 4, !tbaa !12\n  ret void\n}\n\ndeclare i32 @setup_base_pdu(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"usbip_ret_unlink\", !6, i64 0, !6, i64 4}\n!11 = !{!10, !6, i64 0}\n!12 = !{!13, !6, i64 0}\n!13 = !{!\"usbip_header\", !6, i64 0, !6, i64 4}\n</s><s>", "file:": "./linux/drivers/usb/usbip/extr_stub_tx.c_setup_ret_unlink_pdu.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.usbip_header = type { %struct.TYPE_4__, i32 }\n%struct.TYPE_4__ = type { %struct.TYPE_3__ }\n%struct.TYPE_3__ = type { i32 }\n%struct.stub_unlink = type { i32, i32 }\n\n@USBIP_RET_UNLINK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @setup_ret_unlink_pdu], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @setup_ret_unlink_pdu(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = getelementptr inbounds %struct.usbip_header, ptr %0, i64 0, i32 1\n  %4 = load i32, ptr @USBIP_RET_UNLINK, align 4, !tbaa !5\n  %5 = getelementptr inbounds %struct.stub_unlink, ptr %1, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !9\n  %7 = tail call i32 @setup_base_pdu(ptr noundef nonnull %3, i32 noundef %4, i32 noundef %6) #2\n  %8 = load i32, ptr %1, align 4, !tbaa !11\n  store i32 %8, ptr %0, align 4, !tbaa !12\n  ret void\n}\n\ndeclare i32 @setup_base_pdu(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"stub_unlink\", !6, i64 0, !6, i64 4}\n!11 = !{!10, !6, i64 0}\n!12 = !{!13, !6, i64 0}\n!13 = !{!\"usbip_header\", !14, i64 0, !6, i64 4}\n!14 = !{!\"TYPE_4__\", !15, i64 0}\n!15 = !{!\"TYPE_3__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sh_cmt.c_sh_cmt_clock_event_shutdown.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function sh_cmt_clock_event_shutdown\n\t.type\tsh_cmt_clock_event_shutdown,@function\nsh_cmt_clock_event_shutdown:            # @sh_cmt_clock_event_shutdown\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcallq\tced_to_sh_cmt@PLT\n\tmovl\tFLAG_CLOCKEVENT(%rip), %esi\n\tmovq\t%rax, %rdi\n\tcallq\tsh_cmt_stop@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsh_cmt_clock_event_shutdown, .Lfunc_end0-sh_cmt_clock_event_shutdown\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tFLAG_CLOCKEVENT,@object         # @FLAG_CLOCKEVENT\n\t.bss\n\t.globl\tFLAG_CLOCKEVENT\n\t.p2align\t2\nFLAG_CLOCKEVENT:\n\t.long\t0                               # 0x0\n\t.size\tFLAG_CLOCKEVENT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FLAG_CLOCKEVENT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sh_cmt_clock_event_shutdown], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sh_cmt_clock_event_shutdown(ptr noundef %0) #0 {\n  %2 = tail call ptr @ced_to_sh_cmt(ptr noundef %0) #2\n  %3 = load i32, ptr @FLAG_CLOCKEVENT, align 4, !tbaa !5\n  %4 = tail call i32 @sh_cmt_stop(ptr noundef %2, i32 noundef %3) #2\n  ret i32 0\n}\n\ndeclare ptr @ced_to_sh_cmt(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sh_cmt_stop(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/clocksource/extr_sh_cmt.c_sh_cmt_clock_event_shutdown.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FLAG_CLOCKEVENT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sh_cmt_clock_event_shutdown], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sh_cmt_clock_event_shutdown(ptr noundef %0) #0 {\n  %2 = tail call ptr @ced_to_sh_cmt(ptr noundef %0) #2\n  %3 = load i32, ptr @FLAG_CLOCKEVENT, align 4, !tbaa !5\n  %4 = tail call i32 @sh_cmt_stop(ptr noundef %2, i32 noundef %3) #2\n  ret i32 0\n}\n\ndeclare ptr @ced_to_sh_cmt(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sh_cmt_stop(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dlmrecovery.c_dlm_hb_node_down_cb.ll\"\n\t.globl\tdlm_hb_node_down_cb             # -- Begin function dlm_hb_node_down_cb\n\t.p2align\t4, 0x90\n\t.type\tdlm_hb_node_down_cb,@function\ndlm_hb_node_down_cb:                    # @dlm_hb_node_down_cb\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %rbx\n\tmovl\t%esi, %ebp\n\tmovq\t%rdx, %rdi\n\tcallq\tdlm_grab@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_4\n# %bb.1:\n\tmovl\t4(%rbx), %esi\n\tmovl\t%ebp, %edi\n\tcallq\ttest_bit@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n# %bb.2:\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\tcallq\tdlm_fire_domain_eviction_callbacks@PLT\n.LBB0_3:\n\tmovq\t%rbx, %rdi\n\tcallq\tspin_lock@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\tcallq\t__dlm_hb_node_down@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tspin_unlock@PLT\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tdlm_put@PLT                     # TAILCALL\n.LBB0_4:\n\t.cfi_def_cfa_offset 32\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tdlm_hb_node_down_cb, .Lfunc_end0-dlm_hb_node_down_cb\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dlm_ctxt = type { i32, i32 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @dlm_hb_node_down_cb(ptr nocapture noundef readnone %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i32 @dlm_grab(ptr noundef %2) #2\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %13, label %6\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.dlm_ctxt, ptr %2, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !5\n  %9 = tail call i64 @test_bit(i32 noundef %1, i32 noundef %8) #2\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %12, label %11\n\n11:                                               ; preds = %6\n  %12 = tail call i32 @dlm_fire_domain_eviction_callbacks(ptr noundef nonnull %2, i32 noundef %1) #2\n  br label %13\n\n13:                                               ; preds = %11, %3\n  %14 = tail call i32 @spin_lock(ptr noundef %2) #2\n  %15 = tail call i32 @__dlm_hb_node_down(ptr noundef %2, i32 noundef %1) #2\n  %16 = tail call i32 @spin_unlock(ptr noundef %2) #2\n  %17 = tail call i32 @dlm_put(ptr noundef %2) #2\n  ret void\n}\n\ndeclare i32 @dlm_grab(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dlm_fire_domain_eviction_callbacks(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @__dlm_hb_node_down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dlm_put(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"dlm_ctxt\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/fs/ocfs2/dlm/extr_dlmrecovery.c_dlm_hb_node_down_cb.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dlm_ctxt = type { i32, i32 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @dlm_hb_node_down_cb(ptr nocapture noundef readnone %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i32 @dlm_grab(ptr noundef %2) #2\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %18, label %6\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.dlm_ctxt, ptr %2, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !5\n  %9 = tail call i64 @test_bit(i32 noundef %1, i32 noundef %8) #2\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %13, label %11\n\n11:                                               ; preds = %6\n  %12 = tail call i32 @dlm_fire_domain_eviction_callbacks(ptr noundef nonnull %2, i32 noundef %1) #2\n  br label %13\n\n13:                                               ; preds = %11, %6\n  %14 = tail call i32 @spin_lock(ptr noundef nonnull %2) #2\n  %15 = tail call i32 @__dlm_hb_node_down(ptr noundef nonnull %2, i32 noundef %1) #2\n  %16 = tail call i32 @spin_unlock(ptr noundef nonnull %2) #2\n  %17 = tail call i32 @dlm_put(ptr noundef nonnull %2) #2\n  br label %18\n\n18:                                               ; preds = %3, %13\n  ret void\n}\n\ndeclare i32 @dlm_grab(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dlm_fire_domain_eviction_callbacks(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @__dlm_hb_node_down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dlm_put(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"dlm_ctxt\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tcp_rtt.c_start_server.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function start_server\n\t.type\tstart_server,@function\nstart_server:                           # @start_server\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -16\n\tmovl\tINADDR_LOOPBACK(%rip), %edi\n\tcallq\thtonl@PLT\n\tmovl\t%eax, 8(%rsp)\n\tmovl\tAF_INET(%rip), %edi\n\tmovl\t%edi, 12(%rsp)\n\tmovl\tSOCK_STREAM(%rip), %esi\n\txorl\t%edx, %edx\n\tcallq\tsocket@PLT\n\ttestl\t%eax, %eax\n\tjs\t.LBB0_1\n# %bb.2:\n\tmovl\t%eax, %ebx\n\tleaq\t8(%rsp), %rsi\n\tmovl\t%eax, %edi\n\tmovl\t$8, %edx\n\tcallq\tbind@PLT\n\ttestq\t%rax, %rax\n\tjns\t.LBB0_5\n# %bb.3:\n\tmovl\t$.L.str.1, %edi\n\tcallq\tlog_err@PLT\n\tmovl\t%ebx, %edi\n\tcallq\tclose@PLT\n\tjmp\t.LBB0_4\n.LBB0_1:\n\tmovl\t$.L.str, %edi\n\tcallq\tlog_err@PLT\n.LBB0_4:\n\tmovl\t$-1, %ebx\n.LBB0_5:\n\tmovl\t%ebx, %eax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tstart_server, .Lfunc_end0-start_server\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tINADDR_LOOPBACK,@object         # @INADDR_LOOPBACK\n\t.bss\n\t.globl\tINADDR_LOOPBACK\n\t.p2align\t2\nINADDR_LOOPBACK:\n\t.long\t0                               # 0x0\n\t.size\tINADDR_LOOPBACK, 4\n\n\t.type\tAF_INET,@object                 # @AF_INET\n\t.globl\tAF_INET\n\t.p2align\t2\nAF_INET:\n\t.long\t0                               # 0x0\n\t.size\tAF_INET, 4\n\n\t.type\tSOCK_STREAM,@object             # @SOCK_STREAM\n\t.globl\tSOCK_STREAM\n\t.p2align\t2\nSOCK_STREAM:\n\t.long\t0                               # 0x0\n\t.size\tSOCK_STREAM, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Failed to create server socket\"\n\t.size\t.L.str, 31\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"Failed to bind socket\"\n\t.size\t.L.str.1, 22\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sockaddr_in = type { i32, i32 }\n\n@INADDR_LOOPBACK = dso_local local_unnamed_addr global i32 0, align 4\n@AF_INET = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"Failed to create server socket\\00\", align 1\n@.str.1 = private unnamed_addr constant [22 x i8] c\"Failed to bind socket\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @start_server], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @start_server() #0 {\n  %1 = alloca %struct.sockaddr_in, align 4\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #3\n  %2 = load i32, ptr @INADDR_LOOPBACK, align 4, !tbaa !5\n  %3 = tail call i32 @htonl(i32 noundef %2) #3\n  store i32 %3, ptr %1, align 4, !tbaa !9\n  %4 = load i32, ptr @AF_INET, align 4, !tbaa !5\n  %5 = getelementptr inbounds %struct.sockaddr_in, ptr %1, i64 0, i32 1\n  store i32 %4, ptr %5, align 4, !tbaa !11\n  %6 = load i32, ptr @SOCK_STREAM, align 4, !tbaa !5\n  %7 = tail call i32 @socket(i32 noundef %4, i32 noundef %6, i32 noundef 0) #3\n  %8 = icmp slt i32 %7, 0\n  br i1 %8, label %9, label %11\n\n9:                                                ; preds = %0\n  %10 = tail call i32 @log_err(ptr noundef nonnull @.str) #3\n  br label %16\n\n11:                                               ; preds = %0\n  %12 = call i64 @bind(i32 noundef %7, ptr noundef nonnull %1, i32 noundef 8) #3\n  %13 = icmp slt i64 %12, 0\n  br i1 %13, label %14, label %16\n\n14:                                               ; preds = %11\n  %15 = call i32 @log_err(ptr noundef nonnull @.str.1) #3\n  br label %16\n\n16:                                               ; preds = %11, %14, %9\n  %17 = phi i32 [ -1, %9 ], [ -1, %14 ], [ %7, %11 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #3\n  ret i32 %17\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @htonl(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @socket(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @bind(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @log_err(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"sockaddr_in\", !6, i64 0, !6, i64 4}\n!11 = !{!10, !6, i64 4}\n</s><s>", "file:": "./linux/tools/testing/selftests/bpf/prog_tests/extr_tcp_rtt.c_start_server.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sockaddr_in = type { %struct.TYPE_2__, i32 }\n%struct.TYPE_2__ = type { i32 }\n\n@INADDR_LOOPBACK = dso_local local_unnamed_addr global i32 0, align 4\n@AF_INET = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"Failed to create server socket\\00\", align 1\n@.str.1 = private unnamed_addr constant [22 x i8] c\"Failed to bind socket\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @start_server], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @start_server() #0 {\n  %1 = alloca %struct.sockaddr_in, align 4\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #4\n  %2 = load i32, ptr @INADDR_LOOPBACK, align 4, !tbaa !5\n  %3 = tail call i32 @htonl(i32 noundef %2)\n  store i32 %3, ptr %1, align 4, !tbaa !9\n  %4 = getelementptr inbounds %struct.sockaddr_in, ptr %1, i64 0, i32 1\n  %5 = load i32, ptr @AF_INET, align 4, !tbaa !5\n  store i32 %5, ptr %4, align 4, !tbaa !11\n  %6 = load i32, ptr @SOCK_STREAM, align 4, !tbaa !5\n  %7 = tail call i32 @socket(i32 noundef %5, i32 noundef %6, i32 noundef 0) #4\n  %8 = icmp slt i32 %7, 0\n  br i1 %8, label %9, label %11\n\n9:                                                ; preds = %0\n  %10 = tail call i32 @log_err(ptr noundef nonnull @.str) #4\n  br label %17\n\n11:                                               ; preds = %0\n  %12 = call i64 @bind(i32 noundef %7, ptr noundef nonnull %1, i32 noundef 8) #4\n  %13 = icmp slt i64 %12, 0\n  br i1 %13, label %14, label %17\n\n14:                                               ; preds = %11\n  %15 = call i32 @log_err(ptr noundef nonnull @.str.1) #4\n  %16 = call i32 @close(i32 noundef %7) #4\n  br label %17\n\n17:                                               ; preds = %11, %14, %9\n  %18 = phi i32 [ -1, %9 ], [ -1, %14 ], [ %7, %11 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #4\n  ret i32 %18\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: nofree nosync nounwind readnone\ndeclare i32 @htonl(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @socket(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @log_err(ptr noundef) local_unnamed_addr #3\n\ndeclare i64 @bind(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nofree nosync nounwind readnone \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_2__\", !6, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"sockaddr_in\", !10, i64 0, !6, i64 4}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_state.h_is_client_expired.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function is_client_expired\n\t.type\tis_client_expired,@function\nis_client_expired:                      # @is_client_expired\n\t.cfi_startproc\n# %bb.0:\n\txorl\t%eax, %eax\n\tcmpq\t$0, (%rdi)\n\tsete\t%al\n\tretq\n.Lfunc_end0:\n\t.size\tis_client_expired, .Lfunc_end0-is_client_expired\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @is_client_expired], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @is_client_expired(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i64, ptr %0, align 8, !tbaa !5\n  %3 = icmp eq i64 %2, 0\n  %4 = zext i1 %3 to i32\n  ret i32 %4\n}\n\nattributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"client\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/fs/nfsd/extr_state.h_is_client_expired.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @is_client_expired], section \"llvm.metadata\"\n\n; Function Attrs: argmemonly inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @is_client_expired(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i64, ptr %0, align 8, !tbaa !5\n  %3 = icmp eq i64 %2, 0\n  %4 = zext i1 %3 to i32\n  ret i32 %4\n}\n\nattributes #0 = { argmemonly inlinehint mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"nfs4_client\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_crypt.c_crypt_set_format.ll\"\n\t.globl\tcrypt_set_format                # -- Begin function crypt_set_format\n\t.p2align\t4, 0x90\n\t.type\tcrypt_set_format,@function\ncrypt_set_format:                       # @crypt_set_format\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tmovq\tcrypt_formats(%rip), %rbp\n\tmovq\t(%rbp), %rdi\n\txorl\t%r14d, %r14d\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_4\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rbx, %rsi\n\tcallq\tstrcasecmp@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n# %bb.5:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t8(%rbp), %rdi\n\taddq\t$8, %rbp\n\ttestq\t%rdi, %rdi\n\tjne\t.LBB0_2\n\tjmp\t.LBB0_4\n.LBB0_3:\n\tmovq\t%rbp, crypt_format(%rip)\n\tmovl\t$1, %r14d\n.LBB0_4:\n\tmovl\t%r14d, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcrypt_set_format, .Lfunc_end0-crypt_set_format\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tcrypt_formats,@object           # @crypt_formats\n\t.bss\n\t.globl\tcrypt_formats\n\t.p2align\t3\ncrypt_formats:\n\t.quad\t0\n\t.size\tcrypt_formats, 8\n\n\t.type\tcrypt_format,@object            # @crypt_format\n\t.globl\tcrypt_format\n\t.p2align\t3\ncrypt_format:\n\t.quad\t0\n\t.size\tcrypt_format, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr, ptr }\n\n@crypt_formats = dso_local local_unnamed_addr global ptr null, align 8\n@crypt_format = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @crypt_set_format(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr @crypt_formats, align 8, !tbaa !5\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %13, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call i64 @strcasecmp(ptr noundef nonnull %3, ptr noundef %0) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %8, label %10\n\n8:                                                ; preds = %5\n  store ptr %2, ptr @crypt_format, align 8, !tbaa !5\n  br label %13\n\n9:                                                ; preds = %10\n  %10 = getelementptr inbounds %struct.TYPE_2__, ptr %11, i64 1\n  %11 = load ptr, ptr %10, align 8, !tbaa !5\n  %12 = icmp eq ptr %11, null\n  br i1 %12, label %13, label %5, !llvm.loop !9\n\n13:                                               ; preds = %9, %1, %8\n  %14 = phi i32 [ 1, %8 ], [ 0, %1 ], [ 0, %9 ]\n  ret i32 %14\n}\n\ndeclare i64 @strcasecmp(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = distinct !{!9, !10}\n!10 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "file:": "./freebsd/lib/libcrypt/extr_crypt.c_crypt_set_format.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.crypt_format = type { ptr }\n\n@crypt_formats = dso_local local_unnamed_addr global ptr null, align 8\n@crypt_format = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nofree nounwind uwtable\ndefine dso_local i32 @crypt_set_format(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {\n  %2 = load ptr, ptr @crypt_formats, align 8, !tbaa !5\n  %3 = load ptr, ptr %2, align 8, !tbaa !9\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %15, label %5\n\n5:                                                ; preds = %1, %11\n  %6 = phi ptr [ %13, %11 ], [ %3, %1 ]\n  %7 = phi ptr [ %12, %11 ], [ %2, %1 ]\n  %8 = tail call i64 @strcasecmp(ptr noundef nonnull %6, ptr noundef %0)\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %10, label %11\n\n10:                                               ; preds = %5\n  store ptr %7, ptr @crypt_format, align 8, !tbaa !5\n  br label %15\n\n11:                                               ; preds = %5\n  %12 = getelementptr inbounds %struct.crypt_format, ptr %7, i64 1\n  %13 = load ptr, ptr %12, align 8, !tbaa !9\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %15, label %5, !llvm.loop !11\n\n15:                                               ; preds = %11, %1, %10\n  %16 = phi i32 [ 1, %10 ], [ 0, %1 ], [ 0, %11 ]\n  ret i32 %16\n}\n\n; Function Attrs: mustprogress nofree nounwind readonly willreturn\ndeclare i64 @strcasecmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #1\n\nattributes #0 = { nofree nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nofree nounwind readonly willreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"crypt_format\", !6, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mediabay.c_keylargo_mb_un_reset_ide.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function keylargo_mb_un_reset_ide\n\t.type\tkeylargo_mb_un_reset_ide,@function\nkeylargo_mb_un_reset_ide:               # @keylargo_mb_un_reset_ide\n\t.cfi_startproc\n# %bb.0:\n\tmovl\tKEYLARGO_FCR1(%rip), %esi\n\tmovl\tKL1_EIDE0_RESET_N(%rip), %edx\n\tjmp\tMB_BIS@PLT                      # TAILCALL\n.Lfunc_end0:\n\t.size\tkeylargo_mb_un_reset_ide, .Lfunc_end0-keylargo_mb_un_reset_ide\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tKEYLARGO_FCR1,@object           # @KEYLARGO_FCR1\n\t.bss\n\t.globl\tKEYLARGO_FCR1\n\t.p2align\t2\nKEYLARGO_FCR1:\n\t.long\t0                               # 0x0\n\t.size\tKEYLARGO_FCR1, 4\n\n\t.type\tKL1_EIDE0_RESET_N,@object       # @KL1_EIDE0_RESET_N\n\t.globl\tKL1_EIDE0_RESET_N\n\t.p2align\t2\nKL1_EIDE0_RESET_N:\n\t.long\t0                               # 0x0\n\t.size\tKL1_EIDE0_RESET_N, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@KEYLARGO_FCR1 = dso_local local_unnamed_addr global i32 0, align 4\n@KL1_EIDE0_RESET_N = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @keylargo_mb_un_reset_ide], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @keylargo_mb_un_reset_ide(ptr noundef %0) #0 {\n  %2 = load i32, ptr @KEYLARGO_FCR1, align 4, !tbaa !5\n  %3 = load i32, ptr @KL1_EIDE0_RESET_N, align 4, !tbaa !5\n  %4 = tail call i32 @MB_BIS(ptr noundef %0, i32 noundef %2, i32 noundef %3) #2\n  ret void\n}\n\ndeclare i32 @MB_BIS(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/macintosh/extr_mediabay.c_keylargo_mb_un_reset_ide.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@KEYLARGO_FCR1 = dso_local local_unnamed_addr global i32 0, align 4\n@KL1_EIDE0_RESET_N = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @keylargo_mb_un_reset_ide], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @keylargo_mb_un_reset_ide(ptr noundef %0) #0 {\n  %2 = load i32, ptr @KEYLARGO_FCR1, align 4, !tbaa !5\n  %3 = load i32, ptr @KL1_EIDE0_RESET_N, align 4, !tbaa !5\n  %4 = tail call i32 @MB_BIS(ptr noundef %0, i32 noundef %2, i32 noundef %3) #2\n  ret void\n}\n\ndeclare i32 @MB_BIS(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_xattr.c___vfs_removexattr.ll\"\n\t.globl\t__vfs_removexattr               # -- Begin function __vfs_removexattr\n\t.p2align\t4, 0x90\n\t.type\t__vfs_removexattr,@function\n__vfs_removexattr:                      # @__vfs_removexattr\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdi, %r14\n\tmovq\t%rsi, 8(%rsp)\n\tcallq\td_inode@PLT\n\tmovq\t%rax, %r15\n\tleaq\t8(%rsp), %rsi\n\tmovq\t%rax, %rdi\n\tcallq\txattr_resolve_name@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\tcallq\tIS_ERR@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\tPTR_ERR@PLT\n\tjmp\t.LBB0_5\n.LBB0_2:\n\tmovq\t(%rbx), %r10\n\ttestq\t%r10, %r10\n\tje\t.LBB0_3\n# %bb.4:\n\tmovq\t8(%rsp), %rcx\n\tmovl\tXATTR_REPLACE(%rip), %eax\n\tmovl\t%eax, (%rsp)\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tmovq\t%r15, %rdx\n\txorl\t%r8d, %r8d\n\txorl\t%r9d, %r9d\n\tcallq\t*%r10\n\tjmp\t.LBB0_5\n.LBB0_3:\n\txorl\t%eax, %eax\n\tsubl\tEOPNOTSUPP(%rip), %eax\n.LBB0_5:\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\t__vfs_removexattr, .Lfunc_end0-__vfs_removexattr\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tEOPNOTSUPP,@object              # @EOPNOTSUPP\n\t.bss\n\t.globl\tEOPNOTSUPP\n\t.p2align\t2\nEOPNOTSUPP:\n\t.long\t0                               # 0x0\n\t.size\tEOPNOTSUPP, 4\n\n\t.type\tXATTR_REPLACE,@object           # @XATTR_REPLACE\n\t.globl\tXATTR_REPLACE\n\t.p2align\t2\nXATTR_REPLACE:\n\t.long\t0                               # 0x0\n\t.size\tXATTR_REPLACE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EOPNOTSUPP = dso_local local_unnamed_addr global i32 0, align 4\n@XATTR_REPLACE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @__vfs_removexattr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = alloca ptr, align 8\n  store ptr %1, ptr %3, align 8, !tbaa !5\n  %4 = tail call ptr @d_inode(ptr noundef %0) #2\n  %5 = call ptr @xattr_resolve_name(ptr noundef %4, ptr noundef nonnull %3) #2\n  %6 = call i64 @IS_ERR(ptr noundef %5) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %10, label %8\n\n8:                                                ; preds = %2\n  %9 = call i32 @PTR_ERR(ptr noundef %5) #2\n  br label %19\n\n10:                                               ; preds = %2\n  %11 = load ptr, ptr %5, align 8, !tbaa !9\n  %12 = icmp eq ptr %11, null\n  br i1 %12, label %13, label %16\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @EOPNOTSUPP, align 4, !tbaa !11\n  %15 = sub nsw i32 0, %14\n  br label %19\n\n16:                                               ; preds = %10\n  %17 = load i32, ptr @XATTR_REPLACE, align 4, !tbaa !11\n  %18 = call i32 %11(ptr noundef nonnull %5, ptr noundef %0, ptr noundef %4, ptr noundef nonnull %3, i32 noundef %17, ptr noundef null) #2\n  br label %19\n\n19:                                               ; preds = %16, %13, %8\n  %20 = phi i32 [ %9, %8 ], [ %15, %13 ], [ %18, %16 ]\n  ret i32 %20\n}\n\ndeclare ptr @d_inode(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @xattr_resolve_name(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_ERR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @PTR_ERR(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"xattr_handler\", !6, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n</s><s>", "file:": "./linux/fs/extr_xattr.c___vfs_removexattr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EOPNOTSUPP = dso_local local_unnamed_addr global i32 0, align 4\n@XATTR_REPLACE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @__vfs_removexattr(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = alloca ptr, align 8\n  store ptr %1, ptr %3, align 8, !tbaa !5\n  %4 = tail call ptr @d_inode(ptr noundef %0) #2\n  %5 = call ptr @xattr_resolve_name(ptr noundef %4, ptr noundef nonnull %3) #2\n  %6 = call i64 @IS_ERR(ptr noundef %5) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %10, label %8\n\n8:                                                ; preds = %2\n  %9 = call i32 @PTR_ERR(ptr noundef %5) #2\n  br label %20\n\n10:                                               ; preds = %2\n  %11 = load ptr, ptr %5, align 8, !tbaa !9\n  %12 = icmp eq ptr %11, null\n  br i1 %12, label %13, label %16\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @EOPNOTSUPP, align 4, !tbaa !11\n  %15 = sub nsw i32 0, %14\n  br label %20\n\n16:                                               ; preds = %10\n  %17 = load ptr, ptr %3, align 8, !tbaa !5\n  %18 = load i32, ptr @XATTR_REPLACE, align 4, !tbaa !11\n  %19 = call i32 %11(ptr noundef nonnull %5, ptr noundef %0, ptr noundef %4, ptr noundef %17, ptr noundef null, i32 noundef 0, i32 noundef %18) #2\n  br label %20\n\n20:                                               ; preds = %16, %13, %8\n  %21 = phi i32 [ %9, %8 ], [ %19, %16 ], [ %15, %13 ]\n  ret i32 %21\n}\n\ndeclare ptr @d_inode(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @xattr_resolve_name(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_ERR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @PTR_ERR(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"xattr_handler\", !6, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_aic7xxx_osm.h_ahc_perform_autosense.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ahc_perform_autosense\n\t.type\tahc_perform_autosense,@function\nahc_perform_autosense:                  # @ahc_perform_autosense\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t$1, %eax\n\tretq\n.Lfunc_end0:\n\t.size\tahc_perform_autosense, .Lfunc_end0-ahc_perform_autosense\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ahc_perform_autosense], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @ahc_perform_autosense(ptr nocapture readnone %0, ptr nocapture readnone %1) #0 {\n  ret i32 1\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/scsi/aic7xxx/extr_aic7xxx_osm.h_ahc_perform_autosense.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ahc_perform_autosense], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable\ndefine internal i32 @ahc_perform_autosense(ptr nocapture readnone %0) #0 {\n  ret i32 1\n}\n\nattributes #0 = { inlinehint mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dm.c___dm_get_module_param_int.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function __dm_get_module_param_int\n\t.type\t__dm_get_module_param_int,@function\n__dm_get_module_param_int:              # @__dm_get_module_param_int\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %r14\n\tmovl\t(%rdi), %edi\n\tcallq\tREAD_ONCE@PLT\n\tcmpl\t%ebp, %eax\n\tjl\t.LBB0_2\n# %bb.1:\n\tcmpl\t%r15d, %eax\n\tjle\t.LBB0_3\n.LBB0_2:\n\txorl\t%ebx, %ebx\n\tcmpl\t%r15d, %eax\n\tcmovgl\t%r15d, %ebx\n\tcmpl\t%ebp, %eax\n\tcmovll\t%ebp, %ebx\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %esi\n\tmovl\t%ebx, %edx\n\tcallq\tcmpxchg@PLT\n\tmovl\t%ebx, %eax\n.LBB0_3:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\t__dm_get_module_param_int, .Lfunc_end0-__dm_get_module_param_int\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @__dm_get_module_param_int], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @__dm_get_module_param_int(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = tail call i32 @READ_ONCE(i32 noundef %4) #2\n  %6 = icmp slt i32 %5, %1\n  br i1 %6, label %10, label %7\n\n7:                                                ; preds = %3\n  %8 = icmp sgt i32 %5, %2\n  %9 = select i1 %8, i32 %2, i32 %5\n  br label %10\n\n10:                                               ; preds = %7, %3\n  %11 = phi i32 [ %5, %3 ], [ %9, %7 ]\n  %12 = tail call i32 @cmpxchg(ptr noundef nonnull %0, i32 noundef %11, i32 noundef %11) #2\n  ret i32 %12\n}\n\ndeclare i32 @READ_ONCE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cmpxchg(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dm_target\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/drivers/md/extr_dm.c___dm_get_module_param_int.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @__dm_get_module_param_int], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @__dm_get_module_param_int(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = tail call i32 @READ_ONCE(i32 noundef %4) #2\n  %6 = icmp slt i32 %5, %1\n  %7 = icmp sgt i32 %5, %2\n  %8 = or i1 %6, %7\n  br i1 %8, label %9, label %13\n\n9:                                                ; preds = %3\n  %10 = select i1 %7, i32 %2, i32 0\n  %11 = select i1 %6, i32 %1, i32 %10\n  %12 = tail call i32 @cmpxchg(ptr noundef nonnull %0, i32 noundef %5, i32 noundef %11) #2\n  br label %13\n\n13:                                               ; preds = %9, %3\n  %14 = phi i32 [ %11, %9 ], [ %5, %3 ]\n  ret i32 %14\n}\n\ndeclare i32 @READ_ONCE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cmpxchg(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dmextern.c_AcpiDmGetObjectTypeName.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function AcpiDmGetObjectTypeName\n\t.type\tAcpiDmGetObjectTypeName,@function\nAcpiDmGetObjectTypeName:                # @AcpiDmGetObjectTypeName\n\t.cfi_startproc\n# %bb.0:\n\tcmpq\t%rdi, ACPI_TYPE_LOCAL_SCOPE(%rip)\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovq\tACPI_TYPE_DEVICE(%rip), %rdi\n\tjmp\t.LBB0_3\n.LBB0_2:\n\tmovl\t$.L.str, %eax\n\tcmpq\t%rdi, ACPI_TYPE_LOCAL_INDEX_FIELD(%rip)\n\tjb\t.LBB0_4\n.LBB0_3:\n\tmovq\tAcpiGbl_DmTypeNames(%rip), %rax\n\tmovq\t(%rax,%rdi,8), %rax\n.LBB0_4:\n\tretq\n.Lfunc_end0:\n\t.size\tAcpiDmGetObjectTypeName, .Lfunc_end0-AcpiDmGetObjectTypeName\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tACPI_TYPE_LOCAL_SCOPE,@object   # @ACPI_TYPE_LOCAL_SCOPE\n\t.bss\n\t.globl\tACPI_TYPE_LOCAL_SCOPE\n\t.p2align\t3\nACPI_TYPE_LOCAL_SCOPE:\n\t.quad\t0                               # 0x0\n\t.size\tACPI_TYPE_LOCAL_SCOPE, 8\n\n\t.type\tACPI_TYPE_DEVICE,@object        # @ACPI_TYPE_DEVICE\n\t.globl\tACPI_TYPE_DEVICE\n\t.p2align\t3\nACPI_TYPE_DEVICE:\n\t.quad\t0                               # 0x0\n\t.size\tACPI_TYPE_DEVICE, 8\n\n\t.type\tACPI_TYPE_LOCAL_INDEX_FIELD,@object # @ACPI_TYPE_LOCAL_INDEX_FIELD\n\t.globl\tACPI_TYPE_LOCAL_INDEX_FIELD\n\t.p2align\t3\nACPI_TYPE_LOCAL_INDEX_FIELD:\n\t.quad\t0                               # 0x0\n\t.size\tACPI_TYPE_LOCAL_INDEX_FIELD, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.zero\t1\n\t.size\t.L.str, 1\n\n\t.type\tAcpiGbl_DmTypeNames,@object     # @AcpiGbl_DmTypeNames\n\t.bss\n\t.globl\tAcpiGbl_DmTypeNames\n\t.p2align\t3\nAcpiGbl_DmTypeNames:\n\t.quad\t0\n\t.size\tAcpiGbl_DmTypeNames, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_TYPE_LOCAL_SCOPE = dso_local local_unnamed_addr global i64 0, align 8\n@ACPI_TYPE_DEVICE = dso_local local_unnamed_addr global i64 0, align 8\n@ACPI_TYPE_LOCAL_INDEX_FIELD = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer\n@AcpiGbl_DmTypeNames = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @AcpiDmGetObjectTypeName], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal nonnull ptr @AcpiDmGetObjectTypeName(i64 noundef %0) #0 {\n  %2 = load i64, ptr @ACPI_TYPE_LOCAL_SCOPE, align 8, !tbaa !5\n  %3 = icmp eq i64 %2, %0\n  br i1 %3, label %4, label %6\n\n4:                                                ; preds = %1\n  %5 = load i64, ptr @ACPI_TYPE_DEVICE, align 8, !tbaa !5\n  br label %6\n\n6:                                                ; preds = %4, %1\n  %7 = phi i64 [ %5, %4 ], [ %0, %1 ]\n  %8 = load ptr, ptr @AcpiGbl_DmTypeNames, align 8, !tbaa !9\n  %9 = getelementptr inbounds ptr, ptr %8, i64 %7\n  %10 = load ptr, ptr %9, align 8, !tbaa !9\n  ret ptr %10\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "file:": "./freebsd/sys/contrib/dev/acpica/common/extr_dmextern.c_AcpiDmGetObjectTypeName.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_TYPE_LOCAL_SCOPE = dso_local local_unnamed_addr global i64 0, align 8\n@ACPI_TYPE_DEVICE = dso_local local_unnamed_addr global i64 0, align 8\n@ACPI_TYPE_LOCAL_INDEX_FIELD = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@AcpiGbl_DmTypeNames = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @AcpiDmGetObjectTypeName], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal ptr @AcpiDmGetObjectTypeName(i64 noundef %0) #0 {\n  %2 = load i64, ptr @ACPI_TYPE_LOCAL_SCOPE, align 8, !tbaa !5\n  %3 = icmp eq i64 %2, %0\n  br i1 %3, label %4, label %6\n\n4:                                                ; preds = %1\n  %5 = load i64, ptr @ACPI_TYPE_DEVICE, align 8, !tbaa !5\n  br label %9\n\n6:                                                ; preds = %1\n  %7 = load i64, ptr @ACPI_TYPE_LOCAL_INDEX_FIELD, align 8, !tbaa !5\n  %8 = icmp ult i64 %7, %0\n  br i1 %8, label %14, label %9\n\n9:                                                ; preds = %6, %4\n  %10 = phi i64 [ %5, %4 ], [ %0, %6 ]\n  %11 = load ptr, ptr @AcpiGbl_DmTypeNames, align 8, !tbaa !9\n  %12 = getelementptr inbounds ptr, ptr %11, i64 %10\n  %13 = load ptr, ptr %12, align 8, !tbaa !9\n  br label %14\n\n14:                                               ; preds = %6, %9\n  %15 = phi ptr [ %13, %9 ], [ @.str, %6 ]\n  ret ptr %15\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sqlite.c_svn_sqlite__column_int.ll\"\n\t.globl\tsvn_sqlite__column_int          # -- Begin function svn_sqlite__column_int\n\t.p2align\t4, 0x90\n\t.type\tsvn_sqlite__column_int,@function\nsvn_sqlite__column_int:                 # @svn_sqlite__column_int\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t(%rdi), %edi\n\tjmp\tsqlite3_column_int@PLT          # TAILCALL\n.Lfunc_end0:\n\t.size\tsvn_sqlite__column_int, .Lfunc_end0-svn_sqlite__column_int\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @svn_sqlite__column_int(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr %0, align 4, !tbaa !5\n  %4 = tail call i32 @sqlite3_column_int(i32 noundef %3, i32 noundef %1) #2\n  ret i32 %4\n}\n\ndeclare i32 @sqlite3_column_int(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/contrib/subversion/subversion/libsvn_subr/extr_sqlite.c_svn_sqlite__column_int.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @svn_sqlite__column_int(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr %0, align 4, !tbaa !5\n  %4 = tail call i32 @sqlite3_column_int(i32 noundef %3, i32 noundef %1) #2\n  ret i32 %4\n}\n\ndeclare i32 @sqlite3_column_int(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_xgbe-drv.c_xgbe_create_skb.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function xgbe_create_skb\n\t.type\txgbe_create_skb,@function\nxgbe_create_skb:                        # @xgbe_create_skb\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, %r14d\n\tmovq\t%rdx, %rbp\n\tmovq\t%rsi, %rax\n\tmovq\t%rdi, %r15\n\tmovl\t8(%rdx), %esi\n\tmovq\t%rax, %rdi\n\tcallq\tnapi_alloc_skb@PLT\n\tmovq\t%rax, %rbx\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\t(%r15), %edi\n\tmovl\t16(%rbp), %esi\n\tmovl\t8(%rbp), %ecx\n\tmovl\t12(%rbp), %edx\n\tmovl\tDMA_FROM_DEVICE(%rip), %r8d\n\tcallq\tdma_sync_single_range_for_cpu@PLT\n\tmovl\t4(%rbp), %edi\n\tcallq\tpage_address@PLT\n\tmovslq\t(%rbp), %rcx\n\tleaq\t(%rax,%rcx,4), %rsi\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tcallq\tskb_copy_to_linear_data@PLT\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %esi\n\tcallq\tskb_put@PLT\n.LBB0_2:\n\tmovq\t%rbx, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\txgbe_create_skb, .Lfunc_end0-xgbe_create_skb\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tDMA_FROM_DEVICE,@object         # @DMA_FROM_DEVICE\n\t.bss\n\t.globl\tDMA_FROM_DEVICE\n\t.p2align\t2\nDMA_FROM_DEVICE:\n\t.long\t0                               # 0x0\n\t.size\tDMA_FROM_DEVICE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xgbe_prv_data = type { i32, i32, i32, i32 }\n%struct.xgbe_ring = type { i32, i32, i32, i32 }\n\n@DMA_FROM_DEVICE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xgbe_create_skb], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @xgbe_create_skb(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.xgbe_prv_data, ptr %2, i64 0, i32 3\n  %6 = load i32, ptr %5, align 4, !tbaa !5\n  %7 = tail call ptr @napi_alloc_skb(ptr noundef %1, i32 noundef %6) #2\n  %8 = icmp eq ptr %7, null\n  br i1 %8, label %17, label %9\n\n9:                                                ; preds = %4\n  %10 = load i32, ptr %0, align 4, !tbaa !10\n  %11 = getelementptr inbounds %struct.xgbe_ring, ptr %2, i64 0, i32 3\n  %12 = load i32, ptr %11, align 4, !tbaa !12\n  %13 = getelementptr inbounds %struct.xgbe_ring, ptr %2, i64 0, i32 2\n  %14 = load i32, ptr %13, align 4, !tbaa !14\n  %15 = getelementptr inbounds %struct.xgbe_ring, ptr %2, i64 0, i32 1\n  %16 = load i32, ptr %15, align 4, !tbaa !15\n  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %7, ptr align 4 %1, i64 4, i1 false), !tbaa !16\n  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %7, ptr align 4 %7, i64 4, i1 false), !tbaa !16\n  %17 = tail call i32 @dma_sync_single_range_for_cpu(i32 noundef %10, i32 noundef %12, i32 noundef %14, i32 noundef %16, i32 noundef 0) #2\n  %18 = load i32, ptr %15, align 4, !tbaa !15\n  %19 = tail call ptr @page_address(i32 noundef %18) #2\n  %20 = load i32, ptr %2, align 4, !tbaa !17\n  %21 = sext i32 %20 to i64\n  %22 = getelementptr inbounds i32, ptr %19, i64 %21\n  %23 = tail call i32 @skb_copy_to_linear_data(ptr noundef nonnull %7, ptr noundef %22, i32 noundef %3) #2\n  %24 = tail call i32 @skb_put(ptr noundef nonnull %7, i32 noundef %3) #2\n  br label %25\n\n25:                                               ; preds = %9, %4\n  ret ptr %7\n}\n\ndeclare ptr @napi_alloc_skb(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dma_sync_single_range_for_cpu(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @page_address(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @skb_copy_to_linear_data(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly nocallback nofree nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 12}\n!6 = !{!\"xgbe_prv_data\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"xgbe_channel\", !7, i64 0}\n!12 = !{!13, !7, i64 12}\n!13 = !{!\"xgbe_ring\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!14 = !{!13, !7, i64 8}\n!15 = !{!13, !7, i64 4}\n!16 = !{!8, !8, i64 0}\n!17 = !{!6, !7,", "file:": "./linux/drivers/net/ethernet/amd/xgbe/extr_xgbe-drv.c_xgbe_create_skb.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { %struct.TYPE_4__, i32, i32, i32 }\n%struct.TYPE_4__ = type { i32, i32 }\n\n@DMA_FROM_DEVICE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xgbe_create_skb], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @xgbe_create_skb(ptr nocapture noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.TYPE_5__, ptr %2, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !5\n  %7 = tail call ptr @napi_alloc_skb(ptr noundef %1, i32 noundef %6) #2\n  %8 = icmp eq ptr %7, null\n  br i1 %8, label %26, label %9\n\n9:                                                ; preds = %4\n  %10 = load i32, ptr %0, align 4, !tbaa !13\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %2, i64 0, i32 3\n  %12 = load i32, ptr %11, align 4, !tbaa !15\n  %13 = getelementptr inbounds %struct.TYPE_5__, ptr %2, i64 0, i32 2\n  %14 = load i32, ptr %13, align 4, !tbaa !16\n  %15 = load i32, ptr %5, align 4, !tbaa !5\n  %16 = load i32, ptr @DMA_FROM_DEVICE, align 4, !tbaa !17\n  %17 = tail call i32 @dma_sync_single_range_for_cpu(i32 noundef %10, i32 noundef %12, i32 noundef %14, i32 noundef %15, i32 noundef %16) #2\n  %18 = getelementptr inbounds %struct.TYPE_4__, ptr %2, i64 0, i32 1\n  %19 = load i32, ptr %18, align 4, !tbaa !18\n  %20 = tail call ptr @page_address(i32 noundef %19) #2\n  %21 = load i32, ptr %2, align 4, !tbaa !19\n  %22 = sext i32 %21 to i64\n  %23 = getelementptr inbounds i32, ptr %20, i64 %22\n  %24 = tail call i32 @skb_copy_to_linear_data(ptr noundef nonnull %7, ptr noundef %23, i32 noundef %3) #2\n  %25 = tail call i32 @skb_put(ptr noundef nonnull %7, i32 noundef %3) #2\n  br label %26\n\n26:                                               ; preds = %4, %9\n  ret ptr %7\n}\n\ndeclare ptr @napi_alloc_skb(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dma_sync_single_range_for_cpu(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @page_address(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @skb_copy_to_linear_data(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"xgbe_ring_data\", !7, i64 0}\n!7 = !{!\"TYPE_6__\", !8, i64 0}\n!8 = !{!\"TYPE_5__\", !9, i64 0, !10, i64 8, !10, i64 12, !10, i64 16}\n!9 = !{!\"TYPE_4__\", !10, i64 0, !10, i64 4}\n!10 = !{!\"int\", !11, i64 0}\n!11 = !{!\"omnipotent char\", !12, i64 0}\n!12 = !{!\"Simple C/C++ TBAA\"}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"xgbe_prv_data\", !10, i64 0}\n!15 = !{!6, !10, i64 16}\n!16 = !{!6, !10, i64 12}\n!17 = !{!10, !10, i64 0}\n!18 = !{!6, !10, i64 4}\n!19 = !{!6, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_XzEnc.c_Lzma2WithFilters_Create.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function Lzma2WithFilters_Create\n\t.type\tLzma2WithFilters_Create,@function\nLzma2WithFilters_Create:                # @Lzma2WithFilters_Create\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovl\t8(%rdi), %esi\n\tmovl\t12(%rdi), %edi\n\tcallq\tLzma2Enc_Create@PLT\n\tmovq\t%rax, (%rbx)\n\ttestq\t%rax, %rax\n\tmovl\t$SZ_ERROR_MEM, %eax\n\tmovl\t$SZ_OK, %ecx\n\tcmoveq\t%rax, %rcx\n\tmovl\t(%rcx), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tLzma2WithFilters_Create, .Lfunc_end0-Lzma2WithFilters_Create\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSZ_ERROR_MEM,@object            # @SZ_ERROR_MEM\n\t.bss\n\t.globl\tSZ_ERROR_MEM\n\t.p2align\t2\nSZ_ERROR_MEM:\n\t.long\t0                               # 0x0\n\t.size\tSZ_ERROR_MEM, 4\n\n\t.type\tSZ_OK,@object                   # @SZ_OK\n\t.globl\tSZ_OK\n\t.p2align\t2\nSZ_OK:\n\t.long\t0                               # 0x0\n\t.size\tSZ_OK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, i32, i32 }\n\n@SZ_ERROR_MEM = dso_local local_unnamed_addr global i32 0, align 4\n@SZ_OK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Lzma2WithFilters_Create], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @Lzma2WithFilters_Create(ptr nocapture noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 8, !tbaa !11\n  %6 = tail call ptr @Lzma2Enc_Create(i32 noundef %3, i32 noundef %5) #2\n  store ptr %6, ptr %0, align 8, !tbaa !12\n  %7 = icmp eq ptr %6, null\n  %8 = load i32, ptr @SZ_ERROR_MEM, align 4\n  %9 = load i32, ptr @SZ_OK, align 4\n  %10 = select i1 %7, i32 %8, i32 %9\n  ret i32 %10\n}\n\ndeclare ptr @Lzma2Enc_Create(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 12}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !10, i64 8, !10, i64 12}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!6, !7, i64 0}\n</s><s>", "file:": "./sumatrapdf/ext/lzma/C/extr_XzEnc.c_Lzma2WithFilters_Create.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i64, i32, i32 }\n\n@SZ_ERROR_MEM = dso_local local_unnamed_addr global i32 0, align 4\n@SZ_OK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @Lzma2WithFilters_Create], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @Lzma2WithFilters_Create(ptr nocapture noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 8, !tbaa !11\n  %6 = tail call i64 @Lzma2Enc_Create(i32 noundef %3, i32 noundef %5) #2\n  store i64 %6, ptr %0, align 8, !tbaa !12\n  %7 = icmp eq i64 %6, 0\n  %8 = load i32, ptr @SZ_ERROR_MEM, align 4\n  %9 = load i32, ptr @SZ_OK, align 4\n  %10 = select i1 %7, i32 %8, i32 %9\n  ret i32 %10\n}\n\ndeclare i64 @Lzma2Enc_Create(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 12}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !10, i64 8, !10, i64 12}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!6, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_context_angle.c_angle_submit_frame.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function angle_submit_frame\n\t.type\tangle_submit_frame,@function\nangle_submit_frame:                     # @angle_submit_frame\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t(%rdi), %rax\n\tmovq\t(%rax), %rbx\n\tcallq\tra_gl_ctx_submit_frame@PLT\n\tmovl\t%eax, %ebp\n\tmovq\t(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_2\n# %bb.1:\n\tcallq\tID3D11DeviceContext_Flush@PLT\n.LBB0_2:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tangle_submit_frame, .Lfunc_end0-angle_submit_frame\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @angle_submit_frame], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @angle_submit_frame(ptr noundef %0) #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = load ptr, ptr %2, align 8, !tbaa !10\n  %4 = tail call i32 @ra_gl_ctx_submit_frame(ptr noundef nonnull %0) #2\n  %5 = load ptr, ptr %3, align 8, !tbaa !12\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %9, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @ID3D11DeviceContext_Flush(ptr noundef nonnull %5) #2\n  br label %9\n\n9:                                                ; preds = %7, %1\n  ret i32 %4\n}\n\ndeclare i32 @ra_gl_ctx_submit_frame(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ID3D11DeviceContext_Flush(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_4__\", !7, i64 0}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_6__\", !7, i64 0}\n</s><s>", "file:": "./mpv/video/out/opengl/extr_context_angle.c_angle_submit_frame.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @angle_submit_frame], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @angle_submit_frame(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = load ptr, ptr %3, align 8, !tbaa !10\n  %5 = tail call i32 @ra_gl_ctx_submit_frame(ptr noundef nonnull %0, ptr noundef %1) #2\n  %6 = load i64, ptr %4, align 8, !tbaa !12\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %10, label %8\n\n8:                                                ; preds = %2\n  %9 = tail call i32 @ID3D11DeviceContext_Flush(i64 noundef %6) #2\n  br label %10\n\n10:                                               ; preds = %8, %2\n  ret i32 %5\n}\n\ndeclare i32 @ra_gl_ctx_submit_frame(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ID3D11DeviceContext_Flush(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ra_swapchain\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"priv\", !14, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_vfslog.c_vlogCheckReservedLock.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function vlogCheckReservedLock\n\t.type\tvlogCheckReservedLock,@function\nvlogCheckReservedLock:                  # @vlogCheckReservedLock\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %r15\n\txorl\t%eax, %eax\n\tcallq\tvlog_time@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t8(%r15), %rdi\n\tmovq\t(%rdi), %rax\n\tmovq\t%r14, %rsi\n\tcallq\t*(%rax)\n\tmovl\t%eax, %r12d\n\txorl\t%eax, %eax\n\tcallq\tvlog_time@PLT\n\tsubq\t%rbx, %rax\n\tmovl\t(%r15), %edi\n\tmovl\tVLOG_OP_CHECKRESERVEDLOCK(%rip), %ecx\n\tmovl\t(%r14), %r8d\n\tmovq\t%rbx, %rsi\n\tmovq\t%rax, %rdx\n\tmovl\t$-1, %r9d\n\tpushq\t%r12\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t$.L.str\n\t.cfi_adjust_cfa_offset 8\n\tcallq\tvlogLogPrint@PLT\n\taddq\t$16, %rsp\n\t.cfi_adjust_cfa_offset -16\n\tmovl\t%r12d, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tvlogCheckReservedLock, .Lfunc_end0-vlogCheckReservedLock\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tVLOG_OP_CHECKRESERVEDLOCK,@object # @VLOG_OP_CHECKRESERVEDLOCK\n\t.bss\n\t.globl\tVLOG_OP_CHECKRESERVEDLOCK\n\t.p2align\t2\nVLOG_OP_CHECKRESERVEDLOCK:\n\t.long\t0                               # 0x0\n\t.size\tVLOG_OP_CHECKRESERVEDLOCK, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.zero\t1\n\t.size\t.L.str, 1\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, ptr }\n%struct.TYPE_4__ = type { ptr, ptr }\n\n@VLOG_OP_CHECKRESERVEDLOCK = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @vlogCheckReservedLock], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @vlogCheckReservedLock(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call i64 (...) @vlog_time() #2\n  %4 = getelementptr inbounds %struct.TYPE_5__, ptr %0, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = load ptr, ptr %5, align 8, !tbaa !11\n  %7 = load ptr, ptr %6, align 8, !tbaa !13\n  %8 = tail call i32 %7(ptr noundef nonnull %5, ptr noundef %1) #2\n  %9 = tail call i64 (...) @vlog_time() #2\n  %10 = sub nsw i64 %9, %3\n  %11 = load i32, ptr %0, align 8, !tbaa !15\n  %12 = load i32, ptr @VLOG_OP_CHECKRESERVEDLOCK, align 4, !tbaa !16\n  %13 = load i32, ptr %1, align 4, !tbaa !17\n  %14 = tail call i32 @vlogLogPrint(i32 noundef %11, i64 noundef %3, i64 noundef %10, i32 noundef %12, i32 noundef %13, i32 noundef -1, ptr noundef nonnull @.str) #2\n  ret i32 %8\n}\n\ndeclare i64 @vlog_time(...) local_unnamed_addr #1\n\ndeclare i32 @vlogLogPrint(i32 noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_5__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_4__\", !10, i64 0, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_6__\", !10, i64 0}\n!15 = !{!6, !7, i64 0}\n!16 = !{!7, !7, i64 0}\n!17 = !{!18, !7, i64 0}\n!18 = !{!\"TYPE_7__\", !7, i64 0}\n</s><s>", "file:": "./wcdb/vfslog/extr_vfslog.c_vlogCheckReservedLock.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, ptr }\n\n@VLOG_OP_CHECKRESERVEDLOCK = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @vlogCheckReservedLock], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @vlogCheckReservedLock(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = tail call i64 (...) @vlog_time() #2\n  %4 = getelementptr inbounds %struct.TYPE_5__, ptr %0, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = load ptr, ptr %5, align 8, !tbaa !11\n  %7 = load ptr, ptr %6, align 8, !tbaa !13\n  %8 = tail call i32 %7(ptr noundef nonnull %5, ptr noundef %1) #2\n  %9 = tail call i64 (...) @vlog_time() #2\n  %10 = sub nsw i64 %9, %3\n  %11 = load i32, ptr %0, align 8, !tbaa !15\n  %12 = load i32, ptr @VLOG_OP_CHECKRESERVEDLOCK, align 4, !tbaa !16\n  %13 = load i32, ptr %1, align 4, !tbaa !16\n  %14 = tail call i32 @vlogLogPrint(i32 noundef %11, i64 noundef %3, i64 noundef %10, i32 noundef %12, i32 noundef %13, i32 noundef -1, ptr noundef nonnull @.str, i32 noundef %8) #2\n  ret i32 %8\n}\n\ndeclare i64 @vlog_time(...) local_unnamed_addr #1\n\ndeclare i32 @vlogLogPrint(i32 noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_5__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_6__\", !10, i64 0}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_4__\", !10, i64 0}\n!15 = !{!6, !7, i64 0}\n!16 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_vtablog.c_vtablogDestroy.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function vtablogDestroy\n\t.type\tvtablogDestroy,@function\nvtablogDestroy:                         # @vtablogDestroy\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovl\t(%rdi), %esi\n\tmovl\t$.L.str, %edi\n\tcallq\tprintf@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tsqlite3_free@PLT\n\tmovl\tSQLITE_OK(%rip), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tvtablogDestroy, .Lfunc_end0-vtablogDestroy\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"vtablogDestroy(%d)\\n\"\n\t.size\t.L.str, 20\n\n\t.type\tSQLITE_OK,@object               # @SQLITE_OK\n\t.bss\n\t.globl\tSQLITE_OK\n\t.p2align\t2\nSQLITE_OK:\n\t.long\t0                               # 0x0\n\t.size\tSQLITE_OK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [20 x i8] c\"vtablogDestroy(%d)\\0A\\00\", align 1\n@SQLITE_OK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @vtablogDestroy], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @vtablogDestroy(ptr noundef %0) #0 {\n  %2 = load i32, ptr %0, align 4, !tbaa !5\n  %3 = tail call i32 @printf(ptr noundef nonnull @.str, i32 noundef %2) #2\n  %4 = tail call i32 @sqlite3_free(ptr noundef nonnull %0) #2\n  %5 = load i32, ptr @SQLITE_OK, align 4, !tbaa !10\n  ret i32 %5\n}\n\ndeclare i32 @printf(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @sqlite3_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>", "file:": "./sqlcipher/ext/misc/extr_vtablog.c_vtablogDestroy.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [20 x i8] c\"vtablogDestroy(%d)\\0A\\00\", align 1\n@SQLITE_OK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @vtablogDestroy], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @vtablogDestroy(ptr noundef %0) #0 {\n  %2 = load i32, ptr %0, align 4, !tbaa !5\n  %3 = tail call i32 @printf(ptr noundef nonnull @.str, i32 noundef %2) #2\n  %4 = tail call i32 @sqlite3_free(ptr noundef nonnull %0) #2\n  %5 = load i32, ptr @SQLITE_OK, align 4, !tbaa !10\n  ret i32 %5\n}\n\ndeclare i32 @printf(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @sqlite3_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_2__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pwr.c_mid_pwr_wait.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mid_pwr_wait\n\t.type\tmid_pwr_wait,@function\nmid_pwr_wait:                           # @mid_pwr_wait\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tmovl\t$-500000, %ebp                  # imm = 0xFFF85EE0\n\t.p2align\t4, 0x90\n.LBB0_1:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rbx, %rdi\n\tcallq\tmid_pwr_is_busy@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_2\n# %bb.3:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovl\t$1, %edi\n\tcallq\tudelay@PLT\n\tincl\t%ebp\n\tjne\t.LBB0_1\n# %bb.4:\n\txorl\t%eax, %eax\n\tsubl\tEBUSY(%rip), %eax\n\tjmp\t.LBB0_5\n.LBB0_2:\n\txorl\t%eax, %eax\n.LBB0_5:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmid_pwr_wait, .Lfunc_end0-mid_pwr_wait\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tEBUSY,@object                   # @EBUSY\n\t.bss\n\t.globl\tEBUSY\n\t.p2align\t2\nEBUSY:\n\t.long\t0                               # 0x0\n\t.size\tEBUSY, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EBUSY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mid_pwr_wait], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mid_pwr_wait(ptr noundef %0) #0 {\n  br label %2\n\n2:                                                ; preds = %1, %6\n  %3 = phi i32 [ 0, %1 ], [ %7, %6 ]\n  %4 = tail call i32 @mid_pwr_is_busy(ptr noundef %0) #2\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %11, label %6\n\n6:                                                ; preds = %2\n  %7 = add nuw nsw i32 %3, 1\n  %8 = tail call i32 @udelay(i32 noundef 1) #2\n  %9 = icmp eq i32 %7, 0\n  br i1 %9, label %10, label %2, !llvm.loop !5\n\n10:                                               ; preds = %6\n  %11 = load i32, ptr @EBUSY, align 4, !tbaa !7\n  %12 = sub nsw i32 0, %11\n  br label %13\n\n13:                                               ; preds = %10, %9\n  %14 = phi i32 [ %12, %10 ], [ 0, %9 ]\n  ret i32 %14\n}\n\ndeclare i32 @mid_pwr_is_busy(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @udelay(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = distinct !{!5, !6}\n!6 = !{!\"llvm.loop.mustprogress\"}\n!7 = !{!8, !8, i64 0}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/arch/x86/platform/intel-mid/extr_pwr.c_mid_pwr_wait.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EBUSY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mid_pwr_wait], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mid_pwr_wait(ptr noundef %0) #0 {\n  br label %2\n\n2:                                                ; preds = %6, %1\n  %3 = phi i32 [ 500000, %1 ], [ %8, %6 ]\n  %4 = tail call i32 @mid_pwr_is_busy(ptr noundef %0) #2\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %13, label %6\n\n6:                                                ; preds = %2\n  %7 = tail call i32 @udelay(i32 noundef 1) #2\n  %8 = add nsw i32 %3, -1\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %10, label %2, !llvm.loop !5\n\n10:                                               ; preds = %6\n  %11 = load i32, ptr @EBUSY, align 4, !tbaa !7\n  %12 = sub nsw i32 0, %11\n  br label %13\n\n13:                                               ; preds = %2, %10\n  %14 = phi i32 [ %12, %10 ], [ 0, %2 ]\n  ret i32 %14\n}\n\ndeclare i32 @mid_pwr_is_busy(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @udelay(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = distinct !{!5, !6}\n!6 = !{!\"llvm.loop.mustprogress\"}\n!7 = !{!8, !8, i64 0}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sort.c__sort__sym_cmp.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function _sort__sym_cmp\n\t.type\t_sort__sym_cmp,@function\n_sort__sym_cmp:                         # @_sort__sym_cmp\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_13\n# %bb.1:\n\ttestq\t%r14, %r14\n\tje\t.LBB0_13\n# %bb.2:\n\txorl\t%eax, %eax\n\tcmpq\t%r14, %rbx\n\tje\t.LBB0_12\n# %bb.3:\n\tcmpq\t$0, 24(%rbx)\n\tjne\t.LBB0_6\n# %bb.4:\n\tcmpq\t$0, 24(%r14)\n\tje\t.LBB0_5\n.LBB0_6:\n\tmovl\t16(%rbx), %edi\n\tmovl\t16(%r14), %esi\n\tcallq\tstrcmp@PLT\n                                        # kill: def $eax killed $eax def $rax\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_12\n# %bb.7:\n\tmovq\t(%rbx), %rcx\n\tcmpq\t8(%r14), %rcx\n\tjg\t.LBB0_9\n# %bb.8:\n\tmovq\t8(%rbx), %rdx\n\tmovl\t$0, %eax\n\tcmpq\t(%r14), %rdx\n\tjl\t.LBB0_9\n\tjmp\t.LBB0_12\n.LBB0_13:\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tcmp_null@PLT                    # TAILCALL\n.LBB0_5:\n\t.cfi_def_cfa_offset 32\n\tmovq\t(%rbx), %rcx\n.LBB0_9:\n\tmovq\t(%r14), %rax\n\tcmpq\t%rcx, %rax\n\tjne\t.LBB0_10\n# %bb.11:\n\tmovl\t8(%r14), %eax\n\tsubl\t8(%rbx), %eax\n\tjmp\t.LBB0_12\n.LBB0_10:\n\tsubl\t%ecx, %eax\n.LBB0_12:\n                                        # kill: def $eax killed $eax killed $rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\t_sort__sym_cmp, .Lfunc_end0-_sort__sym_cmp\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sort_entry = type { i64, i64, i32, i64 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @_sort__sym_cmp], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @_sort__sym_cmp(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp ne ptr %0, null\n  %4 = icmp ne ptr %1, null\n  %5 = and i1 %3, %4\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sort_entry, ptr %0, i64 0, i32 3\n  %8 = load i64, ptr %7, align 8, !tbaa !5\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %10, label %12\n\n10:                                               ; preds = %6\n  %11 = getelementptr inbounds %struct.sort_entry, ptr %1, i64 0, i32 3\n  %12 = load i64, ptr %11, align 8, !tbaa !5\n  %13 = icmp eq i64 %12, 0\n  br i1 %13, label %14, label %16\n\n14:                                               ; preds = %10\n  %15 = load i64, ptr %0, align 8, !tbaa !11\n  br label %16\n\n16:                                               ; preds = %14, %10\n  %17 = phi i64 [ %12, %10 ], [ %15, %14 ]\n  %18 = phi i64 [ %8, %10 ], [ %8, %14 ]\n  %19 = tail call i32 @strcmp(i32 noundef %17, i32 noundef %18) #2\n  br label %20\n\n20:                                               ; preds = %16, %2, %19\n  %21 = phi i32 [ %19, %16 ], [ 0, %2 ], [ 0, %1 ]\n  %22 = tail call i32 @cmp_null(ptr noundef %0, ptr noundef %1) #2\n  ret i32 %22\n}\n\ndeclare i32 @strcmp(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cmp_null(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 24}\n!6 = !{!\"sort_entry\", !7, i64 0, !7, i64 8, !10, i64 16, !7, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n</s><s>", "file:": "./linux/tools/perf/util/extr_sort.c__sort__sym_cmp.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.symbol = type { i64, i64, i32, i64 }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @_sort__sym_cmp], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @_sort__sym_cmp(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp ne ptr %0, null\n  %4 = icmp ne ptr %1, null\n  %5 = and i1 %3, %4\n  br i1 %5, label %8, label %6\n\n6:                                                ; preds = %2\n  %7 = tail call i32 @cmp_null(ptr noundef %0, ptr noundef %1) #2\n  br label %51\n\n8:                                                ; preds = %2\n  %9 = icmp eq ptr %0, %1\n  br i1 %9, label %51, label %10\n\n10:                                               ; preds = %8\n  %11 = getelementptr inbounds %struct.symbol, ptr %0, i64 0, i32 3\n  %12 = load i64, ptr %11, align 8, !tbaa !5\n  %13 = icmp eq i64 %12, 0\n  br i1 %13, label %14, label %20\n\n14:                                               ; preds = %10\n  %15 = getelementptr inbounds %struct.symbol, ptr %1, i64 0, i32 3\n  %16 = load i64, ptr %15, align 8, !tbaa !5\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %18, label %20\n\n18:                                               ; preds = %14\n  %19 = load i64, ptr %0, align 8, !tbaa !11\n  br label %37\n\n20:                                               ; preds = %14, %10\n  %21 = getelementptr inbounds %struct.symbol, ptr %0, i64 0, i32 2\n  %22 = load i32, ptr %21, align 8, !tbaa !12\n  %23 = getelementptr inbounds %struct.symbol, ptr %1, i64 0, i32 2\n  %24 = load i32, ptr %23, align 8, !tbaa !12\n  %25 = tail call i32 @strcmp(i32 noundef %22, i32 noundef %24) #2\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %27, label %51\n\n27:                                               ; preds = %20\n  %28 = load i64, ptr %0, align 8, !tbaa !11\n  %29 = getelementptr inbounds %struct.symbol, ptr %1, i64 0, i32 1\n  %30 = load i64, ptr %29, align 8, !tbaa !13\n  %31 = icmp sgt i64 %28, %30\n  br i1 %31, label %37, label %32\n\n32:                                               ; preds = %27\n  %33 = getelementptr inbounds %struct.symbol, ptr %0, i64 0, i32 1\n  %34 = load i64, ptr %33, align 8, !tbaa !13\n  %35 = load i64, ptr %1, align 8, !tbaa !11\n  %36 = icmp slt i64 %34, %35\n  br i1 %36, label %37, label %51\n\n37:                                               ; preds = %18, %32, %27\n  %38 = phi i64 [ %19, %18 ], [ %28, %32 ], [ %28, %27 ]\n  %39 = load i64, ptr %1, align 8, !tbaa !11\n  %40 = icmp eq i64 %39, %38\n  br i1 %40, label %44, label %41\n\n41:                                               ; preds = %37\n  %42 = sub nsw i64 %39, %38\n  %43 = trunc i64 %42 to i32\n  br label %51\n\n44:                                               ; preds = %37\n  %45 = getelementptr inbounds %struct.symbol, ptr %1, i64 0, i32 1\n  %46 = load i64, ptr %45, align 8, !tbaa !13\n  %47 = getelementptr inbounds %struct.symbol, ptr %0, i64 0, i32 1\n  %48 = load i64, ptr %47, align 8, !tbaa !13\n  %49 = sub nsw i64 %46, %48\n  %50 = trunc i64 %49 to i32\n  br label %51\n\n51:                                               ; preds = %32, %20, %8, %44, %41, %6\n  %52 = phi i32 [ %43, %41 ], [ %50, %44 ], [ %7, %6 ], [ 0, %8 ], [ 0, %32 ], [ %25, %20 ]\n  ret i32 %52\n}\n\ndeclare i32 @cmp_null(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @strcmp(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 24}\n!6 = !{!\"symbol\", !7, i64 0, !7, i64 8, !10, i64 16, !7, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !10, i64 16}\n!13 = !{!6, !7, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_inode.c_reiserfs_bmap.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function reiserfs_bmap\n\t.type\treiserfs_bmap,@function\nreiserfs_bmap:                          # @reiserfs_bmap\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %r14\n\tmovl\t%esi, %r15d\n\tmovq\t%rdi, %rbx\n\tcallq\tfile_capable@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_1\n# %bb.2:\n\tmovl\t(%rbx), %edi\n\tcallq\treiserfs_write_lock@PLT\n\txorl\t%ebp, %ebp\n\tmovq\t%rbx, %rdi\n\tmovl\t%r15d, %esi\n\tmovq\t%r14, %rdx\n\txorl\t%ecx, %ecx\n\tcallq\t_get_block_create_0@PLT\n\tmovl\t(%rbx), %edi\n\tcallq\treiserfs_write_unlock@PLT\n\tjmp\t.LBB0_3\n.LBB0_1:\n\txorl\t%ebp, %ebp\n\tsubl\tEFBIG(%rip), %ebp\n.LBB0_3:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\treiserfs_bmap, .Lfunc_end0-reiserfs_bmap\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tEFBIG,@object                   # @EFBIG\n\t.bss\n\t.globl\tEFBIG\n\t.p2align\t2\nEFBIG:\n\t.long\t0                               # 0x0\n\t.size\tEFBIG, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EFBIG = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @reiserfs_bmap], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @reiserfs_bmap(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {\n  %4 = tail call i32 @file_capable(ptr noundef %0, i32 noundef %1) #2\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %6, label %8\n\n6:                                                ; preds = %3\n  %7 = load i32, ptr @EFBIG, align 4, !tbaa !5\n  sub nsw i32 0, %7\n  br label %12\n\n8:                                                ; preds = %3\n  %9 = load i32, ptr %0, align 4, !tbaa !9\n  %10 = tail call i32 @reiserfs_write_lock(i32 noundef %9) #2\n  %11 = tail call i32 @_get_block_create_0(ptr noundef nonnull %0, i32 noundef %1, ptr noundef %2, i32 noundef 0) #2\n  %12 = load i32, ptr %0, align 4, !tbaa !9\n  %13 = tail call i32 @reiserfs_write_unlock(i32 noundef %12) #2\n  br label %14\n\n14:                                               ; preds = %8, %6\n  %15 = phi i32 [ %7, %6 ], [ 0, %8 ]\n  ret i32 %15\n}\n\ndeclare i32 @file_capable(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @reiserfs_write_lock(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @_get_block_create_0(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @reiserfs_write_unlock(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"file\", !6, i64 0}\n</s><s>", "file:": "./linux/fs/reiserfs/extr_inode.c_reiserfs_bmap.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@EFBIG = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @reiserfs_bmap], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @reiserfs_bmap(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 %3) #0 {\n  %5 = tail call i32 @file_capable(ptr noundef %0, i32 noundef %1) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %4\n  %8 = load i32, ptr @EFBIG, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  br label %16\n\n10:                                               ; preds = %4\n  %11 = load i32, ptr %0, align 4, !tbaa !9\n  %12 = tail call i32 @reiserfs_write_lock(i32 noundef %11) #2\n  %13 = tail call i32 @_get_block_create_0(ptr noundef nonnull %0, i32 noundef %1, ptr noundef %2, i32 noundef 0) #2\n  %14 = load i32, ptr %0, align 4, !tbaa !9\n  %15 = tail call i32 @reiserfs_write_unlock(i32 noundef %14) #2\n  br label %16\n\n16:                                               ; preds = %10, %7\n  %17 = phi i32 [ 0, %10 ], [ %9, %7 ]\n  ret i32 %17\n}\n\ndeclare i32 @file_capable(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @reiserfs_write_lock(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @_get_block_create_0(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @reiserfs_write_unlock(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"inode\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_match.c_aa_dfa_leftmatch.ll\"\n\t.globl\taa_dfa_leftmatch                # -- Begin function aa_dfa_leftmatch\n\t.p2align\t4, 0x90\n\t.type\taa_dfa_leftmatch,@function\naa_dfa_leftmatch:                       # @aa_dfa_leftmatch\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rcx, %r14\n\tmovq\t%rdx, %r15\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %rbx\n\tmovl\twb(%rip), %edi\n\tcallq\tDEFINE_MATCH_WB@PLT\n\tmovl\t$wb, %ecx\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\tmovq\t%r15, %rdx\n\tmovq\t%r14, %r8\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tleftmatch_fb@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\taa_dfa_leftmatch, .Lfunc_end0-aa_dfa_leftmatch\n\t.cfi_endproc\n                                        # -- End function\n\t.type\twb,@object                      # @wb\n\t.bss\n\t.globl\twb\n\t.p2align\t2\nwb:\n\t.long\t0                               # 0x0\n\t.size\twb, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@wb = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @aa_dfa_leftmatch(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = load i32, ptr @wb, align 4, !tbaa !5\n  %6 = tail call i32 @DEFINE_MATCH_WB(i32 noundef %5) #2\n  %7 = tail call i32 @leftmatch_fb(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef nonnull @wb, ptr noundef %3) #2\n  ret i32 %7\n}\n\ndeclare i32 @leftmatch_fb(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @DEFINE_MATCH_WB(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./linux/security/apparmor/extr_match.c_aa_dfa_leftmatch.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@wb = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @aa_dfa_leftmatch(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = load i32, ptr @wb, align 4, !tbaa !5\n  %6 = tail call i32 @DEFINE_MATCH_WB(i32 noundef %5) #2\n  %7 = tail call i32 @leftmatch_fb(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef nonnull @wb, ptr noundef %3) #2\n  ret i32 %7\n}\n\ndeclare i32 @DEFINE_MATCH_WB(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @leftmatch_fb(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_nfp_net_repr.c_nfp_reprs_resync_phys_ports.ll\"\n\t.globl\tnfp_reprs_resync_phys_ports     # -- Begin function nfp_reprs_resync_phys_ports\n\t.p2align\t4, 0x90\n\t.type\tnfp_reprs_resync_phys_ports,@function\nnfp_reprs_resync_phys_ports:            # @nfp_reprs_resync_phys_ports\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r13, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdi, %r14\n\tmovl\tNFP_REPR_TYPE_PHYS_PORT(%rip), %esi\n\tcallq\tnfp_reprs_get_locked@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_7\n# %bb.1:\n\tmovq\t%rax, %r15\n\tcmpl\t$0, (%rax)\n\tjle\t.LBB0_7\n# %bb.2:\n\txorl\t%ebx, %ebx\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_6:                                #   in Loop: Header=BB0_3 Depth=1\n\tincq\t%rbx\n\tmovslq\t(%r15), %rax\n\tcmpq\t%rax, %rbx\n\tjge\t.LBB0_7\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%r14, %rdi\n\tmovq\t%r15, %rsi\n\tmovl\t%ebx, %edx\n\tcallq\tnfp_repr_get_locked@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.4:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t%rax, %r13\n\tmovq\t%rax, %rdi\n\tcallq\tnetdev_priv@PLT\n\tmovq\t%rax, %r12\n\tmovq\t(%rax), %rax\n\tmovq\t(%rax), %rax\n\tcmpq\tNFP_PORT_INVALID(%rip), %rax\n\tjne\t.LBB0_6\n# %bb.5:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t%r14, %rdi\n\tmovq\t%r13, %rsi\n\tcallq\tnfp_app_repr_preclean@PLT\n\txorl\t%eax, %eax\n\tcallq\trtnl_lock@PLT\n\tmovq\t8(%r15), %rax\n\tmovl\t(%rax,%rbx,4), %edi\n\txorl\t%esi, %esi\n\tcallq\trcu_assign_pointer@PLT\n\txorl\t%eax, %eax\n\tcallq\trtnl_unlock@PLT\n\txorl\t%eax, %eax\n\tcallq\tsynchronize_rcu@PLT\n\tmovq\t%r12, %rdi\n\tcallq\tnfp_repr_clean@PLT\n\tjmp\t.LBB0_6\n.LBB0_7:\n\txorl\t%eax, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tnfp_reprs_resync_phys_ports, .Lfunc_end0-nfp_reprs_resync_phys_ports\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNFP_REPR_TYPE_PHYS_PORT,@object # @NFP_REPR_TYPE_PHYS_PORT\n\t.bss\n\t.globl\tNFP_REPR_TYPE_PHYS_PORT\n\t.p2align\t2\nNFP_REPR_TYPE_PHYS_PORT:\n\t.long\t0                               # 0x0\n\t.size\tNFP_REPR_TYPE_PHYS_PORT, 4\n\n\t.type\tNFP_PORT_INVALID,@object        # @NFP_PORT_INVALID\n\t.globl\tNFP_PORT_INVALID\n\t.p2align\t3\nNFP_PORT_INVALID:\n\t.quad\t0                               # 0x0\n\t.size\tNFP_PORT_INVALID, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.nfp_reprs = type { i32, ptr }\n%struct.TYPE_2__ = type { i64 }\n\n@NFP_REPR_TYPE_PHYS_PORT = dso_local local_unnamed_addr global i32 0, align 4\n@NFP_PORT_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @nfp_reprs_resync_phys_ports(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load i32, ptr @NFP_REPR_TYPE_PHYS_PORT, align 4, !tbaa !5\n  %3 = tail call ptr @nfp_reprs_get_locked(ptr noundef %0, i32 noundef %2) #2\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %23, label %5\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr %3, align 8, !tbaa !9\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %23\n\n8:                                                ; preds = %5\n  %9 = getelementptr inbounds %struct.nfp_reprs, ptr %3, i64 0, i32 1\n  br label %10\n\n10:                                               ; preds = %8, %19\n  %11 = phi i64 [ 0, %8 ], [ %20, %19 ]\n  %12 = tail call ptr @nfp_repr_get_locked(ptr noundef %0, ptr noundef nonnull %3, i64 noundef %11) #2\n  %13 = icmp eq ptr %12, null\n  br i1 %13, label %19, label %14\n\n14:                                               ; preds = %10\n  %15 = tail call ptr @netdev_priv(ptr noundef nonnull %12) #2\n  %16 = load ptr, ptr %15, align 8, !tbaa !12\n  %17 = load i64, ptr %16, align 8, !tbaa !15\n  %18 = load i64, ptr @NFP_PORT_INVALID, align 8, !tbaa !17\n  %19 = icmp eq i64 %17, %18\n  br i1 %19, label %20, label %10\n\n20:                                               ; preds = %14\n  %21 = tail call i32 (...) @rtnl_lock() #2\n  %22 = load ptr, ptr %9, align 8, !tbaa !18\n  %23 = getelementptr inbounds %struct.TYPE_2__, ptr %22, i64 %11\n  %24 = load i32, ptr %23, align 8, !tbaa !19\n  %25 = tail call i32 @rcu_assign_pointer(i32 noundef %24, ptr noundef null) #2\n  %26 = tail call i32 (...) @rtnl_unlock() #2\n  %27 = tail call i32 (...) @synchronize_rcu() #2\n  %28 = tail call i32 @nfp_repr_clean(ptr noundef nonnull %15) #2\n  br label %19\n\n23:                                               ; preds = %10, %5, %1\n  ret i32 0\n}\n\ndeclare ptr @nfp_reprs_get_locked(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @nfp_repr_get_locked(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtnl_lock(...) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtnl_unlock(...) local_unnamed_addr #1\n\ndeclare i32 @synchronize_rcu(...) local_unnamed_addr #1\n\ndeclare i32 @nfp_repr_clean(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"nfp_reprs\", !6, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !11, i64 0}\n!13 = !{!\"nfp_repr\", !14, i64 0}\n!14 = !{!\"TYPE_2__\", !16, i64 0}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !7, i64 0}\n!17 = !{!16, !16, i64 0}\n!18 = !{!10, !11, i64 8}\n!19 = !{!20, !6, i64 0}\n!20 = !{!\"TYPE_2__\", !16, i64 0}\n</s><s>", "file:": "./linux/drivers/net/ethernet/netronome/nfp/extr_nfp_net_repr.c_nfp_reprs_resync_phys_ports.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.nfp_reprs = type { i32, ptr }\n\n@NFP_REPR_TYPE_PHYS_PORT = dso_local local_unnamed_addr global i32 0, align 4\n@NFP_PORT_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @nfp_reprs_resync_phys_ports(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load i32, ptr @NFP_REPR_TYPE_PHYS_PORT, align 4, !tbaa !5\n  %3 = tail call ptr @nfp_reprs_get_locked(ptr noundef %0, i32 noundef %2) #2\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %36, label %5\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr %3, align 8, !tbaa !9\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %36\n\n8:                                                ; preds = %5\n  %9 = getelementptr inbounds %struct.nfp_reprs, ptr %3, i64 0, i32 1\n  br label %10\n\n10:                                               ; preds = %8, %31\n  %11 = phi i64 [ 0, %8 ], [ %32, %31 ]\n  %12 = trunc i64 %11 to i32\n  %13 = tail call ptr @nfp_repr_get_locked(ptr noundef %0, ptr noundef nonnull %3, i32 noundef %12) #2\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %31, label %15\n\n15:                                               ; preds = %10\n  %16 = tail call ptr @netdev_priv(ptr noundef nonnull %13) #2\n  %17 = load ptr, ptr %16, align 8, !tbaa !12\n  %18 = load i64, ptr %17, align 8, !tbaa !14\n  %19 = load i64, ptr @NFP_PORT_INVALID, align 8, !tbaa !17\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %31\n\n21:                                               ; preds = %15\n  %22 = tail call i32 @nfp_app_repr_preclean(ptr noundef %0, ptr noundef nonnull %13) #2\n  %23 = tail call i32 (...) @rtnl_lock() #2\n  %24 = load ptr, ptr %9, align 8, !tbaa !18\n  %25 = getelementptr inbounds i32, ptr %24, i64 %11\n  %26 = load i32, ptr %25, align 4, !tbaa !5\n  %27 = tail call i32 @rcu_assign_pointer(i32 noundef %26, ptr noundef null) #2\n  %28 = tail call i32 (...) @rtnl_unlock() #2\n  %29 = tail call i32 (...) @synchronize_rcu() #2\n  %30 = tail call i32 @nfp_repr_clean(ptr noundef nonnull %16) #2\n  br label %31\n\n31:                                               ; preds = %15, %10, %21\n  %32 = add nuw nsw i64 %11, 1\n  %33 = load i32, ptr %3, align 8, !tbaa !9\n  %34 = sext i32 %33 to i64\n  %35 = icmp slt i64 %32, %34\n  br i1 %35, label %10, label %36, !llvm.loop !19\n\n36:                                               ; preds = %31, %5, %1\n  ret i32 0\n}\n\ndeclare ptr @nfp_reprs_get_locked(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @nfp_repr_get_locked(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @nfp_app_repr_preclean(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtnl_lock(...) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtnl_unlock(...) local_unnamed_addr #1\n\ndeclare i32 @synchronize_rcu(...) local_unnamed_addr #1\n\ndeclare i32 @nfp_repr_clean(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"nfp_reprs\", !6, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !11, i64 0}\n!13 = !{!\"nfp_repr\", !11, i64 0}\n!14 = !{!15, !16, i64 0}\n!15 = !{!\"TYPE_2__\", !16, i64 0}\n!16 = !{!\"long\", !7, i64 0}\n!17 = !{!16, !16, i64 0}\n!18 = !{!10, !11, i64 8}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_bcode.c_unknown.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function unknown\n\t.type\tunknown,@function\nunknown:                                # @unknown\n\t.cfi_startproc\n# %bb.0:\n\tmovq\tbmachine+8(%rip), %rax\n\tmovq\tbmachine(%rip), %rcx\n\tmovl\t(%rax,%rcx,4), %edx\n\tmovl\t$.L.str, %edi\n\tmovl\t%edx, %esi\n\tjmp\twarnx@PLT                       # TAILCALL\n.Lfunc_end0:\n\t.size\tunknown, .Lfunc_end0-unknown\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tbmachine,@object                # @bmachine\n\t.bss\n\t.globl\tbmachine\n\t.p2align\t3\nbmachine:\n\t.zero\t16\n\t.size\tbmachine, 16\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%c (0%o) is unimplemented\"\n\t.size\t.L.str, 26\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i64, ptr }\n\n@bmachine = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [26 x i8] c\"%c (0%o) is unimplemented\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @unknown], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @unknown() #0 {\n  %1 = load ptr, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @bmachine, i64 0, i32 1), align 8, !tbaa !5\n  %2 = load i64, ptr @bmachine, align 8, !tbaa !11\n  %3 = getelementptr inbounds i32, ptr %1, i64 %2\n  %4 = load i32, ptr %3, align 4, !tbaa !12\n  %5 = tail call i32 @warnx(ptr noundef nonnull @.str, i32 noundef %4, i32 noundef %4) #2\n  ret void\n}\n\ndeclare i32 @warnx(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_2__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./freebsd/usr.bin/dc/extr_bcode.c_unknown.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n%struct.TYPE_3__ = type { i32 }\n\n@bmachine = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [26 x i8] c\"%c (0%o) is unimplemented\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @unknown], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @unknown() #0 {\n  %1 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @bmachine, i64 0, i32 1), align 8, !tbaa !5\n  %2 = load i64, ptr @bmachine, align 8, !tbaa !11\n  %3 = getelementptr inbounds %struct.TYPE_3__, ptr %1, i64 %2\n  %4 = load i32, ptr %3, align 4, !tbaa !12\n  %5 = tail call i32 @warnx(ptr noundef nonnull @.str, i32 noundef %4, i32 noundef %4) #2\n  ret void\n}\n\ndeclare i32 @warnx(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_3__\", !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lparser.c_exprstat.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function exprstat\n\t.type\texprstat,@function\nexprstat:                               # @exprstat\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tmovq\t8(%rdi), %r14\n\tleaq\t8(%rsp), %rsi\n\tcallq\tsuffixedexp@PLT\n\tmovzbl\t(%rbx), %eax\n\tcmpl\t$61, %eax\n\tje\t.LBB0_2\n# %bb.1:\n\tcmpl\t$44, %eax\n\tjne\t.LBB0_3\n.LBB0_2:\n\tmovq\t$0, 16(%rsp)\n\tleaq\t8(%rsp), %rsi\n\tmovq\t%rbx, %rdi\n\tmovl\t$1, %edx\n\tcallq\tassignment@PLT\n\tjmp\t.LBB0_4\n.LBB0_3:\n\tmovq\t8(%rsp), %rax\n\txorl\t%esi, %esi\n\tcmpq\tVCALL(%rip), %rax\n\tsete\t%sil\n\tmovl\t$.L.str, %edx\n\tmovq\t%rbx, %rdi\n\tcallq\tcheck_condition@PLT\n\tleaq\t8(%rsp), %rsi\n\tmovq\t%r14, %rdi\n\tcallq\tgetcode@PLT\n\tmovl\t%eax, %edi\n\tmovl\t$1, %esi\n\tcallq\tSETARG_C@PLT\n.LBB0_4:\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\texprstat, .Lfunc_end0-exprstat\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tVCALL,@object                   # @VCALL\n\t.bss\n\t.globl\tVCALL\n\t.p2align\t3\nVCALL:\n\t.quad\t0                               # 0x0\n\t.size\tVCALL, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"syntax error\"\n\t.size\t.L.str, 13\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i8, ptr }\n\n@VCALL = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [13 x i8] c\"syntax error\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @exprstat], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @exprstat(ptr noundef %0) #0 {\n  %2 = alloca %struct.TYPE_4__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #3\n  %3 = getelementptr inbounds %struct.TYPE_4__, ptr %2, i64 0, i32 1\n  %4 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = call i32 @suffixedexp(ptr noundef %0, ptr noundef nonnull %3) #3\n  %7 = load i8, ptr %0, align 8, !tbaa !11\n  switch i8 %7, label %10 [\n    i8 44, label %8\n    i8 61, label %8\n  ]\n\n8:                                                ; preds = %1, %1\n  store i64 0, ptr %2, align 8, !tbaa !12\n  %9 = call i32 @assignment(ptr noundef nonnull %0, ptr noundef nonnull %2, i32 noundef 1) #3\n  br label %14\n\n10:                                               ; preds = %1\n  %11 = load i64, ptr @VCALL, align 8, !tbaa !13\n  %12 = load i64, ptr %3, align 8, !tbaa !13\n  %13 = icmp eq i64 %12, %11\n  %14 = zext i1 %13 to i32\n  call void @llvm.assume(i1 %13)\n  %15 = call i32 @check_condition(ptr noundef nonnull %0, i32 noundef %14, ptr noundef nonnull @.str) #3\n  %16 = call i32 @getcode(ptr noundef %5, ptr noundef nonnull %2) #3\n  %17 = call i32 @SETARG_C(i32 noundef %16, i32 noundef 1) #3\n  br label %18\n\n18:                                               ; preds = %10, %8\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @suffixedexp(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @assignment(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @check_condition(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @SETARG_C(i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @getcode(ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.assume(i1 noundef) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!10, !10, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !7, i64 0}\n</s><s>", "file:": "./zfs/module/lua/extr_lparser.c_exprstat.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.LHS_assign = type { %struct.TYPE_11__, ptr }\n%struct.TYPE_11__ = type { i64 }\n%struct.TYPE_10__ = type { %struct.TYPE_9__, ptr }\n%struct.TYPE_9__ = type { i8 }\n\n@VCALL = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [13 x i8] c\"syntax error\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @exprstat], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @exprstat(ptr noundef %0) #0 {\n  %2 = alloca %struct.LHS_assign, align 8\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #3\n  %5 = call i32 @suffixedexp(ptr noundef %0, ptr noundef nonnull %2) #3\n  %6 = load i8, ptr %0, align 8, !tbaa !11\n  switch i8 %6, label %10 [\n    i8 61, label %7\n    i8 44, label %7\n  ]\n\n7:                                                ; preds = %1, %1\n  %8 = getelementptr inbounds %struct.LHS_assign, ptr %2, i64 0, i32 1\n  store ptr null, ptr %8, align 8, !tbaa !12\n  %9 = call i32 @assignment(ptr noundef nonnull %0, ptr noundef nonnull %2, i32 noundef 1) #3\n  br label %18\n\n10:                                               ; preds = %1\n  %11 = load i64, ptr %2, align 8, !tbaa !16\n  %12 = load i64, ptr @VCALL, align 8, !tbaa !17\n  %13 = icmp eq i64 %11, %12\n  %14 = zext i1 %13 to i32\n  %15 = call i32 @check_condition(ptr noundef nonnull %0, i32 noundef %14, ptr noundef nonnull @.str) #3\n  %16 = call i32 @getcode(ptr noundef %4, ptr noundef nonnull %2) #3\n  %17 = call i32 @SETARG_C(i32 noundef %16, i32 noundef 1) #3\n  br label %18\n\n18:                                               ; preds = %10, %7\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @suffixedexp(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @assignment(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @check_condition(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @SETARG_C(i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @getcode(ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"TYPE_9__\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !8, i64 0}\n!12 = !{!13, !10, i64 8}\n!13 = !{!\"LHS_assign\", !14, i64 0, !10, i64 8}\n!14 = !{!\"TYPE_11__\", !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!13, !15, i64 0}\n!17 = !{!15, !15, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_spectrum_dcb.c_mlxsw_sp_port_pg_prio_map.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mlxsw_sp_port_pg_prio_map\n\t.type\tmlxsw_sp_port_pg_prio_map,@function\nmlxsw_sp_port_pg_prio_map:              # @mlxsw_sp_port_pg_prio_map\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r12\n\tpushq\t%rbx\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %r14\n\tmovl\tMLXSW_REG_PPTB_LEN(%rip), %eax\n\tmovq\t%rsp, %r12\n\taddq\t$15, %rax\n\tandq\t$-16, %rax\n\tsubq\t%rax, %r12\n\tmovq\t%r12, %rsp\n\tmovl\t8(%rdi), %esi\n\tmovq\t%r12, %rdi\n\tcallq\tmlxsw_reg_pptb_pack@PLT\n\tcmpl\t$0, IEEE_8021QAZ_MAX_TCS(%rip)\n\tjle\t.LBB0_3\n# %bb.1:                                # %.preheader\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovl\t(%r15,%rbx,4), %edx\n\tmovq\t%r12, %rdi\n\tmovl\t%ebx, %esi\n\tcallq\tmlxsw_reg_pptb_prio_to_buff_pack@PLT\n\tincq\t%rbx\n\tmovslq\tIEEE_8021QAZ_MAX_TCS(%rip), %rax\n\tcmpq\t%rax, %rbx\n\tjl\t.LBB0_2\n.LBB0_3:\n\tmovq\t(%r14), %rax\n\tmovl\t(%rax), %ebx\n\tmovl\tpptb(%rip), %edi\n\tcallq\tMLXSW_REG@PLT\n\tmovl\t%ebx, %edi\n\tmovl\t%eax, %esi\n\tmovq\t%r12, %rdx\n\tcallq\tmlxsw_reg_write@PLT\n\tleaq\t-32(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.Lfunc_end0:\n\t.size\tmlxsw_sp_port_pg_prio_map, .Lfunc_end0-mlxsw_sp_port_pg_prio_map\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMLXSW_REG_PPTB_LEN,@object      # @MLXSW_REG_PPTB_LEN\n\t.bss\n\t.globl\tMLXSW_REG_PPTB_LEN\n\t.p2align\t2\nMLXSW_REG_PPTB_LEN:\n\t.long\t0                               # 0x0\n\t.size\tMLXSW_REG_PPTB_LEN, 4\n\n\t.type\tIEEE_8021QAZ_MAX_TCS,@object    # @IEEE_8021QAZ_MAX_TCS\n\t.globl\tIEEE_8021QAZ_MAX_TCS\n\t.p2align\t2\nIEEE_8021QAZ_MAX_TCS:\n\t.long\t0                               # 0x0\n\t.size\tIEEE_8021QAZ_MAX_TCS, 4\n\n\t.type\tpptb,@object                    # @pptb\n\t.globl\tpptb\n\t.p2align\t2\npptb:\n\t.long\t0                               # 0x0\n\t.size\tpptb, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlxsw_sp_port = type { ptr, i32 }\n\n@MLXSW_REG_PPTB_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@IEEE_8021QAZ_MAX_TCS = dso_local local_unnamed_addr global i32 0, align 4\n@pptb = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlxsw_sp_port_pg_prio_map], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mlxsw_sp_port_pg_prio_map(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i32, ptr @MLXSW_REG_PPTB_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = getelementptr inbounds %struct.mlxsw_sp_port, ptr %0, i64 0, i32 1\n  %7 = load i32, ptr %6, align 8, !tbaa !9\n  %8 = call i32 @mlxsw_reg_pptb_pack(ptr noundef nonnull %5, i32 noundef %7) #2\n  %9 = load i32, ptr @IEEE_8021QAZ_MAX_TCS, align 4, !tbaa !5\n  %10 = icmp sgt i32 %9, 0\n  br i1 %10, label %11, label %15\n\n11:                                               ; preds = %2, %11\n  %12 = phi i64 [ %13, %11 ], [ 0, %2 ]\n  %13 = add nuw nsw i64 %12, 1\n  %14 = load i32, ptr %1, i64 %13, align 4, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #2\n  %15 = call i32 @mlxsw_reg_pptb_prio_to_buff_pack(ptr noundef nonnull %5, i64 noundef %13, i32 noundef %14) #2\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #2\n  br i1 %10, label %11, label %16\n\n16:                                               ; preds = %11\n  %17 = load ptr, ptr %0, align 8, !tbaa !12\n  %18 = load i32, ptr %17, align 4, !tbaa !13\n  %19 = load i32, ptr @pptb, align 4, !tbaa !5\n  %20 = call i32 @MLXSW_REG(i32 noundef %19) #2\n  %21 = call i32 @mlxsw_reg_write(i32 noundef %18, i32 noundef %20, ptr noundef nonnull %5) #2\n  ret void\n}\n\ndeclare i32 @mlxsw_reg_pptb_pack(ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3\n\ndeclare i32 @mlxsw_reg_pptb_prio_to_buff_pack(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3\n\ndeclare i32 @mlxsw_reg_write(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @MLXSW_REG(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"mlxsw_sp_port\", !11, i64 0, !6, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 0}\n!13 = !{!14, !6, i64 0}\n!14 = !{!\"TYPE_2__\", !6, i64 0}\n</s><s>", "file:": "./linux/drivers/net/ethernet/mellanox/mlxsw/extr_spectrum_dcb.c_mlxsw_sp_port_pg_prio_map.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlxsw_sp_port = type { ptr, i32 }\n\n@MLXSW_REG_PPTB_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@IEEE_8021QAZ_MAX_TCS = dso_local local_unnamed_addr global i32 0, align 4\n@pptb = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlxsw_sp_port_pg_prio_map], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mlxsw_sp_port_pg_prio_map(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i32, ptr @MLXSW_REG_PPTB_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = getelementptr inbounds %struct.mlxsw_sp_port, ptr %0, i64 0, i32 1\n  %7 = load i32, ptr %6, align 8, !tbaa !9\n  %8 = call i32 @mlxsw_reg_pptb_pack(ptr noundef nonnull %5, i32 noundef %7) #2\n  %9 = load i32, ptr @IEEE_8021QAZ_MAX_TCS, align 4, !tbaa !5\n  %10 = icmp sgt i32 %9, 0\n  br i1 %10, label %11, label %21\n\n11:                                               ; preds = %2, %11\n  %12 = phi i64 [ %17, %11 ], [ 0, %2 ]\n  %13 = getelementptr inbounds i32, ptr %1, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !5\n  %15 = trunc i64 %12 to i32\n  %16 = call i32 @mlxsw_reg_pptb_prio_to_buff_pack(ptr noundef nonnull %5, i32 noundef %15, i32 noundef %14) #2\n  %17 = add nuw nsw i64 %12, 1\n  %18 = load i32, ptr @IEEE_8021QAZ_MAX_TCS, align 4, !tbaa !5\n  %19 = sext i32 %18 to i64\n  %20 = icmp slt i64 %17, %19\n  br i1 %20, label %11, label %21, !llvm.loop !12\n\n21:                                               ; preds = %11, %2\n  %22 = load ptr, ptr %0, align 8, !tbaa !14\n  %23 = load i32, ptr %22, align 4, !tbaa !15\n  %24 = load i32, ptr @pptb, align 4, !tbaa !5\n  %25 = call i32 @MLXSW_REG(i32 noundef %24) #2\n  %26 = call i32 @mlxsw_reg_write(i32 noundef %23, i32 noundef %25, ptr noundef nonnull %5) #2\n  ret i32 %26\n}\n\ndeclare i32 @mlxsw_reg_pptb_pack(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlxsw_reg_pptb_prio_to_buff_pack(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlxsw_reg_write(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @MLXSW_REG(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"mlxsw_sp_port\", !11, i64 0, !6, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = !{!10, !11, i64 0}\n!15 = !{!16, !6, i64 0}\n!16 = !{!\"TYPE_2__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_uipc_mbuf.c_m_gethdr.ll\"\n\t.globl\tm_gethdr                        # -- Begin function m_gethdr\n\t.p2align\t4, 0x90\n\t.type\tm_gethdr,@function\nm_gethdr:                               # @m_gethdr\n\t.cfi_startproc\n# %bb.0:\n\tjmp\t_M_GETHDR@PLT                   # TAILCALL\n.Lfunc_end0:\n\t.size\tm_gethdr, .Lfunc_end0-m_gethdr\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @m_gethdr(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @_M_GETHDR(i32 noundef %0) #2\n  ret ptr %2\n}\n\ndeclare ptr @_M_GETHDR(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./darwin-xnu/bsd/kern/extr_uipc_mbuf.c_m_gethdr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @m_gethdr(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @_M_GETHDR(i32 noundef %0, i32 noundef %1) #2\n  ret ptr %3\n}\n\ndeclare ptr @_M_GETHDR(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_rtnetlink.c_rtnl_lock_killable.ll\"\n\t.globl\trtnl_lock_killable              # -- Begin function rtnl_lock_killable\n\t.p2align\t4, 0x90\n\t.type\trtnl_lock_killable,@function\nrtnl_lock_killable:                     # @rtnl_lock_killable\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t$rtnl_mutex, %edi\n\tjmp\tmutex_lock_killable@PLT         # TAILCALL\n.Lfunc_end0:\n\t.size\trtnl_lock_killable, .Lfunc_end0-rtnl_lock_killable\n\t.cfi_endproc\n                                        # -- End function\n\t.type\trtnl_mutex,@object              # @rtnl_mutex\n\t.bss\n\t.globl\trtnl_mutex\n\t.p2align\t2\nrtnl_mutex:\n\t.long\t0                               # 0x0\n\t.size\trtnl_mutex, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@rtnl_mutex = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @rtnl_lock_killable() local_unnamed_addr #0 {\n  %1 = tail call i32 @mutex_lock_killable(ptr noundef nonnull @rtnl_mutex) #2\n  ret void\n}\n\ndeclare i32 @mutex_lock_killable(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./linux/net/core/extr_rtnetlink.c_rtnl_lock_killable.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@rtnl_mutex = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @rtnl_lock_killable() local_unnamed_addr #0 {\n  %1 = tail call i32 @mutex_lock_killable(ptr noundef nonnull @rtnl_mutex) #2\n  ret i32 %1\n}\n\ndeclare i32 @mutex_lock_killable(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_hlsl.yy.c_hlsl__create_buffer.ll\"\n\t.globl\tyy_create_buffer                # -- Begin function yy_create_buffer\n\t.p2align\t4, 0x90\n\t.type\tyy_create_buffer,@function\nyy_create_buffer:                       # @yy_create_buffer\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %r14\n\tmovl\t$4, %edi\n\tcallq\tyyalloc@PLT\n\tmovq\t%rax, %rbx\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovl\t$.L.str, %edi\n\tcallq\tYY_FATAL_ERROR@PLT\n.LBB0_2:\n\tmovl\t%ebp, (%rbx)\n\taddl\t$2, %ebp\n\tmovl\t%ebp, %edi\n\tcallq\tyyalloc@PLT\n\tmovq\t%rax, 8(%rbx)\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_4\n# %bb.3:\n\tmovl\t$.L.str, %edi\n\tcallq\tYY_FATAL_ERROR@PLT\n.LBB0_4:\n\tmovl\t$1, 16(%rbx)\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\tyy_init_buffer@PLT\n\tmovq\t%rbx, %rax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tyy_create_buffer, .Lfunc_end0-yy_create_buffer\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"out of dynamic memory in yy_create_buffer()\"\n\t.size\t.L.str, 44\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.yy_buffer_state = type { i32, ptr, i32 }\n\n@.str = private unnamed_addr constant [44 x i8] c\"out of dynamic memory in yy_create_buffer()\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @yy_create_buffer(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @yyalloc(i32 noundef 4) #2\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %5, label %7\n\n5:                                                ; preds = %2\n  %6 = tail call i32 @YY_FATAL_ERROR(ptr noundef nonnull @.str) #2\n  br label %7\n\n7:                                                ; preds = %5, %2\n  store i32 %1, ptr %3, align 8, !tbaa !5\n  %8 = add nsw i32 %1, 2\n  %9 = tail call ptr @yyalloc(i32 noundef %8) #2\n  %10 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 1\n  store ptr %9, ptr %10, align 8, !tbaa !11\n  %11 = icmp eq ptr %9, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @YY_FATAL_ERROR(ptr noundef nonnull @.str) #2\n  br label %14\n\n14:                                               ; preds = %12, %7\n  %15 = getelementptr inbounds %struct.yy_buffer_state, ptr %3, i64 0, i32 2\n  store i32 1, ptr %15, align 8, !tbaa !12\n  %16 = tail call i32 @yy_init_buffer(ptr noundef nonnull %3, ptr noundef %0) #2\n  ret ptr %3\n}\n\ndeclare ptr @yyalloc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @YY_FATAL_ERROR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @yy_init_buffer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"yy_buffer_state\", !7, i64 0, !10, i64 8, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!6, !7, i64 16}\n</s><s>", "file:": "./reactos/dll/directx/wine/d3dcompiler_43/extr_hlsl.yy.c_hlsl__create_buffer.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, ptr, i32 }\n\n@.str = private unnamed_addr constant [44 x i8] c\"out of dynamic memory in yy_create_buffer()\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @yy_create_buffer(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call i64 @yyalloc(i32 noundef 4) #2\n  %4 = inttoptr i64 %3 to ptr\n  %5 = icmp eq i64 %3, 0\n  br i1 %5, label %6, label %8\n\n6:                                                ; preds = %2\n  %7 = tail call i32 @YY_FATAL_ERROR(ptr noundef nonnull @.str) #2\n  br label %8\n\n8:                                                ; preds = %6, %2\n  store i32 %1, ptr %4, align 8, !tbaa !5\n  %9 = add nsw i32 %1, 2\n  %10 = tail call i64 @yyalloc(i32 noundef %9) #2\n  %11 = inttoptr i64 %10 to ptr\n  %12 = getelementptr inbounds %struct.TYPE_4__, ptr %4, i64 0, i32 1\n  store ptr %11, ptr %12, align 8, !tbaa !11\n  %13 = icmp eq i64 %10, 0\n  br i1 %13, label %14, label %16\n\n14:                                               ; preds = %8\n  %15 = tail call i32 @YY_FATAL_ERROR(ptr noundef nonnull @.str) #2\n  br label %16\n\n16:                                               ; preds = %14, %8\n  %17 = getelementptr inbounds %struct.TYPE_4__, ptr %4, i64 0, i32 2\n  store i32 1, ptr %17, align 8, !tbaa !12\n  %18 = tail call i32 @yy_init_buffer(ptr noundef nonnull %4, ptr noundef %0) #2\n  ret ptr %4\n}\n\ndeclare i64 @yyalloc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @YY_FATAL_ERROR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @yy_init_buffer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!6, !7, i64 16}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ima_fs.c_ima_template_show.ll\"\n\t.globl\tima_template_show               # -- Begin function ima_template_show\n\t.p2align\t4, 0x90\n\t.type\tima_template_show,@function\nima_template_show:                      # @ima_template_show\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\tcmpl\t$128, %edx\n\tje\t.LBB0_3\n# %bb.1:\n\tcmpl\t$129, %edx\n\tjne\t.LBB0_4\n# %bb.2:\n\tmovq\t(%rbx), %rsi\n\tmovq\t%r14, %rdi\n\tcallq\tima_print_digest@PLT\n\tmovq\t8(%rbx), %rdx\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tseq_printf@PLT                  # TAILCALL\n.LBB0_3:\n\t.cfi_def_cfa_offset 32\n\tmovq\t(%rbx), %rsi\n\tmovl\tIMA_DIGEST_SIZE(%rip), %edx\n\tmovq\t%r14, %rdi\n\tcallq\tima_putc@PLT\n\tmovq\t8(%rbx), %rdi\n\tcallq\tstrlen@PLT\n\tmovl\t%eax, 4(%rsp)\n\tleaq\t4(%rsp), %rsi\n\tmovq\t%r14, %rdi\n\tmovl\t$4, %edx\n\tcallq\tima_putc@PLT\n\tmovq\t8(%rbx), %rsi\n\tmovl\t4(%rsp), %edx\n\tmovq\t%r14, %rdi\n\tcallq\tima_putc@PLT\n.LBB0_4:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tima_template_show, .Lfunc_end0-ima_template_show\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\" %s\\n\"\n\t.size\t.L.str, 5\n\n\t.type\tIMA_DIGEST_SIZE,@object         # @IMA_DIGEST_SIZE\n\t.bss\n\t.globl\tIMA_DIGEST_SIZE\n\t.p2align\t2\nIMA_DIGEST_SIZE:\n\t.long\t0                               # 0x0\n\t.size\tIMA_DIGEST_SIZE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ima_template_entry = type { ptr, ptr }\n\n@.str = private unnamed_addr constant [5 x i8] c\" %s\\0A\\00\", align 1\n@IMA_DIGEST_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ima_template_show(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  switch i32 %2, label %13 [\n    i32 129, label %5\n    i32 128, label %10\n  ]\n\n5:                                                ; preds = %3\n  %6 = load ptr, ptr %1, align 8, !tbaa !5\n  %7 = tail call i32 @ima_print_digest(ptr noundef %0, ptr noundef %6) #3\n  %8 = getelementptr inbounds %struct.ima_template_entry, ptr %1, i64 0, i32 1\n  %9 = load ptr, ptr %8, align 8, !tbaa !10\n  tail call i32 @seq_printf(ptr noundef %0, ptr noundef nonnull @.str, ptr noundef %9) #3\n  br label %13\n\n10:                                               ; preds = %3\n  %11 = load ptr, ptr %1, align 8, !tbaa !5\n  %12 = load i32, ptr @IMA_DIGEST_SIZE, align 4, !tbaa !11\n  tail call i32 @ima_putc(ptr noundef %0, ptr noundef %11, i32 noundef %12) #3\n  br label %13\n\n13:                                               ; preds = %3, %10, %5\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  ret i32 undef\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @ima_print_digest(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @seq_printf(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @ima_putc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ima_template_entry\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 8}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/security/integrity/ima/extr_ima_fs.c_ima_template_show.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ima_template_data = type { ptr, ptr }\n\n@.str = private unnamed_addr constant [5 x i8] c\" %s\\0A\\00\", align 1\n@IMA_DIGEST_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @ima_template_show(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  switch i32 %2, label %22 [\n    i32 129, label %5\n    i32 128, label %11\n  ]\n\n5:                                                ; preds = %3\n  %6 = load ptr, ptr %1, align 8, !tbaa !5\n  %7 = tail call i32 @ima_print_digest(ptr noundef %0, ptr noundef %6) #3\n  %8 = getelementptr inbounds %struct.ima_template_data, ptr %1, i64 0, i32 1\n  %9 = load ptr, ptr %8, align 8, !tbaa !10\n  %10 = tail call i32 @seq_printf(ptr noundef %0, ptr noundef nonnull @.str, ptr noundef %9) #3\n  br label %22\n\n11:                                               ; preds = %3\n  %12 = load ptr, ptr %1, align 8, !tbaa !5\n  %13 = load i32, ptr @IMA_DIGEST_SIZE, align 4, !tbaa !11\n  %14 = tail call i32 @ima_putc(ptr noundef %0, ptr noundef %12, i32 noundef %13) #3\n  %15 = getelementptr inbounds %struct.ima_template_data, ptr %1, i64 0, i32 1\n  %16 = load ptr, ptr %15, align 8, !tbaa !10\n  %17 = tail call i32 @strlen(ptr noundef %16) #3\n  store i32 %17, ptr %4, align 4, !tbaa !11\n  %18 = call i32 @ima_putc(ptr noundef %0, ptr noundef nonnull %4, i32 noundef 4) #3\n  %19 = load ptr, ptr %15, align 8, !tbaa !10\n  %20 = load i32, ptr %4, align 4, !tbaa !11\n  %21 = call i32 @ima_putc(ptr noundef %0, ptr noundef %19, i32 noundef %20) #3\n  br label %22\n\n22:                                               ; preds = %11, %3, %5\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @ima_print_digest(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @seq_printf(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @ima_putc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @strlen(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ima_template_data\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 8}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_portdrv_core.c_pcie_port_service_register.ll\"\n\t.globl\tpcie_port_service_register      # -- Begin function pcie_port_service_register\n\t.p2align\t4, 0x90\n\t.type\tpcie_port_service_register,@function\npcie_port_service_register:             # @pcie_port_service_register\n\t.cfi_startproc\n# %bb.0:\n\tcmpq\t$0, pcie_ports_disabled(%rip)\n\tje\t.LBB0_2\n# %bb.1:\n\txorl\t%eax, %eax\n\tsubl\tENODEV(%rip), %eax\n\tretq\n.LBB0_2:\n\tmovq\t32(%rdi), %rax\n\tmovq\t%rax, (%rdi)\n\tmovq\t$pcie_port_bus_type, 24(%rdi)\n\tmovl\tpcie_port_probe_service(%rip), %eax\n\tmovl\t%eax, 16(%rdi)\n\tmovl\tpcie_port_remove_service(%rip), %eax\n\tmovl\t%eax, 12(%rdi)\n\tmovl\tpcie_port_shutdown_service(%rip), %eax\n\tmovl\t%eax, 8(%rdi)\n\tjmp\tdriver_register@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\tpcie_port_service_register, .Lfunc_end0-pcie_port_service_register\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tpcie_ports_disabled,@object     # @pcie_ports_disabled\n\t.bss\n\t.globl\tpcie_ports_disabled\n\t.p2align\t3\npcie_ports_disabled:\n\t.quad\t0                               # 0x0\n\t.size\tpcie_ports_disabled, 8\n\n\t.type\tENODEV,@object                  # @ENODEV\n\t.globl\tENODEV\n\t.p2align\t2\nENODEV:\n\t.long\t0                               # 0x0\n\t.size\tENODEV, 4\n\n\t.type\tpcie_port_bus_type,@object      # @pcie_port_bus_type\n\t.globl\tpcie_port_bus_type\n\t.p2align\t2\npcie_port_bus_type:\n\t.long\t0                               # 0x0\n\t.size\tpcie_port_bus_type, 4\n\n\t.type\tpcie_port_probe_service,@object # @pcie_port_probe_service\n\t.globl\tpcie_port_probe_service\n\t.p2align\t2\npcie_port_probe_service:\n\t.long\t0                               # 0x0\n\t.size\tpcie_port_probe_service, 4\n\n\t.type\tpcie_port_remove_service,@object # @pcie_port_remove_service\n\t.globl\tpcie_port_remove_service\n\t.p2align\t2\npcie_port_remove_service:\n\t.long\t0                               # 0x0\n\t.size\tpcie_port_remove_service, 4\n\n\t.type\tpcie_port_shutdown_service,@object # @pcie_port_shutdown_service\n\t.globl\tpcie_port_shutdown_service\n\t.p2align\t2\npcie_port_shutdown_service:\n\t.long\t0                               # 0x0\n\t.size\tpcie_port_shutdown_service, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.pcie_port_service_driver = type { ptr, i32, ptr, i32, ptr }\n\n@pcie_ports_disabled = dso_local local_unnamed_addr global i64 0, align 8\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@pcie_port_bus_type = dso_local global i32 0, align 4\n@pcie_port_probe_service = dso_local local_unnamed_addr global i32 0, align 4\n@pcie_port_remove_service = dso_local local_unnamed_addr global i32 0, align 4\n@pcie_port_shutdown_service = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @pcie_port_service_register(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load i64, ptr @pcie_ports_disabled, align 8, !tbaa !5\n  %3 = icmp eq i64 %2, 0\n  br i1 %3, label %6, label %4\n\n4:                                                ; preds = %1\n  %5 = load i32, ptr @ENODEV, align 4, !tbaa !9\n  %6 = sub nsw i32 0, %5\n  br label %14\n\n6:                                                ; preds = %1\n  %7 = getelementptr inbounds %struct.pcie_port_service_driver, ptr %0, i64 0, i32 4\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  store ptr %8, ptr %0, align 8, !tbaa !13\n  %9 = getelementptr inbounds %struct.pcie_port_service_driver, ptr %0, i64 0, i32 3\n  store ptr @pcie_port_bus_type, ptr %9, align 8, !tbaa !14\n  %10 = load i32, ptr @pcie_port_probe_service, align 4, !tbaa !9\n  %11 = getelementptr inbounds %struct.pcie_port_service_driver, ptr %0, i64 0, i32 2\n  store i32 %10, ptr %11, align 8, !tbaa !15\n  %12 = load i32, ptr @pcie_port_remove_service, align 4, !tbaa !9\n  %13 = getelementptr inbounds %struct.pcie_port_service_driver, ptr %0, i64 0, i32 1\n  store i32 %12, ptr %13, align 8, !tbaa !16\n  %14 = tail call i32 @driver_register(ptr noundef nonnull %0) #2\n  ret i32 %14\n}\n\ndeclare i32 @driver_register(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !13, i64 32}\n!12 = !{!\"pcie_port_service_driver\", !13, i64 0, !10, i64 8, !13, i64 16, !10, i64 24, !13, i64 32}\n!13 = !{!\"any pointer\", !7, i64 0}\n!14 = !{!12, !13, i64 24}\n!15 = !{!12, !10, i64 16}\n!16 = !{!12, !10, i64 8}\n</s><s>", "file:": "./fastsocket/kernel/drivers/pci/pcie/extr_portdrv_core.c_pcie_port_service_register.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.pcie_port_service_driver = type { %struct.TYPE_2__, i64 }\n%struct.TYPE_2__ = type { ptr, i32, i32, i32, ptr }\n\n@pcie_ports_disabled = dso_local local_unnamed_addr global i64 0, align 8\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@pcie_port_bus_type = dso_local global i32 0, align 4\n@pcie_port_probe_service = dso_local local_unnamed_addr global i32 0, align 4\n@pcie_port_remove_service = dso_local local_unnamed_addr global i32 0, align 4\n@pcie_port_shutdown_service = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @pcie_port_service_register(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load i64, ptr @pcie_ports_disabled, align 8, !tbaa !5\n  %3 = icmp eq i64 %2, 0\n  br i1 %3, label %7, label %4\n\n4:                                                ; preds = %1\n  %5 = load i32, ptr @ENODEV, align 4, !tbaa !9\n  %6 = sub nsw i32 0, %5\n  br label %19\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.pcie_port_service_driver, ptr %0, i64 0, i32 1\n  %9 = load i64, ptr %8, align 8, !tbaa !11\n  %10 = inttoptr i64 %9 to ptr\n  store ptr %10, ptr %0, align 8, !tbaa !15\n  %11 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 4\n  store ptr @pcie_port_bus_type, ptr %11, align 8, !tbaa !16\n  %12 = load i32, ptr @pcie_port_probe_service, align 4, !tbaa !9\n  %13 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 3\n  store i32 %12, ptr %13, align 8, !tbaa !17\n  %14 = load i32, ptr @pcie_port_remove_service, align 4, !tbaa !9\n  %15 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 2\n  store i32 %14, ptr %15, align 4, !tbaa !18\n  %16 = load i32, ptr @pcie_port_shutdown_service, align 4, !tbaa !9\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %0, i64 0, i32 1\n  store i32 %16, ptr %17, align 8, !tbaa !19\n  %18 = tail call i32 @driver_register(ptr noundef nonnull %0) #2\n  br label %19\n\n19:                                               ; preds = %7, %4\n  %20 = phi i32 [ %6, %4 ], [ %18, %7 ]\n  ret i32 %20\n}\n\ndeclare i32 @driver_register(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !6, i64 32}\n!12 = !{!\"pcie_port_service_driver\", !13, i64 0, !6, i64 32}\n!13 = !{!\"TYPE_2__\", !14, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !14, i64 24}\n!14 = !{!\"any pointer\", !7, i64 0}\n!15 = !{!12, !14, i64 0}\n!16 = !{!12, !14, i64 24}\n!17 = !{!12, !10, i64 16}\n!18 = !{!12, !10, i64 12}\n!19 = !{!12, !10, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sqlite3.c_sqlite3_shutdown.ll\"\n\t.globl\tsqlite3_shutdown                # -- Begin function sqlite3_shutdown\n\t.p2align\t4, 0x90\n\t.type\tsqlite3_shutdown,@function\nsqlite3_shutdown:                       # @sqlite3_shutdown\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tcmpq\t$0, sqlite3GlobalConfig+24(%rip)\n\tje\t.LBB0_2\n# %bb.1:\n\txorl\t%eax, %eax\n\tcallq\tsqlite3_os_end@PLT\n\txorl\t%eax, %eax\n\tcallq\tsqlite3_reset_auto_extension@PLT\n\tmovq\t$0, sqlite3GlobalConfig+24(%rip)\n.LBB0_2:\n\tcmpq\t$0, sqlite3GlobalConfig+16(%rip)\n\tje\t.LBB0_4\n# %bb.3:\n\txorl\t%eax, %eax\n\tcallq\tsqlite3PcacheShutdown@PLT\n\tmovq\t$0, sqlite3GlobalConfig+16(%rip)\n.LBB0_4:\n\tcmpq\t$0, sqlite3GlobalConfig+8(%rip)\n\tje\t.LBB0_6\n# %bb.5:\n\txorl\t%eax, %eax\n\tcallq\tsqlite3MallocEnd@PLT\n\tmovq\t$0, sqlite3GlobalConfig+8(%rip)\n\tmovq\t$0, sqlite3_data_directory(%rip)\n\tmovq\t$0, sqlite3_temp_directory(%rip)\n.LBB0_6:\n\tcmpq\t$0, sqlite3GlobalConfig(%rip)\n\tje\t.LBB0_8\n# %bb.7:\n\txorl\t%eax, %eax\n\tcallq\tsqlite3MutexEnd@PLT\n\tmovq\t$0, sqlite3GlobalConfig(%rip)\n.LBB0_8:\n\tmovl\tSQLITE_OK(%rip), %eax\n\tpopq\t%rcx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsqlite3_shutdown, .Lfunc_end0-sqlite3_shutdown\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tsqlite3GlobalConfig,@object     # @sqlite3GlobalConfig\n\t.bss\n\t.globl\tsqlite3GlobalConfig\n\t.p2align\t3\nsqlite3GlobalConfig:\n\t.zero\t32\n\t.size\tsqlite3GlobalConfig, 32\n\n\t.type\tsqlite3_data_directory,@object  # @sqlite3_data_directory\n\t.globl\tsqlite3_data_directory\n\t.p2align\t3\nsqlite3_data_directory:\n\t.quad\t0                               # 0x0\n\t.size\tsqlite3_data_directory, 8\n\n\t.type\tsqlite3_temp_directory,@object  # @sqlite3_temp_directory\n\t.globl\tsqlite3_temp_directory\n\t.p2align\t3\nsqlite3_temp_directory:\n\t.quad\t0                               # 0x0\n\t.size\tsqlite3_temp_directory, 8\n\n\t.type\tSQLITE_OK,@object               # @SQLITE_OK\n\t.globl\tSQLITE_OK\n\t.p2align\t2\nSQLITE_OK:\n\t.long\t0                               # 0x0\n\t.size\tSQLITE_OK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i64, i64, i64, i64 }\n\n@sqlite3GlobalConfig = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@sqlite3_data_directory = dso_local local_unnamed_addr global i64 0, align 8\n@sqlite3_temp_directory = dso_local local_unnamed_addr global i64 0, align 8\n@SQLITE_OK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @sqlite3_shutdown() local_unnamed_addr #0 {\n  %1 = load i64, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 3), align 8, !tbaa !5\n  %2 = icmp eq i64 %1, 0\n  br i1 %2, label %5, label %3\n\n3:                                                ; preds = %0\n  %4 = tail call i32 (...) @sqlite3_os_end() #2\n  tail call i32 @sqlite3_reset_auto_extension(i32 noundef 0) #2\n  store i64 0, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 3), align 8, !tbaa !5\n  br label %5\n\n5:                                                ; preds = %3, %0\n  %6 = load i64, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 2), align 8, !tbaa !10\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %10, label %8\n\n8:                                                ; preds = %5\n  %9 = tail call i32 (...) @sqlite3PcacheShutdown() #2\n  store i64 0, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 2), align 8, !tbaa !10\n  br label %10\n\n10:                                               ; preds = %8, %5\n  %11 = load i64, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 1), align 8, !tbaa !11\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %15, label %13\n\n13:                                               ; preds = %10\n  %14 = tail call i32 (...) @sqlite3MallocEnd() #2\n  store i64 0, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 1), align 8, !tbaa !11\n  store i64 0, ptr @sqlite3_data_directory, align 8, !tbaa !12\n  store i64 0, ptr @sqlite3_temp_directory, align 8, !tbaa !12\n  br label %15\n\n15:                                               ; preds = %13, %10\n  %16 = load i64, ptr @sqlite3GlobalConfig, align 8, !tbaa !13\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %20, label %18\n\n18:                                               ; preds = %15\n  %19 = tail call i32 (...) @sqlite3MutexEnd() #2\n  store i64 0, ptr @sqlite3GlobalConfig, align 8, !tbaa !13\n  br label %20\n\n20:                                               ; preds = %18, %15\n  %21 = load i32, ptr @SQLITE_OK, align 4, !tbaa !14\n  ret i32 %21\n}\n\ndeclare i32 @sqlite3_os_end(...) local_unnamed_addr #1\n\ndeclare i32 @sqlite3_reset_auto_extension(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @sqlite3PcacheShutdown(...) local_unnamed_addr #1\n\ndeclare i32 @sqlite3MallocEnd(...) local_unnamed_addr #1\n\ndeclare i32 @sqlite3MutexEnd(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 24}\n!6 = !{!\"TYPE_2__\", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 16}\n!11 = !{!6, !7, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./mongoose/examples/api_server/extr_sqlite3.c_sqlite3_shutdown.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i64, i64, i64, i64 }\n\n@sqlite3GlobalConfig = dso_local local_unnamed_addr global %struct.TYPE_2__ zeroinitializer, align 8\n@sqlite3_data_directory = dso_local local_unnamed_addr global i64 0, align 8\n@sqlite3_temp_directory = dso_local local_unnamed_addr global i64 0, align 8\n@SQLITE_OK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @sqlite3_shutdown() local_unnamed_addr #0 {\n  %1 = load i64, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 3), align 8, !tbaa !5\n  %2 = icmp eq i64 %1, 0\n  br i1 %2, label %6, label %3\n\n3:                                                ; preds = %0\n  %4 = tail call i32 (...) @sqlite3_os_end() #2\n  %5 = tail call i32 (...) @sqlite3_reset_auto_extension() #2\n  store i64 0, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 3), align 8, !tbaa !5\n  br label %6\n\n6:                                                ; preds = %3, %0\n  %7 = load i64, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 2), align 8, !tbaa !10\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %6\n  %10 = tail call i32 (...) @sqlite3PcacheShutdown() #2\n  store i64 0, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 2), align 8, !tbaa !10\n  br label %11\n\n11:                                               ; preds = %9, %6\n  %12 = load i64, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 1), align 8, !tbaa !11\n  %13 = icmp eq i64 %12, 0\n  br i1 %13, label %16, label %14\n\n14:                                               ; preds = %11\n  %15 = tail call i32 (...) @sqlite3MallocEnd() #2\n  store i64 0, ptr getelementptr inbounds (%struct.TYPE_2__, ptr @sqlite3GlobalConfig, i64 0, i32 1), align 8, !tbaa !11\n  store i64 0, ptr @sqlite3_data_directory, align 8, !tbaa !12\n  store i64 0, ptr @sqlite3_temp_directory, align 8, !tbaa !12\n  br label %16\n\n16:                                               ; preds = %14, %11\n  %17 = load i64, ptr @sqlite3GlobalConfig, align 8, !tbaa !13\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call i32 (...) @sqlite3MutexEnd() #2\n  store i64 0, ptr @sqlite3GlobalConfig, align 8, !tbaa !13\n  br label %21\n\n21:                                               ; preds = %19, %16\n  %22 = load i32, ptr @SQLITE_OK, align 4, !tbaa !14\n  ret i32 %22\n}\n\ndeclare i32 @sqlite3_os_end(...) local_unnamed_addr #1\n\ndeclare i32 @sqlite3_reset_auto_extension(...) local_unnamed_addr #1\n\ndeclare i32 @sqlite3PcacheShutdown(...) local_unnamed_addr #1\n\ndeclare i32 @sqlite3MallocEnd(...) local_unnamed_addr #1\n\ndeclare i32 @sqlite3MutexEnd(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 24}\n!6 = !{!\"TYPE_2__\", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 16}\n!11 = !{!6, !7, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_uart.c_uart_enable_intr_mask.ll\"\n\t.globl\tuart_enable_intr_mask           # -- Begin function uart_enable_intr_mask\n\t.p2align\t4, 0x90\n\t.type\tuart_enable_intr_mask,@function\nuart_enable_intr_mask:                  # @uart_enable_intr_mask\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\txorl\t%edi, %edi\n\tcmpq\t%rbx, UART_NUM_MAX(%rip)\n\tmovl\t%esi, %r14d\n\tseta\t%dil\n\tmovl\tESP_FAIL(%rip), %edx\n\tmovl\t$.L.str, %esi\n\tcallq\tUART_CHECK@PLT\n\tleaq\t(,%rbx,4), %rbp\n\tmovq\tuart_spinlock(%rip), %rdi\n\taddq\t%rbp, %rdi\n\tcallq\tUART_ENTER_CRITICAL@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tUART_INT_CLR_REG@PLT\n\tmovl\t%eax, %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSET_PERI_REG_MASK@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tUART_INT_ENA_REG@PLT\n\tmovl\t%eax, %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSET_PERI_REG_MASK@PLT\n\taddq\tuart_spinlock(%rip), %rbp\n\tmovq\t%rbp, %rdi\n\tcallq\tUART_EXIT_CRITICAL@PLT\n\tmovl\tESP_OK(%rip), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tuart_enable_intr_mask, .Lfunc_end0-uart_enable_intr_mask\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tUART_NUM_MAX,@object            # @UART_NUM_MAX\n\t.bss\n\t.globl\tUART_NUM_MAX\n\t.p2align\t3\nUART_NUM_MAX:\n\t.quad\t0                               # 0x0\n\t.size\tUART_NUM_MAX, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"uart_num error\"\n\t.size\t.L.str, 15\n\n\t.type\tESP_FAIL,@object                # @ESP_FAIL\n\t.bss\n\t.globl\tESP_FAIL\n\t.p2align\t2\nESP_FAIL:\n\t.long\t0                               # 0x0\n\t.size\tESP_FAIL, 4\n\n\t.type\tuart_spinlock,@object           # @uart_spinlock\n\t.globl\tuart_spinlock\n\t.p2align\t3\nuart_spinlock:\n\t.quad\t0\n\t.size\tuart_spinlock, 8\n\n\t.type\tESP_OK,@object                  # @ESP_OK\n\t.globl\tESP_OK\n\t.p2align\t2\nESP_OK:\n\t.long\t0                               # 0x0\n\t.size\tESP_OK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@UART_NUM_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [15 x i8] c\"uart_num error\\00\", align 1\n@ESP_FAIL = dso_local local_unnamed_addr global i32 0, align 4\n@uart_spinlock = dso_local local_unnamed_addr global ptr null, align 8\n@ESP_OK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @uart_enable_intr_mask(i64 noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr @UART_NUM_MAX, align 8, !tbaa !5\n  %4 = icmp ugt i64 %3, %0\n  %5 = zext i1 %4 to i32\n  %6 = load i32, ptr @ESP_FAIL, align 4, !tbaa !9\n  %7 = tail call i32 @UART_CHECK(i32 noundef %5, ptr noundef nonnull @.str, i32 noundef %6) #2\n  %8 = load ptr, ptr @uart_spinlock, align 8, !tbaa !11\n  %9 = getelementptr inbounds i32, ptr %8, i64 %0\n  %10 = tail call i32 @UART_ENTER_CRITICAL(ptr noundef %9) #2\n  %11 = tail call i32 @UART_INT_CLR_REG(i64 noundef %0) #2\n  %12 = tail call i32 @SET_PERI_REG_MASK(i32 noundef %11, i32 noundef %1) #2\n  %13 = tail call i32 @UART_INT_ENA_REG(i64 noundef %0) #2\n  %14 = tail call i32 @SET_PERI_REG_MASK(i32 noundef %13, i32 noundef %1) #2\n  %15 = load ptr, ptr @uart_spinlock, align 8, !tbaa !11\n  %16 = getelementptr inbounds i32, ptr %15, i64 %0\n  %17 = tail call i32 @UART_EXIT_CRITICAL(ptr noundef %16) #2\n  %18 = load i32, ptr @ESP_OK, align 4, !tbaa !9\n  ret i32 %18\n}\n\ndeclare i32 @UART_CHECK(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_ENTER_CRITICAL(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SET_PERI_REG_MASK(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_INT_CLR_REG(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_INT_ENA_REG(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_EXIT_CRITICAL(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "file:": "./esp-idf/components/driver/extr_uart.c_uart_enable_intr_mask.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@UART_NUM_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [15 x i8] c\"uart_num error\\00\", align 1\n@ESP_FAIL = dso_local local_unnamed_addr global i32 0, align 4\n@uart_spinlock = dso_local local_unnamed_addr global ptr null, align 8\n@ESP_OK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @uart_enable_intr_mask(i64 noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr @UART_NUM_MAX, align 8, !tbaa !5\n  %4 = icmp ugt i64 %3, %0\n  %5 = zext i1 %4 to i32\n  %6 = load i32, ptr @ESP_FAIL, align 4, !tbaa !9\n  %7 = tail call i32 @UART_CHECK(i32 noundef %5, ptr noundef nonnull @.str, i32 noundef %6) #2\n  %8 = load ptr, ptr @uart_spinlock, align 8, !tbaa !11\n  %9 = getelementptr inbounds i32, ptr %8, i64 %0\n  %10 = tail call i32 @UART_ENTER_CRITICAL(ptr noundef %9) #2\n  %11 = tail call i32 @UART_INT_CLR_REG(i64 noundef %0) #2\n  %12 = tail call i32 @SET_PERI_REG_MASK(i32 noundef %11, i32 noundef %1) #2\n  %13 = tail call i32 @UART_INT_ENA_REG(i64 noundef %0) #2\n  %14 = tail call i32 @SET_PERI_REG_MASK(i32 noundef %13, i32 noundef %1) #2\n  %15 = load ptr, ptr @uart_spinlock, align 8, !tbaa !11\n  %16 = getelementptr inbounds i32, ptr %15, i64 %0\n  %17 = tail call i32 @UART_EXIT_CRITICAL(ptr noundef %16) #2\n  %18 = load i32, ptr @ESP_OK, align 4, !tbaa !9\n  ret i32 %18\n}\n\ndeclare i32 @UART_CHECK(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_ENTER_CRITICAL(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SET_PERI_REG_MASK(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_INT_CLR_REG(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_INT_ENA_REG(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @UART_EXIT_CRITICAL(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mpc85xx_edac.c_mpc85xx_set_mc_sysfs_attributes.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mpc85xx_set_mc_sysfs_attributes\n\t.type\tmpc85xx_set_mc_sysfs_attributes,@function\nmpc85xx_set_mc_sysfs_attributes:        # @mpc85xx_set_mc_sysfs_attributes\n\t.cfi_startproc\n# %bb.0:\n\tmovl\tmpc85xx_mc_sysfs_attributes(%rip), %eax\n\tmovl\t%eax, (%rdi)\n\tretq\n.Lfunc_end0:\n\t.size\tmpc85xx_set_mc_sysfs_attributes, .Lfunc_end0-mpc85xx_set_mc_sysfs_attributes\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tmpc85xx_mc_sysfs_attributes,@object # @mpc85xx_mc_sysfs_attributes\n\t.bss\n\t.globl\tmpc85xx_mc_sysfs_attributes\n\t.p2align\t2\nmpc85xx_mc_sysfs_attributes:\n\t.long\t0                               # 0x0\n\t.size\tmpc85xx_mc_sysfs_attributes, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@mpc85xx_mc_sysfs_attributes = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mpc85xx_set_mc_sysfs_attributes], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine internal void @mpc85xx_set_mc_sysfs_attributes(ptr nocapture noundef writeonly %0) #0 {\n  %2 = load i32, ptr @mpc85xx_mc_sysfs_attributes, align 4, !tbaa !5\n  store i32 %2, ptr %0, align 4, !tbaa !5\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/edac/extr_mpc85xx_edac.c_mpc85xx_set_mc_sysfs_attributes.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@mpc85xx_mc_sysfs_attributes = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mpc85xx_set_mc_sysfs_attributes], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable\ndefine internal void @mpc85xx_set_mc_sysfs_attributes(ptr nocapture noundef writeonly %0) #0 {\n  %2 = load i32, ptr @mpc85xx_mc_sysfs_attributes, align 4, !tbaa !5\n  store i32 %2, ptr %0, align 4, !tbaa !9\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"mem_ctl_info\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_twalk.c_trecurse.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function trecurse\n\t.type\ttrecurse,@function\ntrecurse:                               # @trecurse\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovl\t%edx, %r14d\n\tmovq\t%rsi, %rax\n\tmovq\t%rdi, %rbx\n\tcmpq\t$0, 8(%rdi)\n\tjne\t.LBB0_3\n# %bb.1:\n\tcmpq\t$0, (%rbx)\n\tje\t.LBB0_2\n.LBB0_3:\n\tmovl\tpreorder(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovq\t%rax, %r12\n\tcallq\t*%rax\n\tmovq\t8(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_5\n# %bb.4:\n\tleal\t1(%r14), %edx\n\tmovq\t%r12, %rsi\n\tcallq\ttrecurse\n.LBB0_5:\n\tmovl\tpostorder(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tcallq\t*%r12\n\tmovq\t(%rbx), %rdi\n\tmovl\t$endorder, %r15d\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_7\n# %bb.6:\n\tleal\t1(%r14), %edx\n\tmovq\t%r12, %rsi\n\tcallq\ttrecurse\n.LBB0_7:\n\tmovq\t%r12, %rax\n.LBB0_8:\n\tmovl\t(%r15), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmpq\t*%rax                           # TAILCALL\n.LBB0_2:\n\t.cfi_def_cfa_offset 48\n\tmovl\t$leaf, %r15d\n\tjmp\t.LBB0_8\n.Lfunc_end0:\n\t.size\ttrecurse, .Lfunc_end0-trecurse\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tleaf,@object                    # @leaf\n\t.bss\n\t.globl\tleaf\n\t.p2align\t2\nleaf:\n\t.long\t0                               # 0x0\n\t.size\tleaf, 4\n\n\t.type\tpreorder,@object                # @preorder\n\t.globl\tpreorder\n\t.p2align\t2\npreorder:\n\t.long\t0                               # 0x0\n\t.size\tpreorder, 4\n\n\t.type\tpostorder,@object               # @postorder\n\t.globl\tpostorder\n\t.p2align\t2\npostorder:\n\t.long\t0                               # 0x0\n\t.size\tpostorder, 4\n\n\t.type\tendorder,@object                # @endorder\n\t.globl\tendorder\n\t.p2align\t2\nendorder:\n\t.long\t0                               # 0x0\n\t.size\tendorder, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, ptr }\n\n@leaf = dso_local global i32 0, align 4\n@preorder = dso_local local_unnamed_addr global i32 0, align 4\n@postorder = dso_local local_unnamed_addr global i32 0, align 4\n@endorder = dso_local global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @trecurse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @trecurse(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %3\n  %8 = load ptr, ptr %0, align 8, !tbaa !10\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7, %3\n  %11 = load i32, ptr @preorder, align 4, !tbaa !11\n  tail call void %1(ptr noundef nonnull %0, i32 noundef %11, i32 noundef %2) #2\n  br label %12\n\n12:                                               ; preds = %10, %7\n  %13 = phi ptr [ @leaf, %7 ], [ %5, %10 ]\n  %14 = load ptr, ptr %4, align 8, !tbaa !5\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %12\n  %17 = add nsw i32 %2, 1\n  tail call void @trecurse(ptr noundef nonnull %14, ptr noundef %1, i32 noundef %17) #2\n  br label %18\n\n18:                                               ; preds = %16, %12\n  %19 = load i32, ptr @postorder, align 4, !tbaa !11\n  tail call void %1(ptr noundef nonnull %0, i32 noundef %19, i32 noundef %2) #2\n  %20 = load ptr, ptr %0, align 8, !tbaa !10\n  %21 = icmp eq ptr %20, null\n  br i1 %21, label %24, label %22\n\n22:                                               ; preds = %18\n  %23 = add nsw i32 %2, 1\n  tail call void @trecurse(ptr noundef nonnull %20, ptr noundef %1, i32 noundef %23) #2\n  br label %24\n\n24:                                               ; preds = %22, %18\n  %25 = phi ptr [ @endorder, %18 ], [ @leaf, %22 ]\n  %26 = load i32, ptr %25, align 4, !tbaa !11\n  %27 = tail call ptr %1(ptr noundef nonnull %0, i32 noundef %26, i32 noundef %2) #2\n  ret ptr %27\n}\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nounwind }\nattributes #2 = { nounwind readonly willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>", "file:": "./freebsd/lib/libc/stdlib/extr_twalk.c_trecurse.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_9__ = type { ptr, ptr }\n\n@leaf = dso_local local_unnamed_addr global i32 0, align 4\n@preorder = dso_local local_unnamed_addr global i32 0, align 4\n@postorder = dso_local local_unnamed_addr global i32 0, align 4\n@endorder = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @trecurse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @trecurse(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %3\n  %8 = load ptr, ptr %0, align 8, !tbaa !10\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %24, label %10\n\n10:                                               ; preds = %7, %3\n  %11 = load i32, ptr @preorder, align 4, !tbaa !11\n  %12 = tail call i32 %1(ptr noundef nonnull %0, i32 noundef %11, i32 noundef %2) #1\n  %13 = load ptr, ptr %4, align 8, !tbaa !5\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %17, label %15\n\n15:                                               ; preds = %10\n  %16 = add nsw i32 %2, 1\n  tail call void @trecurse(ptr noundef nonnull %13, ptr noundef %1, i32 noundef %16)\n  br label %17\n\n17:                                               ; preds = %15, %10\n  %18 = load i32, ptr @postorder, align 4, !tbaa !11\n  %19 = tail call i32 %1(ptr noundef nonnull %0, i32 noundef %18, i32 noundef %2) #1\n  %20 = load ptr, ptr %0, align 8, !tbaa !10\n  %21 = icmp eq ptr %20, null\n  br i1 %21, label %24, label %22\n\n22:                                               ; preds = %17\n  %23 = add nsw i32 %2, 1\n  tail call void @trecurse(ptr noundef nonnull %20, ptr noundef %1, i32 noundef %23)\n  br label %24\n\n24:                                               ; preds = %17, %22, %7\n  %25 = phi ptr [ @leaf, %7 ], [ @endorder, %22 ], [ @endorder, %17 ]\n  %26 = load i32, ptr %25, align 4, !tbaa !11\n  %27 = tail call i32 %1(ptr noundef nonnull %0, i32 noundef %26, i32 noundef %2) #1\n  ret void\n}\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"TYPE_9__\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_wifi.c_wifi_ap_getip.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function wifi_ap_getip\n\t.type\twifi_ap_getip,@function\nwifi_ap_getip:                          # @wifi_ap_getip\n\t.cfi_startproc\n# %bb.0:\n\tmovl\tSOFTAP_IF(%rip), %esi\n\tjmp\twifi_getip@PLT                  # TAILCALL\n.Lfunc_end0:\n\t.size\twifi_ap_getip, .Lfunc_end0-wifi_ap_getip\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSOFTAP_IF,@object               # @SOFTAP_IF\n\t.bss\n\t.globl\tSOFTAP_IF\n\t.p2align\t2\nSOFTAP_IF:\n\t.long\t0                               # 0x0\n\t.size\tSOFTAP_IF, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SOFTAP_IF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wifi_ap_getip], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wifi_ap_getip(ptr noundef %0) #0 {\n  %2 = load i32, ptr @SOFTAP_IF, align 4, !tbaa !5\n  %3 = tail call i32 @wifi_getip(ptr noundef %0, i32 noundef %2) #2\n  ret i32 %3\n}\n\ndeclare i32 @wifi_getip(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./nodemcu-firmware/app/modules/extr_wifi.c_wifi_ap_getip.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SOFTAP_IF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wifi_ap_getip], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wifi_ap_getip(ptr noundef %0) #0 {\n  %2 = load i32, ptr @SOFTAP_IF, align 4, !tbaa !5\n  %3 = tail call i32 @wifi_getip(ptr noundef %0, i32 noundef %2) #2\n  ret i32 %3\n}\n\ndeclare i32 @wifi_getip(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_clnt.c_rpc_bind_new_program.ll\"\n\t.globl\trpc_bind_new_program            # -- Begin function rpc_bind_new_program\n\t.p2align\t4, 0x90\n\t.type\trpc_bind_new_program,@function\nrpc_bind_new_program:                   # @rpc_bind_new_program\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %rbx\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %r15\n\tmovl\t$1, %edi\n\tcmpq\t%rdx, (%rsi)\n\tjbe\t.LBB0_2\n# %bb.1:\n\tmovq\t24(%r14), %rax\n\txorl\t%edi, %edi\n\tcmpq\t$0, (%rax,%rbx,8)\n\tsete\t%dil\n.LBB0_2:\n\tcallq\tBUG_ON@PLT\n\tmovq\t24(%r14), %rax\n\tmovq\t(%rax,%rbx,8), %rbp\n\tmovq\t%r15, %rdi\n\tcallq\trpc_clone_client@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\tcallq\tIS_ERR@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n.LBB0_4:\n\tmovq\t%rbx, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_3:\n\t.cfi_def_cfa_offset 48\n\tmovl\t8(%rbp), %eax\n\tmovl\t%eax, 20(%rbx)\n\tmovq\t12(%r14), %xmm0                 # xmm0 = mem[0],zero\n\tmovq\t(%rbp), %xmm1                   # xmm1 = mem[0],zero\n\tpunpckldq\t%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]\n\tpshufd\t$180, %xmm1, %xmm0              # xmm0 = xmm1[0,1,3,2]\n\tmovdqu\t%xmm0, 4(%rbx)\n\tmovl\t8(%r14), %eax\n\tmovl\t%eax, (%rbx)\n\tmovq\t%rbx, %rdi\n\tcallq\trpc_ping@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_4\n# %bb.5:\n\tmovl\t%eax, %ebp\n\tmovq\t%rbx, %rdi\n\tcallq\trpc_shutdown_client@PLT\n\tmovl\t%ebp, %edi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tERR_PTR@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\trpc_bind_new_program, .Lfunc_end0-rpc_bind_new_program\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rpc_clnt = type { i32, i32, i32, i32, ptr }\n%struct.rpc_xprt = type { i64, i32, ptr }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @rpc_bind_new_program(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = load i64, ptr %1, align 8, !tbaa !5\n  %5 = icmp ugt i64 %4, %2\n  br i1 %5, label %6, label %10\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.rpc_clnt, ptr %1, i64 0, i32 4\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  %9 = getelementptr inbounds i64, ptr %8, i64 %2\n  tail call void @llvm.assume(i1 noundef %5) #3\n  br label %10\n\n10:                                               ; preds = %6, %3\n  %11 = tail call i32 @BUG_ON(i1 noundef %5) #3\n  %12 = load ptr, ptr %1, align 8, !tbaa !11\n  %13 = getelementptr inbounds i64, ptr %12, i64 %2\n  %14 = load i64, ptr %13, align 8, !tbaa !12\n  %15 = tail call ptr @rpc_clone_client(i64 noundef %14) #3\n  %16 = tail call i64 @IS_ERR(ptr noundef %15) #3\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %18, label %25\n\n18:                                               ; preds = %10\n  %19 = getelementptr inbounds %struct.rpc_clnt, ptr %15, i64 0, i32 3\n  %20 = load i32, ptr %19, align 8, !tbaa !13\n  %21 = getelementptr inbounds %struct.rpc_clnt, ptr %15, i64 0, i32 2\n  store i32 %20, ptr %21, align 8, !tbaa !14\n  %22 = getelementptr inbounds %struct.rpc_xprt, ptr %1, i64 0, i32 2\n  %23 = load ptr, ptr %22, align 8, !tbaa !15\n  %24 = tail call i32 @llvm.vector.reduce.fadd.v2f64(ptr %23)\n  store i32 %24, ptr %15, align 8, !tbaa !16\n  tail call i32 @rpc_ping(ptr noundef nonnull %15) #3\n  %25 = load i32, ptr %15, align 8, !tbaa !16\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %27, label %29\n\n27:                                               ; preds = %18\n  %28 = tail call i32 @rpc_shutdown_client(ptr noundef nonnull %15) #3\n  br label %29\n\n29:                                               ; preds = %27, %18\n  %30 = phi i32 [ %25, %18 ], [ %28, %27 ]\n  %31 = tail call ptr @ERR_PTR(i32 noundef %30) #3\n  ret ptr %31\n}\n\ndeclare i32 @BUG_ON(i1 noundef) local_unnamed_addr #1\n\ndeclare ptr @rpc_clone_client(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_ERR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rpc_ping(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rpc_shutdown_client(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone willreturn\ndeclare i32 @llvm.vector.reduce.fadd.v2f64(ptr nocapture noundef) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"rpc_clnt\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n!14 = !{!6, !7, i64 12}\n!15 = !{!16, !10, i64 12}\n!16 = !{!6, !7, i64 0}\n</s><s>", "file:": "./fastsocket/kernel/net/sunrpc/extr_clnt.c_rpc_bind_new_program.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rpc_program = type { i64, i32, i32, i32, ptr }\n%struct.rpc_version = type { i32, i32, i32 }\n%struct.rpc_clnt = type { i32, i32, i32, i32, i32, i32 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @rpc_bind_new_program(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = load i64, ptr %1, align 8, !tbaa !5\n  %5 = icmp ugt i64 %4, %2\n  br i1 %5, label %6, label %13\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.rpc_program, ptr %1, i64 0, i32 4\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = getelementptr inbounds ptr, ptr %8, i64 %2\n  %10 = load ptr, ptr %9, align 8, !tbaa !13\n  %11 = icmp eq ptr %10, null\n  %12 = zext i1 %11 to i32\n  br label %13\n\n13:                                               ; preds = %6, %3\n  %14 = phi i32 [ 1, %3 ], [ %12, %6 ]\n  %15 = tail call i32 @BUG_ON(i32 noundef %14) #2\n  %16 = getelementptr inbounds %struct.rpc_program, ptr %1, i64 0, i32 4\n  %17 = load ptr, ptr %16, align 8, !tbaa !12\n  %18 = getelementptr inbounds ptr, ptr %17, i64 %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !13\n  %20 = tail call ptr @rpc_clone_client(ptr noundef %0) #2\n  %21 = tail call i64 @IS_ERR(ptr noundef %20) #2\n  %22 = icmp eq i64 %21, 0\n  br i1 %22, label %23, label %39\n\n23:                                               ; preds = %13\n  %24 = getelementptr inbounds %struct.rpc_version, ptr %19, i64 0, i32 2\n  %25 = load i32, ptr %24, align 4, !tbaa !14\n  %26 = getelementptr inbounds %struct.rpc_clnt, ptr %20, i64 0, i32 5\n  store i32 %25, ptr %26, align 4, !tbaa !16\n  %27 = getelementptr inbounds %struct.rpc_program, ptr %1, i64 0, i32 2\n  %28 = getelementptr inbounds %struct.rpc_clnt, ptr %20, i64 0, i32 1\n  %29 = load <2 x i32>, ptr %27, align 4, !tbaa !18\n  %30 = load <2 x i32>, ptr %19, align 4, !tbaa !18\n  %31 = shufflevector <2 x i32> %30, <2 x i32> %29, <4 x i32> <i32 0, i32 2, i32 3, i32 1>\n  store <4 x i32> %31, ptr %28, align 4, !tbaa !18\n  %32 = getelementptr inbounds %struct.rpc_program, ptr %1, i64 0, i32 1\n  %33 = load i32, ptr %32, align 8, !tbaa !19\n  store i32 %33, ptr %20, align 4, !tbaa !20\n  %34 = tail call i32 @rpc_ping(ptr noundef nonnull %20) #2\n  %35 = icmp eq i32 %34, 0\n  br i1 %35, label %39, label %36\n\n36:                                               ; preds = %23\n  %37 = tail call i32 @rpc_shutdown_client(ptr noundef nonnull %20) #2\n  %38 = tail call ptr @ERR_PTR(i32 noundef %34) #2\n  br label %39\n\n39:                                               ; preds = %23, %36, %13\n  %40 = phi ptr [ %20, %13 ], [ %38, %36 ], [ %20, %23 ]\n  ret ptr %40\n}\n\ndeclare i32 @BUG_ON(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @rpc_clone_client(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @IS_ERR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rpc_ping(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rpc_shutdown_client(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"rpc_program\", !7, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !11, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!6, !11, i64 24}\n!13 = !{!11, !11, i64 0}\n!14 = !{!15, !10, i64 8}\n!15 = !{!\"rpc_version\", !10, i64 0, !10, i64 4, !10, i64 8}\n!16 = !{!17, !10, i64 20}\n!17 = !{!\"rpc_clnt\", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20}\n!18 = !{!10, !10, i64 0}\n!19 = !{!6, !10, i64 8}\n!20 = !{!17, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ckh.c_ckh_remove.ll\"\n\t.globl\tckh_remove                      # -- Begin function ckh_remove\n\t.p2align\t4, 0x90\n\t.type\tckh_remove,@function\nckh_remove:                             # @ckh_remove\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%r8, %r15\n\tmovq\t%rcx, %r12\n\tmovq\t%rdx, %rbp\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\txorl\t%edi, %edi\n\ttestq\t%rsi, %rsi\n\tsetne\t%dil\n\tcallq\tassert@PLT\n\tmovq\t%rbx, %rdi\n\tmovq\t%rbp, %rsi\n\tcallq\tckh_isearch@PLT\n\tmovl\t$1, %ebp\n\tcmpq\tSIZE_T_MAX(%rip), %rax\n\tje\t.LBB0_8\n# %bb.1:\n\ttestq\t%r12, %r12\n\tje\t.LBB0_3\n# %bb.2:\n\tmovq\t16(%rbx), %rcx\n\tmovq\t%rax, %rdx\n\tshlq\t$4, %rdx\n\tmovq\t8(%rcx,%rdx), %rcx\n\tmovq\t%rcx, (%r12)\n.LBB0_3:\n\ttestq\t%r15, %r15\n\tje\t.LBB0_5\n# %bb.4:\n\tmovq\t16(%rbx), %rcx\n\tmovq\t%rax, %rdx\n\tshlq\t$4, %rdx\n\tmovq\t(%rcx,%rdx), %rcx\n\tmovq\t%rcx, (%r15)\n.LBB0_5:\n\tmovq\t16(%rbx), %rcx\n\tshlq\t$4, %rax\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, (%rcx,%rax)\n\tmovl\t(%rbx), %r15d\n\tleal\t-1(%r15), %eax\n\tmovl\t%eax, (%rbx)\n\tmovl\t$1, %edi\n\tcallq\tZU@PLT\n\tmovl\t4(%rbx), %edx\n\tmovl\tLG_CKH_BUCKET_CELLS(%rip), %ecx\n\taddl\t%edx, %ecx\n\taddb\t$-2, %cl\n                                        # kill: def $cl killed $cl killed $ecx\n\tshll\t%cl, %eax\n\txorl\t%ebp, %ebp\n\tcmpl\t%eax, %r15d\n\tjg\t.LBB0_8\n# %bb.6:\n\tcmpl\t8(%rbx), %edx\n\tjle\t.LBB0_8\n# %bb.7:\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\tckh_shrink@PLT\n.LBB0_8:\n\tmovl\t%ebp, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tckh_remove, .Lfunc_end0-ckh_remove\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSIZE_T_MAX,@object              # @SIZE_T_MAX\n\t.bss\n\t.globl\tSIZE_T_MAX\n\t.p2align\t3\nSIZE_T_MAX:\n\t.quad\t0                               # 0x0\n\t.size\tSIZE_T_MAX, 8\n\n\t.type\tLG_CKH_BUCKET_CELLS,@object     # @LG_CKH_BUCKET_CELLS\n\t.globl\tLG_CKH_BUCKET_CELLS\n\t.p2align\t2\nLG_CKH_BUCKET_CELLS:\n\t.long\t0                               # 0x0\n\t.size\tLG_CKH_BUCKET_CELLS, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i32, i32, ptr }\n%struct.TYPE_5__ = type { i64, i64 }\n\n@SIZE_T_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@LG_CKH_BUCKET_CELLS = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ckh_remove(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef writeonly %3, ptr noundef writeonly %4) local_unnamed_addr #0 {\n  %6 = icmp ne ptr %1, null\n  %7 = zext i1 %6 to i32\n  %8 = tail call i32 @assert(i32 noundef %7) #2\n  %9 = tail call i64 @ckh_isearch(ptr noundef %1, ptr noundef %2) #2\n  %10 = load i64, ptr @SIZE_T_MAX, align 8, !tbaa !5\n  %11 = icmp eq i64 %9, %10\n  br i1 %11, label %30, label %12\n\n12:                                               ; preds = %5\n  %13 = icmp eq ptr %3, null\n  br i1 %13, label %17, label %14\n\n14:                                               ; preds = %12\n  %15 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 3\n  %16 = load ptr, ptr %15, align 8, !tbaa !9\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %16, i64 %9\n  %18 = load i64, ptr %17, align 8, !tbaa !12\n  store i64 %18, ptr %3, align 8, !tbaa !5\n  br label %19\n\n19:                                               ; preds = %14, %25\n  %20 = icmp eq ptr %4, null\n  br i1 %20, label %25, label %21\n\n21:                                               ; preds = %19\n  %22 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 3\n  %23 = load ptr, ptr %22, align 8, !tbaa !9\n  %24 = getelementptr inbounds %struct.TYPE_5__, ptr %23, i64 %9\n  %25 = load i64, ptr %24, align 8, !tbaa !12\n  store i64 %25, ptr %4, align 8, !tbaa !5\n  br label %26\n\n26:                                               ; preds = %21, %19\n  %27 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 3\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = getelementptr inbounds %struct.TYPE_5__, ptr %28, i64 %9\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %29, i8 0, i64 16, i1 false)\n  br label %27\n\n30:                                               ; preds = %5\n  %31 = load i32, ptr %1, align 8, !tbaa !14\n  %32 = add nsw i32 %31, -1\n  store i32 %32, ptr %1, align 8, !tbaa !14\n  %33 = tail call i32 @ZU(i32 noundef 1) #2\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 1\n  %35 = load i32, ptr %34, align 4, !tbaa !15\n  %36 = load i32, ptr @LG_CKH_BUCKET_CELLS, align 4, !tbaa !16\n  %37 = add nsw i32 %36, %35\n  %38 = add i32 %37, -2\n  %39 = shl i32 %38, %31\n  %40 = icmp sgt i32 %39, %31\n  br i1 %40, label %41, label %42\n\n41:                                               ; preds = %30\n  br label %42\n\n42:                                               ; preds = %41, %30\n  %43 = load i32, ptr %34, align 4, !tbaa !15\n  %44 = icmp sgt i32 %43, %35\n  br i1 %44, label %45, label %47\n\n45:                                               ; preds = %42\n  %46 = tail call i32 @ckh_shrink(ptr noundef %0, ptr noundef nonnull %1) #2\n  br label %47\n\n47:                                               ; preds = %45, %42\n  ret i32 %46\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ckh_isearch(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ZU(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ckh_shrink(ptr noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"", "file:": "./redis/deps/jemalloc/src/extr_ckh.c_ckh_remove.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { i32, i32, i32, ptr }\n%struct.TYPE_6__ = type { ptr, ptr }\n\n@SIZE_T_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@LG_CKH_BUCKET_CELLS = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ckh_remove(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef writeonly %3, ptr noundef writeonly %4) local_unnamed_addr #0 {\n  %6 = icmp ne ptr %1, null\n  %7 = zext i1 %6 to i32\n  %8 = tail call i32 @assert(i32 noundef %7) #3\n  %9 = tail call i64 @ckh_isearch(ptr noundef %1, ptr noundef %2) #3\n  %10 = load i64, ptr @SIZE_T_MAX, align 8, !tbaa !5\n  %11 = icmp eq i64 %9, %10\n  br i1 %11, label %46, label %12\n\n12:                                               ; preds = %5\n  %13 = icmp eq ptr %3, null\n  br i1 %13, label %19, label %14\n\n14:                                               ; preds = %12\n  %15 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 3\n  %16 = load ptr, ptr %15, align 8, !tbaa !9\n  %17 = getelementptr inbounds %struct.TYPE_6__, ptr %16, i64 %9, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !13\n  store ptr %18, ptr %3, align 8, !tbaa !15\n  br label %19\n\n19:                                               ; preds = %14, %12\n  %20 = icmp eq ptr %4, null\n  br i1 %20, label %26, label %21\n\n21:                                               ; preds = %19\n  %22 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 3\n  %23 = load ptr, ptr %22, align 8, !tbaa !9\n  %24 = getelementptr inbounds %struct.TYPE_6__, ptr %23, i64 %9\n  %25 = load ptr, ptr %24, align 8, !tbaa !16\n  store ptr %25, ptr %4, align 8, !tbaa !15\n  br label %26\n\n26:                                               ; preds = %21, %19\n  %27 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 3\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = getelementptr inbounds %struct.TYPE_6__, ptr %28, i64 %9\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %29, i8 0, i64 16, i1 false)\n  %30 = load i32, ptr %1, align 8, !tbaa !17\n  %31 = add nsw i32 %30, -1\n  store i32 %31, ptr %1, align 8, !tbaa !17\n  %32 = tail call i32 @ZU(i32 noundef 1) #3\n  %33 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  %34 = load i32, ptr %33, align 4, !tbaa !18\n  %35 = load i32, ptr @LG_CKH_BUCKET_CELLS, align 4, !tbaa !19\n  %36 = add i32 %34, -2\n  %37 = add i32 %36, %35\n  %38 = shl i32 %32, %37\n  %39 = icmp sgt i32 %30, %38\n  br i1 %39, label %46, label %40\n\n40:                                               ; preds = %26\n  %41 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 2\n  %42 = load i32, ptr %41, align 8, !tbaa !20\n  %43 = icmp sgt i32 %34, %42\n  br i1 %43, label %44, label %46\n\n44:                                               ; preds = %40\n  %45 = tail call i32 @ckh_shrink(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %46\n\n46:                                               ; preds = %5, %26, %40, %44\n  %47 = phi i32 [ 0, %44 ], [ 0, %40 ], [ 0, %26 ], [ 1, %5 ]\n  ret i32 %47\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ckh_isearch(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ZU(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ckh_shrink(ptr noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !12, i64 16}\n!10 = !{!\"TYPE_7__\", !11, i64 0, !11, i64 4, !11, i64 8, !12, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n!13 = !{!14, !12, i64 8}\n!14 = !{!\"TYPE_6__\", !12, i64 0, !12, i64 8}\n!15 = !{!12, !12, i64 0}\n!16 = !{!14, !12, i64 0}\n!17 = !{!10, !11, i64 0}\n!18 = !{!10, !11, i64 4}\n!19 = !{!11, !11, i64 0}\n!20 = !{!10, !11, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_genhd.c_disk_removable_show.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function disk_removable_show\n\t.type\tdisk_removable_show,@function\ndisk_removable_show:                    # @disk_removable_show\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdx, %rbx\n\tcallq\tdev_to_disk@PLT\n\tmovl\tGENHD_FL_REMOVABLE(%rip), %ecx\n\txorl\t%edx, %edx\n\tandl\t(%rax), %ecx\n\tsetne\t%dl\n\tmovl\t$.L.str, %esi\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tsprintf@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\tdisk_removable_show, .Lfunc_end0-disk_removable_show\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%d\\n\"\n\t.size\t.L.str, 4\n\n\t.type\tGENHD_FL_REMOVABLE,@object      # @GENHD_FL_REMOVABLE\n\t.bss\n\t.globl\tGENHD_FL_REMOVABLE\n\t.p2align\t2\nGENHD_FL_REMOVABLE:\n\t.long\t0                               # 0x0\n\t.size\tGENHD_FL_REMOVABLE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"%d\\0A\\00\", align 1\n@GENHD_FL_REMOVABLE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @disk_removable_show], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @disk_removable_show(ptr noundef %0, ptr nocapture readnone %1, ptr noundef %2) #0 {\n  %4 = tail call ptr @dev_to_disk(ptr noundef %0) #3\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = load i32, ptr @GENHD_FL_REMOVABLE, align 4, !tbaa !10\n  %7 = and i32 %6, %5\n  %8 = icmp ne i32 %7, 0\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @sprintf(ptr noundef %2, ptr noundef nonnull @.str, i32 noundef %9) #3\n  ret i32 %10\n}\n\ndeclare ptr @dev_to_disk(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_2__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>", "file:": "./linux/block/extr_genhd.c_disk_removable_show.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [4 x i8] c\"%d\\0A\\00\", align 1\n@GENHD_FL_REMOVABLE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @disk_removable_show], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @disk_removable_show(ptr noundef %0, ptr nocapture readnone %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call ptr @dev_to_disk(ptr noundef %0) #3\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = load i32, ptr @GENHD_FL_REMOVABLE, align 4, !tbaa !10\n  %7 = and i32 %6, %5\n  %8 = icmp ne i32 %7, 0\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %2, ptr noundef nonnull @.str, i32 noundef %9)\n  ret i32 %10\n}\n\ndeclare ptr @dev_to_disk(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"gendisk\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_M68KDisassembler.c_d68020_tst_a_32.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function d68020_tst_a_32\n\t.type\td68020_tst_a_32,@function\nd68020_tst_a_32:                        # @d68020_tst_a_32\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovl\tM68020_PLUS(%rip), %esi\n\tcallq\tLIMIT_CPU_TYPES@PLT\n\tmovl\tM68K_INS_TST(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovl\t$4, %edx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tbuild_ea@PLT                    # TAILCALL\n.Lfunc_end0:\n\t.size\td68020_tst_a_32, .Lfunc_end0-d68020_tst_a_32\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tM68020_PLUS,@object             # @M68020_PLUS\n\t.bss\n\t.globl\tM68020_PLUS\n\t.p2align\t2\nM68020_PLUS:\n\t.long\t0                               # 0x0\n\t.size\tM68020_PLUS, 4\n\n\t.type\tM68K_INS_TST,@object            # @M68K_INS_TST\n\t.globl\tM68K_INS_TST\n\t.p2align\t2\nM68K_INS_TST:\n\t.long\t0                               # 0x0\n\t.size\tM68K_INS_TST, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@M68020_PLUS = dso_local local_unnamed_addr global i32 0, align 4\n@M68K_INS_TST = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @d68020_tst_a_32], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @d68020_tst_a_32(ptr noundef %0) #0 {\n  %2 = load i32, ptr @M68020_PLUS, align 4, !tbaa !5\n  %3 = tail call i32 @LIMIT_CPU_TYPES(ptr noundef %0, i32 noundef %2) #2\n  %4 = load i32, ptr @M68K_INS_TST, align 4, !tbaa !5\n  %5 = tail call i32 @build_ea(ptr noundef %0, i32 noundef %4, i32 noundef 4) #2\n  ret void\n}\n\ndeclare i32 @LIMIT_CPU_TYPES(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @build_ea(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./capstone/arch/M68K/extr_M68KDisassembler.c_d68020_tst_a_32.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@M68020_PLUS = dso_local local_unnamed_addr global i32 0, align 4\n@M68K_INS_TST = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @d68020_tst_a_32], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @d68020_tst_a_32(ptr noundef %0) #0 {\n  %2 = load i32, ptr @M68020_PLUS, align 4, !tbaa !5\n  %3 = tail call i32 @LIMIT_CPU_TYPES(ptr noundef %0, i32 noundef %2) #2\n  %4 = load i32, ptr @M68K_INS_TST, align 4, !tbaa !5\n  %5 = tail call i32 @build_ea(ptr noundef %0, i32 noundef %4, i32 noundef 4) #2\n  ret void\n}\n\ndeclare i32 @LIMIT_CPU_TYPES(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @build_ea(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_eda.c_wlp_eda_init.ll\"\n\t.globl\twlp_eda_init                    # -- Begin function wlp_eda_init\n\t.p2align\t4, 0x90\n\t.type\twlp_eda_init,@function\nwlp_eda_init:                           # @wlp_eda_init\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\taddq\t$4, %rdi\n\tcallq\tINIT_LIST_HEAD@PLT\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tspin_lock_init@PLT              # TAILCALL\n.Lfunc_end0:\n\t.size\twlp_eda_init, .Lfunc_end0-wlp_eda_init\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wlp_eda = type { i32, i32 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @wlp_eda_init(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.wlp_eda, ptr %0, i64 0, i32 1\n  %3 = tail call i32 @INIT_LIST_HEAD(ptr noundef nonnull %2) #2\n  %4 = tail call i32 @spin_lock_init(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @INIT_LIST_HEAD(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_init(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n</s><s>", "file:": "./fastsocket/kernel/drivers/uwb/wlp/extr_eda.c_wlp_eda_init.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wlp_eda = type { i32, i32 }\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @wlp_eda_init(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.wlp_eda, ptr %0, i64 0, i32 1\n  %3 = tail call i32 @INIT_LIST_HEAD(ptr noundef nonnull %2) #2\n  %4 = tail call i32 @spin_lock_init(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @INIT_LIST_HEAD(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_init(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sftp-server.c_errno_to_portable.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function errno_to_portable\n\t.type\terrno_to_portable,@function\nerrno_to_portable:                      # @errno_to_portable\n\t.cfi_startproc\n# %bb.0:\n                                        # kill: def $edi killed $edi def $rdi\n\tleal\t-128(%rdi), %eax\n\tcmpl\t$9, %eax\n\tja\t.LBB0_1\n# %bb.3:\n\tjmpq\t*.LJTI0_0(,%rax,8)\n.LBB0_4:\n\tmovl\t$SSH2_FX_NO_SUCH_FILE, %eax\n\tmovl\t(%rax), %eax\n\tretq\n.LBB0_5:\n\tmovl\t$SSH2_FX_PERMISSION_DENIED, %eax\n\tmovl\t(%rax), %eax\n\tretq\n.LBB0_1:\n\tmovl\t$SSH2_FX_OK, %eax\n\ttestl\t%edi, %edi\n\tje\t.LBB0_8\n# %bb.2:\n\tmovl\t$SSH2_FX_FAILURE, %eax\n\tmovl\t(%rax), %eax\n\tretq\n.LBB0_6:\n\tmovl\t$SSH2_FX_BAD_MESSAGE, %eax\n\tmovl\t(%rax), %eax\n\tretq\n.LBB0_7:\n\tmovl\t$SSH2_FX_OP_UNSUPPORTED, %eax\n.LBB0_8:\n\tmovl\t(%rax), %eax\n\tretq\n.Lfunc_end0:\n\t.size\terrno_to_portable, .Lfunc_end0-errno_to_portable\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_6\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_6\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_5\n                                        # -- End function\n\t.type\tSSH2_FX_OK,@object              # @SSH2_FX_OK\n\t.bss\n\t.globl\tSSH2_FX_OK\n\t.p2align\t2\nSSH2_FX_OK:\n\t.long\t0                               # 0x0\n\t.size\tSSH2_FX_OK, 4\n\n\t.type\tSSH2_FX_NO_SUCH_FILE,@object    # @SSH2_FX_NO_SUCH_FILE\n\t.globl\tSSH2_FX_NO_SUCH_FILE\n\t.p2align\t2\nSSH2_FX_NO_SUCH_FILE:\n\t.long\t0                               # 0x0\n\t.size\tSSH2_FX_NO_SUCH_FILE, 4\n\n\t.type\tSSH2_FX_PERMISSION_DENIED,@object # @SSH2_FX_PERMISSION_DENIED\n\t.globl\tSSH2_FX_PERMISSION_DENIED\n\t.p2align\t2\nSSH2_FX_PERMISSION_DENIED:\n\t.long\t0                               # 0x0\n\t.size\tSSH2_FX_PERMISSION_DENIED, 4\n\n\t.type\tSSH2_FX_BAD_MESSAGE,@object     # @SSH2_FX_BAD_MESSAGE\n\t.globl\tSSH2_FX_BAD_MESSAGE\n\t.p2align\t2\nSSH2_FX_BAD_MESSAGE:\n\t.long\t0                               # 0x0\n\t.size\tSSH2_FX_BAD_MESSAGE, 4\n\n\t.type\tSSH2_FX_OP_UNSUPPORTED,@object  # @SSH2_FX_OP_UNSUPPORTED\n\t.globl\tSSH2_FX_OP_UNSUPPORTED\n\t.p2align\t2\nSSH2_FX_OP_UNSUPPORTED:\n\t.long\t0                               # 0x0\n\t.size\tSSH2_FX_OP_UNSUPPORTED, 4\n\n\t.type\tSSH2_FX_FAILURE,@object         # @SSH2_FX_FAILURE\n\t.globl\tSSH2_FX_FAILURE\n\t.p2align\t2\nSSH2_FX_FAILURE:\n\t.long\t0                               # 0x0\n\t.size\tSSH2_FX_FAILURE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SSH2_FX_OK = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_NO_SUCH_FILE = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_PERMISSION_DENIED = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_BAD_MESSAGE = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_OP_UNSUPPORTED = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_FAILURE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @errno_to_portable], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @errno_to_portable(i32 noundef %0) #0 {\n  switch i32 %0, label %11 [\n    i32 128, label %3\n    i32 129, label %3\n    i32 130, label %3\n    i32 131, label %3\n    i32 132, label %3\n    i32 133, label %3\n    i32 134, label %3\n    i32 135, label %3\n    i32 136, label %3\n    i32 137, label %3\n  ]\n\n3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1\n  %4 = load i32, ptr @SSH2_FX_OK, align 4, !tbaa !5\n  br label %11\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr @SSH2_FX_NO_SUCH_FILE, align 4, !tbaa !5\n  br label %11\n\n7:                                                ; preds = %1\n  %8 = load i32, ptr @SSH2_FX_PERMISSION_DENIED, align 4, !tbaa !5\n  br label %11\n\n9:                                                ; preds = %1\n  %10 = load i32, ptr @SSH2_FX_BAD_MESSAGE, align 4, !tbaa !5\n  br label %11\n\n11:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %3, %5, %7, %9\n  %12 = phi i32 [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]\n  ret i32 %12\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "file:": "./freebsd/crypto/openssh/extr_sftp-server.c_errno_to_portable.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SSH2_FX_OK = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_NO_SUCH_FILE = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_PERMISSION_DENIED = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_BAD_MESSAGE = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_OP_UNSUPPORTED = dso_local local_unnamed_addr global i32 0, align 4\n@SSH2_FX_FAILURE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @errno_to_portable], section \"llvm.metadata\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable\ndefine internal i32 @errno_to_portable(i32 noundef %0) #0 {\n  switch i32 %0, label %6 [\n    i32 0, label %7\n    i32 131, label %2\n    i32 129, label %2\n    i32 136, label %2\n    i32 133, label %2\n    i32 128, label %3\n    i32 137, label %3\n    i32 135, label %3\n    i32 132, label %4\n    i32 134, label %4\n    i32 130, label %5\n  ]\n\n2:                                                ; preds = %1, %1, %1, %1\n  br label %7\n\n3:                                                ; preds = %1, %1, %1\n  br label %7\n\n4:                                                ; preds = %1, %1\n  br label %7\n\n5:                                                ; preds = %1\n  br label %7\n\n6:                                                ; preds = %1\n  br label %7\n\n7:                                                ; preds = %1, %6, %5, %4, %3, %2\n  %8 = phi ptr [ @SSH2_FX_FAILURE, %6 ], [ @SSH2_FX_OP_UNSUPPORTED, %5 ], [ @SSH2_FX_BAD_MESSAGE, %4 ], [ @SSH2_FX_PERMISSION_DENIED, %3 ], [ @SSH2_FX_NO_SUCH_FILE, %2 ], [ @SSH2_FX_OK, %1 ]\n  %9 = load i32, ptr %8, align 4, !tbaa !5\n  ret i32 %9\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_led.c_ath5k_led_on.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ath5k_led_on\n\t.type\tath5k_led_on,@function\nath5k_led_on:                           # @ath5k_led_on\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovl\tATH_STAT_LEDSOFT(%rip), %edi\n\tmovl\t8(%rbx), %esi\n\tcallq\ttest_bit@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_1\n# %bb.2:\n\tmovl\t(%rbx), %edx\n\tmovl\t4(%rbx), %esi\n\tmovq\t%rbx, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tath5k_hw_set_gpio@PLT           # TAILCALL\n.LBB0_1:\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tath5k_led_on, .Lfunc_end0-ath5k_led_on\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tATH_STAT_LEDSOFT,@object        # @ATH_STAT_LEDSOFT\n\t.bss\n\t.globl\tATH_STAT_LEDSOFT\n\t.p2align\t2\nATH_STAT_LEDSOFT:\n\t.long\t0                               # 0x0\n\t.size\tATH_STAT_LEDSOFT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ath5k_led = type { i32, i32, i32 }\n\n@ATH_STAT_LEDSOFT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath5k_led_on], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ath5k_led_on(ptr noundef %0) #0 {\n  %2 = load i32, ptr @ATH_STAT_LEDSOFT, align 4, !tbaa !5\n  %3 = getelementptr inbounds %struct.ath5k_led, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 4, !tbaa !9\n  %5 = tail call i32 @test_bit(i32 noundef %2, i32 noundef %4) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %10, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.ath5k_led, ptr %0, i64 0, i32 1\n  %9 = load i32, ptr %8, align 4, !tbaa !11\n  tail call void @ath5k_hw_set_gpio(ptr noundef nonnull %0, i32 noundef %9, i32 noundef %5) #2\n  br label %10\n\n10:                                               ; preds = %7, %1\n  ret void\n}\n\ndeclare i32 @test_bit(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare void @ath5k_hw_set_gpio(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"ath5k_led\", !6, i64 0, !6, i64 4, !6, i64 8}\n!11 = !{!10, !6, i64 4}\n</s><s>", "file:": "./fastsocket/kernel/drivers/net/wireless/ath/ath5k/extr_led.c_ath5k_led_on.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ath5k_hw = type { i32, i32, i32 }\n\n@ATH_STAT_LEDSOFT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath5k_led_on], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ath5k_led_on(ptr noundef %0) #0 {\n  %2 = load i32, ptr @ATH_STAT_LEDSOFT, align 4, !tbaa !5\n  %3 = getelementptr inbounds %struct.ath5k_hw, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 4, !tbaa !9\n  %5 = tail call i32 @test_bit(i32 noundef %2, i32 noundef %4) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %12, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.ath5k_hw, ptr %0, i64 0, i32 1\n  %9 = load i32, ptr %8, align 4, !tbaa !11\n  %10 = load i32, ptr %0, align 4, !tbaa !12\n  %11 = tail call i32 @ath5k_hw_set_gpio(ptr noundef nonnull %0, i32 noundef %9, i32 noundef %10) #2\n  br label %12\n\n12:                                               ; preds = %1, %7\n  ret void\n}\n\ndeclare i32 @test_bit(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ath5k_hw_set_gpio(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"ath5k_hw\", !6, i64 0, !6, i64 4, !6, i64 8}\n!11 = !{!10, !6, i64 4}\n!12 = !{!10, !6, i64 0}\n"}]