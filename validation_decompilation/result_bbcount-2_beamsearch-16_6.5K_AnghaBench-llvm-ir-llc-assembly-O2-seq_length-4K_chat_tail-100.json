[{"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %40\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %40\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %2, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = add nsw i32 %28, %20\n  %30 = icmp slt i32 %29, %1\n  br i1 %30, label %33, label %31\n\n31:                                               ; preds = %27\n  %32 = icmp sgt i32 %23, %21\n  br i1 %32, label %40, label %33\n\n33:                                               ; preds = %31, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %21, %31 ]\n  %35 = phi i32 [ %20, %19 ], [ %20, %27 ], [ %21, %31 ]\n  %36 = icmp slt i32 %34, %1\n  br i1 %36, label %40, label %37\n\n37:                                               ; preds = %33\n  %38 = icmp sgt i32 %34, %2\n  br i1 %38, label %40, label %39\n\n39:                                               ; preds = %37\n  %40 = add nsw i32 %34, %1\n  %41 = add nsw i32 %35, %34\n  %42 = tail call i32 @llvm.smin.i32(i32 %34, i32 %1)\n  %43 = tail call i32 @llvm.smin.i32(i32 %41, i32 %2)\n  %44 = load i32, ptr %14, align 4, !tbaa !15\n  %45 = tail call i32 @SETARG_A(i32 noundef %44, i32 noundef %42) #2\n  %46 = load i32, ptr %14, align 4, !tbaa !15\n  %47 = sub nsw i32 %43, %42\n  %48 = tail call i32 @SETARG_B(i32 noundef %46, i32 noundef %47) #2\n  br label %49\n\n40:                                               ; preds = %33, %37, %8, %3\n  %41 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %42 = add nsw i32 %2, -1\n  %43 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %41, i32 noundef %1, i32 noundef %42, i32 noundef 0) #2\n  br label %49\n\n44:                                               ; preds = %39\n  ret void\n\n45:                                               ; preds = %39\n  %46 = phi i32 [ %43, %39 ], [ %42, %33 ]\n  %47 = phi i32 [ %44, %39 ], [ %41, %33 ]\n  %48 = phi i32 [ %45, %39 ], [ %43, %33 ]\n  %49 = tail call i32 @luaK_nil(ptr noundef nonnull %0, i32 noundef %46, i32 noundef %47)\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %37\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %31, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %26\n  br label %31\n\n31:                                               ; preds = %30, %26, %18\n  %32 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %20, %30 ]\n  %33 = phi i32 [ %24, %18 ], [ %24, %26 ], [ %20, %30 ]\n  %34 = icmp slt i32 %22, %1\n  %35 = icmp sgt i32 %22, %2\n  %36 = select i1 %34, i1 true, i1 %35\n  br i1 %36, label %37, label %39\n\n37:                                               ; preds = %31, %8, %3\n  %38 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %44\n\n39:                                               ; preds = %31\n  %40 = load i32, ptr %13, align 4, !tbaa !15\n  %41 = tail call i32 @llvm.smin.i32(i32 %22, i32 %1)\n  %42 = tail call i32 @llvm.smin.i32(i32 %33, i32 %20)\n  %43 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %38, i32 noundef %41, i32 noundef %42, i32 noundef 0) #2\n  br label %47\n\n44:                                               ; preds = %37, %47\n  %45 = phi i64 [ %48, %47 ], [ %38, %37 ]\n  %46 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %47\n\n47:                                               ; preds = %44, %39\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %40\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %40\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %31, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %27\n  br label %40\n\n31:                                               ; preds = %27, %19\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %2\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %40, label %35\n\n35:                                               ; preds = %31\n  %36 = add nsw i32 %23, %25\n  %37 = icmp slt i32 %23, %1\n  %38 = select i1 %37, i32 %23, i32 %1\n  %39 = select i1 %37, i32 %21, i32 %20\n  br label %40\n\n40:                                               ; preds = %35, %31, %30, %8, %3\n  %41 = phi i32 [ %2, %3 ], [ %2, %8 ], [ %2, %30 ], [ %2, %31 ], [ %39, %35 ]\n  %42 = phi i32 [ %1, %3 ], [ %1, %8 ], [ %20, %30 ], [ %23, %31 ], [ %38, %35 ]\n  %43 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %44 = add nsw i32 %4, -1\n  %45 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %43, i32 noundef %42, i32 noundef %41, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %39\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %39\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  br i1 %32, label %39, label %33\n\n33:                                               ; preds = %30, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %35 = phi i32 [ %20, %19 ], [ %21, %27 ], [ %20, %30 ]\n  %36 = icmp slt i32 %34, %1\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %33\n  %38 = icmp sgt i32 %34, %2\n  br i1 %38, label %39, label %42\n\n39:                                               ; preds = %33, %37, %30, %8, %3\n  %40 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %41 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %40, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %51\n\n42:                                               ; preds = %37\n  %43 = load i32, ptr %14, align 4, !tbaa !15\n  %44 = tail call i32 @SETARG_A(i32 noundef %43, i32 noundef %1) #2\n  %45 = load i32, ptr %14, align 4, !tbaa !15\n  %46 = sub nsw i32 %25, %1\n  %47 = tail call i32 @SETARG_B(i32 noundef %45, i32 noundef %46) #2\n  br label %51\n\n51:                                               ; preds = %42, %39\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/lua/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_main.c_brcms_b_write_template_ram.ll\"\n\t.globl\tbrcms_b_write_template_ram      # -- Begin function brcms_b_write_template_ram\n\t.p2align\t4, 0x90\n\t.type\tbrcms_b_write_template_ram,@function\nbrcms_b_write_template_ram:             # @brcms_b_write_template_ram\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rcx, %rbx\n\tmovl\t%edx, %ebp\n\tmovl\t%esi, %r15d\n\tmovq\t8(%rdi), %r14\n\tmovl\t(%rdi), %edx\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdi\n\tcallq\tbrcms_dbg_info@PLT\n\tmovl\ttplatewrptr(%rip), %edi\n\tcallq\tD11REGOFFS@PLT\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %esi\n\tmovl\t%r15d, %edx\n\tcallq\tbcma_write32@PLT\n\tmovl\tmaccontrol(%rip), %edi\n\tcallq\tD11REGOFFS@PLT\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %esi\n\tcallq\tbcma_read32@PLT\n\ttestl\t%ebp, %ebp\n\tjle\t.LBB0_6\n# %bb.1:                                # %.preheader\n\tmovl\t%eax, %r15d\n\tandl\tMCTL_BIGEND(%rip), %r15d\n\taddl\t$4, %ebp\n\tleaq\t12(%rsp), %r12\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_4:                                #   in Loop: Header=BB0_2 Depth=1\n\tcallq\tcpu_to_le32@PLT\n.LBB0_5:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\t%eax, 12(%rsp)\n\tmovl\ttplatewrdata(%rip), %edi\n\tcallq\tD11REGOFFS@PLT\n\tmovl\t12(%rsp), %edx\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %esi\n\tcallq\tbcma_write32@PLT\n\taddq\t$16, %rbx\n\taddl\t$-4, %ebp\n\tcmpl\t$4, %ebp\n\tjle\t.LBB0_6\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%r12, %rdi\n\tmovq\t%rbx, %rsi\n\tmovl\t$4, %edx\n\tcallq\tmemcpy@PLT\n\tmovl\t12(%rsp), %edi\n\ttestl\t%r15d, %r15d\n\tje\t.LBB0_4\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tcallq\tcpu_to_be32@PLT\n\tjmp\t.LBB0_5\n.LBB0_6:\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tbrcms_b_write_template_ram, .Lfunc_end0-brcms_b_write_template_ram\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"wl%d\\n\"\n\t.size\t.L.str, 6\n\n\t.type\ttplatewrptr,@object             # @tplatewrptr\n\t.bss\n\t.globl\ttplatewrptr\n\t.p2align\t2\ntplatewrptr:\n\t.long\t0                               # 0x0\n\t.size\ttplatewrptr, 4\n\n\t.type\tmaccontrol,@object              # @maccontrol\n\t.globl\tmaccontrol\n\t.p2align\t2\nmaccontrol:\n\t.long\t0                               # 0x0\n\t.size\tmaccontrol, 4\n\n\t.type\tMCTL_BIGEND,@object             # @MCTL_BIGEND\n\t.globl\tMCTL_BIGEND\n\t.p2align\t2\nMCTL_BIGEND:\n\t.long\t0                               # 0x0\n\t.size\tMCTL_BIGEND, 4\n\n\t.type\ttplatewrdata,@object            # @tplatewrdata\n\t.globl\ttplatewrdata\n\t.p2align\t2\ntplatewrdata:\n\t.long\t0                               # 0x0\n\t.size\ttplatewrdata, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %34\n\n17:                                               ; preds = %4, %29\n  %18 = phi i32 [ %30, %29 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %29 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %25, %27\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %33 = tail call i32 @D11REGOFFS(i32 noundef %32) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %33, i32 noundef %30) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  %35 = add i32 %18, -4\n  %36 = icmp sgt i32 %35, 3\n  br i1 %36, label %17, label %37, !llvm.loop !13\n\n37:                                               ; preds = %29\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %34\n\n17:                                               ; preds = %4, %29\n  %18 = phi i32 [ %30, %29 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %29 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %25, %27\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %33 = tail call i32 @D11REGOFFS(i32 noundef %32) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %33, i32 noundef %30) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  %35 = add i32 %18, -4\n  %36 = icmp sgt i32 %35, 3\n  br i1 %36, label %17, label %37, !llvm.loop !13\n\n37:                                               ; preds = %29\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %34\n\n17:                                               ; preds = %4, %29\n  %18 = phi i32 [ %30, %29 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %29 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %27, %25\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %33 = tail call i32 @D11REGOFFS(i32 noundef %32) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %33, i32 noundef %30) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  %35 = add i32 %18, -4\n  %36 = icmp sgt i32 %35, 3\n  br i1 %36, label %17, label %37, !llvm.loop !13\n\n37:                                               ; preds = %29\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %33\n\n17:                                               ; preds = %4, %27\n  %18 = phi i32 [ %29, %27 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %27 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %25, %27\n  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  br label %33\n\n33:                                               ; preds = %29, %4\n  %34 = phi i32 [ %15, %4 ], [ %32, %29 ]\n  %35 = phi ptr [ %3, %4 ], [ %31, %29 ]\n  %36 = phi i32 [ %2, %4 ], [ %18, %29 ]\n  %37 = icmp sgt i32 %36, 3\n  br i1 %37, label %38, label %43\n\n38:                                               ; preds = %33, %38\n  %39 = phi i32 [ %41, %38 ], [ %36, %33 ]\n  %40 = phi ptr [ %42, %38 ], [ %35, %33 ]\n  %41 = add nsw i32 %39, -4\n  %42 = getelementptr inbounds i32, ptr %40, i64 4\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %43 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %42, i32 noundef 4) #3\n  %44 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %47, label %45\n\n45:                                               ; preds = %38\n  %46 = call i32 @cpu_to_be32(i32 noundef %44) #3\n  br label %49\n\n47:                                               ; preds = %38\n  %48 = call i32 @cpu_to_le32(i32 noundef %44) #3\n  br label %49\n\n49:                                               ; preds = %47, %45\n  %50 = phi i32 [ %46, %45 ], [ %48, %47 ]\n  store i32 %50, ptr %5, align 4, !tbaa !12\n  %51 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %52 = call i32 @D11REGOFFS(i32 noundef %51) #3\n  %53 = load i32, ptr %5, align 4, !tbaa !12\n  %54 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %52, i32 noundef %53) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %55 = add nsw i32 %39, -4\n  %56 = icmp sgt i32 %55, 3\n  br i1 %56, label %38, label %57, !llvm.loop !13\n\n57:                                               ; preds = %49\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/drivers/net/wireless/brcm80211/brcmsmac/extr_main.c_brcms_b_write_template_ram.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %17 = and i32 %16, %15\n  %18 = icmp eq i32 %17, 0\n  %19 = icmp sgt i32 %2, 0\n  br i1 %19, label %20, label %38\n\n20:                                               ; preds = %4, %29\n  %21 = phi i32 [ %36, %29 ], [ %2, %4 ]\n  %22 = phi ptr [ %35, %29 ], [ %3, %4 ]\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %22, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %18, label %27, label %25\n\n25:                                               ; preds = %20\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %20\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %27, %25\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %32 = call i32 @D11REGOFFS(i32 noundef %31) #3\n  %33 = load i32, ptr %5, align 4, !tbaa !12\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %32, i32 noundef %33) #3\n  %35 = getelementptr inbounds i32, ptr %22, i64 4\n  %36 = add nsw i32 %21, -4\n  %37 = icmp sgt i32 %21, 4\n  br i1 %37, label %20, label %38, !llvm.loop !13\n\n38:                                               ; preds = %29, %4\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_siba_subr.c_siba_free_dinfo.ll\"\n\t.globl\tsiba_free_dinfo                 # -- Begin function siba_free_dinfo\n\t.p2align\t4, 0x90\n\t.type\tsiba_free_dinfo,@function\nsiba_free_dinfo:                        # @siba_free_dinfo\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %rbx\n\tmovl\t%esi, %r14d\n\tmovl\t%edi, %r15d\n\tleaq\t36(%rdx), %rdi\n\tcallq\tresource_list_free@PLT\n\tmovl\t32(%rbx), %edi\n\tcallq\tnitems@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.1:\n\txorl\t%ebp, %ebp\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_4:                                #   in Loop: Header=BB0_2 Depth=1\n\tincq\t%rbp\n\tmovl\t32(%rbx), %edi\n\tcallq\tnitems@PLT\n\tcmpq\t%rax, %rbp\n\tjae\t.LBB0_5\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t24(%rbx), %rax\n\tmovq\t(%rax,%rbp,8), %rcx\n\ttestq\t%rcx, %rcx\n\tje\t.LBB0_4\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\tSYS_RES_MEMORY(%rip), %esi\n\tmovq\t(%rbx), %rax\n\tmovl\t(%rax,%rbp,4), %edx\n\tmovl\t%r15d, %edi\n\tcallq\tbhnd_release_resource@PLT\n\tmovq\t24(%rbx), %rax\n\tmovq\t$0, (%rax,%rbp,8)\n\tmovq\t(%rbx), %rax\n\tmovl\t$-1, (%rax,%rbp,4)\n\tjmp\t.LBB0_4\n.LBB0_5:\n\tcmpq\t$0, 16(%rbx)\n\tje\t.LBB0_8\n# %bb.6:\n\tcmpl\t$0, 8(%rbx)\n\tje\t.LBB0_8\n# %bb.7:\n\tmovl\t12(%rbx), %edx\n\tmovl\t%r15d, %edi\n\tmovl\t%r14d, %esi\n\tcallq\tBHND_BUS_UNMAP_INTR@PLT\n.LBB0_8:\n\tmovl\tM_BHND(%rip), %esi\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tfree@PLT                        # TAILCALL\n.Lfunc_end0:\n\t.size\tsiba_free_dinfo, .Lfunc_end0-siba_free_dinfo\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSYS_RES_MEMORY,@object          # @SYS_RES_MEMORY\n\t.bss\n\t.globl\tSYS_RES_MEMORY\n\t.p2align\t2\nSYS_RES_MEMORY:\n\t.long\t0                               # 0x0\n\t.size\tSYS_RES_MEMORY, 4\n\n\t.type\tM_BHND,@object                  # @M_BHND\n\t.globl\tM_BHND\n\t.p2align\t2\nM_BHND:\n\t.long\t0                               # 0x0\n\t.size\tM_BHND, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.siba_devinfo = type { ptr, i32, i64, ptr, i32, i32 }\n\n@SYS_RES_MEMORY = dso_local local_unnamed_addr global i32 0, align 4\n@M_BHND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @siba_free_dinfo(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 5\n  %5 = tail call i32 @resource_list_free(ptr noundef nonnull %4) #3\n  %6 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 4\n  %7 = load i32, ptr %6, align 8, !tbaa !5\n  %8 = tail call i64 @nitems(i32 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %29, label %10\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  %12 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  br label %13\n\n13:                                               ; preds = %10, %24\n  %14 = phi i64 [ 0, %10 ], [ %25, %24 ]\n  %15 = load ptr, ptr %11, align 8, !tbaa !12\n  %16 = getelementptr inbounds i64, ptr %15, i64 %14\n  %17 = load i64, ptr %16, align 8, !tbaa !13\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %24, label %19\n\n19:                                               ; preds = %13\n  %20 = load i32, ptr @SYS_RES_MEMORY, align 4, !tbaa !14\n  %21 = load ptr, ptr %2, align 8, !tbaa !15\n  %22 = getelementptr inbounds i32, ptr %21, i64 %14\n  %23 = load i32, ptr %22, align 4, !tbaa !14\n  tail call i32 @bhnd_release_resource(i32 noundef %0, i32 noundef %20, i32 noundef %23) #3\n  store i64 0, ptr %16, align 8, !tbaa !13\n  %24 = load ptr, ptr %2, align 8, !tbaa !15\n  %25 = add nuw i64 %14, 1\n  %26 = load i32, ptr %24, align 4, !tbaa !14\n  %27 = getelementptr inbounds i32, ptr %24, i64 %25\n  store i32 -1, ptr %27, align 4, !tbaa !14\n  %28 = tail call i64 @nitems(i32 noundef %7) #3\n  br label %24\n\n29:                                               ; preds = %3\n  %30 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  %31 = load i64, ptr %30, align 8, !tbaa !12\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %39, label %33\n\n33:                                               ; preds = %29\n  %34 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 1\n  %35 = load i32, ptr %34, align 8, !tbaa !16\n  %36 = icmp eq i32 %35, 0\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %33\n  %38 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %38, i8 0, i64 16, i1 false)\n  br label %39\n\n39:                                               ; preds = %37, %33, %29\n  %40 = load i32, ptr @M_BHND, align 4, !tbaa !14\n  %41 = tail call i32 @free(ptr noundef nonnull %2, i32 noundef %40)\n  ret void\n}\n\ndeclare i32 @resource_list_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @nitems(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bhnd_release_resource(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { argmemonly nocallback nofree nounwind willreturn writeonly }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 32}\n!6 = !{!\"siba_devinfo\", !7, i64 0, !10, i64 8, !11, i64 16, !7, i64 24, !10, i64 32, !10, i64 36}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!6, !7, i64 24}\n!13 = !{!11, !11, i64 0}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !7, i64 0}\n!16 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.siba_devinfo = type { ptr, i32, i64, ptr, i32 }\n\n@SYS_RES_MEMORY = dso_local local_unnamed_addr global i32 0, align 4\n@M_BHND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @siba_free_dinfo(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 4\n  %5 = tail call i32 @resource_list_free(ptr noundef nonnull %4) #3\n  %6 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  %7 = load i32, ptr %6, align 8, !tbaa !5\n  %8 = tail call i64 @nitems(i32 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %29, label %10\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  %12 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  br label %13\n\n13:                                               ; preds = %10, %24\n  %14 = phi i64 [ 0, %10 ], [ %25, %24 ]\n  %15 = load ptr, ptr %12, align 8, !tbaa !12\n  %16 = getelementptr inbounds i64, ptr %15, i64 %14\n  %17 = load i64, ptr %16, align 8, !tbaa !13\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %24, label %19\n\n19:                                               ; preds = %13\n  %20 = load i32, ptr @SYS_RES_MEMORY, align 4, !tbaa !14\n  %21 = load ptr, ptr %2, align 8, !tbaa !15\n  %22 = getelementptr inbounds i32, ptr %21, i64 %14\n  %23 = load i32, ptr %22, align 4, !tbaa !14\n  tail call i32 @bhnd_release_resource(i32 noundef %0, i32 noundef %20, i32 noundef %23) #3\n  store i64 0, ptr %16, align 8, !tbaa !13\n  %24 = load ptr, ptr %2, align 8, !tbaa !15\n  %25 = add nuw i64 %14, 1\n  %26 = getelementptr inbounds i32, ptr %24, i64 %14\n  store i32 -1, ptr %26, align 4, !tbaa !14\n  %27 = load i32, ptr %6, align 8, !tbaa !5\n  %28 = tail call i64 @nitems(i32 noundef %27) #3\n  br label %13, !llvm.loop !16\n\n29:                                               ; preds = %3\n  %30 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  %31 = load i64, ptr %30, align 8, !tbaa !18\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %39, label %33\n\n33:                                               ; preds = %29\n  %34 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 1\n  %35 = load i32, ptr %34, align 8, !tbaa !19\n  %36 = icmp eq i32 %35, 0\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %33\n  %38 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 1\n  tail call void @llvm.assume(i1 %36)\n  %39 = load i32, ptr %38, align 8, !tbaa !19\n  tail call void @llvm.assume(i1 %36)\n  tail call void @llvm.assume(i1 %32)\n  tail call void @llvm.assume(i1 %32)\n  %40 = tail call i32 @BHND_BUS_UNMAP_INTR(i32 noundef %0, i32 noundef %1, i32 noundef %39) #3\n  br label %41\n\n41:                                               ; preds = %37\n  %42 = load i32, ptr @M_BHND, align 4, !tbaa !14\n  %43 = tail call i32 @free(ptr noundef nonnull %2, i32 noundef %42)\n  ret void\n}\n\ndeclare i32 @resource_list_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @nitems(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bhnd_release_resource(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @BHND_BUS_UNMAP_INTR(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.assume(i1 noundef) #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { inaccessiblememonly nocallback nofree nosync nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 32}\n!6 = !{!\"siba_devinfo\", !7, i64 0, !10, i64 8, !11, i64 16, !7, i64 24, !10, i64 32}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!11, !11, i64 0}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !7, i64 0}\n!16 = distinct !{!16, !17}\n!17 = !{!\"llvm.loop.mustprogress\"}\n!18 = !{!6, !11, i64 16}\n!19 = !{!6, !10, i64 8}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.siba_devinfo = type { ptr, i32, i64, ptr, i32, i32 }\n\n@SYS_RES_MEMORY = dso_local local_unnamed_addr global i32 0, align 4\n@M_BHND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @siba_free_dinfo(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 5\n  %5 = tail call i32 @resource_list_free(ptr noundef nonnull %4) #3\n  %6 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 4\n  %7 = load i32, ptr %6, align 8, !tbaa !5\n  %8 = tail call i64 @nitems(i32 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %29, label %10\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  %12 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  br label %13\n\n13:                                               ; preds = %10, %24\n  %14 = phi i64 [ 0, %10 ], [ %25, %24 ]\n  %15 = load ptr, ptr %11, align 8, !tbaa !12\n  %16 = getelementptr inbounds i64, ptr %15, i64 %14\n  %17 = load i64, ptr %16, align 8, !tbaa !13\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %24, label %19\n\n19:                                               ; preds = %13\n  %20 = load i32, ptr @SYS_RES_MEMORY, align 4, !tbaa !14\n  %21 = load ptr, ptr %2, align 8, !tbaa !15\n  %22 = getelementptr inbounds i32, ptr %21, i64 %14\n  %23 = load i32, ptr %22, align 4, !tbaa !14\n  tail call i32 @bhnd_release_resource(i32 noundef %0, i32 noundef %20, i32 noundef %23) #3\n  store i64 0, ptr %16, align 8, !tbaa !13\n  %24 = load ptr, ptr %2, align 8, !tbaa !15\n  %25 = add nuw i64 %14, 1\n  %26 = load i32, ptr %24, align 4, !tbaa !14\n  %27 = getelementptr inbounds i32, ptr %24, i64 %25\n  store i32 -1, ptr %27, align 4, !tbaa !14\n  %28 = tail call i64 @nitems(i32 noundef %7) #3\n  br label %24\n\n29:                                               ; preds = %3\n  %30 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  %31 = load i64, ptr %30, align 8, !tbaa !12\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %39, label %33\n\n33:                                               ; preds = %29\n  %34 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 1\n  %35 = load i32, ptr %34, align 8, !tbaa !16\n  %36 = icmp eq i32 %35, 0\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %33\n  %38 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %38, i8 0, i64 16, i1 false)\n  br label %39\n\n39:                                               ; preds = %37, %33, %29\n  %40 = load i32, ptr @M_BHND, align 4, !tbaa !14\n  %41 = tail call i32 @free(ptr noundef nonnull %2, i32 noundef %40)\n  ret void\n}\n\ndeclare i32 @resource_list_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @nitems(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bhnd_release_resource(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { argmemonly nocallback nofree nounwind willreturn writeonly }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 32}\n!6 = !{!\"siba_devinfo\", !7, i64 0, !10, i64 8, !11, i64 16, !7, i64 24, !10, i64 32, !10, i64 36}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!6, !7, i64 24}\n!13 = !{!11, !11, i64 0}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !7, i64 0}\n!16 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.siba_devinfo = type { ptr, i32, i64, ptr, i32 }\n\n@SYS_RES_MEMORY = dso_local local_unnamed_addr global i32 0, align 4\n@M_BHND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @siba_free_dinfo(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 4\n  %5 = tail call i32 @resource_list_free(ptr noundef nonnull %4) #3\n  %6 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  %7 = load i32, ptr %6, align 8, !tbaa !5\n  %8 = tail call i64 @nitems(i32 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %28, label %10\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  %12 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  br label %13\n\n13:                                               ; preds = %10, %23\n  %14 = phi i64 [ 0, %10 ], [ %24, %23 ]\n  %15 = load ptr, ptr %12, align 8, !tbaa !12\n  %16 = getelementptr inbounds i64, ptr %15, i64 %14\n  %17 = load i64, ptr %16, align 8, !tbaa !13\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %13\n  %20 = load i32, ptr @SYS_RES_MEMORY, align 4, !tbaa !14\n  %21 = load ptr, ptr %2, align 8, !tbaa !15\n  %22 = getelementptr inbounds i32, ptr %21, i64 %14\n  tail call void @bhnd_release_resource(i32 noundef %0, i32 noundef %20, i32 noundef %1, i64 noundef %17, ptr noundef %22) #3\n  store i64 0, ptr %16, align 8, !tbaa !13\n  %23 = load ptr, ptr %2, align 8, !tbaa !15\n  %24 = add nuw i64 %14, 1\n  %25 = getelementptr inbounds i32, ptr %23, i64 %14\n  store i32 -1, ptr %25, align 4, !tbaa !14\n  %26 = load i32, ptr %6, align 8, !tbaa !5\n  %27 = tail call i64 @nitems(i32 noundef %26) #3\n  br label %13, !llvm.loop !16\n\n28:                                               ; preds = %3\n  %29 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  %30 = load i64, ptr %29, align 8, !tbaa !18\n  %31 = icmp eq i64 %30, 0\n  br i1 %31, label %38, label %32\n\n32:                                               ; preds = %28\n  %33 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 1\n  %34 = load i32, ptr %33, align 8, !tbaa !19\n  %35 = icmp eq i32 %34, 0\n  br i1 %35, label %38, label %36\n\n36:                                               ; preds = %32\n  %37 = load i32, ptr %33, align 8, !tbaa !19\n  tail call void @BHND_BUS_UNMAP_INTR(i32 noundef %0, i32 noundef %1, i32 noundef %37) #3\n  br label %38\n\n38:                                               ; preds = %36, %32, %28\n  %39 = load i32, ptr @M_BHND, align 4, !tbaa !14\n  %40 = tail call i32 @free(ptr noundef nonnull %2, i32 noundef %39)\n  ret void\n}\n\ndeclare i32 @resource_list_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @nitems(i32 noundef) local_unnamed_addr #1\n\ndeclare void @bhnd_release_resource(i32 noundef, i32 noundef, i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @BHND_BUS_UNMAP_INTR(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 32}\n!6 = !{!\"siba_devinfo\", !7, i64 0, !10, i64 8, !11, i64 16, !7, i64 24, !10, i64 32}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"long\", !8, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!11, !11, i64 0}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !7, i64 0}\n!16 = distinct !{!16, !17}\n!17 = !{!\"llvm.loop.mustprogress\"}\n!18 = !{!6, !11, i64 16}\n!19 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/dev/bhnd/siba/extr_siba_subr.c_siba_free_dinfo.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.siba_devinfo = type { ptr, %struct.TYPE_4__, %struct.TYPE_3__, ptr, i32, i32 }\n%struct.TYPE_4__ = type { i32, i32 }\n%struct.TYPE_3__ = type { i64 }\n\n@SYS_RES_MEMORY = dso_local local_unnamed_addr global i32 0, align 4\n@M_BHND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @siba_free_dinfo(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 5\n  %5 = tail call i32 @resource_list_free(ptr noundef nonnull %4) #3\n  %6 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 4\n  %7 = load i32, ptr %6, align 8, !tbaa !5\n  %8 = tail call i64 @nitems(i32 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 3\n  br label %16\n\n12:                                               ; preds = %32, %3\n  %13 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 2\n  %14 = load i64, ptr %13, align 8, !tbaa !14\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %45, label %37\n\n16:                                               ; preds = %10, %32\n  %17 = phi i64 [ 0, %10 ], [ %33, %32 ]\n  %18 = load ptr, ptr %11, align 8, !tbaa !15\n  %19 = getelementptr inbounds ptr, ptr %18, i64 %17\n  %20 = load ptr, ptr %19, align 8, !tbaa !16\n  %21 = icmp eq ptr %20, null\n  br i1 %21, label %32, label %22\n\n22:                                               ; preds = %16\n  %23 = load i32, ptr @SYS_RES_MEMORY, align 4, !tbaa !17\n  %24 = load ptr, ptr %2, align 8, !tbaa !18\n  %25 = getelementptr inbounds i32, ptr %24, i64 %17\n  %26 = load i32, ptr %25, align 4, !tbaa !17\n  %27 = tail call i32 @bhnd_release_resource(i32 noundef %0, i32 noundef %23, i32 noundef %26, ptr noundef nonnull %20) #3\n  %28 = load ptr, ptr %11, align 8, !tbaa !15\n  %29 = getelementptr inbounds ptr, ptr %28, i64 %17\n  store ptr null, ptr %29, align 8, !tbaa !16\n  %30 = load ptr, ptr %2, align 8, !tbaa !18\n  %31 = getelementptr inbounds i32, ptr %30, i64 %17\n  store i32 -1, ptr %31, align 4, !tbaa !17\n  br label %32\n\n32:                                               ; preds = %16, %22\n  %33 = add nuw i64 %17, 1\n  %34 = load i32, ptr %6, align 8, !tbaa !5\n  %35 = tail call i64 @nitems(i32 noundef %34) #3\n  %36 = icmp ult i64 %33, %35\n  br i1 %36, label %16, label %12, !llvm.loop !19\n\n37:                                               ; preds = %12\n  %38 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 1\n  %39 = load i32, ptr %38, align 8, !tbaa !21\n  %40 = icmp eq i32 %39, 0\n  br i1 %40, label %45, label %41\n\n41:                                               ; preds = %37\n  %42 = getelementptr inbounds %struct.siba_devinfo, ptr %2, i64 0, i32 1, i32 1\n  %43 = load i32, ptr %42, align 4, !tbaa !22\n  %44 = tail call i32 @BHND_BUS_UNMAP_INTR(i32 noundef %0, i32 noundef %1, i32 noundef %43) #3\n  br label %45\n\n45:                                               ; preds = %41, %37, %12\n  %46 = load i32, ptr @M_BHND, align 4, !tbaa !17\n  %47 = tail call i32 @free(ptr noundef nonnull %2, i32 noundef %46)\n  ret void\n}\n\ndeclare i32 @resource_list_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @nitems(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bhnd_release_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @BHND_BUS_UNMAP_INTR(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 32}\n!6 = !{!\"siba_devinfo\", !7, i64 0, !10, i64 8, !12, i64 16, !7, i64 24, !11, i64 32, !11, i64 36}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_4__\", !11, i64 0, !11, i64 4}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!\"TYPE_3__\", !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n!14 = !{!6, !13, i64 16}\n!15 = !{!6, !7, i64 24}\n!16 = !{!7, !7, i64 0}\n!17 = !{!11, !11, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n!21 = !{!6, !11, i64 8}\n!22 = !{!6, !11, i64 12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_subsvtt.c_ConvertRubyNodeToSegment.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ConvertRubyNodeToSegment\n\t.type\tConvertRubyNodeToSegment,@function\nConvertRubyNodeToSegment:               # @ConvertRubyNodeToSegment\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t$0, 8(%rsp)\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_12\n# %bb.1:                                # %.preheader\n\tmovq\t%rdi, %rbx\n\tleaq\t8(%rsp), %r15\n\txorl\t%r14d, %r14d\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_3:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%rax, %r14\n.LBB0_10:                               #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t8(%rbx), %rbx\n\ttestq\t%rbx, %rbx\n\tje\t.LBB0_11\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t(%rbx), %rax\n\tcmpq\tNODE_TEXT(%rip), %rax\n\tje\t.LBB0_3\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\tcmpq\tNODE_TAG(%rip), %rax\n\tjne\t.LBB0_10\n# %bb.5:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\t8(%rbx), %edi\n\tmovl\t$.L.str, %esi\n\tcallq\tstrcmp@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_6\n.LBB0_9:                                #   in Loop: Header=BB0_2 Depth=1\n\txorl\t%r14d, %r14d\n\tjmp\t.LBB0_10\n.LBB0_6:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t(%rbx), %rax\n\ttestq\t%rax, %rax\n\tje\t.LBB0_9\n# %bb.7:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t(%rax), %rsi\n\tcmpq\tNODE_TEXT(%rip), %rsi\n\tjne\t.LBB0_9\n# %bb.8:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%r14, %rdi\n\tcallq\ttext_segment_ruby_New@PLT\n\tmovq\t%rax, (%r15)\n\ttestq\t%rax, %rax\n\tcmovneq\t%rax, %r15\n\tjmp\t.LBB0_9\n.LBB0_11:\n\tmovq\t8(%rsp), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_12\n# %bb.13:\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\ttext_segment_FromRuby@PLT       # TAILCALL\n.LBB0_12:\n\t.cfi_def_cfa_offset 48\n\txorl\t%eax, %eax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tConvertRubyNodeToSegment, .Lfunc_end0-ConvertRubyNodeToSegment\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNODE_TEXT,@object               # @NODE_TEXT\n\t.bss\n\t.globl\tNODE_TEXT\n\t.p2align\t3\nNODE_TEXT:\n\t.quad\t0                               # 0x0\n\t.size\tNODE_TEXT, 8\n\n\t.type\tNODE_TAG,@object                # @NODE_TAG\n\t.globl\tNODE_TAG\n\t.p2align\t3\nNODE_TAG:\n\t.quad\t0                               # 0x0\n\t.size\tNODE_TAG, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"rt\"\n\t.size\t.L.str, 3\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_9__ = type { i64, i32 }\n\n@NODE_TEXT = dso_local local_unnamed_addr global i64 0, align 8\n@NODE_TAG = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"rt\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ConvertRubyNodeToSegment], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ConvertRubyNodeToSegment(ptr noundef readonly %0) #0 {\n  %2 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #3\n  store ptr null, ptr %2, align 8, !tbaa !5\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %31, label %4\n\n4:                                                ; preds = %1, %27\n  %5 = phi ptr [ %29, %27 ], [ %0, %1 ]\n  %6 = phi ptr [ %28, %27 ], [ null, %1 ]\n  %7 = load i64, ptr %5, align 8, !tbaa !9\n  %8 = load i64, ptr @NODE_TEXT, align 8, !tbaa !12\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %10, label %16\n\n10:                                               ; preds = %4\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !13\n  %13 = tail call i32 @strcmp(ptr noundef %12, ptr noundef nonnull @.str) #3\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %15, label %27\n\n15:                                               ; preds = %10\n  store ptr %6, ptr %2, align 8, !tbaa !5\n  br label %16\n\n16:                                               ; preds = %15, %4\n  %17 = phi ptr [ %6, %4 ], [ %12, %15 ]\n  %18 = load i64, ptr %5, align 8, !tbaa !9\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %27, label %20\n\n20:                                               ; preds = %16\n  %21 = inttoptr i64 %18 to ptr\n  %22 = load i64, ptr %21, align 8, !tbaa !14\n  %23 = load i64, ptr @NODE_TEXT, align 8, !tbaa !12\n  %24 = icmp eq i64 %22, %23\n  br i1 %24, label %25, label %27\n\n25:                                               ; preds = %20\n  %26 = tail call ptr @text_segment_ruby_New(ptr noundef %17, ptr noundef nonnull %21) #3\n  store ptr %26, ptr %2, align 8, !tbaa !5\n  br label %27\n\n27:                                               ; preds = %16, %25, %20, %10\n  %28 = phi ptr [ %26, %25 ], [ %17, %20 ], [ %17, %10 ], [ %6, %16 ]\n  %29 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %30 = load ptr, ptr %29, align 8, !tbaa !13\n  br i1 %3, label %31, label %4, !llvm.loop !16\n\n31:                                               ; preds = %27, %1\n  %32 = phi ptr [ %6, %1 ], [ %28, %27 ]\n  %33 = load ptr, ptr %2, align 8, !tbaa !5\n  %34 = icmp eq ptr %33, null\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %31\n  %36 = tail call ptr @text_segment_FromRuby(ptr noundef %33) #3\n  br label %37\n\n37:                                               ; preds = %35, %31\n  %38 = phi ptr [ %36, %35 ], [ null, %31 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #3\n  ret ptr %38\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @strcmp(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @text_segment_ruby_New(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @text_segment_FromRuby(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_10__\", !6, i64 0, !6, i64 8}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!15, !11, i64 0}\n!15 = !{!\"TYPE_9__\", !11, i64 0, !11, i64 8}\n!16 = distinct !{!16, !17}\n!17 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_11__ = type { i64, i32 }\n\n@NODE_TEXT = dso_local local_unnamed_addr global i64 0, align 8\n@NODE_TAG = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"rt\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ConvertRubyNodeToSegment], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ConvertRubyNodeToSegment(ptr noundef readonly %0) #0 {\n  %2 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #3\n  store ptr null, ptr %2, align 8, !tbaa !5\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %31, label %4\n\n4:                                                ; preds = %1, %26\n  %5 = phi ptr [ %28, %26 ], [ %0, %1 ]\n  %6 = phi ptr [ %27, %26 ], [ null, %1 ]\n  %7 = load i64, ptr %5, align 8, !tbaa !9\n  %8 = load i64, ptr @NODE_TEXT, align 8, !tbaa !12\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %10, label %16\n\n10:                                               ; preds = %4\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !13\n  %13 = tail call i32 @strcmp(ptr noundef %12, ptr noundef nonnull @.str) #3\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %15, label %26\n\n15:                                               ; preds = %10\n  store ptr %6, ptr %2, align 8, !tbaa !5\n  br label %26\n\n16:                                               ; preds = %4\n  %17 = load i64, ptr @NODE_TAG, align 8, !tbaa !12\n  %18 = icmp eq i64 %7, %17\n  br i1 %18, label %19, label %26\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 1\n  %21 = load i32, ptr %20, align 8, !tbaa !14\n  %22 = tail call i32 @strcmp(ptr noundef %21, ptr noundef nonnull @.str) #3\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %5, align 8, !tbaa !9\n  br label %26\n\n26:                                               ; preds = %19, %24, %10, %16\n  %27 = phi ptr [ %6, %16 ], [ %6, %10 ], [ %6, %19 ], [ %25, %24 ]\n  %28 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %29 = load ptr, ptr %28, align 8, !tbaa !13\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %4, !llvm.loop !15\n\n31:                                               ; preds = %26, %1\n  %32 = load ptr, ptr %2, align 8, !tbaa !5\n  %33 = icmp eq ptr %32, null\n  br i1 %33, label %36, label %34\n\n34:                                               ; preds = %31\n  %35 = tail call ptr @text_segment_FromRuby(ptr noundef nonnull %32) #3\n  br label %36\n\n36:                                               ; preds = %34, %31\n  %37 = phi ptr [ %35, %34 ], [ null, %31 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #3\n  ret ptr %37\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @strcmp(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @text_segment_FromRuby(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_11__\", !11, i64 0, !12, i64 8}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!10, !12, i64 8}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_11__ = type { i64, i32 }\n\n@NODE_TEXT = dso_local local_unnamed_addr global i64 0, align 8\n@NODE_TAG = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"rt\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ConvertRubyNodeToSegment], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ConvertRubyNodeToSegment(ptr noundef readonly %0) #0 {\n  %2 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #3\n  store ptr null, ptr %2, align 8, !tbaa !5\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %31, label %4\n\n4:                                                ; preds = %1, %26\n  %5 = phi ptr [ %28, %26 ], [ %0, %1 ]\n  %6 = phi ptr [ %27, %26 ], [ null, %1 ]\n  %7 = load i64, ptr %5, align 8, !tbaa !9\n  %8 = load i64, ptr @NODE_TEXT, align 8, !tbaa !12\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %10, label %16\n\n10:                                               ; preds = %4\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !13\n  %13 = tail call i32 @strcmp(ptr noundef %12, ptr noundef nonnull @.str) #3\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %15, label %26\n\n15:                                               ; preds = %10\n  store ptr %6, ptr %2, align 8, !tbaa !5\n  br label %26\n\n16:                                               ; preds = %4\n  %17 = load i64, ptr @NODE_TAG, align 8, !tbaa !12\n  %18 = icmp eq i64 %7, %17\n  br i1 %18, label %19, label %26\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 1\n  %21 = load i32, ptr %20, align 8, !tbaa !14\n  %22 = tail call i32 @strcmp(ptr noundef %21, ptr noundef nonnull @.str) #3\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %5, align 8, !tbaa !9\n  br label %26\n\n26:                                               ; preds = %19, %24, %10, %16\n  %27 = phi ptr [ %6, %16 ], [ %6, %10 ], [ %6, %19 ], [ %25, %24 ]\n  %28 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %29 = load ptr, ptr %28, align 8, !tbaa !13\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %4, !llvm.loop !15\n\n31:                                               ; preds = %26, %1\n  %32 = load ptr, ptr %2, align 8, !tbaa !5\n  %33 = icmp eq ptr %32, null\n  br i1 %33, label %36, label %34\n\n34:                                               ; preds = %31\n  %35 = tail call ptr @text_segment_FromRuby(ptr noundef nonnull %32) #3\n  br label %36\n\n36:                                               ; preds = %34, %31\n  %37 = phi ptr [ %35, %34 ], [ null, %31 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #3\n  ret ptr %37\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @strcmp(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @text_segment_FromRuby(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_11__\", !11, i64 0, !12, i64 8}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!10, !12, i64 8}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_11__ = type { i64, i32 }\n\n@NODE_TEXT = dso_local local_unnamed_addr global i64 0, align 8\n@NODE_TAG = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"rt\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ConvertRubyNodeToSegment], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ConvertRubyNodeToSegment(ptr noundef readonly %0) #0 {\n  %2 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #3\n  store ptr null, ptr %2, align 8, !tbaa !5\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %31, label %4\n\n4:                                                ; preds = %1, %27\n  %5 = phi ptr [ %29, %27 ], [ %0, %1 ]\n  %6 = phi ptr [ %28, %27 ], [ null, %1 ]\n  %7 = load i64, ptr %5, align 8, !tbaa !9\n  %8 = load i64, ptr @NODE_TEXT, align 8, !tbaa !12\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %10, label %16\n\n10:                                               ; preds = %4\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !13\n  %13 = tail call i32 @strcmp(ptr noundef %12, ptr noundef nonnull @.str) #3\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %15, label %27\n\n15:                                               ; preds = %10\n  store ptr %6, ptr %2, align 8, !tbaa !5\n  br label %27\n\n16:                                               ; preds = %4\n  %17 = load i64, ptr @NODE_TAG, align 8, !tbaa !12\n  %18 = icmp eq i64 %7, %17\n  br i1 %18, label %19, label %27\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 1\n  %21 = load i32, ptr %20, align 8, !tbaa !14\n  %22 = tail call i32 @strcmp(ptr noundef %21, ptr noundef nonnull @.str) #3\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %24, label %27\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %5, align 8, !tbaa !9\n  %26 = inttoptr i64 %25 to ptr\n  br label %27\n\n27:                                               ; preds = %19, %24, %15, %16, %10\n  %28 = phi ptr [ %6, %10 ], [ %6, %16 ], [ %6, %19 ], [ %26, %24 ], [ %6, %15 ]\n  %29 = getelementptr inbounds %struct.TYPE_10__, ptr %5, i64 0, i32 1\n  %30 = load ptr, ptr %29, align 8, !tbaa !13\n  br i1 %3, label %31, label %4, !llvm.loop !15\n\n31:                                               ; preds = %27, %1\n  %32 = phi ptr [ %6, %1 ], [ %28, %27 ]\n  %33 = load ptr, ptr %2, align 8, !tbaa !5\n  %34 = icmp eq ptr %33, null\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %31\n  %36 = tail call ptr @text_segment_FromRuby(ptr noundef %33) #3\n  br label %37\n\n37:                                               ; preds = %35, %31\n  %38 = phi ptr [ %36, %35 ], [ null, %31 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #3\n  ret ptr %38\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @strcmp(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @text_segment_FromRuby(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_11__\", !11, i64 0, !12, i64 8}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!10, !12, i64 8}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/vlc/modules/codec/webvtt/extr_subsvtt.c_ConvertRubyNodeToSegment.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_11__ = type { ptr, i32 }\n%struct.TYPE_12__ = type { i64, ptr }\n\n@NODE_TEXT = dso_local local_unnamed_addr global i64 0, align 8\n@NODE_TAG = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"rt\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ConvertRubyNodeToSegment], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ConvertRubyNodeToSegment(ptr noundef readonly %0) #0 {\n  %2 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)\n  store ptr null, ptr %2, align 8, !tbaa !5\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %44, label %4\n\n4:                                                ; preds = %1, %33\n  %5 = phi ptr [ %37, %33 ], [ %0, %1 ]\n  %6 = phi ptr [ %35, %33 ], [ %2, %1 ]\n  %7 = phi ptr [ %34, %33 ], [ null, %1 ]\n  %8 = load i64, ptr %5, align 8, !tbaa !9\n  %9 = load i64, ptr @NODE_TEXT, align 8, !tbaa !12\n  %10 = icmp eq i64 %8, %9\n  br i1 %10, label %11, label %13\n\n11:                                               ; preds = %4\n  %12 = inttoptr i64 %8 to ptr\n  br label %33\n\n13:                                               ; preds = %4\n  %14 = load i64, ptr @NODE_TAG, align 8, !tbaa !12\n  %15 = icmp eq i64 %8, %14\n  br i1 %15, label %16, label %33\n\n16:                                               ; preds = %13\n  %17 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 1\n  %18 = load i32, ptr %17, align 8, !tbaa !13\n  %19 = tail call i32 @strcmp(i32 noundef %18, ptr noundef nonnull @.str) #3\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %21, label %33\n\n21:                                               ; preds = %16\n  %22 = load ptr, ptr %5, align 8, !tbaa !16\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %33, label %24\n\n24:                                               ; preds = %21\n  %25 = load i64, ptr %22, align 8, !tbaa !17\n  %26 = load i64, ptr @NODE_TEXT, align 8, !tbaa !12\n  %27 = icmp eq i64 %25, %26\n  br i1 %27, label %28, label %33\n\n28:                                               ; preds = %24\n  %29 = inttoptr i64 %25 to ptr\n  %30 = tail call ptr @text_segment_ruby_New(ptr noundef %7, ptr noundef %29) #3\n  store ptr %30, ptr %6, align 8, !tbaa !5\n  %31 = icmp eq ptr %30, null\n  %32 = select i1 %31, ptr %6, ptr %30\n  br label %33\n\n33:                                               ; preds = %16, %21, %24, %28, %11, %13\n  %34 = phi ptr [ %12, %11 ], [ %7, %13 ], [ null, %28 ], [ null, %24 ], [ null, %21 ], [ null, %16 ]\n  %35 = phi ptr [ %6, %11 ], [ %6, %13 ], [ %32, %28 ], [ %6, %24 ], [ %6, %21 ], [ %6, %16 ]\n  %36 = getelementptr inbounds %struct.TYPE_12__, ptr %5, i64 0, i32 1\n  %37 = load ptr, ptr %36, align 8, !tbaa !19\n  %38 = icmp eq ptr %37, null\n  br i1 %38, label %39, label %4, !llvm.loop !20\n\n39:                                               ; preds = %33\n  %40 = load ptr, ptr %2, align 8, !tbaa !5\n  %41 = icmp eq ptr %40, null\n  br i1 %41, label %44, label %42\n\n42:                                               ; preds = %39\n  %43 = tail call ptr @text_segment_FromRuby(ptr noundef nonnull %40) #3\n  br label %44\n\n44:                                               ; preds = %1, %39, %42\n  %45 = phi ptr [ %43, %42 ], [ null, %39 ], [ null, %1 ]\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)\n  ret ptr %45\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @strcmp(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @text_segment_ruby_New(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @text_segment_FromRuby(ptr noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_12__\", !11, i64 0, !6, i64 8}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!14, !15, i64 8}\n!14 = !{!\"TYPE_11__\", !6, i64 0, !15, i64 8}\n!15 = !{!\"int\", !7, i64 0}\n!16 = !{!14, !6, i64 0}\n!17 = !{!18, !11, i64 0}\n!18 = !{!\"TYPE_9__\", !11, i64 0}\n!19 = !{!10, !6, i64 8}\n!20 = distinct !{!20, !21}\n!21 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_aml8726_wdt.c_aml8726_wdt_watchdog.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function aml8726_wdt_watchdog\n\t.type\taml8726_wdt_watchdog,@function\naml8726_wdt_watchdog:                   # @aml8726_wdt_watchdog\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdx, %r14\n\tmovl\t%esi, %ebx\n\tmovq\t%rdi, %r15\n\tcallq\tAML_WDT_LOCK@PLT\n\tmovl\tWD_INTERVAL(%rip), %ecx\n\tandl\t%ebx, %ecx\n\tmovl\t$1, %eax\n                                        # kill: def $cl killed $cl killed $ecx\n\tshll\t%cl, %eax\n\ttestl\t%ebx, %ebx\n\tje\t.LBB0_3\n# %bb.1:\n\taddl\t$9999, %eax                     # imm = 0x270F\n\tcltq\n\timulq\t$1759218605, %rax, %rbx         # imm = 0x68DB8BAD\n\tmovq\t%rbx, %rax\n\tshrq\t$63, %rax\n\tsarq\t$44, %rbx\n\taddl\t%eax, %ebx\n\tmovl\tAML_WDT_CTRL_TERMINAL_CNT_MASK(%rip), %eax\n\tmovl\tAML_WDT_CTRL_TERMINAL_CNT_SHIFT(%rip), %ecx\n\tsarl\t%cl, %eax\n\tcmpl\t%eax, %ebx\n\tjle\t.LBB0_2\n.LBB0_3:\n\tmovl\tAML_WDT_CTRL_REG(%rip), %ebx\n\tmovq\t%r15, %rdi\n\tmovl\t%ebx, %esi\n\tcallq\tCSR_READ_4@PLT\n\tmovl\tAML_WDT_CTRL_EN(%rip), %edx\n\torl\tAML_WDT_CTRL_IRQ_EN(%rip), %edx\n\tnotl\t%edx\n\tandl\t%eax, %edx\n\tmovq\t%r15, %rdi\n\tmovl\t%ebx, %esi\n\tcallq\tCSR_WRITE_4@PLT\n\tjmp\t.LBB0_4\n.LBB0_2:\n                                        # kill: def $cl killed $cl killed $ecx\n\tshll\t%cl, %ebx\n\torl\tAML_WDT_CTRL_CPU_WDRESET_MASK(%rip), %ebx\n\torl\tAML_WDT_CTRL_EN(%rip), %ebx\n\tmovl\tAML_WDT_RESET_REG(%rip), %esi\n\tmovq\t%r15, %rdi\n\txorl\t%edx, %edx\n\tcallq\tCSR_WRITE_4@PLT\n\tmovl\tAML_WDT_CTRL_REG(%rip), %esi\n\tmovq\t%r15, %rdi\n\tmovl\t%ebx, %edx\n\tcallq\tCSR_WRITE_4@PLT\n\tmovl\t$0, (%r14)\n.LBB0_4:\n\tmovq\t%r15, %rdi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\tAML_WDT_UNLOCK@PLT              # TAILCALL\n.Lfunc_end0:\n\t.size\taml8726_wdt_watchdog, .Lfunc_end0-aml8726_wdt_watchdog\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tWD_INTERVAL,@object             # @WD_INTERVAL\n\t.bss\n\t.globl\tWD_INTERVAL\n\t.p2align\t2\nWD_INTERVAL:\n\t.long\t0                               # 0x0\n\t.size\tWD_INTERVAL, 4\n\n\t.type\tAML_WDT_CTRL_TERMINAL_CNT_MASK,@object # @AML_WDT_CTRL_TERMINAL_CNT_MASK\n\t.globl\tAML_WDT_CTRL_TERMINAL_CNT_MASK\n\t.p2align\t2\nAML_WDT_CTRL_TERMINAL_CNT_MASK:\n\t.long\t0                               # 0x0\n\t.size\tAML_WDT_CTRL_TERMINAL_CNT_MASK, 4\n\n\t.type\tAML_WDT_CTRL_TERMINAL_CNT_SHIFT,@object # @AML_WDT_CTRL_TERMINAL_CNT_SHIFT\n\t.globl\tAML_WDT_CTRL_TERMINAL_CNT_SHIFT\n\t.p2align\t2\nAML_WDT_CTRL_TERMINAL_CNT_SHIFT:\n\t.long\t0                               # 0x0\n\t.size\tAML_WDT_CTRL_TERMINAL_CNT_SHIFT, 4\n\n\t.type\tAML_WDT_CTRL_CPU_WDRESET_MASK,@object # @AML_WDT_CTRL_CPU_WDRESET_MASK\n\t.globl\tAML_WDT_CTRL_CPU_WDRESET_MASK\n\t.p2align\t2\nAML_WDT_CTRL_CPU_WDRESET_MASK:\n\t.long\t0                               # 0x0\n\t.size\tAML_WDT_CTRL_CPU_WDRESET_MASK, 4\n\n\t.type\tAML_WDT_CTRL_EN,@object         # @AML_WDT_CTRL_EN\n\t.globl\tAML_WDT_CTRL_EN\n\t.p2align\t2\nAML_WDT_CTRL_EN:\n\t.long\t0                               # 0x0\n\t.size\tAML_WDT_CTRL_EN, 4\n\n\t.type\tAML_WDT_RESET_REG,@object       # @AML_WDT_RESET_REG\n\t.globl\tAML_WDT_RESET_REG\n\t.p2align\t2\nAML_WDT_RESET_REG:\n\t.long\t0                               # 0x0\n\t.size\tAML_WDT_RESET_REG, 4\n\n\t.type\tAML_WDT_CTRL_REG,@object        # @AML_WDT_CTRL_REG\n\t.globl\tAML_WDT_CTRL_REG\n\t.p2align\t2\nAML_WDT_CTRL_REG:\n\t.long\t0                               # 0x0\n\t.size\tAML_WDT_CTRL_REG, 4\n\n\t.type\tAML_WDT_CTRL_IRQ_EN,@object     # @AML_WDT_CTRL_IRQ_EN\n\t.globl\tAML_WDT_CTRL_IRQ_EN\n\t.p2align\t2\nAML_WDT_CTRL_IRQ_EN:\n\t.long\t0                               # 0x0\n\t.size\tAML_WDT_CTRL_IRQ_EN, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WD_INTERVAL = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_CPU_WDRESET_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_EN = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_RESET_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_IRQ_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @aml8726_wdt_watchdog], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @aml8726_wdt_watchdog(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call i32 @AML_WDT_LOCK(ptr noundef %0) #2\n  %5 = load i32, ptr @WD_INTERVAL, align 4, !tbaa !5\n  %6 = and i32 %5, %1\n  %7 = shl nuw i32 1, %6\n  %8 = icmp eq i32 %1, 0\n  br i1 %8, label %25, label %9\n\n9:                                                ; preds = %3\n  %10 = add nuw nsw i32 %7, 9999\n  %11 = sdiv i32 %10, 10000\n  %12 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_MASK, align 4, !tbaa !5\n  %13 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_SHIFT, align 4, !tbaa !5\n  %14 = ashr i32 %12, %13\n  %15 = icmp sgt i32 %11, %14\n  br i1 %15, label %25, label %16\n\n16:                                               ; preds = %9\n  %17 = load i32, ptr @AML_WDT_CTRL_CPU_WDRESET_MASK, align 4, !tbaa !5\n  %18 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %19 = or i32 %18, %17\n  %20 = or i32 %19, %11\n  %21 = load i32, ptr @AML_WDT_RESET_REG, align 4, !tbaa !5\n  %22 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %21, i32 noundef 0) #2\n  %23 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %24 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %23, i32 noundef %20) #2\n  store i32 0, ptr %2, align 4, !tbaa !5\n  br label %32\n\n25:                                               ; preds = %9, %3\n  %26 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %27 = tail call i32 @CSR_READ_4(ptr noundef %0, i32 noundef %26) #2\n  %28 = load i32, ptr @AML_WDT_CTRL_IRQ_EN, align 4, !tbaa !5\n  %29 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %30 = or i32 %29, %28\n  %31 = xor i32 %30, -1\n  %32 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %26, i32 noundef %31) #2\n  br label %34\n\n33:                                               ; preds = %34\n  %34 = tail call i32 @AML_WDT_UNLOCK(ptr noundef %0) #2\n  ret void\n\n35:                                               ; preds = %34\n  %36 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %37 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %36, i32 noundef %35) #2\n  %38 = load i32, ptr @AML_WDT_CTRL_IRQ_EN, align 4, !tbaa !5\n  %39 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %40 = or i32 %39, %38\n  %41 = xor i32 %40, -1\n  %42 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %36, i32 noundef %41) #2\n  %43 = load i32, ptr %2, align 4, !tbaa !5\n  %44 = add nsw i32 %43, 1\n  store i32 %44, ptr %2, align 4, !tbaa !5\n  %45 = tail call i32 @AML_WDT_UNLOCK(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @AML_WDT_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_WRITE_4(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_READ_4(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @AML_WDT_UNLOCK(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WD_INTERVAL = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_CPU_WDRESET_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_EN = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_RESET_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_IRQ_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @aml8726_wdt_watchdog], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @aml8726_wdt_watchdog(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call i32 @AML_WDT_LOCK(ptr noundef %0) #2\n  %5 = load i32, ptr @WD_INTERVAL, align 4, !tbaa !5\n  %6 = and i32 %5, %1\n  %7 = shl nuw i32 1, %6\n  %8 = icmp eq i32 %1, 0\n  br i1 %8, label %26, label %9\n\n9:                                                ; preds = %3\n  %10 = add nuw nsw i32 %7, 9999\n  %11 = sdiv i32 %10, 10000\n  %12 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_MASK, align 4, !tbaa !5\n  %13 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_SHIFT, align 4, !tbaa !5\n  %14 = ashr i32 %12, %13\n  %15 = icmp sgt i32 %11, %14\n  br i1 %15, label %26, label %16\n\n16:                                               ; preds = %9\n  %17 = load i32, ptr @AML_WDT_CTRL_CPU_WDRESET_MASK, align 4, !tbaa !5\n  %18 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %19 = or i32 %18, %17\n  %20 = or i32 %19, %7\n  %21 = load i32, ptr @AML_WDT_RESET_REG, align 4, !tbaa !5\n  %22 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %21, i32 noundef 0) #2\n  %23 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %24 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %23, i32 noundef %20) #2\n  store i32 0, ptr %2, align 4, !tbaa !5\n  br label %33\n\n26:                                               ; preds = %9, %3\n  %27 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %28 = tail call i32 @CSR_READ_4(ptr noundef %0, i32 noundef %27) #2\n  %29 = load i32, ptr @AML_WDT_CTRL_IRQ_EN, align 4, !tbaa !5\n  %30 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %31 = or i32 %30, %29\n  %32 = xor i32 %31, -1\n  %33 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %27, i32 noundef %32) #2\n  br label %34\n\n34:                                               ; preds = %26, %16\n  %35 = tail call i32 @AML_WDT_UNLOCK(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @AML_WDT_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_WRITE_4(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_READ_4(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @AML_WDT_UNLOCK(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WD_INTERVAL = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_CPU_WDRESET_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_EN = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_RESET_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_IRQ_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @aml8726_wdt_watchdog], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @aml8726_wdt_watchdog(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call i32 @AML_WDT_LOCK(ptr noundef %0) #2\n  %5 = load i32, ptr @WD_INTERVAL, align 4, !tbaa !5\n  %6 = and i32 %5, %1\n  %7 = shl nuw i32 1, %6\n  %8 = icmp eq i32 %1, 0\n  br i1 %8, label %25, label %9\n\n9:                                                ; preds = %3\n  %10 = add nuw nsw i32 %7, 9999\n  %11 = sdiv i32 %10, 10000\n  %12 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_MASK, align 4, !tbaa !5\n  %13 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_SHIFT, align 4, !tbaa !5\n  %14 = ashr i32 %12, %13\n  %15 = icmp sgt i32 %11, %14\n  br i1 %15, label %25, label %16\n\n16:                                               ; preds = %9\n  %17 = load i32, ptr @AML_WDT_CTRL_CPU_WDRESET_MASK, align 4, !tbaa !5\n  %18 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %19 = or i32 %18, %17\n  %20 = or i32 %19, %11\n  %21 = load i32, ptr @AML_WDT_RESET_REG, align 4, !tbaa !5\n  %22 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %21, i32 noundef 0) #2\n  %23 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %24 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %23, i32 noundef %20) #2\n  store i32 0, ptr %2, align 4, !tbaa !5\n  br label %31\n\n25:                                               ; preds = %9, %3\n  %26 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %27 = tail call i32 @CSR_READ_4(ptr noundef %0, i32 noundef %26) #2\n  %28 = load i32, ptr @AML_WDT_CTRL_IRQ_EN, align 4, !tbaa !5\n  %29 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %30 = or i32 %29, %28\n  %30 = xor i32 %30, -1\n  %31 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %26, i32 noundef %30) #2\n  br label %32\n\n32:                                               ; preds = %25, %16\n  %33 = tail call i32 @AML_WDT_UNLOCK(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @AML_WDT_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_WRITE_4(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_READ_4(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @AML_WDT_UNLOCK(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WD_INTERVAL = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_CPU_WDRESET_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_EN = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_RESET_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_IRQ_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @aml8726_wdt_watchdog], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @aml8726_wdt_watchdog(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call i32 @AML_WDT_LOCK(ptr noundef %0) #2\n  %5 = load i32, ptr @WD_INTERVAL, align 4, !tbaa !5\n  %6 = and i32 %5, %1\n  %7 = shl nuw i32 1, %6\n  %8 = icmp eq i32 %1, 0\n  br i1 %8, label %25, label %9\n\n9:                                                ; preds = %3\n  %10 = add nuw nsw i32 %7, 9999\n  %11 = sdiv i32 %10, 10000\n  %12 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_MASK, align 4, !tbaa !5\n  %13 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_SHIFT, align 4, !tbaa !5\n  %14 = ashr i32 %12, %13\n  %15 = icmp sgt i32 %11, %14\n  br i1 %15, label %25, label %16\n\n16:                                               ; preds = %9\n  %17 = load i32, ptr @AML_WDT_CTRL_CPU_WDRESET_MASK, align 4, !tbaa !5\n  %18 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %19 = or i32 %18, %17\n  %20 = or i32 %19, %11\n  %21 = load i32, ptr @AML_WDT_RESET_REG, align 4, !tbaa !5\n  %22 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %21, i32 noundef 0) #2\n  %23 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %24 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %23, i32 noundef %20) #2\n  store i32 0, ptr %2, align 4, !tbaa !5\n  br label %31\n\n25:                                               ; preds = %9, %3\n  %26 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %27 = tail call i32 @CSR_READ_4(ptr noundef %0, i32 noundef %26) #2\n  %28 = load i32, ptr @AML_WDT_CTRL_IRQ_EN, align 4, !tbaa !5\n  %29 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %30 = or i32 %29, %28\n  %30 = xor i32 %30, -1\n  %31 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %26, i32 noundef %30) #2\n  br label %32\n\n32:                                               ; preds = %25, %16\n  %33 = tail call i32 @AML_WDT_UNLOCK(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @AML_WDT_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_WRITE_4(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_READ_4(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @AML_WDT_UNLOCK(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/arm/amlogic/aml8726/extr_aml8726_wdt.c_aml8726_wdt_watchdog.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@WD_INTERVAL = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_TERMINAL_CNT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_CPU_WDRESET_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_EN = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_RESET_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_REG = dso_local local_unnamed_addr global i32 0, align 4\n@AML_WDT_CTRL_IRQ_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @aml8726_wdt_watchdog], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @aml8726_wdt_watchdog(ptr noundef %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #0 {\n  %4 = tail call i32 @AML_WDT_LOCK(ptr noundef %0) #2\n  %5 = load i32, ptr @WD_INTERVAL, align 4, !tbaa !5\n  %6 = and i32 %5, %1\n  %7 = shl nuw i32 1, %6\n  %8 = add nuw nsw i32 %7, 9999\n  %9 = sdiv i32 %8, 10000\n  %10 = icmp eq i32 %1, 0\n  br i1 %10, label %26, label %11\n\n11:                                               ; preds = %3\n  %12 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_MASK, align 4, !tbaa !5\n  %13 = load i32, ptr @AML_WDT_CTRL_TERMINAL_CNT_SHIFT, align 4, !tbaa !5\n  %14 = ashr i32 %12, %13\n  %15 = icmp sgt i32 %9, %14\n  br i1 %15, label %26, label %16\n\n16:                                               ; preds = %11\n  %17 = load i32, ptr @AML_WDT_CTRL_CPU_WDRESET_MASK, align 4, !tbaa !5\n  %18 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %19 = shl i32 %9, %13\n  %20 = or i32 %17, %19\n  %21 = or i32 %20, %18\n  %22 = load i32, ptr @AML_WDT_RESET_REG, align 4, !tbaa !5\n  %23 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %22, i32 noundef 0) #2\n  %24 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %25 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %24, i32 noundef %21) #2\n  store i32 0, ptr %2, align 4, !tbaa !5\n  br label %35\n\n26:                                               ; preds = %11, %3\n  %27 = load i32, ptr @AML_WDT_CTRL_REG, align 4, !tbaa !5\n  %28 = tail call i32 @CSR_READ_4(ptr noundef %0, i32 noundef %27) #2\n  %29 = load i32, ptr @AML_WDT_CTRL_IRQ_EN, align 4, !tbaa !5\n  %30 = load i32, ptr @AML_WDT_CTRL_EN, align 4, !tbaa !5\n  %31 = or i32 %30, %29\n  %32 = xor i32 %31, -1\n  %33 = and i32 %28, %32\n  %34 = tail call i32 @CSR_WRITE_4(ptr noundef %0, i32 noundef %27, i32 noundef %33) #2\n  br label %35\n\n35:                                               ; preds = %26, %16\n  %36 = tail call i32 @AML_WDT_UNLOCK(ptr noundef %0) #2\n  ret void\n}\n\ndeclare i32 @AML_WDT_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_WRITE_4(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @CSR_READ_4(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @AML_WDT_UNLOCK(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_if_ath_btcoex_mci.c_ath_btcoex_mci_event.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ath_btcoex_mci_event\n\t.type\tath_btcoex_mci_event,@function\nath_btcoex_mci_event:                   # @ath_btcoex_mci_event\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tcmpl\t$0, 4(%rdi)\n\tje\t.LBB0_6\n# %bb.1:\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tmovl\t(%rdi), %edi\n\tmovl\tHAL_MCI_STATE_NEED_FLUSH_BT_INFO(%rip), %esi\n\txorl\t%edx, %edx\n\tcallq\tath_hal_btcoex_mci_state@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.2:\n\tmovl\t$0, 4(%rsp)\n\tmovl\t(%rbx), %edi\n\tmovl\tHAL_MCI_STATE_ENABLE(%rip), %esi\n\txorl\t%edx, %edx\n\tcallq\tath_hal_btcoex_mci_state@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.3:\n\tmovl\tATH_DEBUG_BTCOEX(%rip), %esi\n\tmovl\t$.L.str, %edx\n\tmovq\t%rbx, %rdi\n\tcallq\tDPRINTF@PLT\n\tmovl\t(%rbx), %edi\n\tmovl\tHAL_MCI_STATE_NEED_FLUSH_BT_INFO(%rip), %esi\n\tleaq\t4(%rsp), %rdx\n\tcallq\tath_hal_btcoex_mci_state@PLT\n\tmovl\t(%rbx), %edi\n\tmovl\tHAL_MCI_STATE_SEND_STATUS_QUERY(%rip), %esi\n\txorl\t%edx, %edx\n\tcallq\tath_hal_btcoex_mci_state@PLT\n.LBB0_4:\n\tcmpq\t%r14, ATH_COEX_EVENT_BT_NOOP(%rip)\n\tjne\t.LBB0_6\n# %bb.5:\n\tmovl\tATH_DEBUG_BTCOEX(%rip), %esi\n\tmovl\t$.L.str.1, %edx\n\tmovq\t%rbx, %rdi\n\tcallq\tDPRINTF@PLT\n.LBB0_6:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tath_btcoex_mci_event, .Lfunc_end0-ath_btcoex_mci_event\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tHAL_MCI_STATE_NEED_FLUSH_BT_INFO,@object # @HAL_MCI_STATE_NEED_FLUSH_BT_INFO\n\t.bss\n\t.globl\tHAL_MCI_STATE_NEED_FLUSH_BT_INFO\n\t.p2align\t2\nHAL_MCI_STATE_NEED_FLUSH_BT_INFO:\n\t.long\t0                               # 0x0\n\t.size\tHAL_MCI_STATE_NEED_FLUSH_BT_INFO, 4\n\n\t.type\tHAL_MCI_STATE_ENABLE,@object    # @HAL_MCI_STATE_ENABLE\n\t.globl\tHAL_MCI_STATE_ENABLE\n\t.p2align\t2\nHAL_MCI_STATE_ENABLE:\n\t.long\t0                               # 0x0\n\t.size\tHAL_MCI_STATE_ENABLE, 4\n\n\t.type\tATH_DEBUG_BTCOEX,@object        # @ATH_DEBUG_BTCOEX\n\t.globl\tATH_DEBUG_BTCOEX\n\t.p2align\t2\nATH_DEBUG_BTCOEX:\n\t.long\t0                               # 0x0\n\t.size\tATH_DEBUG_BTCOEX, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"(MCI) Flush BT profile\\n\"\n\t.size\t.L.str, 24\n\n\t.type\tHAL_MCI_STATE_SEND_STATUS_QUERY,@object # @HAL_MCI_STATE_SEND_STATUS_QUERY\n\t.bss\n\t.globl\tHAL_MCI_STATE_SEND_STATUS_QUERY\n\t.p2align\t2\nHAL_MCI_STATE_SEND_STATUS_QUERY:\n\t.long\t0                               # 0x0\n\t.size\tHAL_MCI_STATE_SEND_STATUS_QUERY, 4\n\n\t.type\tATH_COEX_EVENT_BT_NOOP,@object  # @ATH_COEX_EVENT_BT_NOOP\n\t.globl\tATH_COEX_EVENT_BT_NOOP\n\t.p2align\t3\nATH_COEX_EVENT_BT_NOOP:\n\t.quad\t0                               # 0x0\n\t.size\tATH_COEX_EVENT_BT_NOOP, 8\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"(MCI) BT_NOOP\\n\"\n\t.size\t.L.str.1, 15\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ath_softc = type { i32, i32 }\n\n@HAL_MCI_STATE_NEED_FLUSH_BT_INFO = dso_local local_unnamed_addr global i32 0, align 4\n@HAL_MCI_STATE_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_DEBUG_BTCOEX = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [24 x i8] c\"(MCI) Flush BT profile\\0A\\00\", align 1\n@HAL_MCI_STATE_SEND_STATUS_QUERY = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_COEX_EVENT_BT_NOOP = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [15 x i8] c\"(MCI) BT_NOOP\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath_btcoex_mci_event], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ath_btcoex_mci_event(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = alloca i32, align 4\n  %4 = getelementptr inbounds %struct.ath_softc, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %27, label %7\n\n7:                                                ; preds = %2\n  %8 = load i32, ptr %0, align 4, !tbaa !10\n  %9 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  %10 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %8, i32 noundef %9, i32 noundef 0) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %23, label %12\n\n12:                                               ; preds = %7\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #2\n  store i32 0, ptr %3, align 4, !tbaa !11\n  %13 = load i32, ptr %0, align 4, !tbaa !10\n  %14 = load i32, ptr @HAL_MCI_STATE_ENABLE, align 4, !tbaa !11\n  %15 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %13, i32 noundef %14, i32 noundef 0) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %20, label %17\n\n17:                                               ; preds = %12\n  %18 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  %19 = tail call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %18, ptr noundef nonnull @.str) #2\n  br label %20\n\n20:                                               ; preds = %17, %12\n  %21 = load i32, ptr %0, align 4, !tbaa !10\n  %22 = load i32, ptr @HAL_MCI_STATE_SEND_STATUS_QUERY, align 4, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #2\n  br label %23\n\n23:                                               ; preds = %20, %7\n  %24 = load i64, ptr @ATH_COEX_EVENT_BT_NOOP, align 8, !tbaa !12\n  %25 = icmp eq i64 %24, %1\n  br i1 %25, label %26, label %27\n\n26:                                               ; preds = %23\n  %27 = tail call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %28, ptr noundef nonnull @.str.1) #2\n  br label %27\n\n28 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  ret void\n}\n\ndeclare i64 @ath_hal_btcoex_mci_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3\n\ndeclare i32 @DPRINTF(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ath_softc\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ath_softc = type { i32, i32 }\n\n@HAL_MCI_STATE_NEED_FLUSH_BT_INFO = dso_local local_unnamed_addr global i32 0, align 4\n@HAL_MCI_STATE_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_DEBUG_BTCOEX = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [24 x i8] c\"(MCI) Flush BT profile\\0A\\00\", align 1\n@HAL_MCI_STATE_SEND_STATUS_QUERY = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_COEX_EVENT_BT_NOOP = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [15 x i8] c\"(MCI) BT_NOOP\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath_btcoex_mci_event], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ath_btcoex_mci_event(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = alloca i32, align 4\n  %4 = getelementptr inbounds %struct.ath_softc, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %27, label %7\n\n7:                                                ; preds = %2\n  %8 = load i32, ptr %0, align 4, !tbaa !10\n  %9 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  %10 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %8, i32 noundef %9, i32 noundef 0) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %22, label %12\n\n12:                                               ; preds = %7\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #2\n  store i32 0, ptr %3, align 4, !tbaa !11\n  %13 = load i32, ptr %0, align 4, !tbaa !10\n  %14 = load i32, ptr @HAL_MCI_STATE_ENABLE, align 4, !tbaa !11\n  %15 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %13, i32 noundef %14, i32 noundef 0) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %22, label %17\n\n17:                                               ; preds = %12\n  %18 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  %19 = tail call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %18, ptr noundef nonnull @.str) #2\n  %20 = load i32, ptr %0, align 4, !tbaa !10\n  %21 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #2\n  br label %22\n\n22:                                               ; preds = %17, %12, %7\n  %23 = load i64, ptr @ATH_COEX_EVENT_BT_NOOP, align 8, !tbaa !12\n  %24 = icmp eq i64 %23, %1\n  br i1 %24, label %25, label %27\n\n25:                                               ; preds = %22\n  %26 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  br label %27\n\n27:                                               ; preds = %22, %25, %2\n  ret void\n}\n\ndeclare i64 @ath_hal_btcoex_mci_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3\n\ndeclare i32 @DPRINTF(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ath_softc\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ath_softc = type { i32, i32 }\n\n@HAL_MCI_STATE_NEED_FLUSH_BT_INFO = dso_local local_unnamed_addr global i32 0, align 4\n@HAL_MCI_STATE_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_DEBUG_BTCOEX = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [24 x i8] c\"(MCI) Flush BT profile\\0A\\00\", align 1\n@HAL_MCI_STATE_SEND_STATUS_QUERY = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_COEX_EVENT_BT_NOOP = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [15 x i8] c\"(MCI) BT_NOOP\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath_btcoex_mci_event], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ath_btcoex_mci_event(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = alloca i32, align 4\n  %4 = getelementptr inbounds %struct.ath_softc, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %27, label %7\n\n7:                                                ; preds = %2\n  %8 = load i32, ptr %0, align 4, !tbaa !10\n  %9 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  %10 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %8, i32 noundef %9, i32 noundef 0) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %22, label %12\n\n12:                                               ; preds = %7\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #2\n  store i32 0, ptr %3, align 4, !tbaa !11\n  %13 = load i32, ptr %0, align 4, !tbaa !10\n  %14 = load i32, ptr @HAL_MCI_STATE_ENABLE, align 4, !tbaa !11\n  %15 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %13, i32 noundef %14, i32 noundef 0) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %22, label %17\n\n17:                                               ; preds = %12\n  %18 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  %19 = tail call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %18, ptr noundef nonnull @.str) #2\n  %20 = load i32, ptr %0, align 4, !tbaa !10\n  %21 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #2\n  br label %22\n\n22:                                               ; preds = %17, %12, %7\n  %23 = load i64, ptr @ATH_COEX_EVENT_BT_NOOP, align 8, !tbaa !12\n  %24 = icmp eq i64 %23, %1\n  br i1 %24, label %25, label %27\n\n25:                                               ; preds = %22\n  %26 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  br label %27\n\n27:                                               ; preds = %22, %25, %2\n  ret void\n}\n\ndeclare i64 @ath_hal_btcoex_mci_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3\n\ndeclare i32 @DPRINTF(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ath_softc\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ath_softc = type { i32, i32 }\n\n@HAL_MCI_STATE_NEED_FLUSH_BT_INFO = dso_local local_unnamed_addr global i32 0, align 4\n@HAL_MCI_STATE_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_DEBUG_BTCOEX = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [24 x i8] c\"(MCI) Flush BT profile\\0A\\00\", align 1\n@HAL_MCI_STATE_SEND_STATUS_QUERY = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_COEX_EVENT_BT_NOOP = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [15 x i8] c\"(MCI) BT_NOOP\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath_btcoex_mci_event], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ath_btcoex_mci_event(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = alloca i32, align 4\n  %4 = getelementptr inbounds %struct.ath_softc, ptr %0, i64 0, i32 1\n  %5 = load i32, ptr %4, align 4, !tbaa !5\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %26, label %7\n\n7:                                                ; preds = %2\n  %8 = load i32, ptr %0, align 4, !tbaa !10\n  %9 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  %10 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %8, i32 noundef %9, i32 noundef 0) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %22, label %12\n\n12:                                               ; preds = %7\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #2\n  store i32 0, ptr %3, align 4, !tbaa !11\n  %13 = load i32, ptr %0, align 4, !tbaa !10\n  %14 = load i32, ptr @HAL_MCI_STATE_ENABLE, align 4, !tbaa !11\n  %15 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %13, i32 noundef %14, i32 noundef 0) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %22, label %17\n\n17:                                               ; preds = %12\n  %18 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  %19 = tail call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %18, ptr noundef nonnull @.str) #2\n  %20 = load i32, ptr %0, align 4, !tbaa !10\n  %21 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #2\n  br label %22\n\n22:                                               ; preds = %17, %12, %7\n  %23 = load i64, ptr @ATH_COEX_EVENT_BT_NOOP, align 8, !tbaa !12\n  %24 = icmp eq i64 %23, %1\n  br i1 %24, label %25, label %26\n\n25:                                               ; preds = %22\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #2\n  %26 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  %27 = tail call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %26, ptr noundef nonnull @.str.1) #2\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #2\n  br label %26\n\n28:                                               ; preds = %25\n  ret void\n}\n\ndeclare i64 @ath_hal_btcoex_mci_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3\n\ndeclare i32 @DPRINTF(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ath_softc\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/dev/ath/extr_if_ath_btcoex_mci.c_ath_btcoex_mci_event.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ath_softc = type { i32, i32 }\n\n@HAL_MCI_STATE_NEED_FLUSH_BT_INFO = dso_local local_unnamed_addr global i32 0, align 4\n@HAL_MCI_STATE_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_DEBUG_BTCOEX = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [24 x i8] c\"(MCI) Flush BT profile\\0A\\00\", align 1\n@HAL_MCI_STATE_SEND_STATUS_QUERY = dso_local local_unnamed_addr global i32 0, align 4\n@ATH_COEX_EVENT_BT_NOOP = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [15 x i8] c\"(MCI) BT_NOOP\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath_btcoex_mci_event], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ath_btcoex_mci_event(ptr noundef %0, i64 noundef %1, ptr nocapture readnone %2) #0 {\n  %4 = alloca i32, align 4\n  %5 = getelementptr inbounds %struct.ath_softc, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !5\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %34, label %8\n\n8:                                                ; preds = %3\n  %9 = load i32, ptr %0, align 4, !tbaa !10\n  %10 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  %11 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %9, i32 noundef %10, ptr noundef null) #3\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %28, label %13\n\n13:                                               ; preds = %8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  store i32 0, ptr %4, align 4, !tbaa !11\n  %14 = load i32, ptr %0, align 4, !tbaa !10\n  %15 = load i32, ptr @HAL_MCI_STATE_ENABLE, align 4, !tbaa !11\n  %16 = tail call i64 @ath_hal_btcoex_mci_state(i32 noundef %14, i32 noundef %15, ptr noundef null) #3\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %27, label %18\n\n18:                                               ; preds = %13\n  %19 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  %20 = tail call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %19, ptr noundef nonnull @.str) #3\n  %21 = load i32, ptr %0, align 4, !tbaa !10\n  %22 = load i32, ptr @HAL_MCI_STATE_NEED_FLUSH_BT_INFO, align 4, !tbaa !11\n  %23 = call i64 @ath_hal_btcoex_mci_state(i32 noundef %21, i32 noundef %22, ptr noundef nonnull %4) #3\n  %24 = load i32, ptr %0, align 4, !tbaa !10\n  %25 = load i32, ptr @HAL_MCI_STATE_SEND_STATUS_QUERY, align 4, !tbaa !11\n  %26 = call i64 @ath_hal_btcoex_mci_state(i32 noundef %24, i32 noundef %25, ptr noundef null) #3\n  br label %27\n\n27:                                               ; preds = %18, %13\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  br label %28\n\n28:                                               ; preds = %27, %8\n  %29 = load i64, ptr @ATH_COEX_EVENT_BT_NOOP, align 8, !tbaa !12\n  %30 = icmp eq i64 %29, %1\n  br i1 %30, label %31, label %34\n\n31:                                               ; preds = %28\n  %32 = load i32, ptr @ATH_DEBUG_BTCOEX, align 4, !tbaa !11\n  %33 = call i32 @DPRINTF(ptr noundef nonnull %0, i32 noundef %32, ptr noundef nonnull @.str.1) #3\n  br label %34\n\n34:                                               ; preds = %3, %31, %28\n  ret void\n}\n\ndeclare i64 @ath_hal_btcoex_mci_state(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2\n\ndeclare i32 @DPRINTF(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ath_softc\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_assoc.c_lbs_try_associate.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function lbs_try_associate\n\t.type\tlbs_try_associate,@function\nlbs_try_associate:                      # @lbs_try_associate\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tmovl\tRADIO_PREAMBLE_LONG(%rip), %r15d\n\tmovl\tLBS_DEB_ASSOC(%rip), %edi\n\tcallq\tlbs_deb_enter@PLT\n\tcmpl\t$150994943, (%rbx)              # imm = 0x8FFFFFF\n\tjg\t.LBB0_2\n# %bb.1:\n\tmovl\t4(%r14), %esi\n\tmovl\t8(%rbx), %edx\n\tmovq\t%rbx, %rdi\n\tcallq\tlbs_set_authentication@PLT\n\tmovl\t%eax, %ebp\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_7\n.LBB0_2:\n\tmovl\tWLAN_CAPABILITY_SHORT_PREAMBLE(%rip), %eax\n\ttestl\t%eax, 4(%rbx)\n\tje\t.LBB0_5\n# %bb.3:\n\ttestl\t%eax, (%r14)\n\tje\t.LBB0_5\n# %bb.4:\n\tmovl\tRADIO_PREAMBLE_SHORT(%rip), %r15d\n.LBB0_5:\n\tmovq\t%rbx, %rdi\n\tmovl\t%r15d, %esi\n\tmovl\t$1, %edx\n\tcallq\tlbs_set_radio@PLT\n\tmovl\t%eax, %ebp\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_7\n# %bb.6:\n\tmovl\tCMD_802_11_ASSOCIATE(%rip), %edx\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\tlbs_associate@PLT\n\tmovl\t%eax, %ebp\n.LBB0_7:\n\tmovl\tLBS_DEB_ASSOC(%rip), %edi\n\tmovl\t$.L.str, %esi\n\tmovl\t%ebp, %edx\n\tcallq\tlbs_deb_leave_args@PLT\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tlbs_try_associate, .Lfunc_end0-lbs_try_associate\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tRADIO_PREAMBLE_LONG,@object     # @RADIO_PREAMBLE_LONG\n\t.bss\n\t.globl\tRADIO_PREAMBLE_LONG\n\t.p2align\t2\nRADIO_PREAMBLE_LONG:\n\t.long\t0                               # 0x0\n\t.size\tRADIO_PREAMBLE_LONG, 4\n\n\t.type\tLBS_DEB_ASSOC,@object           # @LBS_DEB_ASSOC\n\t.globl\tLBS_DEB_ASSOC\n\t.p2align\t2\nLBS_DEB_ASSOC:\n\t.long\t0                               # 0x0\n\t.size\tLBS_DEB_ASSOC, 4\n\n\t.type\tWLAN_CAPABILITY_SHORT_PREAMBLE,@object # @WLAN_CAPABILITY_SHORT_PREAMBLE\n\t.globl\tWLAN_CAPABILITY_SHORT_PREAMBLE\n\t.p2align\t2\nWLAN_CAPABILITY_SHORT_PREAMBLE:\n\t.long\t0                               # 0x0\n\t.size\tWLAN_CAPABILITY_SHORT_PREAMBLE, 4\n\n\t.type\tRADIO_PREAMBLE_SHORT,@object    # @RADIO_PREAMBLE_SHORT\n\t.globl\tRADIO_PREAMBLE_SHORT\n\t.p2align\t2\nRADIO_PREAMBLE_SHORT:\n\t.long\t0                               # 0x0\n\t.size\tRADIO_PREAMBLE_SHORT, 4\n\n\t.type\tCMD_802_11_ASSOCIATE,@object    # @CMD_802_11_ASSOCIATE\n\t.globl\tCMD_802_11_ASSOCIATE\n\t.p2align\t2\nCMD_802_11_ASSOCIATE:\n\t.long\t0                               # 0x0\n\t.size\tCMD_802_11_ASSOCIATE, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"ret %d\"\n\t.size\t.L.str, 7\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.lbs_private = type { i32, i32, i32 }\n%struct.lbs_802_11_security = type { i32, i32 }\n\n@RADIO_PREAMBLE_LONG = dso_local local_unnamed_addr global i32 0, align 4\n@LBS_DEB_ASSOC = dso_local local_unnamed_addr global i32 0, align 4\n@WLAN_CAPABILITY_SHORT_PREAMBLE = dso_local local_unnamed_addr global i32 0, align 4\n@RADIO_PREAMBLE_SHORT = dso_local local_unnamed_addr global i32 0, align 4\n@CMD_802_11_ASSOCIATE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [7 x i8] c\"ret %d\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @lbs_try_associate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @lbs_try_associate(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @RADIO_PREAMBLE_LONG, align 4, !tbaa !5\n  %4 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %5 = tail call i32 @lbs_deb_enter(i32 noundef %4) #2\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  %7 = icmp slt i32 %6, 150994944\n  br i1 %7, label %8, label %13\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.lbs_private, ptr %1, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !13\n  br label %16\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @WLAN_CAPABILITY_SHORT_PREAMBLE, align 4, !tbaa !5\n  %15 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 1\n  br label %20\n\n16:                                               ; preds = %8\n  %17 = tail call i32 @lbs_set_authentication(ptr noundef nonnull %0, i32 noundef %10, i32 noundef %12) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %13, label %29\n\n19:                                               ; preds = %20\n  br label %29\n\n20:                                               ; preds = %16\n  %21 = load i32, ptr %15, align 4, !tbaa !14\n  %22 = and i32 %21, %14\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %20\n  %25 = load i32, ptr %1, align 4, !tbaa !15\n  %26 = and i32 %25, %14\n  br i1 %26, label %27, label %27\n\n27:                                               ; preds = %24, %20\n  %28 = load i32, ptr @RADIO_PREAMBLE_SHORT, align 4, !tbaa !5\n  br label %29\n\n29:                                               ; preds = %16, %27, %19\n  %30 = phi i32 [ %17, %19 ], [ %28, %27 ], [ %3, %16 ]\n  %31 = tail call i32 @lbs_set_radio(ptr noundef nonnull %0, i32 noundef %30, i32 noundef 1) #2\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %29\n  %34 = load i32, ptr @CMD_802_11_ASSOCIATE, align 4, !tbaa !5\n  %35 = tail call i32 @lbs_associate(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %34) #2\n  br label %36\n\n36:                                               ; preds = %29, %33\n  %37 = phi i32 [ %31, %29 ], [ %35, %33 ]\n  %38 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %39 = tail call i32 @lbs_deb_leave_args(i32 noundef %38, ptr noundef nonnull @.str, i32 noundef %37) #2\n  ret i32 %37\n}\n\ndeclare i32 @lbs_deb_enter(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_set_authentication(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_set_radio(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_associate(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_deb_leave_args(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"lbs_private\", !6, i64 0, !6, i64 4, !6, i64 8}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"lbs_802_11_security\", !6, i64 0, !6, i64 4}\n!13 = !{!10, !6, i64 8}\n!14 = !{!10, !6, i64 4}\n!15 = !{!12, !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.lbs_private = type { i32, i32, i32 }\n%struct.lbs_802_11_security = type { i32, i32 }\n\n@RADIO_PREAMBLE_LONG = dso_local local_unnamed_addr global i32 0, align 4\n@LBS_DEB_ASSOC = dso_local local_unnamed_addr global i32 0, align 4\n@WLAN_CAPABILITY_SHORT_PREAMBLE = dso_local local_unnamed_addr global i32 0, align 4\n@RADIO_PREAMBLE_SHORT = dso_local local_unnamed_addr global i32 0, align 4\n@CMD_802_11_ASSOCIATE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [7 x i8] c\"ret %d\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @lbs_try_associate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @lbs_try_associate(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @RADIO_PREAMBLE_LONG, align 4, !tbaa !5\n  %4 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %5 = tail call i32 @lbs_deb_enter(i32 noundef %4) #2\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  %7 = icmp slt i32 %6, 150994944\n  br i1 %7, label %8, label %13\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.lbs_private, ptr %1, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !13\n  br label %16\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @WLAN_CAPABILITY_SHORT_PREAMBLE, align 4, !tbaa !5\n  %15 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 1\n  br label %20\n\n16:                                               ; preds = %8\n  %17 = tail call i32 @lbs_set_authentication(ptr noundef nonnull %0, i32 noundef %10, i32 noundef %12) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %13, label %29\n\n19:                                               ; preds = %20\n  br label %29\n\n20:                                               ; preds = %16\n  %21 = load i32, ptr %15, align 4, !tbaa !14\n  %22 = and i32 %21, %14\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %29, label %24\n\n24:                                               ; preds = %20\n  %25 = load i32, ptr %1, align 4, !tbaa !15\n  %26 = and i32 %25, %14\n  %27 = icmp eq i32 %26, 0\n  %28 = load i32, ptr @RADIO_PREAMBLE_SHORT, align 4\n  br i1 %27, label %29, label %24.1\n\n29:                                               ; preds = %24, %20, %16, %19\n  %30 = phi i32 [ %17, %19 ], [ %17, %16 ], [ %3, %20 ], [ %28, %24 ]\n  %31 = tail call i32 @lbs_set_radio(ptr noundef nonnull %0, i32 noundef %30, i32 noundef 1) #2\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %29\n  %34 = load i32, ptr @CMD_802_11_ASSOCIATE, align 4, !tbaa !5\n  %35 = tail call i32 @lbs_associate(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %34) #2\n  br label %36\n\n36:                                               ; preds = %29, %33\n  %37 = phi i32 [ %31, %29 ], [ %35, %33 ]\n  %38 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %39 = tail call i32 @lbs_deb_leave_args(i32 noundef %38, ptr noundef nonnull @.str, i32 noundef %37) #2\n  ret i32 %37\n\n40:                                               ; preds = %43\n  %41 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %42 = tail call i32 @lbs_deb_leave_args(i32 noundef %41, ptr noundef nonnull @.str, i32 noundef %44) #2\n  ret i32 %44\n\n43:                                               ; preds = %40\n  %44 = phi i32 [ %45, %40 ], [ %37, %43 ]\n  %45 = add nsw i32 %44, 1\n  %46 = icmp eq i32 %45, 3\n  br i1 %46, label %40, label %47, !llvm.loop !16\n\n47:                                               ; preds = %43\n  %48 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %49 = tail call i32 @lbs_deb_leave_args(i32 noundef %48, ptr noundef nonnull @.str, i32 noundef %44) #2\n  ret i32 %44\n\n50:                                               ; preds = %53\n  %51 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %52 = tail call i32 @lbs_deb_leave_args(i32 noundef %51, ptr noundef nonnull @.str, i32 noundef %54) #2\n  ret i32 %54\n\n53:                                               ; preds = %50\n  %54 = add nsw i32 %55, 1\n  %55 = icmp eq i32 %54, 3\n  br i1 %55, label %50, label %56, !llvm.loop !18\n\n56:                                               ; preds = %53\n  %57 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %58 = tail call i32 @lbs_deb_leave_args(i32 noundef %57, ptr noundef nonnull @.str, i32 noundef %54) #2\n  ret i32 %54\n\n59:                                               ; preds = %62\n  %60 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %61 = tail call i32 @lbs_deb_leave_args(i32 noundef %60, ptr noundef nonnull @.str, i32 noundef %63) #2\n  ret i32 %63\n\n62:                                               ; preds = %59\n  %63 = add nsw i32 %64, 1\n  %64 = icmp eq i32 %63, 3\n  br i1 %64, label %59, label %65, !llvm.loop !19\n\n65:                                               ; preds = %62\n  %66 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %67 = tail call i32 @lbs_deb_leave_args(i32 noundef %66, ptr noundef nonnull @.str, i32 noundef %63) #2\n  ret i32 %63\n\n70:                                               ; preds = %73\n  %71 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %72 = tail call i32 @lbs_deb_leave_args(i32 noundef %71, ptr noundef nonnull @.str, i32 noundef %74) #2\n  ret i32 %74\n\n73:                                               ; preds = %70\n  %74 = add nsw i32 %75, 1\n  %75 = icmp eq i32 %74, 3\n  br i1 %75, label %70, label %76, !llvm.loop !20\n\n76:                                               ; preds = %73\n  %77 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %78 = tail call i32 @lbs_deb_leave_args(i32 noundef %77, ptr noundef nonnull @.str, i32 noundef %74) #2\n  ret i32 %74\n\n81:                                               ; preds = %84\n  %82 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %83 = tail call i32 @lbs_deb_leave_args(i32 noundef %82, ptr noundef nonnull @.str, i32 noundef %85) #2\n  ret i32 %85\n\n84:                                               ; preds = %81\n  %85 = add nsw i32 %86, 1\n  %86 = icmp eq i32 %85, 3\n  br i1 %86, label %81, label %87, !llvm.loop !21\n\n87:                                               ; preds = %84\n  %88 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %89 = tail call i32 @lbs_deb_leave_args(i32 noundef %88, ptr noundef nonnull @.str", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.lbs_private = type { i32, i32, i32 }\n%struct.lbs_802_11_security = type { i32, i32 }\n\n@RADIO_PREAMBLE_LONG = dso_local local_unnamed_addr global i32 0, align 4\n@LBS_DEB_ASSOC = dso_local local_unnamed_addr global i32 0, align 4\n@WLAN_CAPABILITY_SHORT_PREAMBLE = dso_local local_unnamed_addr global i32 0, align 4\n@RADIO_PREAMBLE_SHORT = dso_local local_unnamed_addr global i32 0, align 4\n@CMD_802_11_ASSOCIATE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [7 x i8] c\"ret %d\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @lbs_try_associate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @lbs_try_associate(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @RADIO_PREAMBLE_LONG, align 4, !tbaa !5\n  %4 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %5 = tail call i32 @lbs_deb_enter(i32 noundef %4) #2\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  %7 = icmp slt i32 %6, 150994944\n  br i1 %7, label %8, label %13\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.lbs_private, ptr %1, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !13\n  br label %16\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @WLAN_CAPABILITY_SHORT_PREAMBLE, align 4, !tbaa !5\n  %15 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 1\n  br label %20\n\n16:                                               ; preds = %8\n  %17 = tail call i32 @lbs_set_authentication(ptr noundef nonnull %0, i32 noundef %10, i32 noundef %12) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %13, label %29\n\n19:                                               ; preds = %20\n  br label %29\n\n20:                                               ; preds = %16\n  %21 = load i32, ptr %15, align 4, !tbaa !14\n  %22 = and i32 %21, %14\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %29, label %24\n\n24:                                               ; preds = %20\n  %25 = load i32, ptr %1, align 4, !tbaa !15\n  %26 = and i32 %25, %14\n  %27 = icmp eq i32 %26, 0\n  %28 = load i32, ptr @RADIO_PREAMBLE_SHORT, align 4\n  br i1 %27, label %29, label %24.1\n\n29:                                               ; preds = %24, %20, %16, %19\n  %30 = phi i32 [ %17, %19 ], [ %17, %16 ], [ %3, %20 ], [ %28, %24 ]\n  %31 = tail call i32 @lbs_set_radio(ptr noundef nonnull %0, i32 noundef %30, i32 noundef 1) #2\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %29\n  %34 = load i32, ptr @CMD_802_11_ASSOCIATE, align 4, !tbaa !5\n  %35 = tail call i32 @lbs_associate(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %34) #2\n  br label %36\n\n36:                                               ; preds = %29, %33\n  %37 = phi i32 [ %31, %29 ], [ %35, %33 ]\n  %38 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %39 = tail call i32 @lbs_deb_leave_args(i32 noundef %38, ptr noundef nonnull @.str, i32 noundef %37) #2\n  ret i32 %37\n\n40:                                               ; preds = %41\n  %42 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %43 = tail call i32 @lbs_deb_enter(i32 noundef %42) #2\n  %44 = load i32, ptr %0, align 4, !tbaa !9\n  %45 = icmp slt i32 %44, 150994944\n  br i1 %45, label %46, label %51\n\n46:                                               ; preds = %40\n  %47 = getelementptr inbounds %struct.lbs_private, ptr %1, i64 0, i32 1\n  %48 = load i32, ptr %47, align 4, !tbaa !11\n  %49 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 2\n  %50 = load i32, ptr %49, align 4, !tbaa !13\n  br label %54\n\n51:                                               ; preds = %40\n  %52 = load i32, ptr @WLAN_CAPABILITY_SHORT_PREAMBLE, align 4, !tbaa !5\n  %53 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 1\n  br label %58\n\n54:                                               ; preds = %46\n  %55 = tail call i32 @lbs_set_authentication(ptr noundef nonnull %0, i32 noundef %48, i32 noundef %50) #2\n  %56 = icmp eq i32 %55, 0\n  br i1 %56, label %51, label %57\n\n57:                                               ; preds = %54\n  br label %58\n\n58:                                               ; preds = %51, %57\n  %59 = phi i32 [ %55, %57 ], [ %3, %51 ]\n  %60 = tail call i32 @lbs_set_radio(ptr noundef nonnull %0, i32 noundef %59, i32 noundef 1) #2\n  %61 = icmp eq i32 %60, 0\n  br i1 %61, label %62, label %65\n\n62:                                               ; preds = %58\n  %63 = load i32, ptr @CMD_802_11_ASSOCIATE, align 4, !tbaa !5\n  %64 = tail call i32 @lbs_associate(ptr noundef nonnull %0, ptr noundef nonnull %1, i32 noundef %63) #2\n  br label %65\n\n65:                                               ; preds = %58, %62\n  %66 = phi i32 [ %60, %58 ], [ %64, %62 ]\n  %67 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %68 = tail call i32 @lbs_deb_leave_args(i32 noundef %67, ptr noundef nonnull @.str, i32 noundef %66) #2\n  ret i32 %66\n\n70:                                               ; preds = %71\n  %72 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %73 = tail call i32 @lbs_deb_enter(i32 noundef %72) #2\n  %74 = load i32, ptr %0, align 4, !tbaa !9\n  %75 = icmp slt i32 %74, 150994944\n  br i1 %75, label %76, label %81\n\n76:                                               ; preds = %70\n  %77 = getelementptr inbounds %struct.lbs_private, ptr %1, i64 0, i32 1\n  %78 = load i32, ptr %77, align 4, !tbaa !11\n  %79 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 2\n  %80 = load i32, ptr %79, align 4, !tbaa !13\n  br label %84\n\n81:                                               ; preds = %70\n  %82 = load i32, ptr @WLAN_CAPABILITY_SHORT_PREAMBLE, align 4, !tbaa !5\n  %83 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 1\n  br label %88\n\n84:                                               ; preds = %76\n  %85 = tail call i32 @lbs_set_authentication(ptr noundef nonnull %0, i32 noundef %78, i32 noundef %80) #2\n  %86 = icmp eq i32 %85, 0\n  br i1 %86, label %81, label %87\n\n87:                                               ; preds = %84\n  br label %88\n\n88:                                               ; preds = %81, %87\n  %89 = phi i32 [ %85, %87 ], [ %3, %81 ]\n  %90 = tail call i32 @lbs_set_radio(ptr noundef nonnull %0, i32 noundef %89, i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.lbs_private = type { i32, i32, i32 }\n%struct.lbs_802_11_security = type { i32, i32 }\n\n@RADIO_PREAMBLE_LONG = dso_local local_unnamed_addr global i32 0, align 4\n@LBS_DEB_ASSOC = dso_local local_unnamed_addr global i32 0, align 4\n@WLAN_CAPABILITY_SHORT_PREAMBLE = dso_local local_unnamed_addr global i32 0, align 4\n@RADIO_PREAMBLE_SHORT = dso_local local_unnamed_addr global i32 0, align 4\n@CMD_802_11_ASSOCIATE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [7 x i8] c\"ret %d\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @lbs_try_associate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @lbs_try_associate(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @RADIO_PREAMBLE_LONG, align 4, !tbaa !5\n  %4 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %5 = tail call i32 @lbs_deb_enter(i32 noundef %4) #2\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  %7 = icmp slt i32 %6, 150994944\n  br i1 %7, label %8, label %13\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.lbs_private, ptr %1, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !13\n  br label %16\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @WLAN_CAPABILITY_SHORT_PREAMBLE, align 4, !tbaa !5\n  %15 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 1\n  br label %20\n\n16:                                               ; preds = %8\n  %17 = tail call i32 @lbs_set_authentication(ptr noundef nonnull %0, i32 noundef %10, i32 noundef %12) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %13, label %29\n\n19:                                               ; preds = %20\n  br label %29\n\n20:                                               ; preds = %16\n  %21 = load i32, ptr %15, align 4, !tbaa !14\n  %22 = and i32 %21, %14\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %20\n  %25 = load i32, ptr %1, align 4, !tbaa !15\n  %26 = and i32 %25, %14\n  br i1 %26, label %27, label %27\n\n27:                                               ; preds = %24, %20\n  %28 = load i32, ptr @RADIO_PREAMBLE_SHORT, align 4, !tbaa !5\n  br label %29\n\n29:                                               ; preds = %16, %27, %19\n  %30 = phi i32 [ %17, %19 ], [ %28, %27 ], [ %3, %16 ]\n  %31 = tail call i32 @lbs_set_radio(ptr noundef nonnull %0, i32 noundef %30, i32 noundef 1) #2\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %29\n  %34 = load i32, ptr @CMD_802_11_ASSOCIATE, align 4, !tbaa !5\n  %35 = tail call i32 @lbs_associate(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %34) #2\n  br label %36\n\n36:                                               ; preds = %29, %33\n  %37 = phi i32 [ %31, %29 ], [ %35, %33 ]\n  %38 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %39 = tail call i32 @lbs_deb_leave_args(i32 noundef %38, ptr noundef nonnull @.str, i32 noundef %37) #2\n  ret i32 %37\n}\n\ndeclare i32 @lbs_deb_enter(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_set_authentication(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_set_radio(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_associate(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_deb_leave_args(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"lbs_private\", !6, i64 0, !6, i64 4, !6, i64 8}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"lbs_802_11_security\", !6, i64 0, !6, i64 4}\n!13 = !{!10, !6, i64 8}\n!14 = !{!10, !6, i64 4}\n!15 = !{!12, !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/drivers/net/wireless/libertas/extr_assoc.c_lbs_try_associate.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32 }\n%struct.lbs_private = type { i32, i32, %struct.TYPE_4__ }\n%struct.TYPE_4__ = type { i32 }\n\n@RADIO_PREAMBLE_LONG = dso_local local_unnamed_addr global i32 0, align 4\n@LBS_DEB_ASSOC = dso_local local_unnamed_addr global i32 0, align 4\n@WLAN_CAPABILITY_SHORT_PREAMBLE = dso_local local_unnamed_addr global i32 0, align 4\n@RADIO_PREAMBLE_SHORT = dso_local local_unnamed_addr global i32 0, align 4\n@CMD_802_11_ASSOCIATE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [7 x i8] c\"ret %d\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @lbs_try_associate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @lbs_try_associate(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i32, ptr @RADIO_PREAMBLE_LONG, align 4, !tbaa !5\n  %4 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %5 = tail call i32 @lbs_deb_enter(i32 noundef %4) #2\n  %6 = load i32, ptr %0, align 4, !tbaa !9\n  %7 = icmp slt i32 %6, 150994944\n  br i1 %7, label %8, label %15\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.TYPE_3__, ptr %1, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !12\n  %11 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !15\n  %13 = tail call i32 @lbs_set_authentication(ptr noundef nonnull %0, i32 noundef %10, i32 noundef %12) #2\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %15, label %34\n\n15:                                               ; preds = %8, %2\n  %16 = getelementptr inbounds %struct.lbs_private, ptr %0, i64 0, i32 1\n  %17 = load i32, ptr %16, align 4, !tbaa !16\n  %18 = load i32, ptr @WLAN_CAPABILITY_SHORT_PREAMBLE, align 4, !tbaa !5\n  %19 = and i32 %18, %17\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %27, label %21\n\n21:                                               ; preds = %15\n  %22 = load i32, ptr %1, align 4, !tbaa !17\n  %23 = and i32 %22, %18\n  %24 = icmp eq i32 %23, 0\n  %25 = load i32, ptr @RADIO_PREAMBLE_SHORT, align 4\n  %26 = select i1 %24, i32 %3, i32 %25\n  br label %27\n\n27:                                               ; preds = %21, %15\n  %28 = phi i32 [ %3, %15 ], [ %26, %21 ]\n  %29 = tail call i32 @lbs_set_radio(ptr noundef nonnull %0, i32 noundef %28, i32 noundef 1) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %31, label %34\n\n31:                                               ; preds = %27\n  %32 = load i32, ptr @CMD_802_11_ASSOCIATE, align 4, !tbaa !5\n  %33 = tail call i32 @lbs_associate(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %32) #2\n  br label %34\n\n34:                                               ; preds = %27, %8, %31\n  %35 = phi i32 [ %13, %8 ], [ %29, %27 ], [ %33, %31 ]\n  %36 = load i32, ptr @LBS_DEB_ASSOC, align 4, !tbaa !5\n  %37 = tail call i32 @lbs_deb_leave_args(i32 noundef %36, ptr noundef nonnull @.str, i32 noundef %35) #2\n  ret i32 %35\n}\n\ndeclare i32 @lbs_deb_enter(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_set_authentication(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_set_radio(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_associate(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lbs_deb_leave_args(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"lbs_private\", !6, i64 0, !6, i64 4, !11, i64 8}\n!11 = !{!\"TYPE_4__\", !6, i64 0}\n!12 = !{!13, !6, i64 4}\n!13 = !{!\"assoc_request\", !14, i64 0}\n!14 = !{!\"TYPE_3__\", !6, i64 0, !6, i64 4}\n!15 = !{!10, !6, i64 8}\n!16 = !{!10, !6, i64 4}\n!17 = !{!13, !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lj_cparse.c_cp_expr_sizeof.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function cp_expr_sizeof\n\t.type\tcp_expr_sizeof,@function\ncp_expr_sizeof:                         # @cp_expr_sizeof\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %ebp\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tmovl\t$40, %esi\n\tcallq\tcp_opt@PLT\n\tmovq\t%rbx, %rdi\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.1:\n\tcallq\tcp_istypedecl@PLT\n\tmovq\t%rbx, %rdi\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n# %bb.2:\n\tcallq\tcp_decl_abstract@PLT\n\tmovq\t%rax, (%r14)\n\tjmp\t.LBB0_4\n.LBB0_5:\n\tmovq\t%r14, %rsi\n\tcallq\tcp_expr_unary@PLT\n\tjmp\t.LBB0_6\n.LBB0_3:\n\tmovq\t%r14, %rsi\n\tcallq\tcp_expr_comma@PLT\n.LBB0_4:\n\tmovq\t%rbx, %rdi\n\tmovl\t$41, %esi\n\tcallq\tcp_check@PLT\n.LBB0_6:\n\tmovl\t(%rbx), %edi\n\tmovq\t(%r14), %rsi\n\tleaq\t8(%rsp), %rdx\n\tcallq\tlj_ctype_info@PLT\n\ttestl\t%ebp, %ebp\n\tje\t.LBB0_11\n# %bb.7:\n\tmovq\t8(%rsp), %rax\n\tcmpq\tCTSIZE_INVALID(%rip), %rax\n\tjne\t.LBB0_8\n# %bb.9:\n\tmovq\t(%r14), %rax\n\tcmpq\tCTID_A_CCHAR(%rip), %rax\n\tje\t.LBB0_12\n# %bb.10:\n\tmovl\tLJ_ERR_FFI_INVSIZE(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tcp_err@PLT\n\tjmp\t.LBB0_12\n.LBB0_11:\n\tmovl\t%eax, %edi\n\tcallq\tctype_align@PLT\n\tmovl\t$1, %edx\n\tmovl\t%eax, %ecx\n\tshll\t%cl, %edx\n\tmovl\t%edx, 8(%r14)\n\tjmp\t.LBB0_12\n.LBB0_8:\n\tmovl\t%eax, 8(%r14)\n.LBB0_12:\n\tmovq\tCTID_UINT32(%rip), %rax\n\tmovq\t%rax, (%r14)\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcp_expr_sizeof, .Lfunc_end0-cp_expr_sizeof\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCTSIZE_INVALID,@object          # @CTSIZE_INVALID\n\t.bss\n\t.globl\tCTSIZE_INVALID\n\t.p2align\t3\nCTSIZE_INVALID:\n\t.quad\t0                               # 0x0\n\t.size\tCTSIZE_INVALID, 8\n\n\t.type\tCTID_A_CCHAR,@object            # @CTID_A_CCHAR\n\t.globl\tCTID_A_CCHAR\n\t.p2align\t3\nCTID_A_CCHAR:\n\t.quad\t0                               # 0x0\n\t.size\tCTID_A_CCHAR, 8\n\n\t.type\tLJ_ERR_FFI_INVSIZE,@object      # @LJ_ERR_FFI_INVSIZE\n\t.globl\tLJ_ERR_FFI_INVSIZE\n\t.p2align\t2\nLJ_ERR_FFI_INVSIZE:\n\t.long\t0                               # 0x0\n\t.size\tLJ_ERR_FFI_INVSIZE, 4\n\n\t.type\tCTID_UINT32,@object             # @CTID_UINT32\n\t.globl\tCTID_UINT32\n\t.p2align\t3\nCTID_UINT32:\n\t.quad\t0                               # 0x0\n\t.size\tCTID_UINT32, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_11__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_11__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %14, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %16\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %16\n\n14:                                               ; preds = %3\n  %15 = tail call i32 @cp_expr_unary(ptr noundef %0, ptr noundef %1) #3\n  br label %19\n\n16:                                               ; preds = %10, %12\n  %17 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %18 = load i64, ptr %4, align 8, !tbaa !11\n  store i64 %18, ptr %1, align 8, !tbaa !5\n  br label %19\n\n19:                                               ; preds = %16, %14\n  %20 = load i32, ptr %0, align 4, !tbaa !12\n  %21 = load i64, ptr %1, align 8, !tbaa !5\n  %22 = call i32 @lj_ctype_info(i32 noundef %20, i64 noundef %21, ptr noundef nonnull %4) #3\n  %23 = icmp eq i32 %2, 0\n  br i1 %23, label %31, label %24\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %4, align 8, !tbaa !11\n  %26 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !14\n  %27 = icmp eq i64 %25, %26\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %24\n  %29 = getelementptr inbounds %struct.TYPE_11__, ptr %1, i64 0, i32 1\n  store i32 %22, ptr %29, align 8, !tbaa !15\n  br label %35\n\n30:                                               ; preds = %24\n  %31 = load i64, ptr %1, align 8, !tbaa !5\n  %32 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !14\n  %33 = icmp eq i64 %31, %32\n  br i1 %33, label %35, label %34\n\n34:                                               ; preds = %30\n  %35 = load i32, ptr @LJ_ERR_FFI_INVSIZE, align 4, !tbaa !16\n  %36 = call i32 @cp_err(ptr noundef nonnull %0, i32 noundef %35) #3\n  br label %35\n\n37:                                               ; preds = %35\n  %38 = load i64, ptr @CTID_UINT32, align 8, !tbaa !14\n  store i64 %38, ptr %1, align 8, !tbaa !5\n  br label %39\n\n35:                                               ; preds = %30, %34, %28\n  %36 = phi i64 [ %31, %30 ], [ %38, %34 ], [ %31, %28 ]\n  store i64 %36, ptr %1, align 8, !tbaa !5\n  br label %37\n\n39:                                               ; preds = %37, %35\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_unary(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_err(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_11__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_10__\", !13, i64 0}\n!13 = !{!\"TYPE_9__\", !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!10, !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_10__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %14, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %16\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %16\n\n14:                                               ; preds = %3\n  %15 = tail call i32 @cp_expr_unary(ptr noundef %0, ptr noundef %1) #3\n  br label %19\n\n16:                                               ; preds = %10, %12\n  %17 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %18 = load i64, ptr %4, align 8, !tbaa !11\n  store i64 %18, ptr %1, align 8, !tbaa !5\n  br label %19\n\n19:                                               ; preds = %16, %14\n  %20 = load i32, ptr %0, align 4, !tbaa !12\n  %21 = load i64, ptr %1, align 8, !tbaa !5\n  %22 = call i32 @lj_ctype_info(i32 noundef %20, i64 noundef %21, ptr noundef nonnull %4) #3\n  %23 = icmp eq i32 %2, 0\n  br i1 %23, label %33, label %24\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %4, align 8, !tbaa !11\n  %26 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !14\n  %27 = icmp eq i64 %25, %26\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %24\n  %29 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  store i64 %25, ptr %29, align 8, !tbaa !15\n  br label %37\n\n30:                                               ; preds = %24\n  %31 = load i64, ptr %1, align 8, !tbaa !5\n  %32 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !14\n  br i1 %32, label %37, label %34\n\n33:                                               ; preds = %19\n  %34 = call i32 @ctype_align(i32 noundef %22) #3\n  %35 = shl nuw i32 1, %34\n  %36 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  store i32 %35, ptr %36, align 8, !tbaa !15\n  br label %37\n\n37:                                               ; preds = %33, %30, %28\n  %38 = load i64, ptr @CTID_UINT32, align 8, !tbaa !14\n  store i64 %38, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_unary(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @ctype_align(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_9__\", !10, i64 0}\n!13 = !{!10, !10, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_10__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %14, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %16\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %16\n\n14:                                               ; preds = %3\n  %15 = tail call i32 @cp_expr_unary(ptr noundef %0, ptr noundef %1) #3\n  br label %19\n\n16:                                               ; preds = %10, %12\n  %17 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %18 = load i64, ptr %4, align 8, !tbaa !11\n  store i64 %18, ptr %1, align 8, !tbaa !5\n  br label %19\n\n19:                                               ; preds = %16, %14\n  %20 = load i32, ptr %0, align 4, !tbaa !12\n  %21 = load i64, ptr %1, align 8, !tbaa !5\n  %22 = call i32 @lj_ctype_info(i32 noundef %20, i64 noundef %21, ptr noundef nonnull %4) #3\n  %23 = icmp eq i32 %2, 0\n  br i1 %23, label %33, label %24\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %4, align 8, !tbaa !11\n  %26 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !14\n  %27 = icmp eq i64 %25, %26\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %24\n  %29 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  store i64 %25, ptr %29, align 8, !tbaa !15\n  br label %37\n\n30:                                               ; preds = %24\n  %31 = load i64, ptr %1, align 8, !tbaa !5\n  %32 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !14\n  br i1 %32, label %37, label %34\n\n33:                                               ; preds = %19\n  %34 = call i32 @ctype_align(i32 noundef %22) #3\n  %35 = shl nuw i32 1, %34\n  %36 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  store i32 %35, ptr %36, align 8, !tbaa !15\n  br label %37\n\n37:                                               ; preds = %33, %30, %28\n  %38 = load i64, ptr @CTID_UINT32, align 8, !tbaa !14\n  store i64 %38, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_unary(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @ctype_align(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_9__\", !10, i64 0}\n!13 = !{!10, !10, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_10__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %14, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %16\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %16\n\n14:                                               ; preds = %3\n  %15 = tail call i32 @cp_expr_unary(ptr noundef %0, ptr noundef %1) #3\n  br label %19\n\n16:                                               ; preds = %10, %12\n  %17 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %18 = load i64, ptr %4, align 8, !tbaa !11\n  store i64 %18, ptr %1, align 8, !tbaa !5\n  br label %19\n\n19:                                               ; preds = %16, %14\n  %20 = load i32, ptr %0, align 4, !tbaa !12\n  %21 = load i64, ptr %1, align 8, !tbaa !5\n  %22 = call i32 @lj_ctype_info(i32 noundef %20, i64 noundef %21, ptr noundef nonnull %4) #3\n  %23 = icmp eq i32 %2, 0\n  br i1 %23, label %31, label %24\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %4, align 8, !tbaa !11\n  %26 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !14\n  %27 = icmp eq i64 %25, %26\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %24\n  %29 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  store i32 %22, ptr %29, align 8, !tbaa !15\n  br label %35\n\n30:                                               ; preds = %24\n  %31 = load i64, ptr %1, align 8, !tbaa !5\n  %32 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !14\n  %33 = icmp eq i64 %31, %32\n  br i1 %33, label %35, label %34\n\n34:                                               ; preds = %30\n  %35 = load i32, ptr @LJ_ERR_FFI_INVSIZE, align 4, !tbaa !16\n  %36 = call i32 @cp_err(ptr noundef nonnull %0, i32 noundef %35) #3\n  br label %35\n\n37:                                               ; preds = %35\n  %38 = load i64, ptr @CTID_UINT32, align 8, !tbaa !14\n  store i64 %38, ptr %1, align 8, !tbaa !5\n  br label %39\n\n35:                                               ; preds = %30, %34, %28\n  %36 = phi i64 [ %31, %30 ], [ %38, %34 ], [ %31, %28 ]\n  store i64 %36, ptr %1, align 8, !tbaa !5\n  br label %37\n\n39:                                               ; preds = %37, %35\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_unary(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_err(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_9__\", !10, i64 0}\n!13 = !{!10, !10, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!10, !10, i64 0}\n</s><s><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/xLua/build/luajit-2.1.0b3/src/extr_lj_cparse.c_cp_expr_sizeof.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_14__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %16, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %14\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef %1) #3\n  br label %14\n\n14:                                               ; preds = %12, %10\n  %15 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  br label %18\n\n16:                                               ; preds = %3\n  %17 = tail call i32 @cp_expr_unary(ptr noundef %0, ptr noundef %1) #3\n  br label %18\n\n18:                                               ; preds = %16, %14\n  %19 = load i32, ptr %0, align 4, !tbaa !11\n  %20 = load i64, ptr %1, align 8, !tbaa !5\n  %21 = call i32 @lj_ctype_info(i32 noundef %19, i64 noundef %20, ptr noundef nonnull %4) #3\n  %22 = icmp eq i32 %2, 0\n  br i1 %22, label %37, label %23\n\n23:                                               ; preds = %18\n  %24 = load i64, ptr %4, align 8, !tbaa !13\n  %25 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !13\n  %26 = icmp eq i64 %24, %25\n  br i1 %26, label %30, label %27\n\n27:                                               ; preds = %23\n  %28 = trunc i64 %24 to i32\n  %29 = getelementptr inbounds %struct.TYPE_14__, ptr %1, i64 0, i32 1\n  store i32 %28, ptr %29, align 8, !tbaa !14\n  br label %41\n\n30:                                               ; preds = %23\n  %31 = load i64, ptr %1, align 8, !tbaa !5\n  %32 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !13\n  %33 = icmp eq i64 %31, %32\n  br i1 %33, label %41, label %34\n\n34:                                               ; preds = %30\n  %35 = load i32, ptr @LJ_ERR_FFI_INVSIZE, align 4, !tbaa !15\n  %36 = call i32 @cp_err(ptr noundef nonnull %0, i32 noundef %35) #3\n  br label %41\n\n37:                                               ; preds = %18\n  %38 = call i32 @ctype_align(i32 noundef %21) #3\n  %39 = shl nuw i32 1, %38\n  %40 = getelementptr inbounds %struct.TYPE_14__, ptr %1, i64 0, i32 1\n  store i32 %39, ptr %40, align 8, !tbaa !14\n  br label %41\n\n41:                                               ; preds = %27, %34, %30, %37\n  %42 = load i64, ptr @CTID_UINT32, align 8, !tbaa !13\n  store i64 %42, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_unary(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_err(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ctype_align(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_14__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_15__\", !10, i64 0}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n!15 = !{!10, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %37\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %25, %2\n  br i1 %31, label %33, label %36\n\n33:                                               ; preds = %30, %27, %19\n  %34 = load i32, ptr %14, align 4, !tbaa !15\n  %35 = tail call i32 @SETARG_A(i32 noundef %34, i32 noundef %1) #2\n  br label %36\n\n36:                                               ; preds = %33, %30\n  %37 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %17, i32 noundef %1, i32 noundef %21) #2\n  br label %41\n\n38:                                               ; preds = %33\n  %39 = load i32, ptr %14, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_B(i32 noundef %39, i32 noundef %22) #2\n  br label %41\n\n41:                                               ; preds = %38, %36\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %41\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %41\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %34, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %41, label %34\n\n34:                                               ; preds = %30, %27, %19\n  %35 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %36 = phi i32 [ %25, %19 ], [ %25, %27 ], [ %25, %30 ]\n  %37 = icmp slt i32 %35, %1\n  br i1 %37, label %41, label %38\n\n38:                                               ; preds = %34\n  %39 = icmp sgt i32 %35, %2\n  %40 = select i1 %39, i1 true, i1 %33\n  br i1 %40, label %41, label %44\n\n41:                                               ; preds = %34, %38, %30, %8, %3\n  %42 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %43 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %42, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %51\n\n44:                                               ; preds = %38\n  %45 = add nsw i32 %2, %1\n  %46 = add nsw i32 %45, -1\n  %47 = load i32, ptr %14, align 4, !tbaa !15\n  %48 = tail call i32 @SETARG_A(i32 noundef %47, i32 noundef %46) #2\n  %49 = load i32, ptr %14, align 4, !tbaa !15\n  %50 = sub nsw i32 %49, %46\n  br label %51\n\n51:                                               ; preds = %44, %41\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %43\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %43\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  br i1 %32, label %43, label %33\n\n33:                                               ; preds = %30, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %35 = phi i32 [ %20, %19 ], [ %21, %27 ], [ %21, %30 ]\n  %36 = icmp slt i32 %34, %1\n  br i1 %36, label %43, label %37\n\n37:                                               ; preds = %33\n  %38 = icmp sgt i32 %34, %2\n  br i1 %38, label %43, label %39\n\n39:                                               ; preds = %37\n  %40 = add nsw i32 %35, %34\n  %41 = icmp slt i32 %34, %1\n  %42 = select i1 %41, i32 %34, i32 %1\n  br label %43\n\n43:                                               ; preds = %39, %37, %33, %3, %8\n  %44 = phi i32 [ %2, %8 ], [ %2, %3 ], [ %2, %33 ], [ %2, %37 ], [ %42, %39 ]\n  %45 = phi i32 [ %1, %8 ], [ %1, %3 ], [ %34, %33 ], [ %34, %37 ], [ %34, %39 ]\n  %46 = phi i32 [ %1, %8 ], [ %1, %3 ], [ %35, %33 ], [ %35, %37 ], [ %35, %39 ]\n  %47 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %48 = add nsw i32 %4, -1\n  %49 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %47, i32 noundef %46, i32 noundef %44, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %37\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %37, label %27\n\n27:                                               ; preds = %19\n  %28 = icmp slt i32 %23, %1\n  br i1 %28, label %37, label %29\n\n29:                                               ; preds = %27\n  %30 = icmp sgt i32 %23, %2\n  br i1 %30, label %37, label %31\n\n31:                                               ; preds = %29\n  %32 = add nsw i32 %23, %25\n  %33 = icmp slt i32 %32, %1\n  %34 = add nsw i32 %20, -1\n  %35 = select i1 %33, i32 %34, i32 %23\n  %36 = select i1 %33, i32 %25, i32 %32\n  br label %40\n\n37:                                               ; preds = %27, %29, %19, %8, %3\n  %38 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %39 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %38, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %44\n\n40:                                               ; preds = %31\n  %41 = load i32, ptr %14, align 4, !tbaa !15\n  %42 = tail call i32 @SETARG_A(i32 noundef %41, i32 noundef %35) #2\n  %43 = load i32, ptr %14, align 4, !tbaa !15\n  %44 = tail call i32 @SETARG_B(i32 noundef %43, i32 noundef %36) #2\n  br label %45\n\n45:                                               ; preds = %40, %37\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/xLua/build/lua-5.3.5/src/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %41\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %41\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %2, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %31, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = add nsw i32 %28, %20\n  %30 = icmp slt i32 %29, %1\n  br i1 %30, label %31, label %34\n\n31:                                               ; preds = %27, %19\n  %32 = icmp slt i32 %23, %1\n  br i1 %32, label %41, label %33\n\n33:                                               ; preds = %31\n  %34 = icmp sgt i32 %25, %2\n  br i1 %34, label %41, label %37\n\n37:                                               ; preds = %33\n  %38 = add nsw i32 %23, %25\n  %39 = icmp slt i32 %38, %1\n  %40 = select i1 %39, i32 %21, i32 %20\n  br label %41\n\n41:                                               ; preds = %37, %33, %31, %8, %3\n  %42 = phi i32 [ %2, %3 ], [ %21, %31 ], [ %2, %33 ], [ %2, %8 ], [ %40, %37 ]\n  %43 = phi i32 [ %1, %3 ], [ %1, %31 ], [ %2, %33 ], [ %1, %8 ], [ %23, %37 ]\n  %44 = phi i32 [ %2, %3 ], [ %2, %31 ], [ %2, %33 ], [ %2, %8 ], [ %25, %37 ]\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %43, i32 noundef %42, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %41\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %41\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  br i1 %32, label %41, label %33\n\n33:                                               ; preds = %30, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %35 = phi i32 [ %20, %19 ], [ %21, %27 ], [ %21, %30 ]\n  %36 = icmp slt i32 %34, %1\n  br i1 %36, label %41, label %37\n\n37:                                               ; preds = %33\n  %38 = icmp sgt i32 %34, %2\n  br i1 %38, label %41, label %39\n\n39:                                               ; preds = %37\n  %40 = add nsw i32 %35, %34\n  br label %45\n\n41:                                               ; preds = %33, %37, %30, %8, %3\n  %42 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %43 = add nsw i32 %2, -1\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %42, i32 noundef %1, i32 noundef %43, i32 noundef 0) #2\n  br label %53\n\n45:                                               ; preds = %39\n  %46 = load i32, ptr %14, align 4, !tbaa !15\n  %47 = tail call i32 @SETARG_A(i32 noundef %46, i32 noundef %1) #2\n  %48 = load i32, ptr %14, align 4, !tbaa !15\n  %49 = sub nsw i32 %48, %1\n  %50 = tail call i32 @SETARG_B(i32 noundef %48, i32 noundef %49) #2\n  %51 = load i32, ptr %14, align 4, !tbaa !15\n  %52 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %42, i32 noundef %1, i32 noundef %43, i32 noundef %40) #2\n  br label %53\n\n53:                                               ; preds = %45, %41\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %38\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %38\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %36, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %21\n  br i1 %29, label %36, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp slt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %38, label %34\n\n34:                                               ; preds = %30\n  %35 = add nsw i32 %23, %25\n  br label %36\n\n36:                                               ; preds = %34, %27, %19\n  %37 = phi i32 [ %21, %27 ], [ %20, %19 ], [ %35, %34 ]\n  br label %40\n\n38:                                               ; preds = %30, %8, %3\n  %39 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %40\n\n40:                                               ; preds = %38, %36\n  %41 = phi i64 [ %39, %38 ], [ %37, %36 ]\n  %42 = phi i32 [ %1, %38 ], [ %2, %36 ]\n  %43 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %41, i32 noundef %1, i32 noundef %42, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %41\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %41\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %25, %2\n  br i1 %32, label %41, label %33\n\n33:                                               ; preds = %30, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %35 = phi i32 [ %25, %19 ], [ %25, %27 ], [ %25, %30 ]\n  %36 = icmp slt i32 %34, %1\n  br i1 %36, label %41, label %37\n\n37:                                               ; preds = %33\n  %38 = icmp sgt i32 %35, %2\n  br i1 %38, label %41, label %39\n\n39:                                               ; preds = %37\n  %40 = add nsw i32 %34, %35\n  br label %45\n\n41:                                               ; preds = %33, %37, %30, %8, %3\n  %42 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %43 = add nsw i32 %2, -1\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %42, i32 noundef %1, i32 noundef %43, i32 noundef 0) #2\n  br label %54\n\n45:                                               ; preds = %39, %43\n  %46 = phi i32 [ %40, %39 ], [ %41, %43 ]\n  %47 = phi i32 [ %42, %39 ], [ %44, %43 ]\n  %48 = phi i32 [ %20, %39 ], [ %41, %43 ]\n  %49 = phi i32 [ %21, %39 ], [ %41, %43 ]\n  %50 = load i32, ptr %14, align 4, !tbaa !15\n  %51 = tail call i32 @SETARG_A(i32 noundef %50, i32 noundef %48) #2\n  %52 = load i32, ptr %14, align 4, !tbaa !15\n  %53 = sub nsw i32 %49, %48\n  br label %54\n\n43:                                               ; preds = %45\n  %44 = phi i32 [ %47, %45 ], [ %44, %41 ]\n  %45 = phi i32 [ %46, %45 ], [ %41, %41 ]\n  %46 = phi i32 [ %49, %45 ], [ %41, %41 ]\n  %47 = phi i32 [ %53, %45 ], [ %41, %41 ]\n  br label %54\n\n54:                                               ; preds = %43, %45, %41\n  %55 = phi i32 [ %44, %41 ], [ %47, %45 ], [ %44, %43 ]\n  %56 = phi i32 [ %46, %41 ], [ %45, %45 ], [ %46, %43 ]\n  %57 = tail call i32 @SETARG_B(i32 noundef %55, i32 noundef %56) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/zfs/module/lua/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %43\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %43\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %2, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = add nsw i32 %28, %20\n  %30 = icmp slt i32 %29, %1\n  br i1 %30, label %33, label %31\n\n31:                                               ; preds = %27\n  %32 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  br label %33\n\n33:                                               ; preds = %31, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %32, %31 ]\n  %35 = icmp slt i32 %34, %1\n  %36 = icmp sgt i32 %34, %2\n  %37 = select i1 %35, i1 true, i1 %36\n  br i1 %37, label %43, label %38\n\n38:                                               ; preds = %33\n  %39 = add nsw i32 %20, -1\n  %40 = add nsw i32 %34, %25\n  %41 = icmp slt i32 %34, %1\n  %42 = select i1 %41, i32 %34, i32 %1\n  br label %47\n\n43:                                               ; preds = %33, %8, %3\n  %44 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %45 = add nsw i32 %2, -1\n  %46 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %44, i32 noundef %1, i32 noundef %45, i32 noundef 0) #2\n  br label %52\n\n47:                                               ; preds = %38\n  %48 = load i32, ptr %14, align 4, !tbaa !15\n  %49 = tail call i32 @SETARG_A(i32 noundef %48, i32 noundef %42) #2\n  %50 = load i32, ptr %14, align 4, !tbaa !15\n  %51 = sub nsw i32 %40, %42\n  br label %52\n\n52:                                               ; preds = %47, %43\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %39\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %39\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %33, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = icmp slt i32 %27, %19\n  br i1 %28, label %33, label %29\n\n29:                                               ; preds = %26\n  %30 = icmp slt i32 %22, %1\n  %31 = icmp sgt i32 %22, %2\n  %32 = select i1 %30, i1 true, i1 %31\n  br i1 %32, label %33, label %37\n\n33:                                               ; preds = %29, %26, %18\n  %34 = load i32, ptr %13, align 4, !tbaa !15\n  %35 = tail call i32 @SETARG_A(i32 noundef %34, i32 noundef %1) #2\n  %36 = load i32, ptr %13, align 4, !tbaa !15\n  br label %37\n\n37:                                               ; preds = %29, %33\n  %38 = phi i32 [ %20, %33 ], [ %24, %29 ]\n  %39 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %16, i32 noundef %1, i32 noundef %2, i32 noundef %38) #2\n  br label %44\n\n40:                                               ; preds = %44\n  %41 = add nsw i32 %2, -1\n  %42 = tail call i32 @luaK_nil(ptr noundef nonnull %0, i32 noundef %1, i32 noundef %41) #2\n  ret void\n\n43:                                               ; preds = %40\n  ret void\n\n44:                                               ; preds = %37, %40\n  %45 = phi i32 [ %42, %40 ], [ %39, %37 ]\n  %46 = phi i32 [ %41, %40 ], [ %20, %37 ]\n  %47 = phi i32 [ %42, %40 ], [ %39, %37 ]\n  %48 = icmp slt i32 %22, %1\n  br i1 %48, label %49, label %40\n\n49:                                               ; preds = %44\n  %50 = add nsw i32 %22, %2\n  %51 = icmp sgt i32 %50, %1\n  br i1 %51, label %43, label %52\n\n52:                                               ; preds = %49\n  %53 = icmp sgt i32 %22, %2\n  %54 = icmp slt i32 %22, %1\n  %55 = select i1 %53, i1 true, i1 %54\n  br i1 %55, label %43, label %56\n\n56:                                               ; preds = %52\n  %57 = add nsw i32 %22, %2\n  %58 = icmp slt i32 %57, %1\n  %59 = select i1 %58, i32 %22, i32 %1\n  %60 = load i32, ptr %13, align 4, !tbaa !15\n  %61 = tail call i32 @SETARG_A(i32 noundef %60, i32 noundef %59) #2\n  %62 = load i32, ptr %13, align 4, !tbaa !15\n  %63 = sub nsw i32 %62, %59\n  %64 = tail call i32 @SETARG_B(i32 noundef %62, i32 noundef %63) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %43\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %43\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %33, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %26\n  %31 = icmp sgt i32 %22, %1\n  %32 = icmp sgt i32 %24, %2\n  br i1 %31, label %33, label %36\n\n33:                                               ; preds = %30, %26, %18\n  %34 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %35 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %34, i32 noundef %1, i32 noundef %20) #2\n  br label %47\n\n36:                                               ; preds = %30\n  %37 = add nsw i32 %22, %20\n  %38 = icmp slt i32 %22, %1\n  %39 = select i1 %38, i32 %22, i32 %1\n  %40 = add nsw i32 %24, %37\n  %41 = icmp slt i32 %40, %2\n  %42 = select i1 %41, i32 %37, i32 %20\n  br label %44\n\n43:                                               ; preds = %8, %3\n  %44 = add nsw i32 %2, -1\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %44) #2\n  br label %47\n\n47:                                               ; preds = %33, %43\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %43\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %43\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %31, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %26\n  br label %31\n\n31:                                               ; preds = %30, %26, %18\n  %32 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %20, %30 ]\n  %33 = phi i32 [ %27, %18 ], [ %28, %26 ], [ %20, %30 ]\n  %34 = icmp slt i32 %22, %1\n  %35 = icmp sgt i32 %22, %2\n  %36 = select i1 %34, i1 true, i1 %35\n  br i1 %36, label %43, label %37\n\n37:                                               ; preds = %31\n  %38 = add nsw i32 %32, %2\n  %39 = add nsw i32 %33, %22\n  %40 = tail call i32 @llvm.smin.i32(i32 %22, i32 %1)\n  %41 = tail call i32 @llvm.smin.i32(i32 %39, i32 %38)\n  %42 = load i32, ptr %13, align 4, !tbaa !15\n  br label %47\n\n43:                                               ; preds = %31, %8, %3\n  %44 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %45 = add nsw i32 %2, -1\n  %46 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %44, i32 noundef %1, i32 noundef %45, i32 noundef 0) #2\n  br label %51\n\n47:                                               ; preds = %37\n  %48 = load i32, ptr %13, align 4, !tbaa !15\n  %49 = tail call i32 @SETARG_A(i32 noundef %48, i32 noundef %40) #2\n  %50 = tail call i32 @SETARG_B(i32 noundef %48, i32 noundef %41) #2\n  br label %51\n\n51:                                               ; preds = %47, %43\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/xLua/build/lua-5.3.4/src/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dm1105.c_dm1105_remove.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function dm1105_remove\n\t.type\tdm1105_remove,@function\ndm1105_remove:                          # @dm1105_remove\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdi, %r14\n\tcallq\tpci_get_drvdata@PLT\n\tmovq\t%rax, %rbx\n\tleaq\t40(%rax), %r15\n\tmovq\t%rax, %rdi\n\tcallq\tdm1105_ir_exit@PLT\n\tmovq\t%r15, %rdi\n\tcallq\t*56(%rbx)\n\tleaq\t32(%rbx), %rdi\n\tcallq\tdvb_net_release@PLT\n\tmovq\t24(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_2\n# %bb.1:\n\tcallq\tdvb_unregister_frontend@PLT\n.LBB0_2:\n\tleaq\t64(%rbx), %r12\n\tmovq\t%r15, %rdi\n\tcallq\t*48(%rbx)\n\tleaq\t16(%rbx), %rsi\n\tmovq\t%r15, %rdi\n\tcallq\t*40(%rbx)\n\tleaq\t12(%rbx), %rsi\n\tmovq\t%r15, %rdi\n\tcallq\t*40(%rbx)\n\tleaq\t8(%rbx), %rdi\n\tcallq\tdvb_dmxdev_release@PLT\n\tmovq\t%r15, %rdi\n\tcallq\tdvb_dmx_release@PLT\n\tmovq\t%r12, %rdi\n\tcallq\tdvb_unregister_adapter@PLT\n\tmovq\t%rbx, %rdi\n\taddq\t$4, %rdi\n\tcallq\ti2c_del_adapter@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tdm1105_hw_exit@PLT\n\tmovl\t(%r14), %edi\n\tmovq\t%rbx, %rsi\n\tcallq\tfree_irq@PLT\n\tmovl\t(%rbx), %esi\n\tmovq\t%r14, %rdi\n\tcallq\tpci_iounmap@PLT\n\tmovq\t%r14, %rdi\n\tcallq\tpci_release_regions@PLT\n\tmovq\t%r14, %rdi\n\tcallq\tpci_disable_device@PLT\n\tdecl\tdm1105_devcount(%rip)\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\tkfree@PLT                       # TAILCALL\n.Lfunc_end0:\n\t.size\tdm1105_remove, .Lfunc_end0-dm1105_remove\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tdm1105_devcount,@object         # @dm1105_devcount\n\t.bss\n\t.globl\tdm1105_devcount\n\t.p2align\t2\ndm1105_devcount:\n\t.long\t0                               # 0x0\n\t.size\tdm1105_devcount, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dm1105_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }\n\n@dm1105_devcount = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dm1105_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @dm1105_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @pci_get_drvdata(ptr noundef %0) #2\n  %3 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 10\n  %4 = tail call i32 @dm1105_ir_exit(ptr noundef %2) #2\n  %5 = load ptr, ptr %3, align 8, !tbaa !5\n  %6 = tail call i32 %5(ptr noundef nonnull %3) #2\n  %7 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 9\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  %9 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 8\n  %10 = load i32, ptr %9, align 8, !tbaa !12\n  %11 = tail call i32 %8(i32 noundef %10) #2\n  %12 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 7\n  %13 = tail call i32 @dvb_net_release(ptr noundef nonnull %12) #2\n  %14 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 6\n  %15 = load i64, ptr %14, align 8, !tbaa !13\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %1\n  %18 = tail call i32 @dvb_unregister_frontend(i64 noundef %15) #2\n  br label %19\n\n19:                                               ; preds = %17, %1\n  %20 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 5\n  %21 = load ptr, ptr %20, align 8, !tbaa !14\n  %22 = tail call i32 %21(ptr noundef nonnull %3) #2\n  %23 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 4\n  %24 = load ptr, ptr %23, align 8, !tbaa !15\n  %25 = tail call i32 %24(ptr noundef nonnull %3, ptr noundef nonnull %23) #2\n  %26 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 3\n  %27 = load ptr, ptr %23, align 8, !tbaa !15\n  %28 = tail call i32 %27(ptr noundef nonnull %3, ptr noundef nonnull %26) #2\n  %29 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 2\n  %30 = load ptr, ptr %23, align 8, !tbaa !15\n  %31 = tail call i32 %30(ptr noundef nonnull %29) #2\n  %32 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 1\n  %33 = tail call i32 @dvb_dmxdev_release(ptr noundef nonnull %29) #2\n  %34 = tail call i32 @dvb_dmx_release(ptr noundef nonnull %3) #2\n  %35 = tail call i32 @dvb_unregister_adapter(ptr noundef nonnull %20) #2\n  %36 = tail call i32 @i2c_del_adapter(ptr noundef nonnull %32) #2\n  %37 = tail call i32 @dm1105_hw_exit(ptr noundef nonnull %2) #2\n  %38 = load i32, ptr %0, align 4, !tbaa !16\n  %39 = tail call i32 @free_irq(i32 noundef %38, ptr noundef nonnull %2) #2\n  %40 = load i32, ptr %2, align 8, !tbaa !18\n  %41 = tail call i32 @pci_iounmap(ptr noundef nonnull %0, i32 noundef %40) #2\n  %42 = tail call i32 @pci_release_regions(ptr noundef nonnull %0) #2\n  %43 = tail call i32 @pci_disable_device(ptr noundef nonnull %0) #2\n  %44 = load i32, ptr @dm1105_devcount, align 4, !tbaa !19\n  %45 = add nsw i32 %44, -1\n  store i32 %45, ptr @dm1105_devcount, align 4, !tbaa !19\n  %46 = tail call i32 @kfree(ptr noundef nonnull %2) #2\n  ret void\n}\n\ndeclare ptr @pci_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_ir_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_net_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_frontend(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmxdev_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmx_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @i2c_del_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_hw_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_iounmap(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_release_regions(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_device(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 56}\n!6 = !{!\"dm1105_state\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !10, i64 40, !10, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 48}\n!12 = !{!6, !7, i64 32}\n!13 = !{!6, !14, i64 24}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!6, !10, i64 40}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"pci_dev\", !7, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dm1105_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }\n\n@dm1105_devcount = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dm1105_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @dm1105_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @pci_get_drvdata(ptr noundef %0) #2\n  %3 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 10\n  %4 = tail call i32 @dm1105_ir_exit(ptr noundef %2) #2\n  %5 = load ptr, ptr %3, align 8, !tbaa !5\n  %6 = tail call i32 %5(ptr noundef nonnull %3) #2\n  %7 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 9\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  %9 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 8\n  %10 = load i32, ptr %9, align 8, !tbaa !12\n  %11 = tail call i32 %8(i32 noundef %10) #2\n  %12 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 7\n  %13 = tail call i32 @dvb_net_release(ptr noundef nonnull %12) #2\n  %14 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 6\n  %15 = load i64, ptr %14, align 8, !tbaa !13\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %1\n  %18 = tail call i32 @dvb_unregister_frontend(i64 noundef %15) #2\n  br label %19\n\n19:                                               ; preds = %17, %1\n  %20 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 5\n  %21 = load ptr, ptr %20, align 8, !tbaa !14\n  %22 = tail call i32 %21(ptr noundef nonnull %3) #2\n  %23 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 4\n  %24 = load ptr, ptr %23, align 8, !tbaa !15\n  %25 = tail call i32 %24(ptr noundef nonnull %3, ptr noundef nonnull %23) #2\n  %26 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 3\n  %27 = load ptr, ptr %23, align 8, !tbaa !15\n  %28 = tail call i32 %27(ptr noundef nonnull %3, ptr noundef nonnull %26) #2\n  %29 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 2\n  %30 = load ptr, ptr %23, align 8, !tbaa !15\n  %31 = tail call i32 %30(ptr noundef nonnull %29) #2\n  %32 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 1\n  %33 = tail call i32 @dvb_dmxdev_release(ptr noundef nonnull %29) #2\n  %34 = tail call i32 @dvb_dmx_release(ptr noundef nonnull %3) #2\n  %35 = tail call i32 @dvb_unregister_adapter(ptr noundef nonnull %20) #2\n  %36 = tail call i32 @i2c_del_adapter(ptr noundef nonnull %32) #2\n  %37 = tail call i32 @dm1105_hw_exit(ptr noundef nonnull %2) #2\n  %38 = load i32, ptr %0, align 4, !tbaa !16\n  %39 = tail call i32 @free_irq(i32 noundef %38, ptr noundef nonnull %2) #2\n  %40 = load i32, ptr %2, align 8, !tbaa !18\n  %41 = tail call i32 @pci_iounmap(ptr noundef nonnull %0, i32 noundef %40) #2\n  %42 = tail call i32 @pci_release_regions(ptr noundef nonnull %0) #2\n  %43 = tail call i32 @pci_disable_device(ptr noundef nonnull %0) #2\n  %44 = load i32, ptr @dm1105_devcount, align 4, !tbaa !19\n  %45 = add nsw i32 %44, -1\n  store i32 %45, ptr @dm1105_devcount, align 4, !tbaa !19\n  %46 = tail call i32 @kfree(ptr noundef nonnull %2) #2\n  ret void\n}\n\ndeclare ptr @pci_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_ir_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_net_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_frontend(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmxdev_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmx_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @i2c_del_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_hw_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_iounmap(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_release_regions(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_device(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 56}\n!6 = !{!\"dm1105_state\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !10, i64 40, !10, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 48}\n!12 = !{!6, !7, i64 32}\n!13 = !{!6, !14, i64 24}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!6, !10, i64 40}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"pci_dev\", !7, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dm1105_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }\n\n@dm1105_devcount = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dm1105_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @dm1105_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @pci_get_drvdata(ptr noundef %0) #2\n  %3 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 11\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = tail call i32 %4(ptr noundef %2) #2\n  %6 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 10\n  %7 = load ptr, ptr %6, align 8, !tbaa !11\n  %8 = tail call i32 %7(ptr noundef nonnull %3) #2\n  %9 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 7\n  %10 = load i64, ptr %9, align 8, !tbaa !12\n  %11 = inttoptr i64 %10 to ptr\n  %12 = tail call i32 %11(ptr noundef nonnull %9) #2\n  %13 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 6\n  %14 = tail call i32 @dvb_net_release(ptr noundef nonnull %13) #2\n  %15 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 5\n  %16 = load i64, ptr %15, align 8, !tbaa !13\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %20, label %18\n\n18:                                               ; preds = %1\n  %19 = tail call i32 @dvb_unregister_frontend(i64 noundef %16) #2\n  br label %20\n\n20:                                               ; preds = %18, %1\n  %21 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 4\n  %22 = load ptr, ptr %21, align 8, !tbaa !14\n  %23 = tail call i32 %22(ptr noundef nonnull %3) #2\n  %24 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 3\n  %25 = load ptr, ptr %24, align 8, !tbaa !15\n  %26 = tail call i32 %25(ptr noundef nonnull %3, ptr noundef nonnull %24) #2\n  %27 = load ptr, ptr %24, align 8, !tbaa !15\n  %28 = tail call i32 %27(ptr noundef nonnull %3, ptr noundef nonnull %27) #2\n  %29 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 2\n  %30 = load ptr, ptr %29, align 8, !tbaa !16\n  %31 = tail call i32 @dvb_dmxdev_release(ptr noundef %30) #2\n  %32 = tail call i32 @dvb_dmx_release(ptr noundef nonnull %3) #2\n  %33 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 1\n  %34 = tail call i32 @dvb_unregister_adapter(ptr noundef nonnull %33) #2\n  %35 = load i32, ptr %3, align 8, !tbaa !5\n  %36 = tail call i32 @i2c_del_adapter(i32 noundef %35) #2\n  %37 = tail call i32 @dm1105_hw_exit(ptr noundef nonnull %2) #2\n  %38 = load i32, ptr %0, align 4, !tbaa !17\n  %39 = tail call i32 @free_irq(i32 noundef %38, ptr noundef nonnull %2) #2\n  %40 = load i32, ptr %2, align 8, !tbaa !19\n  %41 = tail call i32 @pci_iounmap(ptr noundef nonnull %0, i32 noundef %40) #2\n  %42 = tail call i32 @pci_release_regions(ptr noundef nonnull %0) #2\n  %43 = tail call i32 @pci_disable_device(ptr noundef nonnull %0) #2\n  %44 = load i32, ptr @dm1105_devcount, align 4, !tbaa !20\n  %45 = add nsw i32 %44, -1\n  store i32 %45, ptr @dm1105_devcount, align 4, !tbaa !20\n  %46 = tail call i32 @kfree(ptr noundef nonnull %2) #2\n  ret void\n}\n\ndeclare ptr @pci_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_net_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_frontend(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmxdev_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmx_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @i2c_del_adapter(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_hw_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_iounmap(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_release_regions(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_device(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 40}\n!6 = !{!\"dm1105_state\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !10, i64 48, !10, i64 56}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 56}\n!12 = !{!6, !10, i64 64}\n!13 = !{!6, !10, i64 24}\n!14 = !{!6, !10, i64 16}\n!15 = !{!6, !10, i64 8}\n!16 = !{!6, !10, i64 0}\n!17 = !{!18, !7, i64 0}\n!18 = !{!\"pci_dev\", !7, i64 0}\n!19 = !{!6, !7, i64 0}\n!20 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dm1105_state = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }\n\n@dm1105_devcount = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dm1105_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @dm1105_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @pci_get_drvdata(ptr noundef %0) #2\n  %3 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 9\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = tail call i32 @dm1105_ir_exit(ptr noundef %2) #2\n  %6 = load ptr, ptr %3, align 8, !tbaa !5\n  %7 = tail call i32 %6(ptr noundef nonnull %3) #2\n  %8 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 8\n  %9 = load ptr, ptr %8, align 8, !tbaa !11\n  %10 = tail call i32 %9(ptr noundef nonnull %8) #2\n  %11 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 7\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load i64, ptr %12, align 8, !tbaa !13\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %17, label %15\n\n15:                                               ; preds = %1\n  %16 = tail call i32 @dvb_unregister_frontend(i64 noundef %13) #2\n  br label %17\n\n17:                                               ; preds = %15, %1\n  %18 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 6\n  %19 = load ptr, ptr %18, align 8, !tbaa !15\n  %20 = tail call i32 %19(ptr noundef nonnull %18) #2\n  %21 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 5\n  %22 = load ptr, ptr %21, align 8, !tbaa !16\n  %23 = tail call i32 %22(ptr noundef nonnull %21) #2\n  %24 = load ptr, ptr %21, align 8, !tbaa !16\n  %25 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 4\n  %26 = tail call i32 %24(ptr noundef nonnull %25) #2\n  %27 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 3\n  %28 = tail call i32 %24(ptr noundef nonnull %27) #2\n  %29 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 2\n  %30 = tail call i32 @dvb_dmxdev_release(ptr noundef nonnull %29) #2\n  %31 = tail call i32 @dvb_dmx_release(ptr noundef nonnull %3) #2\n  %32 = tail call i32 @dvb_unregister_adapter(ptr noundef nonnull %18) #2\n  %33 = getelementptr inbounds %struct.dm1105_state, ptr %2, i64 0, i32 1\n  %34 = tail call i32 @i2c_del_adapter(ptr noundef nonnull %33) #2\n  %35 = tail call i32 @dm1105_hw_exit(ptr noundef %2) #2\n  %36 = load i32, ptr %0, align 4, !tbaa !17\n  %37 = tail call i32 @free_irq(i32 noundef %36, ptr noundef %2) #2\n  %38 = load i32, ptr %2, align 8, !tbaa !19\n  %39 = tail call i32 @pci_iounmap(ptr noundef nonnull %0, i32 noundef %38) #2\n  %40 = tail call i32 @pci_release_regions(ptr noundef nonnull %0) #2\n  %41 = tail call i32 @pci_disable_device(ptr noundef nonnull %0) #2\n  %42 = load i32, ptr @dm1105_devcount, align 4, !tbaa !20\n  %43 = add nsw i32 %42, -1\n  store i32 %43, ptr @dm1105_devcount, align 4, !tbaa !20\n  %44 = tail call i32 @kfree(ptr noundef nonnull %2) #2\n  ret void\n}\n\ndeclare ptr @pci_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_ir_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_frontend(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmxdev_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmx_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @i2c_del_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_hw_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_iounmap(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_release_regions(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_device(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 56}\n!6 = !{!\"dm1105_state\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !10, i64 40, !10, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 48}\n!12 = !{!6, !10, i64 40}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!6, !10, i64 32}\n!16 = !{!6, !10, i64 24}\n!17 = !{!18, !7, i64 0}\n!18 = !{!\"pci_dev\", !7, i64 0}\n!19 = !{!6, !7, i64 0}\n!20 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/media/pci/dm1105/extr_dm1105.c_dm1105_remove.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dm1105_dev = type { i32, i32, i32, i32, i32, i64, i32, %struct.dvb_demux, %struct.dvb_adapter }\n%struct.dvb_demux = type { %struct.dmx_demux }\n%struct.dmx_demux = type { ptr, ptr, ptr }\n%struct.dvb_adapter = type { i32 }\n\n@dm1105_devcount = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dm1105_remove], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @dm1105_remove(ptr noundef %0) #0 {\n  %2 = tail call ptr @pci_get_drvdata(ptr noundef %0) #2\n  %3 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 7\n  %4 = tail call i32 @dm1105_ir_exit(ptr noundef %2) #2\n  %5 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 7, i32 0, i32 2\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = tail call i32 %6(ptr noundef nonnull %3) #2\n  %8 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 6\n  %9 = tail call i32 @dvb_net_release(ptr noundef nonnull %8) #2\n  %10 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 5\n  %11 = load i64, ptr %10, align 8, !tbaa !10\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %15, label %13\n\n13:                                               ; preds = %1\n  %14 = tail call i32 @dvb_unregister_frontend(i64 noundef %11) #2\n  br label %15\n\n15:                                               ; preds = %13, %1\n  %16 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 8\n  %17 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 7, i32 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !16\n  %19 = tail call i32 %18(ptr noundef nonnull %3) #2\n  %20 = load ptr, ptr %3, align 8, !tbaa !17\n  %21 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 4\n  %22 = tail call i32 %20(ptr noundef nonnull %3, ptr noundef nonnull %21) #2\n  %23 = load ptr, ptr %3, align 8, !tbaa !17\n  %24 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 3\n  %25 = tail call i32 %23(ptr noundef nonnull %3, ptr noundef nonnull %24) #2\n  %26 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 2\n  %27 = tail call i32 @dvb_dmxdev_release(ptr noundef nonnull %26) #2\n  %28 = tail call i32 @dvb_dmx_release(ptr noundef nonnull %3) #2\n  %29 = tail call i32 @dvb_unregister_adapter(ptr noundef nonnull %16) #2\n  %30 = getelementptr inbounds %struct.dm1105_dev, ptr %2, i64 0, i32 1\n  %31 = tail call i32 @i2c_del_adapter(ptr noundef nonnull %30) #2\n  %32 = tail call i32 @dm1105_hw_exit(ptr noundef nonnull %2) #2\n  %33 = load i32, ptr %0, align 4, !tbaa !18\n  %34 = tail call i32 @free_irq(i32 noundef %33, ptr noundef nonnull %2) #2\n  %35 = load i32, ptr %2, align 8, !tbaa !20\n  %36 = tail call i32 @pci_iounmap(ptr noundef nonnull %0, i32 noundef %35) #2\n  %37 = tail call i32 @pci_release_regions(ptr noundef nonnull %0) #2\n  %38 = tail call i32 @pci_disable_device(ptr noundef nonnull %0) #2\n  %39 = load i32, ptr @dm1105_devcount, align 4, !tbaa !21\n  %40 = add nsw i32 %39, -1\n  store i32 %40, ptr @dm1105_devcount, align 4, !tbaa !21\n  %41 = tail call i32 @kfree(ptr noundef nonnull %2) #2\n  ret void\n}\n\ndeclare ptr @pci_get_drvdata(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_ir_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_net_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_frontend(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmxdev_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_dmx_release(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dvb_unregister_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @i2c_del_adapter(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dm1105_hw_exit(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_iounmap(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_release_regions(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_device(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"dmx_demux\", !7, i64 0, !7, i64 8, !7, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !13, i64 24}\n!11 = !{!\"dm1105_dev\", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !13, i64 24, !12, i64 32, !14, i64 40, !15, i64 64}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!\"long\", !8, i64 0}\n!14 = !{!\"dvb_demux\", !6, i64 0}\n!15 = !{!\"dvb_adapter\", !12, i64 0}\n!16 = !{!6, !7, i64 8}\n!17 = !{!6, !7, i64 0}\n!18 = !{!19, !12, i64 0}\n!19 = !{!\"pci_dev\", !12, i64 0}\n!20 = !{!11, !12, i64 0}\n!21 = !{!12, !12, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ixgbe_common.c_ixgbe_get_pcie_msix_count_generic.ll\"\n\t.globl\tixgbe_get_pcie_msix_count_generic # -- Begin function ixgbe_get_pcie_msix_count_generic\n\t.p2align\t4, 0x90\n\t.type\tixgbe_get_pcie_msix_count_generic,@function\nixgbe_get_pcie_msix_count_generic:      # @ixgbe_get_pcie_msix_count_generic\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t4(%rdi), %ecx\n\taddl\t$-128, %ecx\n\tmovl\t$1, %eax\n\tcmpl\t$5, %ecx\n\tja\t.LBB0_2\n# %bb.1:\n\tmovq\t%rdi, %rbx\n\tmovslq\t%ecx, %rax\n\tmovq\t.Lswitch.table.ixgbe_get_pcie_msix_count_generic(,%rax,8), %rcx\n\tmovq\t.Lswitch.table.ixgbe_get_pcie_msix_count_generic.1(,%rax,8), %rax\n\tmovl\t(%rax), %esi\n\tmovl\t(%rcx), %ebp\n\tcallq\tixgbe_read_pci_cfg_word@PLT\n\tmovl\t%eax, %r14d\n\tmovl\t(%rbx), %edi\n\tcallq\tixgbe_removed@PLT\n\txorl\t%ecx, %ecx\n\ttestq\t%rax, %rax\n\tcmovel\t%r14d, %ecx\n\tandl\tIXGBE_PCIE_MSIX_TBL_SZ_MASK(%rip), %ecx\n\tleal\t1(%rcx), %eax\n\tcmpl\t%ebp, %ecx\n\tcmovgel\t%ebp, %eax\n.LBB0_2:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tixgbe_get_pcie_msix_count_generic, .Lfunc_end0-ixgbe_get_pcie_msix_count_generic\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tIXGBE_PCIE_MSIX_82598_CAPS,@object # @IXGBE_PCIE_MSIX_82598_CAPS\n\t.bss\n\t.globl\tIXGBE_PCIE_MSIX_82598_CAPS\n\t.p2align\t2\nIXGBE_PCIE_MSIX_82598_CAPS:\n\t.long\t0                               # 0x0\n\t.size\tIXGBE_PCIE_MSIX_82598_CAPS, 4\n\n\t.type\tIXGBE_MAX_MSIX_VECTORS_82598,@object # @IXGBE_MAX_MSIX_VECTORS_82598\n\t.globl\tIXGBE_MAX_MSIX_VECTORS_82598\n\t.p2align\t2\nIXGBE_MAX_MSIX_VECTORS_82598:\n\t.long\t0                               # 0x0\n\t.size\tIXGBE_MAX_MSIX_VECTORS_82598, 4\n\n\t.type\tIXGBE_PCIE_MSIX_82599_CAPS,@object # @IXGBE_PCIE_MSIX_82599_CAPS\n\t.globl\tIXGBE_PCIE_MSIX_82599_CAPS\n\t.p2align\t2\nIXGBE_PCIE_MSIX_82599_CAPS:\n\t.long\t0                               # 0x0\n\t.size\tIXGBE_PCIE_MSIX_82599_CAPS, 4\n\n\t.type\tIXGBE_MAX_MSIX_VECTORS_82599,@object # @IXGBE_MAX_MSIX_VECTORS_82599\n\t.globl\tIXGBE_MAX_MSIX_VECTORS_82599\n\t.p2align\t2\nIXGBE_MAX_MSIX_VECTORS_82599:\n\t.long\t0                               # 0x0\n\t.size\tIXGBE_MAX_MSIX_VECTORS_82599, 4\n\n\t.type\tIXGBE_PCIE_MSIX_TBL_SZ_MASK,@object # @IXGBE_PCIE_MSIX_TBL_SZ_MASK\n\t.globl\tIXGBE_PCIE_MSIX_TBL_SZ_MASK\n\t.p2align\t2\nIXGBE_PCIE_MSIX_TBL_SZ_MASK:\n\t.long\t0                               # 0x0\n\t.size\tIXGBE_PCIE_MSIX_TBL_SZ_MASK, 4\n\n\t.type\t.Lswitch.table.ixgbe_get_pcie_msix_count_generic,@object # @switch.table.ixgbe_get_pcie_msix_count_generic\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.Lswitch.table.ixgbe_get_pcie_msix_count_generic:\n\t.quad\tIXGBE_MAX_MSIX_VECTORS_82599\n\t.quad\tIXGBE_MAX_MSIX_VECTORS_82599\n\t.quad\tIXGBE_MAX_MSIX_VECTORS_82599\n\t.quad\tIXGBE_MAX_MSIX_VECTORS_82599\n\t.quad\tIXGBE_MAX_MSIX_VECTORS_82599\n\t.quad\tIXGBE_MAX_MSIX_VECTORS_82598\n\t.size\t.Lswitch.table.ixgbe_get_pcie_msix_count_generic, 48\n\n\t.type\t.Lswitch.table.ixgbe_get_pcie_msix_count_generic.1,@object # @switch.table.ixgbe_get_pcie_msix_count_generic.1\n\t.p2align\t3\n.Lswitch.table.ixgbe_get_pcie_msix_count_generic.1:\n\t.quad\tIXGBE_PCIE_MSIX_82599_CAPS\n\t.quad\tIXGBE_PCIE_MSIX_82599_CAPS\n\t.quad\tIXGBE_PCIE_MSIX_82599_CAPS\n\t.quad\tIXGBE_PCIE_MSIX_82599_CAPS\n\t.quad\tIXGBE_PCIE_MSIX_82599_CAPS\n\t.quad\tIXGBE_PCIE_MSIX_82598_CAPS\n\t.size\t.Lswitch.table.ixgbe_get_pcie_msix_count_generic.1, 48\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ixgbe_hw = type { i32, i32 }\n\n@IXGBE_PCIE_MSIX_82598_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82598 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_82599_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82599 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_TBL_SZ_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@switch.table.ixgbe_get_pcie_msix_count_generic = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82598], align 8\n@switch.table.ixgbe_get_pcie_msix_count_generic.1 = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82598_CAPS], align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ixgbe_get_pcie_msix_count_generic(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.ixgbe_hw, ptr %0, i64 0, i32 1\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = add i32 %3, -128\n  %5 = icmp ult i32 %4, 6\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %1\n  %7 = sext i32 %4 to i64\n  %8 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic, i64 0, i64 %7\n  %9 = load ptr, ptr %8, align 8, !tbaa !10\n  %10 = sext i32 %4 to i64\n  %11 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic.1, i64 0, i64 %10\n  %12 = load ptr, ptr %11, align 8, !tbaa !10\n  %13 = load i32, ptr %12, align 4, !tbaa !12\n  %14 = load i32, ptr %9, align 4, !tbaa !12\n  %15 = tail call i32 @ixgbe_read_pci_cfg_word(ptr noundef nonnull %0, i32 noundef %13) #2\n  %16 = load i32, ptr %0, align 4, !tbaa !13\n  %17 = tail call i64 @ixgbe_removed(i32 noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  %19 = select i1 %18, i32 %15, i32 0\n  br label %20\n\n20:                                               ; preds = %6, %1\n  %21 = phi i32 [ 1, %1 ], [ %19, %6 ]\n  %22 = load i32, ptr @IXGBE_PCIE_MSIX_TBL_SZ_MASK, align 4, !tbaa !12\n  %23 = and i32 %22, %21\n  %24 = icmp slt i32 %23, %14\n  %25 = add nsw i32 %23, 1\n  %26 = select i1 %24, i32 %25, i32 %14\n  ret i32 %26\n}\n\ndeclare i32 @ixgbe_read_pci_cfg_word(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ixgbe_removed(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ixgbe_hw\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ixgbe_hw = type { i32, i32 }\n\n@IXGBE_PCIE_MSIX_82598_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82598 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_82599_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82599 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_TBL_SZ_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@switch.table.ixgbe_get_pcie_msix_count_generic = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82598], align 8\n@switch.table.ixgbe_get_pcie_msix_count_generic.1 = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82598_CAPS], align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ixgbe_get_pcie_msix_count_generic(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.ixgbe_hw, ptr %0, i64 0, i32 1\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = add i32 %3, -128\n  %5 = icmp ult i32 %4, 6\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %1\n  %7 = sext i32 %4 to i64\n  %8 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic, i64 0, i64 %7\n  %9 = load ptr, ptr %8, align 8, !tbaa !10\n  %10 = sext i32 %4 to i64\n  %11 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic.1, i64 0, i64 %10\n  %12 = load ptr, ptr %11, align 8, !tbaa !10\n  %13 = load i32, ptr %12, align 4, !tbaa !12\n  %14 = load i32, ptr %9, align 4, !tbaa !12\n  %15 = tail call i32 @ixgbe_read_pci_cfg_word(ptr noundef nonnull %0, i32 noundef %13) #2\n  %16 = load i32, ptr %0, align 4, !tbaa !13\n  %17 = tail call i64 @ixgbe_removed(i32 noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  %19 = select i1 %18, i32 %15, i32 0\n  br label %20\n\n20:                                               ; preds = %6, %1\n  %21 = phi i32 [ 1, %1 ], [ %19, %6 ]\n  %22 = load i32, ptr @IXGBE_PCIE_MSIX_TBL_SZ_MASK, align 4, !tbaa !12\n  %23 = and i32 %22, %21\n  %24 = icmp slt i32 %23, %14\n  %25 = add nsw i32 %23, 1\n  %26 = select i1 %24, i32 %25, i32 %14\n  ret i32 %26\n}\n\ndeclare i32 @ixgbe_read_pci_cfg_word(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ixgbe_removed(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ixgbe_hw\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ixgbe_hw = type { i32, i32 }\n\n@IXGBE_PCIE_MSIX_82598_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82598 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_82599_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82599 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_TBL_SZ_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@switch.table.ixgbe_get_pcie_msix_count_generic = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82598], align 8\n@switch.table.ixgbe_get_pcie_msix_count_generic.1 = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82598_CAPS], align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ixgbe_get_pcie_msix_count_generic(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.ixgbe_hw, ptr %0, i64 0, i32 1\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = add i32 %3, -128\n  %5 = icmp ult i32 %4, 6\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %1\n  %7 = sext i32 %4 to i64\n  %8 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic, i64 0, i64 %7\n  %9 = load ptr, ptr %8, align 8, !tbaa !10\n  %10 = sext i32 %4 to i64\n  %11 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic.1, i64 0, i64 %10\n  %12 = load ptr, ptr %11, align 8, !tbaa !10\n  %13 = load i32, ptr %12, align 4, !tbaa !12\n  %14 = load i32, ptr %9, align 4, !tbaa !12\n  %15 = tail call i32 @ixgbe_read_pci_cfg_word(ptr noundef nonnull %0, i32 noundef %13) #2\n  %16 = load i32, ptr %0, align 4, !tbaa !13\n  %17 = tail call i64 @ixgbe_removed(i32 noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  %19 = select i1 %18, i32 %15, i32 0\n  br label %20\n\n20:                                               ; preds = %6, %1\n  %21 = phi i32 [ 1, %1 ], [ %19, %6 ]\n  %22 = load i32, ptr @IXGBE_PCIE_MSIX_TBL_SZ_MASK, align 4, !tbaa !12\n  %23 = and i32 %22, %21\n  %24 = icmp slt i32 %23, %14\n  %25 = add nsw i32 %23, 1\n  %26 = select i1 %24, i32 %25, i32 %14\n  ret i32 %26\n}\n\ndeclare i32 @ixgbe_read_pci_cfg_word(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ixgbe_removed(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ixgbe_hw\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ixgbe_hw = type { i32, i32 }\n\n@IXGBE_PCIE_MSIX_82598_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82598 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_82599_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82599 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_TBL_SZ_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@switch.table.ixgbe_get_pcie_msix_count_generic = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82598], align 8\n@switch.table.ixgbe_get_pcie_msix_count_generic.1 = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82598_CAPS], align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ixgbe_get_pcie_msix_count_generic(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.ixgbe_hw, ptr %0, i64 0, i32 1\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = add i32 %3, -128\n  %5 = icmp ult i32 %4, 6\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %1\n  %7 = sext i32 %4 to i64\n  %8 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic, i64 0, i64 %7\n  %9 = load ptr, ptr %8, align 8, !tbaa !10\n  %10 = sext i32 %4 to i64\n  %11 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic.1, i64 0, i64 %10\n  %12 = load ptr, ptr %11, align 8, !tbaa !10\n  %13 = load i32, ptr %12, align 4, !tbaa !12\n  %14 = load i32, ptr %9, align 4, !tbaa !12\n  %15 = tail call i32 @ixgbe_read_pci_cfg_word(ptr noundef nonnull %0, i32 noundef %13) #2\n  %16 = load i32, ptr %0, align 4, !tbaa !13\n  %17 = tail call i64 @ixgbe_removed(i32 noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  %19 = select i1 %18, i32 %15, i32 0\n  br label %20\n\n20:                                               ; preds = %6, %1\n  %21 = phi i32 [ 1, %1 ], [ %19, %6 ]\n  %22 = load i32, ptr @IXGBE_PCIE_MSIX_TBL_SZ_MASK, align 4, !tbaa !12\n  %23 = and i32 %22, %21\n  %24 = icmp slt i32 %23, %14\n  %25 = add nsw i32 %23, 1\n  %26 = select i1 %24, i32 %25, i32 %14\n  ret i32 %26\n}\n\ndeclare i32 @ixgbe_read_pci_cfg_word(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ixgbe_removed(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ixgbe_hw\", !7, i64 0, !7, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !7, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/ethernet/intel/ixgbe/extr_ixgbe_common.c_ixgbe_get_pcie_msix_count_generic.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ixgbe_hw = type { i32, %struct.TYPE_2__ }\n%struct.TYPE_2__ = type { i32 }\n\n@IXGBE_PCIE_MSIX_82598_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82598 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_82599_CAPS = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_MAX_MSIX_VECTORS_82599 = dso_local local_unnamed_addr global i32 0, align 4\n@IXGBE_PCIE_MSIX_TBL_SZ_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@switch.table.ixgbe_get_pcie_msix_count_generic = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82599, ptr @IXGBE_MAX_MSIX_VECTORS_82598], align 8\n@switch.table.ixgbe_get_pcie_msix_count_generic.1 = private unnamed_addr constant [6 x ptr] [ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82599_CAPS, ptr @IXGBE_PCIE_MSIX_82598_CAPS], align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ixgbe_get_pcie_msix_count_generic(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = getelementptr inbounds %struct.ixgbe_hw, ptr %0, i64 0, i32 1\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = add i32 %3, -128\n  %5 = icmp ult i32 %4, 6\n  br i1 %5, label %6, label %25\n\n6:                                                ; preds = %1\n  %7 = sext i32 %4 to i64\n  %8 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic, i64 0, i64 %7\n  %9 = load ptr, ptr %8, align 8\n  %10 = sext i32 %4 to i64\n  %11 = getelementptr inbounds [6 x ptr], ptr @switch.table.ixgbe_get_pcie_msix_count_generic.1, i64 0, i64 %10\n  %12 = load ptr, ptr %11, align 8\n  %13 = load i32, ptr %12, align 4, !tbaa !11\n  %14 = load i32, ptr %9, align 4, !tbaa !11\n  %15 = tail call i32 @ixgbe_read_pci_cfg_word(ptr noundef nonnull %0, i32 noundef %13) #2\n  %16 = load i32, ptr %0, align 4, !tbaa !12\n  %17 = tail call i64 @ixgbe_removed(i32 noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  %19 = select i1 %18, i32 %15, i32 0\n  %20 = load i32, ptr @IXGBE_PCIE_MSIX_TBL_SZ_MASK, align 4, !tbaa !11\n  %21 = and i32 %19, %20\n  %22 = add nsw i32 %21, 1\n  %23 = icmp slt i32 %21, %14\n  %24 = select i1 %23, i32 %22, i32 %14\n  br label %25\n\n25:                                               ; preds = %1, %6\n  %26 = phi i32 [ %24, %6 ], [ 1, %1 ]\n  ret i32 %26\n}\n\ndeclare i32 @ixgbe_read_pci_cfg_word(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ixgbe_removed(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 4}\n!6 = !{!\"ixgbe_hw\", !7, i64 0, !10, i64 4}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_2__\", !7, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_smpboot.c_get_delta.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function get_delta\n\t.type\tget_delta,@function\nget_delta:                              # @get_delta\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, 16(%rsp)                  # 8-byte Spill\n\tmovq\t%rdi, 8(%rsp)                   # 8-byte Spill\n\tcmpq\t$0, NUM_ITERS(%rip)\n\tjle\t.LBB0_1\n# %bb.2:                                # %.preheader1\n\tmovq\t$-1, %rbx\n\txorl\t%r14d, %r14d\n\txorl\t%ebp, %ebp\n\txorl\t%r13d, %r13d\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_6:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t$0, (%rax,%rcx,8)\n\txorl\t%eax, %eax\n\tcallq\tia64_get_itc@PLT\n\tmovq\t%rax, %rcx\n\tsubq\t%r12, %rcx\n\tmovq\t%rbx, %rdx\n\tsubq\t%rbp, %rdx\n\tcmpq\t%rdx, %rcx\n\tcmovbq\t%r15, %r13\n\tcmovbq\t%rax, %rbx\n\tcmovbq\t%r12, %rbp\n\tincq\t%r14\n\tcmpq\tNUM_ITERS(%rip), %r14\n\tjge\t.LBB0_7\n.LBB0_3:                                # =>This Loop Header: Depth=1\n                                        #     Child Loop BB0_5 Depth 2\n\txorl\t%eax, %eax\n\tcallq\tia64_get_itc@PLT\n\tmovq\t%rax, %r12\n\tmovq\tgo(%rip), %rax\n\tmovq\tMASTER(%rip), %rcx\n\tmovq\t$1, (%rax,%rcx,8)\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   Parent Loop BB0_3 Depth=1\n                                        # =>  This Inner Loop Header: Depth=2\n\tmovq\tSLAVE(%rip), %rcx\n\tmovq\t(%rax,%rcx,8), %r15\n\ttestq\t%r15, %r15\n\tjne\t.LBB0_6\n# %bb.4:                                #   in Loop: Header=BB0_5 Depth=2\n\txorl\t%eax, %eax\n\tcallq\tcpu_relax@PLT\n\tmovq\tgo(%rip), %rax\n\tjmp\t.LBB0_5\n.LBB0_1:\n\tmovq\t$-1, %rbx\n\txorl\t%r13d, %r13d\n\txorl\t%ebp, %ebp\n.LBB0_7:\n\tmovq\t%rbx, %rax\n\tsubq\t%rbp, %rax\n\tmovq\t8(%rsp), %rcx                   # 8-byte Reload\n\tmovq\t%rax, (%rcx)\n\tmovq\t%r13, %rax\n\tsubq\t%rbp, %rax\n\tmovq\t16(%rsp), %rcx                  # 8-byte Reload\n\tmovq\t%rax, (%rcx)\n\tmovq\t%rbp, %rcx\n\tshrq\t%rcx\n\tmovq\t%rbx, %rax\n\tshrq\t%rax\n\tandl\t$1, %ebp\n\tandl\t$1, %ebx\n\taddl\t%ebp, %ebx\n\txorl\t%edx, %edx\n\tcmpl\t$2, %ebx\n\tsete\t%dl\n\tsubq\t%r13, %rax\n\taddq\t%rcx, %rax\n\taddq\t%rdx, %rax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tget_delta, .Lfunc_end0-get_delta\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNUM_ITERS,@object               # @NUM_ITERS\n\t.bss\n\t.globl\tNUM_ITERS\n\t.p2align\t3\nNUM_ITERS:\n\t.quad\t0                               # 0x0\n\t.size\tNUM_ITERS, 8\n\n\t.type\tgo,@object                      # @go\n\t.globl\tgo\n\t.p2align\t3\ngo:\n\t.quad\t0\n\t.size\tgo, 8\n\n\t.type\tMASTER,@object                  # @MASTER\n\t.globl\tMASTER\n\t.p2align\t3\nMASTER:\n\t.quad\t0                               # 0x0\n\t.size\tMASTER, 8\n\n\t.type\tSLAVE,@object                   # @SLAVE\n\t.globl\tSLAVE\n\t.p2align\t3\nSLAVE:\n\t.quad\t0                               # 0x0\n\t.size\tSLAVE, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %31\n\n5:                                                ; preds = %2, %26\n  %6 = phi i64 [ %28, %26 ], [ 0, %2 ]\n  %7 = phi i64 [ %27, %26 ], [ 0, %2 ]\n  %8 = phi i64 [ %29, %26 ], [ 0, %2 ]\n  %9 = phi i64 [ %30, %26 ], [ -1, %2 ]\n  %10 = tail call i64 (...) @ia64_get_itc() #2\n  %11 = load ptr, ptr @go, align 8, !tbaa !9\n  %12 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %13 = getelementptr inbounds i64, ptr %11, i64 %12\n  store i64 1, ptr %13, align 8, !tbaa !5\n  %14 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %15 = getelementptr inbounds i64, ptr %11, i64 %14\n  %16 = load i64, ptr %15, align 8, !tbaa !5\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %18, label %24\n\n18:                                               ; preds = %5, %18\n  %19 = tail call i32 (...) @cpu_relax() #2\n  %20 = load ptr, ptr @go, align 8, !tbaa !9\n  %21 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %22 = getelementptr inbounds i64, ptr %20, i64 %21\n  %23 = load i64, ptr %22, align 8, !tbaa !5\n  br label %24\n\n24:                                               ; preds = %18, %5\n  %25 = phi i64 [ %23, %18 ], [ %16, %5 ]\n  store i64 0, ptr %25, align 8, !tbaa !5\n  br label %26\n\n26:                                               ; preds = %24, %26\n  %27 = phi i64 [ %25, %24 ], [ %27, %26 ]\n  %28 = add nuw nsw i64 %6, 1\n  %29 = tail call i64 (...) @ia64_get_itc() #2\n  %30 = tail call i64 @llvm.usub.sat.i64(i64 %29, i64 %10)\n  %31 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %32 = icmp slt i64 %28, %31\n  br i1 %32, label %5, label %33, !llvm.loop !11\n\n33:                                               ; preds = %26\n  %34 = sub i64 %9, %7\n  store i64 %34, ptr %0, align 8, !tbaa !5\n  %35 = sub i64 %8, %7\n  store i64 %35, ptr %1, align 8, !tbaa !5\n  %36 = lshr i64 %7, 1\n  %37 = lshr i64 %9, 1\n  %38 = and i64 %7, 1\n  %39 = and i64 %9, 1\n  %40 = add nuw nsw i64 %39, %38\n  %41 = icmp eq i64 %40, 2\n  %42 = select i1 %41, i64 1, i64 0\n  %43 = add i64 %37, %36\n  %44 = add i64 %43, %42\n  ret i64 %44\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i64 @llvm.usub.sat.i64(i64, i64) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %33\n\n5:                                                ; preds = %2, %27\n  %6 = phi i64 [ %29, %27 ], [ 0, %2 ]\n  %7 = phi i64 [ %28, %27 ], [ 0, %2 ]\n  %8 = phi i64 [ %25, %27 ], [ 0, %2 ]\n  %9 = phi i64 [ %26, %27 ], [ -1, %2 ]\n  %10 = phi i64 [ %24, %27 ], [ 0, %2 ]\n  %11 = tail call i64 (...) @ia64_get_itc() #2\n  %12 = load ptr, ptr @go, align 8, !tbaa !9\n  %13 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %14 = getelementptr inbounds i64, ptr %12, i64 %13\n  store i64 1, ptr %14, align 8, !tbaa !5\n  %15 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %16 = getelementptr inbounds i64, ptr %12, i64 %15\n  %17 = load i64, ptr %16, align 8, !tbaa !5\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %5\n  %20 = sub nsw i64 %11, %10\n  br label %27\n\n21:                                               ; preds = %5, %21\n  %22 = tail call i32 (...) @cpu_relax() #2\n  %23 = load ptr, ptr @go, align 8, !tbaa !9\n  %24 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %25 = getelementptr inbounds i64, ptr %23, i64 %24\n  %26 = load i64, ptr %25, align 8, !tbaa !5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %21, label %19, !llvm.loop !11\n\n28 = phi i64 [ %26, %21 ], [ %17, %5 ]\n29 = add nuw nsw i64 %6, 1\n30 = icmp slt i64 %29, %3\n  %31 = sub nsw i64 %9, %7\n  %32 = tail call i64 @llvm.umin.i64(i64 %31, i64 %20)\n  br i1 %30, label %5, label %33, !llvm.loop !13\n\n33 = phi i64 [ %32, %28 ], [ -1, %2 ]\n  %34 = phi i64 [ %7, %28 ], [ 0, %2 ]\n  %35 = phi i64 [ %9, %28 ], [ -1, %2 ]\n  %36 = sub nsw i64 %33, %34\n  store i64 %36, ptr %0, align 8, !tbaa !5\n  %37 = sub nsw i64 %35, %34\n  store i64 %37, ptr %1, align 8, !tbaa !5\n  %38 = lshr i64 %34, 1\n  %39 = lshr i64 %33, 1\n  %40 = and i64 %34, 1\n  %41 = and i64 %33, 1\n  %42 = add nuw nsw i64 %41, %40\n  %43 = icmp eq i64 %42, 2\n  %44 = select i1 %43, i64 1, i64 0\n  %45 = add i64 %39, %38\n  %46 = add i64 %45, %44\n  ret i64 %46\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i64 @llvm.umin.i64(i64, i64) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %32\n\n5:                                                ; preds = %2, %27\n  %6 = phi i64 [ %29, %27 ], [ 0, %2 ]\n  %7 = phi i64 [ %28, %27 ], [ 0, %2 ]\n  %8 = phi i64 [ %25, %27 ], [ 0, %2 ]\n  %9 = phi i64 [ %26, %27 ], [ -1, %2 ]\n  %10 = phi i64 [ %24, %27 ], [ 0, %2 ]\n  %11 = tail call i64 (...) @ia64_get_itc() #2\n  %12 = load ptr, ptr @go, align 8, !tbaa !9\n  %13 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %14 = getelementptr inbounds i64, ptr %12, i64 %13\n  store i64 1, ptr %14, align 8, !tbaa !5\n  %15 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %16 = getelementptr inbounds i64, ptr %12, i64 %15\n  %17 = load i64, ptr %16, align 8, !tbaa !5\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %5\n  %20 = getelementptr inbounds i64, ptr %12, i64 %15\n  store i64 0, ptr %20, align 8, !tbaa !5\n  br label %27\n\n21:                                               ; preds = %5, %21\n  %22 = tail call i32 (...) @cpu_relax() #2\n  %23 = load ptr, ptr @go, align 8, !tbaa !9\n  %24 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %25 = getelementptr inbounds i64, ptr %23, i64 %24\n  %26 = load i64, ptr %25, align 8, !tbaa !5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %5, label %19, !llvm.loop !11\n\n28 = phi i64 [ %26, %21 ], [ %17, %5 ]\n29 = add nuw nsw i64 %6, 1\n30 = icmp slt i64 %29, %3\n  %31 = select i1 %30, i64 %9, i64 %8\n  br label %5\n\n32 = phi i64 [ %9, %2 ], [ -1, %2 ], [ %31, %28 ]\n  %33 = phi i64 [ 0, %2 ], [ %8, %2 ], [ %28, %28 ]\n  %34 = phi i64 [ 0, %2 ], [ %10, %2 ], [ %24, %28 ]\n  %35 = sub nsw i64 %32, %34\n  store i64 %35, ptr %0, align 8, !tbaa !5\n  %36 = sub nsw i64 %33, %34\n  store i64 %36, ptr %1, align 8, !tbaa !5\n  %37 = lshr i64 %34, 1\n  %38 = lshr i64 %32, 1\n  %39 = and i64 %34, 1\n  %40 = and i64 %32, 1\n  %41 = add nuw nsw i64 %40, %39\n  %42 = icmp eq i64 %41, 2\n  %43 = select i1 %42, i64 1, i64 0\n  %44 = add i64 %37, %43\n  %45 = sub i64 %38, %33\n  %46 = add i64 %44, %45\n  ret i64 %46\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %33\n\n5:                                                ; preds = %2, %27\n  %6 = phi i64 [ %29, %27 ], [ 0, %2 ]\n  %7 = phi i64 [ %28, %27 ], [ 0, %2 ]\n  %8 = phi i64 [ %25, %27 ], [ 0, %2 ]\n  %9 = phi i64 [ %26, %27 ], [ -1, %2 ]\n  %10 = phi i64 [ %24, %27 ], [ 0, %2 ]\n  %11 = tail call i64 (...) @ia64_get_itc() #2\n  %12 = load ptr, ptr @go, align 8, !tbaa !9\n  %13 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %14 = getelementptr inbounds i64, ptr %12, i64 %13\n  store i64 1, ptr %14, align 8, !tbaa !5\n  %15 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %16 = getelementptr inbounds i64, ptr %12, i64 %15\n  %17 = load i64, ptr %16, align 8, !tbaa !5\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %5\n  %20 = getelementptr inbounds i64, ptr %12, i64 %15\n  store i64 0, ptr %20, align 8, !tbaa !5\n  br label %27\n\n21:                                               ; preds = %5, %21\n  %22 = tail call i32 (...) @cpu_relax() #2\n  %23 = load ptr, ptr @go, align 8, !tbaa !9\n  %24 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %25 = getelementptr inbounds i64, ptr %23, i64 %24\n  %26 = load i64, ptr %25, align 8, !tbaa !5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %5, label %19, !llvm.loop !11\n\n28 = phi i64 [ %11, %21 ], [ %9, %5 ]\n29 = add nuw nsw i64 %6, 1\n30 = icmp slt i64 %29, %3\n  %31 = load i64, ptr @NUM_ITERS, align 8\n  %32 = icmp slt i64 %29, %31\n  br i1 %32, label %5, label %33, !llvm.loop !13\n\n33 = phi i64 [ %8, %28 ], [ %9, %28 ], [ %8, %30 ]\n  %34 = phi i64 [ %10, %28 ], [ %11, %28 ], [ %10, %30 ]\n  %35 = sub i64 %33, %34\n  store i64 %35, ptr %0, align 8, !tbaa !5\n  %36 = sub i64 %33, %34\n  store i64 %36, ptr %1, align 8, !tbaa !5\n  %37 = lshr i64 %34, 1\n  %38 = lshr i64 %33, 1\n  %39 = and i64 %34, 1\n  %40 = and i64 %33, 1\n  %41 = add nuw nsw i64 %40, %39\n  %42 = icmp eq i64 %41, 2\n  %43 = select i1 %42, i64 1, i64 0\n  %44 = add i64 %38, %37\n  %45 = add i64 %44, %43\n  ret i64 %45\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/arch/ia64/kernel/extr_smpboot.c_get_delta.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %40\n\n5:                                                ; preds = %2, %25\n  %6 = phi i64 [ %37, %25 ], [ 0, %2 ]\n  %7 = phi i64 [ %36, %25 ], [ 0, %2 ]\n  %8 = phi i64 [ %35, %25 ], [ -1, %2 ]\n  %9 = phi i64 [ %34, %25 ], [ 0, %2 ]\n  %10 = tail call i64 (...) @ia64_get_itc() #2\n  %11 = load ptr, ptr @go, align 8, !tbaa !9\n  %12 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %13 = getelementptr inbounds i64, ptr %11, i64 %12\n  store i64 1, ptr %13, align 8, !tbaa !5\n  %14 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %15 = getelementptr inbounds i64, ptr %11, i64 %14\n  %16 = load i64, ptr %15, align 8, !tbaa !5\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %18, label %25\n\n18:                                               ; preds = %5, %18\n  %19 = tail call i32 (...) @cpu_relax() #2\n  %20 = load ptr, ptr @go, align 8, !tbaa !9\n  %21 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %22 = getelementptr inbounds i64, ptr %20, i64 %21\n  %23 = load i64, ptr %22, align 8, !tbaa !5\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %18, label %25, !llvm.loop !11\n\n25:                                               ; preds = %18, %5\n  %26 = phi i64 [ %14, %5 ], [ %21, %18 ]\n  %27 = phi ptr [ %11, %5 ], [ %20, %18 ]\n  %28 = phi i64 [ %16, %5 ], [ %23, %18 ]\n  %29 = getelementptr inbounds i64, ptr %27, i64 %26\n  store i64 0, ptr %29, align 8, !tbaa !5\n  %30 = tail call i64 (...) @ia64_get_itc() #2\n  %31 = sub i64 %30, %10\n  %32 = sub i64 %8, %7\n  %33 = icmp ult i64 %31, %32\n  %34 = select i1 %33, i64 %28, i64 %9\n  %35 = select i1 %33, i64 %30, i64 %8\n  %36 = select i1 %33, i64 %10, i64 %7\n  %37 = add nuw nsw i64 %6, 1\n  %38 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %39 = icmp slt i64 %37, %38\n  br i1 %39, label %5, label %40, !llvm.loop !13\n\n40:                                               ; preds = %25, %2\n  %41 = phi i64 [ 0, %2 ], [ %34, %25 ]\n  %42 = phi i64 [ -1, %2 ], [ %35, %25 ]\n  %43 = phi i64 [ 0, %2 ], [ %36, %25 ]\n  %44 = sub i64 %42, %43\n  store i64 %44, ptr %0, align 8, !tbaa !5\n  %45 = sub i64 %41, %43\n  store i64 %45, ptr %1, align 8, !tbaa !5\n  %46 = lshr i64 %43, 1\n  %47 = lshr i64 %42, 1\n  %48 = and i64 %43, 1\n  %49 = and i64 %42, 1\n  %50 = add nuw nsw i64 %48, %49\n  %51 = icmp eq i64 %50, 2\n  %52 = zext i1 %51 to i64\n  %53 = sub i64 %47, %41\n  %54 = add i64 %53, %46\n  %55 = add i64 %54, %52\n  ret i64 %55\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_uhci_pci.c_uhci_pci_detach.ll\"\n\t.globl\tuhci_pci_detach                 # -- Begin function uhci_pci_detach\n\t.p2align\t4, 0x90\n\t.type\tuhci_pci_detach,@function\nuhci_pci_detach:                        # @uhci_pci_detach\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edi, %ebp\n\tcallq\tdevice_get_softc@PLT\n\tmovq\t%rax, %rbx\n\tmovl\t%ebp, %edi\n\tcallq\tdevice_delete_children@PLT\n\tcmpq\t$0, 8(%rbx)\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\tUSB_BUS_LOCK@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tuhci_reset@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tUSB_BUS_UNLOCK@PLT\n.LBB0_2:\n\tmovl\t%ebp, %edi\n\tcallq\tpci_disable_busmaster@PLT\n\tmovq\t16(%rbx), %rcx\n\ttestq\t%rcx, %rcx\n\tje\t.LBB0_8\n# %bb.3:\n\tmovq\t24(%rbx), %rdx\n\ttestq\t%rdx, %rdx\n\tje\t.LBB0_7\n# %bb.4:\n\tmovl\t%ebp, %edi\n\tmovq\t%rcx, %rsi\n\tcallq\tbus_teardown_intr@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_6\n# %bb.5:\n\tmovl\t$.L.str, %esi\n\tmovl\t%ebp, %edi\n\tmovl\t%eax, %edx\n\tcallq\tdevice_printf@PLT\n.LBB0_6:\n\tmovq\t$0, 24(%rbx)\n\tmovq\t16(%rbx), %rcx\n\ttestq\t%rcx, %rcx\n\tje\t.LBB0_8\n.LBB0_7:\n\tmovl\tSYS_RES_IRQ(%rip), %esi\n\tmovl\t%ebp, %edi\n\txorl\t%edx, %edx\n\tcallq\tbus_release_resource@PLT\n\tmovq\t$0, 16(%rbx)\n.LBB0_8:\n\tmovq\t8(%rbx), %rcx\n\ttestq\t%rcx, %rcx\n\tje\t.LBB0_10\n# %bb.9:\n\tmovl\tSYS_RES_IOPORT(%rip), %esi\n\tmovl\tPCI_UHCI_BASE_REG(%rip), %edx\n\tmovl\t%ebp, %edi\n\tcallq\tbus_release_resource@PLT\n\tmovq\t$0, 8(%rbx)\n.LBB0_10:\n\tmovl\t$uhci_iterate_hw_softc, %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tusb_bus_mem_free_all@PLT\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tuhci_pci_detach, .Lfunc_end0-uhci_pci_detach\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Could not tear down irq, %d\\n\"\n\t.size\t.L.str, 29\n\n\t.type\tSYS_RES_IRQ,@object             # @SYS_RES_IRQ\n\t.bss\n\t.globl\tSYS_RES_IRQ\n\t.p2align\t2\nSYS_RES_IRQ:\n\t.long\t0                               # 0x0\n\t.size\tSYS_RES_IRQ, 4\n\n\t.type\tSYS_RES_IOPORT,@object          # @SYS_RES_IOPORT\n\t.globl\tSYS_RES_IOPORT\n\t.p2align\t2\nSYS_RES_IOPORT:\n\t.long\t0                               # 0x0\n\t.size\tSYS_RES_IOPORT, 4\n\n\t.type\tPCI_UHCI_BASE_REG,@object       # @PCI_UHCI_BASE_REG\n\t.globl\tPCI_UHCI_BASE_REG\n\t.p2align\t2\nPCI_UHCI_BASE_REG:\n\t.long\t0                               # 0x0\n\t.size\tPCI_UHCI_BASE_REG, 4\n\n\t.type\tuhci_iterate_hw_softc,@object   # @uhci_iterate_hw_softc\n\t.globl\tuhci_iterate_hw_softc\n\t.p2align\t2\nuhci_iterate_hw_softc:\n\t.long\t0                               # 0x0\n\t.size\tuhci_iterate_hw_softc, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.uhci_softc = type { i32, ptr, ptr, ptr }\n\n@.str = private unnamed_addr constant [29 x i8] c\"Could not tear down irq, %d\\0A\\00\", align 1\n@SYS_RES_IRQ = dso_local local_unnamed_addr global i32 0, align 4\n@SYS_RES_IOPORT = dso_local local_unnamed_addr global i32 0, align 4\n@PCI_UHCI_BASE_REG = dso_local local_unnamed_addr global i32 0, align 4\n@uhci_iterate_hw_softc = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @uhci_pci_detach(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = tail call i32 @device_delete_children(i32 noundef %0) #2\n  %4 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %11, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @USB_BUS_LOCK(ptr noundef nonnull %2) #2\n  %9 = tail call i32 @uhci_reset(ptr noundef nonnull %2) #2\n  %10 = tail call i32 @USB_BUS_UNLOCK(ptr noundef nonnull %2) #2\n  br label %11\n\n11:                                               ; preds = %7, %1\n  %12 = tail call i32 @pci_disable_busmaster(i32 noundef %0) #2\n  %13 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 2\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %27, label %16\n\n16:                                               ; preds = %11\n  %17 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 3\n  %18 = load ptr, ptr %17, align 8, !tbaa !12\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %25, label %20\n\n20:                                               ; preds = %16\n  %21 = tail call i32 @bus_teardown_intr(i32 noundef %0, ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %25, label %23\n\n23:                                               ; preds = %20\n  %24 = tail call i32 @device_printf(i32 noundef %0, ptr noundef nonnull @.str, i32 noundef %21) #2\n  br label %25\n\n25:                                               ; preds = %23, %20, %16\n  store ptr null, ptr %17, align 8, !tbaa !12\n  %26 = load ptr, ptr %14, align 8, !tbaa !13\n  br label %27\n\n27:                                               ; preds = %25, %11\n  %28 = phi ptr [ %26, %25 ], [ %14, %11 ]\n  %29 = load ptr, ptr %4, align 8, !tbaa !5\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %35, label %31\n\n31:                                               ; preds = %27\n  %32 = load i32, ptr @SYS_RES_IRQ, align 4, !tbaa !15\n  %33 = load i32, ptr @SYS_RES_IOPORT, align 4, !tbaa !15\n  %34 = tail call i32 @bus_release_resource(i32 noundef %0, i32 noundef %32, i32 noundef %33, ptr noundef nonnull %29) #2\n  store ptr null, ptr %4, align 8, !tbaa !5\n  br label %35\n\n35:                                               ; preds = %31, %27\n  %36 = tail call i32 @usb_bus_mem_free_all(ptr noundef nonnull %2, ptr noundef nonnull @uhci_iterate_hw_softc) #2\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @device_delete_children(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @uhci_reset(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_UNLOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_busmaster(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_teardown_intr(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @device_printf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_release_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @usb_bus_mem_free_all(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"uhci_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_2__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.uhci_softc = type { i32, ptr, ptr, ptr }\n\n@.str = private unnamed_addr constant [29 x i8] c\"Could not tear down irq, %d\\0A\\00\", align 1\n@SYS_RES_IRQ = dso_local local_unnamed_addr global i32 0, align 4\n@SYS_RES_IOPORT = dso_local local_unnamed_addr global i32 0, align 4\n@PCI_UHCI_BASE_REG = dso_local local_unnamed_addr global i32 0, align 4\n@uhci_iterate_hw_softc = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @uhci_pci_detach(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = tail call i32 @device_delete_children(i32 noundef %0) #2\n  %4 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %11, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @USB_BUS_LOCK(ptr noundef nonnull %2) #2\n  %9 = tail call i32 @uhci_reset(ptr noundef nonnull %2) #2\n  %10 = tail call i32 @USB_BUS_UNLOCK(ptr noundef nonnull %2) #2\n  br label %11\n\n11:                                               ; preds = %7, %1\n  %12 = tail call i32 @pci_disable_busmaster(i32 noundef %0) #2\n  %13 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 2\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %26, label %16\n\n16:                                               ; preds = %11\n  %17 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 3\n  %18 = load ptr, ptr %17, align 8, !tbaa !12\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %24, label %20\n\n20:                                               ; preds = %16\n  %21 = tail call i32 @bus_teardown_intr(i32 noundef %0, ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %24, label %23\n\n23:                                               ; preds = %20\n  tail call void @device_printf(i32 noundef %0, ptr noundef nonnull @.str, i32 noundef %21) #2\n  br label %24\n\n24:                                               ; preds = %23, %20, %16\n  store ptr null, ptr %17, align 8, !tbaa !12\n  %25 = load ptr, ptr %14, align 8, !tbaa !13\n  br label %26\n\n26:                                               ; preds = %24, %11\n  %27 = phi ptr [ %25, %24 ], [ %14, %11 ]\n  %28 = load ptr, ptr %4, align 8, !tbaa !5\n  %29 = icmp eq ptr %28, null\n  br i1 %29, label %35, label %30\n\n30:                                               ; preds = %26\n  %31 = load i32, ptr @SYS_RES_IRQ, align 4, !tbaa !15\n  %32 = load i32, ptr @SYS_RES_IOPORT, align 4, !tbaa !15\n  %33 = load i32, ptr @PCI_UHCI_BASE_REG, align 4, !tbaa !15\n  %34 = tail call i32 @bus_release_resource(i32 noundef %0, i32 noundef %31, i32 noundef %32, ptr noundef nonnull %28) #2\n  store ptr null, ptr %4, align 8, !tbaa !5\n  br label %35\n\n35:                                               ; preds = %30, %26\n  %36 = tail call i32 @usb_bus_mem_free_all(ptr noundef nonnull %2, ptr noundef nonnull @uhci_iterate_hw_softc) #2\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @device_delete_children(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @uhci_reset(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_UNLOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_busmaster(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_teardown_intr(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @device_printf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_release_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @usb_bus_mem_free_all(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"uhci_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_2__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.uhci_softc = type { i32, ptr, ptr, ptr }\n\n@.str = private unnamed_addr constant [29 x i8] c\"Could not tear down irq, %d\\0A\\00\", align 1\n@SYS_RES_IRQ = dso_local local_unnamed_addr global i32 0, align 4\n@SYS_RES_IOPORT = dso_local local_unnamed_addr global i32 0, align 4\n@PCI_UHCI_BASE_REG = dso_local local_unnamed_addr global i32 0, align 4\n@uhci_iterate_hw_softc = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @uhci_pci_detach(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = tail call i32 @device_delete_children(i32 noundef %0) #2\n  %4 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %11, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @USB_BUS_LOCK(ptr noundef nonnull %2) #2\n  %9 = tail call i32 @uhci_reset(ptr noundef nonnull %2) #2\n  %10 = tail call i32 @USB_BUS_UNLOCK(ptr noundef nonnull %2) #2\n  br label %11\n\n11:                                               ; preds = %7, %1\n  %12 = tail call i32 @pci_disable_busmaster(i32 noundef %0) #2\n  %13 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 2\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %26, label %16\n\n16:                                               ; preds = %11\n  %17 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 3\n  %18 = load ptr, ptr %17, align 8, !tbaa !12\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %24, label %20\n\n20:                                               ; preds = %16\n  %21 = tail call i32 @bus_teardown_intr(i32 noundef %0, ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %24, label %23\n\n23:                                               ; preds = %20\n  tail call void @device_printf(i32 noundef %0, ptr noundef nonnull @.str, i32 noundef %21) #2\n  br label %24\n\n24:                                               ; preds = %23, %20, %16\n  store ptr null, ptr %17, align 8, !tbaa !12\n  %25 = load ptr, ptr %14, align 8, !tbaa !13\n  br label %26\n\n26:                                               ; preds = %24, %11\n  %27 = phi ptr [ %25, %24 ], [ %14, %11 ]\n  %28 = load ptr, ptr %4, align 8, !tbaa !5\n  %29 = icmp eq ptr %28, null\n  br i1 %29, label %35, label %30\n\n30:                                               ; preds = %26\n  %31 = load i32, ptr @SYS_RES_IRQ, align 4, !tbaa !15\n  %32 = load i32, ptr @SYS_RES_IOPORT, align 4, !tbaa !15\n  %33 = load i32, ptr @PCI_UHCI_BASE_REG, align 4, !tbaa !15\n  %34 = tail call i32 @bus_release_resource(i32 noundef %0, i32 noundef %31, i32 noundef %32, ptr noundef nonnull %28) #2\n  store ptr null, ptr %4, align 8, !tbaa !5\n  br label %35\n\n35:                                               ; preds = %30, %26\n  %36 = tail call i32 @usb_bus_mem_free_all(ptr noundef nonnull %2, ptr noundef nonnull @uhci_iterate_hw_softc) #2\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @device_delete_children(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @uhci_reset(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_UNLOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_busmaster(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_teardown_intr(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @device_printf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_release_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @usb_bus_mem_free_all(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"uhci_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_2__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.uhci_softc = type { i32, ptr, ptr, ptr }\n\n@.str = private unnamed_addr constant [29 x i8] c\"Could not tear down irq, %d\\0A\\00\", align 1\n@SYS_RES_IRQ = dso_local local_unnamed_addr global i32 0, align 4\n@SYS_RES_IOPORT = dso_local local_unnamed_addr global i32 0, align 4\n@PCI_UHCI_BASE_REG = dso_local local_unnamed_addr global i32 0, align 4\n@uhci_iterate_hw_softc = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @uhci_pci_detach(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = tail call i32 @device_delete_children(i32 noundef %0) #2\n  %4 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %11, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @USB_BUS_LOCK(ptr noundef nonnull %2) #2\n  %9 = tail call i32 @uhci_reset(ptr noundef nonnull %2) #2\n  %10 = tail call i32 @USB_BUS_UNLOCK(ptr noundef nonnull %2) #2\n  br label %11\n\n11:                                               ; preds = %7, %1\n  %12 = tail call i32 @pci_disable_busmaster(i32 noundef %0) #2\n  %13 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 2\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %26, label %16\n\n16:                                               ; preds = %11\n  %17 = getelementptr inbounds %struct.uhci_softc, ptr %2, i64 0, i32 3\n  %18 = load ptr, ptr %17, align 8, !tbaa !12\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %24, label %20\n\n20:                                               ; preds = %16\n  %21 = tail call i32 @bus_teardown_intr(i32 noundef %0, ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %24, label %23\n\n23:                                               ; preds = %20\n  tail call void @device_printf(i32 noundef %0, ptr noundef nonnull @.str, i32 noundef %21) #2\n  br label %24\n\n24:                                               ; preds = %20, %23, %16\n  store ptr null, ptr %17, align 8, !tbaa !12\n  %25 = load ptr, ptr %14, align 8, !tbaa !13\n  br label %26\n\n26:                                               ; preds = %24, %11\n  %27 = phi ptr [ %25, %24 ], [ %14, %11 ]\n  %28 = load ptr, ptr %4, align 8, !tbaa !5\n  %29 = icmp eq ptr %28, null\n  br i1 %29, label %35, label %30\n\n30:                                               ; preds = %26\n  %31 = load i32, ptr @SYS_RES_IRQ, align 4, !tbaa !15\n  %32 = load i32, ptr @SYS_RES_IOPORT, align 4, !tbaa !15\n  %33 = load i32, ptr @PCI_UHCI_BASE_REG, align 4, !tbaa !15\n  %34 = tail call i32 @bus_release_resource(i32 noundef %0, i32 noundef %31, i32 noundef %32, ptr noundef nonnull %28) #2\n  store ptr null, ptr %4, align 8, !tbaa !5\n  br label %35\n\n35:                                               ; preds = %30, %26\n  %36 = tail call i32 @usb_bus_mem_free_all(ptr noundef nonnull %2, ptr noundef nonnull @uhci_iterate_hw_softc) #2\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @device_delete_children(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @uhci_reset(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_UNLOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_busmaster(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_teardown_intr(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @device_printf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_release_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @usb_bus_mem_free_all(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"uhci_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_2__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/dev/usb/controller/extr_uhci_pci.c_uhci_pci_detach.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, ptr, ptr, ptr }\n\n@.str = private unnamed_addr constant [29 x i8] c\"Could not tear down irq, %d\\0A\\00\", align 1\n@SYS_RES_IRQ = dso_local local_unnamed_addr global i32 0, align 4\n@SYS_RES_IOPORT = dso_local local_unnamed_addr global i32 0, align 4\n@PCI_UHCI_BASE_REG = dso_local local_unnamed_addr global i32 0, align 4\n@uhci_iterate_hw_softc = dso_local global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @uhci_pci_detach(i32 noundef %0) local_unnamed_addr #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = tail call i32 @device_delete_children(i32 noundef %0) #2\n  %4 = getelementptr inbounds %struct.TYPE_4__, ptr %2, i64 0, i32 1\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %11, label %7\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @USB_BUS_LOCK(ptr noundef nonnull %2) #2\n  %9 = tail call i32 @uhci_reset(ptr noundef nonnull %2) #2\n  %10 = tail call i32 @USB_BUS_UNLOCK(ptr noundef nonnull %2) #2\n  br label %11\n\n11:                                               ; preds = %7, %1\n  %12 = tail call i32 @pci_disable_busmaster(i32 noundef %0) #2\n  %13 = getelementptr inbounds %struct.TYPE_4__, ptr %2, i64 0, i32 2\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %32, label %16\n\n16:                                               ; preds = %11\n  %17 = getelementptr inbounds %struct.TYPE_4__, ptr %2, i64 0, i32 3\n  %18 = load ptr, ptr %17, align 8, !tbaa !12\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %28, label %20\n\n20:                                               ; preds = %16\n  %21 = tail call i32 @bus_teardown_intr(i32 noundef %0, ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %25, label %23\n\n23:                                               ; preds = %20\n  %24 = tail call i32 @device_printf(i32 noundef %0, ptr noundef nonnull @.str, i32 noundef %21) #2\n  br label %25\n\n25:                                               ; preds = %20, %23\n  store ptr null, ptr %17, align 8, !tbaa !12\n  %26 = load ptr, ptr %13, align 8, !tbaa !11\n  %27 = icmp eq ptr %26, null\n  br i1 %27, label %32, label %28\n\n28:                                               ; preds = %16, %25\n  %29 = phi ptr [ %26, %25 ], [ %14, %16 ]\n  %30 = load i32, ptr @SYS_RES_IRQ, align 4, !tbaa !13\n  %31 = tail call i32 @bus_release_resource(i32 noundef %0, i32 noundef %30, i32 noundef 0, ptr noundef nonnull %29) #2\n  store ptr null, ptr %13, align 8, !tbaa !11\n  br label %32\n\n32:                                               ; preds = %11, %28, %25\n  %33 = load ptr, ptr %4, align 8, !tbaa !5\n  %34 = icmp eq ptr %33, null\n  br i1 %34, label %39, label %35\n\n35:                                               ; preds = %32\n  %36 = load i32, ptr @SYS_RES_IOPORT, align 4, !tbaa !13\n  %37 = load i32, ptr @PCI_UHCI_BASE_REG, align 4, !tbaa !13\n  %38 = tail call i32 @bus_release_resource(i32 noundef %0, i32 noundef %36, i32 noundef %37, ptr noundef nonnull %33) #2\n  store ptr null, ptr %4, align 8, !tbaa !5\n  br label %39\n\n39:                                               ; preds = %35, %32\n  %40 = tail call i32 @usb_bus_mem_free_all(ptr noundef nonnull %2, ptr noundef nonnull @uhci_iterate_hw_softc) #2\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @device_delete_children(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_LOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @uhci_reset(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @USB_BUS_UNLOCK(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_disable_busmaster(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_teardown_intr(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @device_printf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bus_release_resource(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @usb_bus_mem_free_all(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %40\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %40\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %31, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %26\n  br label %31\n\n31:                                               ; preds = %30, %26, %18\n  %32 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %20, %30 ]\n  %33 = phi i32 [ %27, %18 ], [ %28, %26 ], [ %20, %30 ]\n  %34 = icmp slt i32 %22, %1\n  %35 = icmp sgt i32 %22, %2\n  %36 = select i1 %34, i1 true, i1 %35\n  br i1 %36, label %40, label %37\n\n37:                                               ; preds = %31\n  %38 = add nsw i32 %32, %1\n  %39 = add nsw i32 %33, %22\n  br label %40\n\n40:                                               ; preds = %31, %37, %8, %3\n  %41 = phi i32 [ %1, %3 ], [ %1, %8 ], [ %39, %37 ], [ %2, %31 ]\n  %42 = phi i32 [ %4, %3 ], [ %4, %8 ], [ %32, %37 ], [ %22, %31 ]\n  %43 = phi i32 [ %2, %3 ], [ %2, %8 ], [ %33, %37 ], [ %20, %31 ]\n  %44 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %45 = add nsw i32 %41, -1\n  %46 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %44, i32 noundef %42, i32 noundef %45, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %37\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = icmp slt i32 %27, %1\n  br i1 %28, label %32, label %29\n\n29:                                               ; preds = %26\n  %30 = icmp sgt i32 %22, %2\n  %31 = select i1 %30, i32 %2, i32 %1\n  br label %32\n\n32:                                               ; preds = %29, %26\n  %33 = phi i32 [ %22, %26 ], [ %31, %29 ]\n  %34 = phi i32 [ %20, %26 ], [ %19, %29 ]\n  %35 = icmp slt i32 %33, %1\n  br i1 %35, label %37, label %36\n\n36:                                               ; preds = %32\n  %37 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %16, i32 noundef %1, i32 noundef %2) #2\n  br label %46\n\n38:                                               ; preds = %32\n  %39 = load i32, ptr %13, align 4, !tbaa !15\n  %40 = sub nsw i32 %24, %1\n  %41 = tail call i32 @SETARG_B(i32 noundef %39, i32 noundef %40) #2\n  %42 = load i32, ptr %13, align 4, !tbaa !15\n  %43 = sub nsw i32 %24, %1\n  %44 = tail call i32 @SETARG_A(i32 noundef %42, i32 noundef %43) #2\n  %45 = load i32, ptr %5, align 4, !tbaa !11\n  br label %46\n\n46:                                               ; preds = %38, %36\n  %47 = phi i32 [ %45, %38 ], [ %37, %36 ]\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %42\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %42\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %32, label %30\n\n30:                                               ; preds = %26\n  %31 = tail call i32 @llvm.smin.i32(i32 %22, i32 %1)\n  br label %32\n\n32:                                               ; preds = %30, %26, %18\n  %33 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %31, %30 ]\n  %34 = icmp slt i32 %33, %1\n  %35 = icmp sgt i32 %33, %2\n  %36 = select i1 %34, i1 true, i1 %35\n  br i1 %36, label %42, label %37\n\n37:                                               ; preds = %32\n  %38 = add nsw i32 %20, %33\n  %39 = icmp slt i32 %33, %1\n  %40 = select i1 %39, i32 %33, i32 %1\n  %41 = tail call i32 @SETARG_A(i32 noundef %21, i32 noundef %40) #2\n  br label %45\n\n42:                                               ; preds = %32, %8, %3\n  %43 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %43, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %47\n\n45:                                               ; preds = %37\n  %46 = tail call i32 @SETARG_B(i32 noundef %21, i32 noundef %20) #2\n  br label %47\n\n47:                                               ; preds = %45, %42\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %41\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %41\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %33, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %26\n  %31 = icmp sgt i32 %22, %2\n  %32 = icmp sgt i32 %24, %2\n  br i1 %31, label %33, label %36\n\n33:                                               ; preds = %30, %26, %18\n  %34 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %35 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %34, i32 noundef %1, i32 noundef %20) #2\n  br label %45\n\n36:                                               ; preds = %30\n  %37 = load i32, ptr %13, align 4, !tbaa !15\n  %38 = tail call i32 @SETARG_A(i32 noundef %37, i32 noundef %2) #2\n  %39 = load i32, ptr %13, align 4, !tbaa !15\n  %40 = sub nsw i32 %24, %2\n  tail call void @SETARG_B(i32 noundef %39, i32 noundef %40) #2\n  br label %45\n\n41:                                               ; preds = %8, %3\n  %42 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %43 = add nsw i32 %2, -1\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %42, i32 noundef %1, i32 noundef %43) #2\n  br label %45\n\n45:                                               ; preds = %41, %36, %33\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare void @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/lua/src/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ms5611_core.c_ms5611_write_raw.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ms5611_write_raw\n\t.type\tms5611_write_raw,@function\nms5611_write_raw:                       # @ms5611_write_raw\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%r8, %rbp\n\tmovl\t%edx, %r12d\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %rbx\n\tcallq\tiio_priv@PLT\n\tcmpq\t%rbp, IIO_CHAN_INFO_OVERSAMPLING_RATIO(%rip)\n\tjne\t.LBB0_1\n# %bb.2:\n\tmovq\t%rax, %r14\n\tmovq\t(%r15), %rcx\n\tmovl\t$ms5611_avail_temp_osr, %eax\n\tcmpq\tIIO_TEMP(%rip), %rcx\n\tje\t.LBB0_4\n# %bb.3:\n\tmovl\t$ms5611_avail_pressure_osr, %eax\n\tcmpq\tIIO_PRESSURE(%rip), %rcx\n\tjne\t.LBB0_1\n.LBB0_4:\n\tmovl\t(%rax), %ebp\n\tmovl\t%ebp, %edi\n\tcallq\tARRAY_SIZE@PLT\n\tmovl\t%r12d, %edi\n\tmovl\t%ebp, %esi\n\tmovl\t%eax, %edx\n\tcallq\tms5611_find_osr@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_1\n# %bb.5:\n\tmovq\t%rax, %rbp\n\tmovq\t%rbx, %rdi\n\tcallq\tiio_device_claim_direct_mode@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_7\n# %bb.6:\n\tmovq\t%r14, %rdi\n\tcallq\tmutex_lock@PLT\n\tmovq\t(%r15), %rax\n\txorl\t%ecx, %ecx\n\tcmpq\tIIO_TEMP(%rip), %rax\n\tsete\t%cl\n\tmovq\t%rbp, 8(%r14,%rcx,8)\n\tmovq\t%r14, %rdi\n\tcallq\tmutex_unlock@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tiio_device_release_direct_mode@PLT\n\txorl\t%eax, %eax\n\tjmp\t.LBB0_7\n.LBB0_1:\n\txorl\t%eax, %eax\n\tsubl\tEINVAL(%rip), %eax\n.LBB0_7:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tms5611_write_raw, .Lfunc_end0-ms5611_write_raw\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tIIO_CHAN_INFO_OVERSAMPLING_RATIO,@object # @IIO_CHAN_INFO_OVERSAMPLING_RATIO\n\t.bss\n\t.globl\tIIO_CHAN_INFO_OVERSAMPLING_RATIO\n\t.p2align\t3\nIIO_CHAN_INFO_OVERSAMPLING_RATIO:\n\t.quad\t0                               # 0x0\n\t.size\tIIO_CHAN_INFO_OVERSAMPLING_RATIO, 8\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\tIIO_TEMP,@object                # @IIO_TEMP\n\t.globl\tIIO_TEMP\n\t.p2align\t3\nIIO_TEMP:\n\t.quad\t0                               # 0x0\n\t.size\tIIO_TEMP, 8\n\n\t.type\tms5611_avail_temp_osr,@object   # @ms5611_avail_temp_osr\n\t.globl\tms5611_avail_temp_osr\n\t.p2align\t2\nms5611_avail_temp_osr:\n\t.long\t0                               # 0x0\n\t.size\tms5611_avail_temp_osr, 4\n\n\t.type\tIIO_PRESSURE,@object            # @IIO_PRESSURE\n\t.globl\tIIO_PRESSURE\n\t.p2align\t3\nIIO_PRESSURE:\n\t.quad\t0                               # 0x0\n\t.size\tIIO_PRESSURE, 8\n\n\t.type\tms5611_avail_pressure_osr,@object # @ms5611_avail_pressure_osr\n\t.globl\tms5611_avail_pressure_osr\n\t.p2align\t2\nms5611_avail_pressure_osr:\n\t.long\t0                               # 0x0\n\t.size\tms5611_avail_pressure_osr, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ms5611_state = type { i32, i64, i64 }\n\n@IIO_CHAN_INFO_OVERSAMPLING_RATIO = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_TEMP = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_temp_osr = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_PRESSURE = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_pressure_osr = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ms5611_write_raw], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ms5611_write_raw(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 %3, i64 noundef %4) #0 {\n  %6 = tail call ptr @iio_priv(ptr noundef %0) #2\n  %7 = load i64, ptr @IIO_CHAN_INFO_OVERSAMPLING_RATIO, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, %4\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %5\n  %10 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %11 = sub nsw i32 0, %10\n  br label %33\n\n12:                                               ; preds = %5\n  %13 = load i64, ptr %1, align 8, !tbaa !11\n  %14 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %15 = icmp eq i64 %13, %14\n  %16 = load i64, ptr @IIO_PRESSURE, align 8\n  %17 = icmp eq i64 %13, %16\n  %18 = select i1 %15, i1 true, i1 %17\n  %19 = load i32, ptr @ms5611_avail_temp_osr, align 4\n  %20 = load i32, ptr @ms5611_avail_pressure_osr, align 4\n  %21 = select i1 %18, i32 %19, i32 %20\n  %22 = tail call i32 @ARRAY_SIZE(i32 noundef %21) #2\n  %23 = tail call ptr @ms5611_find_osr(i32 noundef %2, i32 noundef %21, i32 noundef %22) #2\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %25, label %28\n\n25:                                               ; preds = %12\n  %26 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %27 = sub nsw i32 0, %26\n  br label %33\n\n28:                                               ; preds = %12\n  %29 = tail call i32 @iio_device_claim_direct_mode(ptr noundef %0) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %28\n  %32 = tail call i32 @mutex_lock(ptr noundef %6) #2\n  br label %35\n\n33:                                               ; preds = %28, %31, %25, %9\n  %34 = phi i32 [ %11, %9 ], [ %27, %25 ], [ %29, %28 ], [ 0, %31 ]\n  ret i32 %34\n\n35:                                               ; preds = %31\n  %36 = load i64, ptr %1, align 8, !tbaa !11\n  %37 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %38 = icmp eq i64 %36, %37\n  %39 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 1\n  %40 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 2\n  %41 = select i1 %38, ptr %39, ptr %40\n  store ptr %23, ptr %41, align 8, !tbaa !13\n  %42 = tail call i32 @mutex_unlock(ptr noundef %6) #2\n  %43 = tail call i32 @iio_device_release_direct_mode(ptr noundef %0) #2\n  br label %33\n}\n\ndeclare ptr @iio_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ms5611_find_osr(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_claim_direct_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_release_direct_mode(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !6, i64 0}\n!12 = !{!\"iio_chan_spec\", !6, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ms5611_state = type { i32, i64, i64 }\n\n@IIO_CHAN_INFO_OVERSAMPLING_RATIO = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_TEMP = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_temp_osr = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_PRESSURE = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_pressure_osr = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ms5611_write_raw], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ms5611_write_raw(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 %3, i64 noundef %4) #0 {\n  %6 = tail call ptr @iio_priv(ptr noundef %0) #2\n  %7 = load i64, ptr @IIO_CHAN_INFO_OVERSAMPLING_RATIO, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, %4\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %5\n  %10 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %11 = sub nsw i32 0, %10\n  br label %33\n\n12:                                               ; preds = %5\n  %13 = load i64, ptr %1, align 8, !tbaa !11\n  %14 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %15 = icmp eq i64 %13, %14\n  %16 = load i64, ptr @IIO_PRESSURE, align 8\n  %17 = icmp eq i64 %13, %16\n  %18 = select i1 %15, i1 true, i1 %17\n  %19 = load i32, ptr @ms5611_avail_temp_osr, align 4\n  %20 = load i32, ptr @ms5611_avail_pressure_osr, align 4\n  %21 = select i1 %18, i32 %19, i32 %20\n  %22 = tail call i32 @ARRAY_SIZE(i32 noundef %21) #2\n  %23 = tail call ptr @ms5611_find_osr(i32 noundef %2, i32 noundef %21, i32 noundef %22) #2\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %25, label %28\n\n25:                                               ; preds = %12\n  %26 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %27 = sub nsw i32 0, %26\n  br label %33\n\n28:                                               ; preds = %12\n  %29 = tail call i32 @iio_device_claim_direct_mode(ptr noundef %0) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %28\n  %32 = tail call i32 @mutex_lock(ptr noundef %6) #2\n  br label %35\n\n33:                                               ; preds = %28, %31, %25, %9\n  %34 = phi i32 [ %11, %9 ], [ %27, %25 ], [ %29, %28 ], [ 0, %31 ]\n  ret i32 %34\n\n35:                                               ; preds = %31\n  %36 = load i64, ptr %1, align 8, !tbaa !11\n  %37 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %38 = icmp eq i64 %36, %37\n  %39 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 1\n  %40 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 2\n  %41 = select i1 %38, ptr %39, ptr %40\n  store ptr %23, ptr %41, align 8, !tbaa !13\n  %42 = tail call i32 @mutex_unlock(ptr noundef %6) #2\n  %43 = tail call i32 @iio_device_release_direct_mode(ptr noundef %0) #2\n  br label %33\n}\n\ndeclare ptr @iio_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ms5611_find_osr(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_claim_direct_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_release_direct_mode(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !6, i64 0}\n!12 = !{!\"iio_chan_spec\", !6, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ms5611_state = type { i32, i64, i64 }\n\n@IIO_CHAN_INFO_OVERSAMPLING_RATIO = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_TEMP = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_temp_osr = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_PRESSURE = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_pressure_osr = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ms5611_write_raw], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ms5611_write_raw(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 %3, i64 noundef %4) #0 {\n  %6 = tail call ptr @iio_priv(ptr noundef %0) #2\n  %7 = load i64, ptr @IIO_CHAN_INFO_OVERSAMPLING_RATIO, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, %4\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %5\n  %10 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %11 = sub nsw i32 0, %10\n  br label %33\n\n12:                                               ; preds = %5\n  %13 = load i64, ptr %1, align 8, !tbaa !11\n  %14 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %15 = icmp eq i64 %13, %14\n  %16 = load i64, ptr @IIO_PRESSURE, align 8\n  %17 = icmp eq i64 %13, %16\n  %18 = select i1 %15, i1 true, i1 %17\n  %19 = load i32, ptr @ms5611_avail_temp_osr, align 4\n  %20 = load i32, ptr @ms5611_avail_pressure_osr, align 4\n  %21 = select i1 %18, i32 %19, i32 %20\n  %22 = tail call i32 @ARRAY_SIZE(i32 noundef %21) #2\n  %23 = tail call ptr @ms5611_find_osr(i32 noundef %2, i32 noundef %21, i32 noundef %22) #2\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %25, label %28\n\n25:                                               ; preds = %12\n  %26 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %27 = sub nsw i32 0, %26\n  br label %33\n\n28:                                               ; preds = %12\n  %29 = tail call i32 @iio_device_claim_direct_mode(ptr noundef %0) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %28\n  %32 = tail call i32 @mutex_lock(ptr noundef %6) #2\n  br label %35\n\n33:                                               ; preds = %28, %31, %25, %9\n  %34 = phi i32 [ %11, %9 ], [ %27, %25 ], [ %29, %28 ], [ 0, %31 ]\n  ret i32 %34\n\n35:                                               ; preds = %31\n  %36 = load i64, ptr %1, align 8, !tbaa !11\n  %37 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %38 = icmp eq i64 %36, %37\n  %39 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 1\n  %40 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 2\n  %41 = select i1 %38, ptr %39, ptr %40\n  store ptr %23, ptr %41, align 8, !tbaa !13\n  %42 = tail call i32 @mutex_unlock(ptr noundef %6) #2\n  %43 = tail call i32 @iio_device_release_direct_mode(ptr noundef %0) #2\n  br label %33\n}\n\ndeclare ptr @iio_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ms5611_find_osr(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_claim_direct_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_release_direct_mode(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !6, i64 0}\n!12 = !{!\"iio_chan_spec\", !6, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ms5611_state = type { i32, i64, i64 }\n\n@IIO_CHAN_INFO_OVERSAMPLING_RATIO = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_TEMP = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_temp_osr = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_PRESSURE = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_pressure_osr = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ms5611_write_raw], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ms5611_write_raw(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 %3, i64 noundef %4) #0 {\n  %6 = tail call ptr @iio_priv(ptr noundef %0) #2\n  %7 = load i64, ptr @IIO_CHAN_INFO_OVERSAMPLING_RATIO, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, %4\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %5\n  %10 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %11 = sub nsw i32 0, %10\n  br label %33\n\n12:                                               ; preds = %5\n  %13 = load i64, ptr %1, align 8, !tbaa !11\n  %14 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %15 = icmp eq i64 %13, %14\n  %16 = load i64, ptr @IIO_PRESSURE, align 8\n  %17 = icmp eq i64 %13, %16\n  %18 = select i1 %15, i1 true, i1 %17\n  %19 = load i32, ptr @ms5611_avail_temp_osr, align 4\n  %20 = load i32, ptr @ms5611_avail_pressure_osr, align 4\n  %21 = select i1 %18, i32 %19, i32 %20\n  %22 = tail call i32 @ARRAY_SIZE(i32 noundef %21) #2\n  %23 = tail call ptr @ms5611_find_osr(i32 noundef %2, i32 noundef %21, i32 noundef %22) #2\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %25, label %28\n\n25:                                               ; preds = %12\n  %26 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %27 = sub nsw i32 0, %26\n  br label %33\n\n28:                                               ; preds = %12\n  %29 = tail call i32 @iio_device_claim_direct_mode(ptr noundef %0) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %28\n  %32 = tail call i32 @mutex_lock(ptr noundef %6) #2\n  br label %35\n\n33:                                               ; preds = %28, %31, %25, %9\n  %34 = phi i32 [ %11, %9 ], [ %27, %25 ], [ %29, %28 ], [ 0, %31 ]\n  ret i32 %34\n\n35:                                               ; preds = %31\n  %36 = load i64, ptr %1, align 8, !tbaa !11\n  %37 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %38 = icmp eq i64 %36, %37\n  %39 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 1\n  %40 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 2\n  %41 = select i1 %38, ptr %39, ptr %40\n  store ptr %23, ptr %41, align 8, !tbaa !13\n  %42 = tail call i32 @mutex_unlock(ptr noundef %6) #2\n  %43 = tail call i32 @iio_device_release_direct_mode(ptr noundef %0) #2\n  br label %33\n}\n\ndeclare ptr @iio_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ms5611_find_osr(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_claim_direct_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_release_direct_mode(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !6, i64 0}\n!12 = !{!\"iio_chan_spec\", !6, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"any pointer\", !7, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/iio/pressure/extr_ms5611_core.c_ms5611_write_raw.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ms5611_state = type { i32, ptr, ptr }\n\n@IIO_CHAN_INFO_OVERSAMPLING_RATIO = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_TEMP = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_temp_osr = dso_local local_unnamed_addr global i32 0, align 4\n@IIO_PRESSURE = dso_local local_unnamed_addr global i64 0, align 8\n@ms5611_avail_pressure_osr = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ms5611_write_raw], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @ms5611_write_raw(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 %3, i64 noundef %4) #0 {\n  %6 = tail call ptr @iio_priv(ptr noundef %0) #2\n  %7 = load i64, ptr @IIO_CHAN_INFO_OVERSAMPLING_RATIO, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, %4\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %5\n  %10 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %11 = sub nsw i32 0, %10\n  br label %41\n\n12:                                               ; preds = %5\n  %13 = load i64, ptr %1, align 8, !tbaa !11\n  %14 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %15 = icmp eq i64 %13, %14\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %12\n  %17 = load i64, ptr @IIO_PRESSURE, align 8, !tbaa !5\n  %18 = icmp eq i64 %13, %17\n  br i1 %18, label %19, label %25\n\n19:                                               ; preds = %16, %12\n  %20 = phi ptr [ @ms5611_avail_temp_osr, %12 ], [ @ms5611_avail_pressure_osr, %16 ]\n  %21 = load i32, ptr %20, align 4, !tbaa !9\n  %22 = tail call i32 @ARRAY_SIZE(i32 noundef %21) #2\n  %23 = tail call ptr @ms5611_find_osr(i32 noundef %2, i32 noundef %21, i32 noundef %22) #2\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %25, label %28\n\n25:                                               ; preds = %16, %19\n  %26 = load i32, ptr @EINVAL, align 4, !tbaa !9\n  %27 = sub nsw i32 0, %26\n  br label %41\n\n28:                                               ; preds = %19\n  %29 = tail call i32 @iio_device_claim_direct_mode(ptr noundef %0) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %31, label %41\n\n31:                                               ; preds = %28\n  %32 = tail call i32 @mutex_lock(ptr noundef %6) #2\n  %33 = load i64, ptr %1, align 8, !tbaa !11\n  %34 = load i64, ptr @IIO_TEMP, align 8, !tbaa !5\n  %35 = icmp eq i64 %33, %34\n  %36 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 1\n  %37 = getelementptr inbounds %struct.ms5611_state, ptr %6, i64 0, i32 2\n  %38 = select i1 %35, ptr %37, ptr %36\n  store ptr %23, ptr %38, align 8, !tbaa !13\n  %39 = tail call i32 @mutex_unlock(ptr noundef nonnull %6) #2\n  %40 = tail call i32 @iio_device_release_direct_mode(ptr noundef %0) #2\n  br label %41\n\n41:                                               ; preds = %28, %31, %25, %9\n  %42 = phi i32 [ %11, %9 ], [ 0, %31 ], [ %27, %25 ], [ %29, %28 ]\n  ret i32 %42\n}\n\ndeclare ptr @iio_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @ms5611_find_osr(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_claim_direct_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iio_device_release_direct_mode(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !6, i64 0}\n!12 = !{!\"iio_chan_spec\", !6, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"any pointer\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_amdgpu_psp.c_psp_print_fw_hdr.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function psp_print_fw_hdr\n\t.type\tpsp_print_fw_hdr,@function\npsp_print_fw_hdr:                       # @psp_print_fw_hdr\n\t.cfi_startproc\n# %bb.0:\n\tmovq\t(%rsi), %rcx\n\tleaq\t-128(%rcx), %rdx\n\tcmpq\t$13, %rdx\n\tja\t.LBB0_9\n# %bb.1:\n\tmovq\t(%rdi), %rax\n\tjmpq\t*.LJTI0_0(,%rdx,8)\n.LBB0_2:\n\tmovq\t48(%rax), %rax\n\tmovq\t-1088(%rax,%rcx,8), %rax\n\tmovq\t(%rax), %rdi\n\tjmp\tamdgpu_ucode_print_sdma_hdr@PLT # TAILCALL\n.LBB0_9:\n\tretq\n.LBB0_8:\n\tmovq\t(%rax), %rax\n\tmovq\t(%rax), %rdi\n\tjmp\tamdgpu_ucode_print_smc_hdr@PLT  # TAILCALL\n.LBB0_7:\n\tmovq\t8(%rax), %rax\n\tmovq\t(%rax), %rdi\n\tjmp\tamdgpu_ucode_print_rlc_hdr@PLT  # TAILCALL\n.LBB0_4:\n\tmovq\t32(%rax), %rax\n\tmovq\t(%rax), %rdi\n\tjmp\tamdgpu_ucode_print_gfx_hdr@PLT  # TAILCALL\n.LBB0_6:\n\tmovq\t16(%rax), %rax\n\tmovq\t(%rax), %rdi\n\tjmp\tamdgpu_ucode_print_gfx_hdr@PLT  # TAILCALL\n.LBB0_5:\n\tmovq\t24(%rax), %rax\n\tmovq\t(%rax), %rdi\n\tjmp\tamdgpu_ucode_print_gfx_hdr@PLT  # TAILCALL\n.LBB0_3:\n\tmovq\t40(%rax), %rax\n\tmovq\t(%rax), %rdi\n\tjmp\tamdgpu_ucode_print_gfx_hdr@PLT  # TAILCALL\n.Lfunc_end0:\n\t.size\tpsp_print_fw_hdr, .Lfunc_end0-psp_print_fw_hdr\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_8\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_6\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_3\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @psp_print_fw_hdr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @psp_print_fw_hdr(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  switch i64 %3, label %27 [\n    i64 136, label %4\n    i64 132, label %4\n    i64 131, label %4\n    i64 130, label %4\n    i64 129, label %4\n    i64 128, label %4\n    i64 135, label %14\n    i64 134, label %14\n    i64 133, label %14\n    i64 137, label %18\n    i64 138, label %18\n    i64 139, label %21\n    i64 140, label %21\n  ]\n\n4:                                                ; preds = %2, %2, %2, %2, %2, %2\n  %5 = load ptr, ptr %0, align 8, !tbaa !10\n  %6 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3\n  %7 = load ptr, ptr %6, align 8, !tbaa !13\n  %8 = load ptr, ptr %7, align 8, !tbaa !14\n  %9 = tail call i32 @amdgpu_ucode_print_sdma_hdr(ptr noundef %8) #2\n  %10 = load ptr, ptr %0, align 8, !tbaa !10\n  %11 = getelementptr inbounds %struct.TYPE_2__, ptr %10, i64 %3\n  %12 = load ptr, ptr %11, align 8, !tbaa !13\n  %13 = load ptr, ptr %12, align 8, !tbaa !14\n  br label %27\n\n14:                                               ; preds = %2, %2, %2\n  %15 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 1\n  %16 = load ptr, ptr %15, align 8, !tbaa !16\n  %17 = load ptr, ptr %16, align 8, !tbaa !14\n  br label %27\n\n18:                                               ; preds = %2, %2\n  %19 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 2\n  %20 = load ptr, ptr %19, align 8, !tbaa !17\n  br label %27\n\n21:                                               ; preds = %2, %2\n  %22 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 3\n  %23 = load ptr, ptr %22, align 8, !tbaa !18\n  %24 = load ptr, ptr %23, align 8, !tbaa !14\n  br label %27\n\n25:                                               ; preds = %27\n  ret void\n\n26:                                               ; preds = %2\n  %27 = phi ptr [ %24, %2 ], [ %13, %21 ], [ %17, %18 ], [ %12, %14 ], [ %8, %4 ]\n  %28 = tail call i32 @amdgpu_ucode_print_smc_hdr(ptr noundef %27) #2\n  br label %25\n\n29:                                               ; preds = %2\n  %30 = tail call i32 @amdgpu_ucode_print_rlc_hdr(ptr noundef %27) #2\n  br label %25\n\n31:                                               ; preds = %2\n  %32 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n33:                                               ; preds = %2\n  %34 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n35:                                               ; preds = %2\n  %36 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n37:                                               ; preds = %2\n  %38 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n39:                                               ; preds = %2\n  %40 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n41:                                               ; preds = %2\n  %42 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n43:                                               ; preds = %2\n  %44 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n45:                                               ; preds = %2\n  %46 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n47:                                               ; preds = %2\n  %48 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n49:                                               ; preds = %2\n  %50 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n51:                                               ; preds = %2\n  %52 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n53:                                               ; preds = %2\n  %54 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n55:                                               ; preds = %2\n  %56 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n57:                                               ; preds = %2\n  %58 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n59:                                               ; preds = %2\n  %60 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n61:                                               ; preds = %2\n  %62 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n63:                                               ; preds = %2\n  %64 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n65:                                               ; preds = %2\n  %66 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n67:                                               ; preds = %2\n  %68 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n69:                                               ; preds = %2\n  %70 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n71:                                               ; preds = %2\n  %72 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n73:                                               ; preds = %2\n  %74 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n75:                                               ; preds = %2\n  %76 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n77:                                               ; preds = %2\n  %78 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n79:                                               ; preds = %2\n  %80 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n81:                                               ; preds = %2\n  %82 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n83:                                               ; preds = %2\n  %84 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n85:                                               ; preds = %2\n  %86 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n87:                                               ; preds = %2\n  %88 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n89:                                               ; preds = %2\n  %90 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n91:                                               ; preds = %2\n  %92 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n93:                                               ; preds = %2\n  %94 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n95:                                               ; preds = %2\n  %96 = tail call i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @psp_print_fw_hdr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @psp_print_fw_hdr(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  switch i64 %3, label %25 [\n    i64 128, label %4\n    i64 132, label %4\n    i64 136, label %4\n    i64 140, label %4\n    i64 144, label %4\n    i64 148, label %4\n    i64 152, label %4\n    i64 156, label %4\n    i64 160, label %4\n    i64 164, label %4\n    i64 168, label %4\n    i64 172, label %4\n    i64 176, label %4\n    i64 180, label %4\n    i64 184, label %4\n    i64 188, label %4\n    i64 192, label %4\n    i64 196, label %4\n    i64 200, label %4\n    i64 204, label %4\n    i64 208, label %4\n    i64 212, label %4\n    i64 216, label %4\n    i64 220, label %4\n    i64 224, label %4\n    i64 228, label %4\n    i64 232, label %4\n    i64 236, label %4\n    i64 240, label %4\n    i64 244, label %4\n    i64 248, label %4\n    i64 252, label %4\n    i64 256, label %4\n    i64 260, label %4\n    i64 264, label %4\n    i64 268, label %4\n    i64 272, label %4\n    i64 276, label %4\n    i64 280, label %4\n    i64 284, label %4\n    i64 288, label %4\n    i64 292, label %4\n    i64 296, label %4\n    i64 300, label %4\n    i64 304, label %4\n    i64 308, label %4\n    i64 312, label %4\n    i64 316, label %4\n    i64 320, label %4\n    i64 324, label %4\n    i64 328, label %4\n    i64 332, label %4\n    i64 336, label %4\n    i64 340, label %4\n    i64 344, label %4\n    i64 348, label %4\n    i64 352, label %4\n    i64 356, label %4\n    i64 360, label %4\n    i64 364, label %4\n    i64 368, label %4\n    i64 372, label %4\n    i64 376, label %4\n    i64 380, label %4\n    i64 384, label %4\n    i64 388, label %4\n    i64 392, label %4\n    i64 396, label %4\n    i64 400, label %4\n    i64 404, label %4\n    i64 408, label %4\n    i64 412, label %4\n    i64 416, label %4\n    i64 420, label %4\n    i64 424, label %4\n    i64 428, label %4\n    i64 432, label %4\n    i64 436, label %4\n    i64 440, label %4\n    i64 444, label %4\n    i64 448, label %4\n    i64 452, label %4\n    i64 456, label %4\n    i64 460, label %4\n    i64 464, label %4\n    i64 468, label %4\n    i64 472, label %4\n    i64 476, label %4\n    i64 480, label %4\n    i64 484, label %4\n    i64 488, label %4\n    i64 492, label %4\n    i64 496, label %4\n    i64 500, label %4\n    i64 504, label %4\n    i64 508, label %4\n    i64 512, label %4\n    i64 516, label %4\n    i64 520, label %4\n    i64 524, label %4\n    i64 528, label %4\n    i64 532, label %4\n    i64 536, label %4\n    i64 540, label %4\n    i64 544, label %4\n    i64 548, label %4\n    i64 552, label %4\n    i64 556, label %4\n    i64 560, label %4\n    i64 564, label %4\n    i64 568, label %4\n    i64 572, label %4\n    i64 576, label %4\n    i64 580, label %4\n    i64 584, label %4\n    i64 588, label %4\n    i64 592, label %4\n    i64 596, label %4\n    i64 600, label %4\n    i64 604, label %4\n    i64 608, label %4\n    i64 612, label %4\n    i64 616, label %4\n    i64 620, label %4\n    i64 624, label %4\n    i64 628, label %4\n    i64 632, label %4\n    i64 636, label %4\n    i64 640, label %4\n    i64 644, label %4\n    i64 648, label %4\n    i64 652, label %4\n    i64 656, label %4\n    i64 660, label %4\n    i64 664, label %4\n    i64 668, label %4\n    i64 672, label %4\n    i64 676, label %4\n    i64 680, label %4\n    i64 684, label %4\n    i64 688, label %4\n    i64 692, label %4\n    i64 696, label %4\n    i64 700, label %4\n    i64 704, label %4\n    i64 708, label %4\n    i64 712, label %4\n    i64 716, label %4\n    i64 720, label %4\n    i64 724, label %4\n    i64 728, label %4\n    i64 732, label %4\n    i64 736, label %4\n    i64 740, label %4\n    i64 744, label %4\n    i64 748, label %4\n    i64 752, label %4\n    i64 756, label %4\n    i64 760, label %4\n    i64 764, label %4\n    i64 768, label %4\n    i64 772, label %4\n    i64 776, label %4\n    i64 780, label %4\n    i64 784, label %4\n    i64 788, label %4\n    i64 792, label %4\n    i64 796, label %4\n    i64 800, label %4\n    i64 804, label %4\n    i64 808, label %4\n    i64 812, label %4\n    i64 816, label %4\n    i64 820, label %4\n    i64 824, label %4\n    i64 828, label %4\n    i64 832, label %4\n    i64 836, label %4\n    i64 840, label %4\n    i64 844, label %4\n    i64 848, label %4\n    i64 852, label %4\n    i64 856, label %4\n    i64 860, label %4\n    i64 864, label %4\n    i64 868, label %4\n    i64 872, label %4\n    i64 876, label %4\n    i64 880, label %4\n    i64 884, label %4\n    i64 888, label %4\n    i64 892, label %4\n    i64 896, label %4\n    i64 900, label %4\n    i64 904, label %4\n    i64 908, label %4\n    i64 912, label %4\n    i64 916, label %4\n    i64 920, label %4\n    i64 924, label %4\n    i64 928, label %4\n    i64 932, label %4\n    i64 936, label %4\n    i64 940, label %4\n    i64 944, label %4\n    i64 948, label %4\n    i64 952, label %4\n    i64 956, label %4\n    i64 960, label %4\n    i64 964, label %4\n    i64 968, label %4\n    i64 972, label %4\n    i64 976, label %4\n    i64 980, label %4\n    i64 984, label %4\n    i64 988, label %4\n    i64 992", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @psp_print_fw_hdr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @psp_print_fw_hdr(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  switch i64 %3, label %26 [\n    i64 128, label %4\n    i64 132, label %4\n    i64 136, label %4\n    i64 140, label %4\n    i64 144, label %4\n    i64 148, label %4\n    i64 152, label %4\n    i64 156, label %4\n    i64 160, label %4\n    i64 164, label %14\n    i64 168, label %18\n    i64 172, label %22\n    i64 176, label %26\n  ]\n\n4:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2\n  %5 = load ptr, ptr %0, align 8, !tbaa !10\n  %6 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3\n  %7 = load ptr, ptr %6, align 8, !tbaa !13\n  %8 = load ptr, ptr %7, align 8, !tbaa !14\n  %9 = tail call i32 @amdgpu_ucode_print_sdma_hdr(ptr noundef %8) #2\n  br label %26\n\n10:                                               ; preds = %2\n  %11 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !16\n  %13 = load ptr, ptr %12, align 8, !tbaa !14\n  br label %26\n\n14:                                               ; preds = %2\n  %15 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 2\n  %16 = load ptr, ptr %15, align 8, !tbaa !17\n  %17 = load ptr, ptr %16, align 8, !tbaa !14\n  br label %26\n\n18:                                               ; preds = %2\n  %19 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 3\n  %20 = load ptr, ptr %19, align 8, !tbaa !18\n  %21 = load ptr, ptr %20, align 8, !tbaa !14\n  br label %26\n\n22:                                               ; preds = %2\n  %23 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 4\n  %24 = load ptr, ptr %23, align 8, !tbaa !19\n  %25 = load ptr, ptr %24, align 8, !tbaa !14\n  br label %26\n\n26:                                               ; preds = %2, %22, %18, %14, %10, %4\n  ret void\n\n}\n\ndeclare i32 @amdgpu_ucode_print_sdma_hdr(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"psp_fw_header_info\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"psp_context\", !12, i64 0}\n!12 = !{!\"any pointer\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!15, !12, i64 0}\n!15 = !{!\"TYPE_2__\", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !12, i64 56}\n!16 = !{!15, !12, i64 8}\n!17 = !{!15, !12, i64 16}\n!18 = !{!15, !12, i64 24}\n!19 = !{!15, !12, i64 32}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @psp_print_fw_hdr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @psp_print_fw_hdr(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  switch i64 %3, label %27 [\n    i64 136, label %4\n    i64 132, label %4\n    i64 131, label %4\n    i64 130, label %4\n    i64 129, label %4\n    i64 128, label %4\n    i64 135, label %14\n    i64 134, label %14\n    i64 133, label %14\n    i64 137, label %18\n    i64 138, label %18\n    i64 139, label %21\n    i64 140, label %21\n  ]\n\n4:                                                ; preds = %2, %2, %2, %2, %2, %2\n  %5 = load ptr, ptr %0, align 8, !tbaa !10\n  %6 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3\n  %7 = load ptr, ptr %6, align 8, !tbaa !13\n  %8 = load ptr, ptr %7, align 8, !tbaa !14\n  %9 = tail call i32 @amdgpu_ucode_print_sdma_hdr(ptr noundef %8) #2\n  %10 = load ptr, ptr %0, align 8, !tbaa !10\n  %11 = getelementptr inbounds %struct.TYPE_2__, ptr %10, i64 %3\n  %12 = load ptr, ptr %11, align 8, !tbaa !13\n  %13 = load ptr, ptr %12, align 8, !tbaa !14\n  br label %27\n\n14:                                               ; preds = %2, %2, %2\n  %15 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 1\n  %16 = load ptr, ptr %15, align 8, !tbaa !16\n  %17 = load ptr, ptr %16, align 8, !tbaa !14\n  br label %27\n\n18:                                               ; preds = %2, %2\n  %19 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 2\n  %20 = load ptr, ptr %19, align 8, !tbaa !17\n  br label %27\n\n21:                                               ; preds = %2, %2\n  %22 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 %3, i32 3\n  %23 = load ptr, ptr %22, align 8, !tbaa !18\n  %24 = load ptr, ptr %23, align 8, !tbaa !14\n  br label %27\n\n25:                                               ; preds = %27\n  ret void\n\n26:                                               ; preds = %2\n  %27 = phi ptr [ %24, %2 ], [ %13, %21 ], [ %17, %18 ], [ %12, %14 ], [ %8, %4 ]\n  %28 = tail call i32 @amdgpu_ucode_print_smc_hdr(ptr noundef %27) #2\n  br label %25\n\n29:                                               ; preds = %2\n  %30 = tail call i32 @amdgpu_ucode_print_rlc_hdr(ptr noundef %27) #2\n  br label %25\n\n31:                                               ; preds = %2\n  %32 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n33:                                               ; preds = %2\n  %34 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n35:                                               ; preds = %2\n  %36 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n37:                                               ; preds = %2\n  %38 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n39:                                               ; preds = %2\n  %40 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n41:                                               ; preds = %2\n  %42 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n43:                                               ; preds = %2\n  %44 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n45:                                               ; preds = %2\n  %46 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n47:                                               ; preds = %2\n  %48 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n49:                                               ; preds = %2\n  %50 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n51:                                               ; preds = %2\n  %52 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n53:                                               ; preds = %2\n  %54 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n55:                                               ; preds = %2\n  %56 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n57:                                               ; preds = %2\n  %58 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n59:                                               ; preds = %2\n  %60 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n61:                                               ; preds = %2\n  %62 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n63:                                               ; preds = %2\n  %64 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n65:                                               ; preds = %2\n  %66 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n67:                                               ; preds = %2\n  %68 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n69:                                               ; preds = %2\n  %70 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n71:                                               ; preds = %2\n  %72 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n73:                                               ; preds = %2\n  %74 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n75:                                               ; preds = %2\n  %76 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n77:                                               ; preds = %2\n  %78 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n79:                                               ; preds = %2\n  %80 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n81:                                               ; preds = %2\n  %82 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n83:                                               ; preds = %2\n  %84 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n85:                                               ; preds = %2\n  %86 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n87:                                               ; preds = %2\n  %88 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n89:                                               ; preds = %2\n  %90 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n91:                                               ; preds = %2\n  %92 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n93:                                               ; preds = %2\n  %94 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %27) #2\n  br label %25\n\n95:                                               ; preds = %2\n  %96 = tail call i32"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/gpu/drm/amd/amdgpu/extr_amdgpu_psp.c_psp_print_fw_hdr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.amdgpu_device = type { %struct.TYPE_13__, %struct.TYPE_22__, %struct.TYPE_16__ }\n%struct.TYPE_13__ = type { ptr }\n%struct.TYPE_22__ = type { ptr, ptr, ptr, ptr, ptr }\n%struct.TYPE_16__ = type { ptr }\n%struct.TYPE_15__ = type { ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @psp_print_fw_hdr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @psp_print_fw_hdr(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr %1, align 8, !tbaa !10\n  switch i64 %4, label %49 [\n    i64 136, label %5\n    i64 135, label %5\n    i64 134, label %5\n    i64 133, label %5\n    i64 132, label %5\n    i64 131, label %5\n    i64 130, label %5\n    i64 129, label %5\n    i64 141, label %14\n    i64 138, label %20\n    i64 140, label %26\n    i64 139, label %32\n    i64 137, label %38\n    i64 128, label %44\n  ]\n\n5:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2\n  %6 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i64 0, i32 2\n  %7 = load ptr, ptr %6, align 8, !tbaa !13\n  %8 = add nsw i64 %4, -136\n  %9 = getelementptr inbounds %struct.TYPE_15__, ptr %7, i64 %8\n  %10 = load ptr, ptr %9, align 8, !tbaa !18\n  %11 = load i64, ptr %10, align 8, !tbaa !20\n  %12 = inttoptr i64 %11 to ptr\n  %13 = tail call i32 @amdgpu_ucode_print_sdma_hdr(ptr noundef %12) #2\n  br label %49\n\n14:                                               ; preds = %2\n  %15 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i64 0, i32 1, i32 4\n  %16 = load ptr, ptr %15, align 8, !tbaa !22\n  %17 = load i64, ptr %16, align 8, !tbaa !23\n  %18 = inttoptr i64 %17 to ptr\n  %19 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %18) #2\n  br label %49\n\n20:                                               ; preds = %2\n  %21 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i64 0, i32 1, i32 3\n  %22 = load ptr, ptr %21, align 8, !tbaa !25\n  %23 = load i64, ptr %22, align 8, !tbaa !26\n  %24 = inttoptr i64 %23 to ptr\n  %25 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %24) #2\n  br label %49\n\n26:                                               ; preds = %2\n  %27 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i64 0, i32 1, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !28\n  %29 = load i64, ptr %28, align 8, !tbaa !29\n  %30 = inttoptr i64 %29 to ptr\n  %31 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %30) #2\n  br label %49\n\n32:                                               ; preds = %2\n  %33 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i64 0, i32 1, i32 1\n  %34 = load ptr, ptr %33, align 8, !tbaa !31\n  %35 = load i64, ptr %34, align 8, !tbaa !32\n  %36 = inttoptr i64 %35 to ptr\n  %37 = tail call i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef %36) #2\n  br label %49\n\n38:                                               ; preds = %2\n  %39 = getelementptr inbounds %struct.amdgpu_device, ptr %3, i64 0, i32 1\n  %40 = load ptr, ptr %39, align 8, !tbaa !34\n  %41 = load i64, ptr %40, align 8, !tbaa !35\n  %42 = inttoptr i64 %41 to ptr\n  %43 = tail call i32 @amdgpu_ucode_print_rlc_hdr(ptr noundef %42) #2\n  br label %49\n\n44:                                               ; preds = %2\n  %45 = load ptr, ptr %3, align 8, !tbaa !37\n  %46 = load i64, ptr %45, align 8, !tbaa !38\n  %47 = inttoptr i64 %46 to ptr\n  %48 = tail call i32 @amdgpu_ucode_print_smc_hdr(ptr noundef %47) #2\n  br label %49\n\n49:                                               ; preds = %2, %44, %38, %32, %26, %20, %14, %5\n  ret void\n}\n\ndeclare i32 @amdgpu_ucode_print_sdma_hdr(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @amdgpu_ucode_print_gfx_hdr(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @amdgpu_ucode_print_rlc_hdr(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @amdgpu_ucode_print_smc_hdr(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"psp_context\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"amdgpu_firmware_info\", !12, i64 0}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !7, i64 48}\n!14 = !{!\"amdgpu_device\", !15, i64 0, !16, i64 8, !17, i64 48}\n!15 = !{!\"TYPE_13__\", !7, i64 0}\n!16 = !{!\"TYPE_22__\", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32}\n!17 = !{!\"TYPE_16__\", !7, i64 0}\n!18 = !{!19, !7, i64 0}\n!19 = !{!\"TYPE_15__\", !7, i64 0}\n!20 = !{!21, !12, i64 0}\n!21 = !{!\"TYPE_14__\", !12, i64 0}\n!22 = !{!14, !7, i64 40}\n!23 = !{!24, !12, i64 0}\n!24 = !{!\"TYPE_17__\", !12, i64 0}\n!25 = !{!14, !7, i64 32}\n!26 = !{!27, !12, i64 0}\n!27 = !{!\"TYPE_18__\", !12, i64 0}\n!28 = !{!14, !7, i64 24}\n!29 = !{!30, !12, i64 0}\n!30 = !{!\"TYPE_19__\", !12, i64 0}\n!31 = !{!14, !7, i64 16}\n!32 = !{!33, !12, i64 0}\n!33 = !{!\"TYPE_20__\", !12, i64 0}\n!34 = !{!14, !7, i64 8}\n!35 = !{!36, !12, i64 0}\n!36 = !{!\"TYPE_21__\", !12, i64 0}\n!37 = !{!14, !7, i64 0}\n!38 = !{!39, !12, i64 0}\n!39 = !{!\"TYPE_12__\", !12, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_rf.c_rtl92s_phy_rf6052_set_ccktxpower.ll\"\n\t.globl\trtl92s_phy_rf6052_set_ccktxpower # -- Begin function rtl92s_phy_rf6052_set_ccktxpower\n\t.p2align\t4, 0x90\n\t.type\trtl92s_phy_rf6052_set_ccktxpower,@function\nrtl92s_phy_rf6052_set_ccktxpower:       # @rtl92s_phy_rf6052_set_ccktxpower\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %r15d\n\tmovq\t%rdi, %rbx\n\tcallq\trtl_priv@PLT\n\tmovq\t%rax, %r14\n\tmovq\t%rbx, %rdi\n\tcallq\trtl_priv@PLT\n\tmovq\t%rax, %rdi\n\tcallq\trtl_mac@PLT\n\tmovq\t%rax, %rbp\n\tmovq\t%rbx, %rdi\n\tcallq\trtl_priv@PLT\n\tmovq\t%rax, %rdi\n\tcallq\trtl_efuse@PLT\n\tmovl\t$63, %edx\n\tcmpl\t$2, (%rax)\n\tjl\t.LBB0_4\n# %bb.1:\n\tcmpl\t$1, 4(%rax)\n\tje\t.LBB0_3\n# %bb.2:\n\tcmpq\t$0, 8(%rax)\n\tje\t.LBB0_4\n.LBB0_3:\n\tmovl\t%r15d, %edx\n.LBB0_4:\n\tcmpq\t$0, (%rbp)\n\tjne\t.LBB0_7\n# %bb.5:\n\tmovq\t(%r14), %rax\n\tmovl\t$16, %edx\n\tcmpq\tTX_HIGH_PWR_LEVEL_LEVEL1(%rip), %rax\n\tje\t.LBB0_7\n# %bb.6:\n\txorl\t%ecx, %ecx\n\tcmpq\tTX_HIGH_PWR_LEVEL_LEVEL2(%rip), %rax\n\tcmovel\t%ecx, %r15d\n\tmovl\t%r15d, %edx\n.LBB0_7:\n\tmovl\tRF6052_MAX_TX_PWR(%rip), %ecx\n\tcmpl\t%ecx, %edx\n\tcmovll\t%edx, %ecx\n\tmovl\tRTXAGC_CCK_MCS32(%rip), %esi\n\tmovl\tBTX_AGCRATECCK(%rip), %edx\n\tmovq\t%rbx, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\trtl_set_bbreg@PLT               # TAILCALL\n.Lfunc_end0:\n\t.size\trtl92s_phy_rf6052_set_ccktxpower, .Lfunc_end0-rtl92s_phy_rf6052_set_ccktxpower\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tTX_HIGH_PWR_LEVEL_LEVEL1,@object # @TX_HIGH_PWR_LEVEL_LEVEL1\n\t.bss\n\t.globl\tTX_HIGH_PWR_LEVEL_LEVEL1\n\t.p2align\t3\nTX_HIGH_PWR_LEVEL_LEVEL1:\n\t.quad\t0                               # 0x0\n\t.size\tTX_HIGH_PWR_LEVEL_LEVEL1, 8\n\n\t.type\tTX_HIGH_PWR_LEVEL_LEVEL2,@object # @TX_HIGH_PWR_LEVEL_LEVEL2\n\t.globl\tTX_HIGH_PWR_LEVEL_LEVEL2\n\t.p2align\t3\nTX_HIGH_PWR_LEVEL_LEVEL2:\n\t.quad\t0                               # 0x0\n\t.size\tTX_HIGH_PWR_LEVEL_LEVEL2, 8\n\n\t.type\tRF6052_MAX_TX_PWR,@object       # @RF6052_MAX_TX_PWR\n\t.globl\tRF6052_MAX_TX_PWR\n\t.p2align\t2\nRF6052_MAX_TX_PWR:\n\t.long\t0                               # 0x0\n\t.size\tRF6052_MAX_TX_PWR, 4\n\n\t.type\tRTXAGC_CCK_MCS32,@object        # @RTXAGC_CCK_MCS32\n\t.globl\tRTXAGC_CCK_MCS32\n\t.p2align\t2\nRTXAGC_CCK_MCS32:\n\t.long\t0                               # 0x0\n\t.size\tRTXAGC_CCK_MCS32, 4\n\n\t.type\tBTX_AGCRATECCK,@object          # @BTX_AGCRATECCK\n\t.globl\tBTX_AGCRATECCK\n\t.p2align\t2\nBTX_AGCRATECCK:\n\t.long\t0                               # 0x0\n\t.size\tBTX_AGCRATECCK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rtl_efuse = type { i32, i32, i64 }\n\n@TX_HIGH_PWR_LEVEL_LEVEL1 = dso_local local_unnamed_addr global i64 0, align 8\n@TX_HIGH_PWR_LEVEL_LEVEL2 = dso_local local_unnamed_addr global i64 0, align 8\n@RF6052_MAX_TX_PWR = dso_local local_unnamed_addr global i32 0, align 4\n@RTXAGC_CCK_MCS32 = dso_local local_unnamed_addr global i32 0, align 4\n@BTX_AGCRATECCK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @rtl92s_phy_rf6052_set_ccktxpower(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %4 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %5 = tail call ptr @rtl_mac(ptr noundef %4) #2\n  %6 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %7 = tail call ptr @rtl_efuse(ptr noundef %6) #2\n  %8 = load i32, ptr %7, align 8, !tbaa !5\n  %9 = icmp sgt i32 %8, 1\n  br i1 %9, label %10, label %17\n\n10:                                               ; preds = %2\n  %11 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !11\n  %13 = icmp eq i32 %12, 1\n  br i1 %13, label %17, label %14\n\n14:                                               ; preds = %10\n  %15 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 2\n  %16 = load i64, ptr %15, align 8, !tbaa !12\n  br i1 %16, label %17, label %20\n\n17:                                               ; preds = %14, %10, %2\n  %18 = phi i32 [ %1, %14 ], [ %1, %10 ], [ 63, %2 ]\n  %19 = load i64, ptr %5, align 8, !tbaa !13\n  br label %20\n\n20:                                               ; preds = %17, %14\n  %21 = phi i32 [ %18, %14 ], [ %1, %17 ]\n  %22 = phi i64 [ %19, %14 ], [ 0, %17 ]\n  %23 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL1, align 8, !tbaa !15\n  %24 = icmp eq i64 %22, %23\n  br i1 %24, label %29, label %25\n\n25:                                               ; preds = %20\n  %26 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL2, align 8, !tbaa !15\n  %27 = icmp eq i64 %22, %26\n  %28 = select i1 %27, i32 0, i32 %21\n  br label %29\n\n29:                                               ; preds = %25, %20\n  %30 = phi i32 [ %21, %20 ], [ %28, %25 ]\n  %31 = load i32, ptr @RF6052_MAX_TX_PWR, align 4, !tbaa !16\n  %32 = tail call i32 @llvm.smin.i32(i32 %30, i32 %31)\n  %33 = load i32, ptr @RTXAGC_CCK_MCS32, align 4, !tbaa !16\n  %34 = load i32, ptr @BTX_AGCRATECCK, align 4, !tbaa !16\n  %35 = tail call i32 @rtl_set_bbreg(ptr noundef %0, i32 noundef %33, i32 noundef %34, i32 noundef %32) #2\n  ret void\n}\n\ndeclare ptr @rtl_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_mac(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_efuse(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtl_set_bbreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"rtl_efuse\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"rtl_mac\", !10, i64 0}\n!15 = !{!10, !10, i64 0}\n!16 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rtl_efuse = type { i32, i32, i64 }\n\n@TX_HIGH_PWR_LEVEL_LEVEL1 = dso_local local_unnamed_addr global i64 0, align 8\n@TX_HIGH_PWR_LEVEL_LEVEL2 = dso_local local_unnamed_addr global i64 0, align 8\n@RF6052_MAX_TX_PWR = dso_local local_unnamed_addr global i32 0, align 4\n@RTXAGC_CCK_MCS32 = dso_local local_unnamed_addr global i32 0, align 4\n@BTX_AGCRATECCK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @rtl92s_phy_rf6052_set_ccktxpower(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %4 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %5 = tail call ptr @rtl_mac(ptr noundef %4) #2\n  %6 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %7 = tail call ptr @rtl_efuse(ptr noundef %6) #2\n  %8 = load i32, ptr %7, align 8, !tbaa !5\n  %9 = icmp sgt i32 %8, 1\n  br i1 %9, label %10, label %17\n\n10:                                               ; preds = %2\n  %11 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !11\n  %13 = icmp eq i32 %12, 1\n  br i1 %13, label %17, label %14\n\n14:                                               ; preds = %10\n  %15 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 2\n  %16 = load i64, ptr %15, align 8, !tbaa !12\n  br i1 %16, label %17, label %20\n\n17:                                               ; preds = %14, %10, %2\n  %18 = phi i32 [ %1, %14 ], [ %1, %10 ], [ 63, %2 ]\n  %19 = load i64, ptr %5, align 8, !tbaa !13\n  br label %20\n\n20:                                               ; preds = %17, %14\n  %21 = phi i32 [ %18, %14 ], [ %1, %17 ]\n  %22 = phi i64 [ %19, %14 ], [ 0, %17 ]\n  %23 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL1, align 8, !tbaa !15\n  %24 = icmp eq i64 %22, %23\n  br i1 %24, label %29, label %25\n\n25:                                               ; preds = %20\n  %26 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL2, align 8, !tbaa !15\n  %27 = icmp eq i64 %22, %26\n  %28 = select i1 %27, i32 0, i32 %21\n  br label %29\n\n29:                                               ; preds = %25, %20\n  %30 = phi i32 [ %21, %20 ], [ %28, %25 ]\n  %31 = load i32, ptr @RF6052_MAX_TX_PWR, align 4, !tbaa !16\n  %32 = tail call i32 @llvm.smin.i32(i32 %30, i32 %31)\n  %33 = load i32, ptr @RTXAGC_CCK_MCS32, align 4, !tbaa !16\n  %34 = load i32, ptr @BTX_AGCRATECCK, align 4, !tbaa !16\n  %35 = tail call i32 @rtl_set_bbreg(ptr noundef %0, i32 noundef %33, i32 noundef %34, i32 noundef %32) #2\n  ret void\n}\n\ndeclare ptr @rtl_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_mac(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_efuse(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtl_set_bbreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"rtl_efuse\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"rtl_mac\", !10, i64 0}\n!15 = !{!10, !10, i64 0}\n!16 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rtl_efuse = type { i32, i32, i64 }\n\n@TX_HIGH_PWR_LEVEL_LEVEL1 = dso_local local_unnamed_addr global i64 0, align 8\n@TX_HIGH_PWR_LEVEL_LEVEL2 = dso_local local_unnamed_addr global i64 0, align 8\n@RF6052_MAX_TX_PWR = dso_local local_unnamed_addr global i32 0, align 4\n@RTXAGC_CCK_MCS32 = dso_local local_unnamed_addr global i32 0, align 4\n@BTX_AGCRATECCK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @rtl92s_phy_rf6052_set_ccktxpower(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %4 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %5 = tail call ptr @rtl_mac(ptr noundef %4) #2\n  %6 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %7 = tail call ptr @rtl_efuse(ptr noundef %6) #2\n  %8 = load i32, ptr %7, align 8, !tbaa !5\n  %9 = icmp sgt i32 %8, 1\n  br i1 %9, label %10, label %17\n\n10:                                               ; preds = %2\n  %11 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !11\n  %13 = icmp eq i32 %12, 1\n  br i1 %13, label %17, label %14\n\n14:                                               ; preds = %10\n  %15 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 2\n  %16 = load i64, ptr %15, align 8, !tbaa !12\n  br i1 %16, label %17, label %20\n\n17:                                               ; preds = %14, %10, %2\n  %18 = phi i32 [ %1, %14 ], [ %1, %10 ], [ 63, %2 ]\n  %19 = load i64, ptr %5, align 8, !tbaa !13\n  br label %20\n\n20:                                               ; preds = %17, %14\n  %21 = phi i32 [ %18, %14 ], [ %1, %17 ]\n  %22 = phi i64 [ %19, %14 ], [ 0, %17 ]\n  %23 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL1, align 8, !tbaa !15\n  %24 = icmp eq i64 %22, %23\n  br i1 %24, label %29, label %25\n\n25:                                               ; preds = %20\n  %26 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL2, align 8, !tbaa !15\n  %27 = icmp eq i64 %22, %26\n  %28 = select i1 %27, i32 0, i32 %21\n  br label %29\n\n29:                                               ; preds = %25, %20\n  %30 = phi i32 [ %21, %20 ], [ %28, %25 ]\n  %31 = load i32, ptr @RF6052_MAX_TX_PWR, align 4, !tbaa !16\n  %32 = tail call i32 @llvm.smin.i32(i32 %30, i32 %31)\n  %33 = load i32, ptr @RTXAGC_CCK_MCS32, align 4, !tbaa !16\n  %34 = load i32, ptr @BTX_AGCRATECCK, align 4, !tbaa !16\n  %35 = tail call i32 @rtl_set_bbreg(ptr noundef %0, i32 noundef %33, i32 noundef %34, i32 noundef %32) #2\n  ret void\n}\n\ndeclare ptr @rtl_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_mac(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_efuse(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtl_set_bbreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"rtl_efuse\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"rtl_mac\", !10, i64 0}\n!15 = !{!10, !10, i64 0}\n!16 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rtl_efuse = type { i32, i32, i64 }\n\n@TX_HIGH_PWR_LEVEL_LEVEL1 = dso_local local_unnamed_addr global i64 0, align 8\n@TX_HIGH_PWR_LEVEL_LEVEL2 = dso_local local_unnamed_addr global i64 0, align 8\n@RF6052_MAX_TX_PWR = dso_local local_unnamed_addr global i32 0, align 4\n@RTXAGC_CCK_MCS32 = dso_local local_unnamed_addr global i32 0, align 4\n@BTX_AGCRATECCK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @rtl92s_phy_rf6052_set_ccktxpower(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %4 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %5 = tail call ptr @rtl_mac(ptr noundef %4) #2\n  %6 = tail call ptr @rtl_priv(ptr noundef %0) #2\n  %7 = tail call ptr @rtl_efuse(ptr noundef %6) #2\n  %8 = load i32, ptr %7, align 8, !tbaa !5\n  %9 = icmp sgt i32 %8, 1\n  br i1 %9, label %10, label %17\n\n10:                                               ; preds = %2\n  %11 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !11\n  %13 = icmp eq i32 %12, 1\n  br i1 %13, label %17, label %14\n\n14:                                               ; preds = %10\n  %15 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 2\n  %16 = load i64, ptr %15, align 8, !tbaa !12\n  br i1 %16, label %17, label %20\n\n17:                                               ; preds = %14, %10, %2\n  %18 = phi i32 [ %1, %14 ], [ %1, %10 ], [ 63, %2 ]\n  %19 = load i64, ptr %5, align 8, !tbaa !13\n  br label %20\n\n20:                                               ; preds = %17, %14\n  %21 = phi i32 [ %18, %14 ], [ %1, %17 ]\n  %22 = phi i64 [ %19, %14 ], [ 0, %17 ]\n  %23 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL1, align 8, !tbaa !15\n  %24 = icmp eq i64 %22, %23\n  br i1 %24, label %29, label %25\n\n25:                                               ; preds = %20\n  %26 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL2, align 8, !tbaa !15\n  %27 = icmp eq i64 %22, %26\n  %28 = select i1 %27, i32 0, i32 %21\n  br label %29\n\n29:                                               ; preds = %25, %20\n  %30 = phi i32 [ %21, %20 ], [ %28, %25 ]\n  %31 = load i32, ptr @RF6052_MAX_TX_PWR, align 4, !tbaa !16\n  %32 = tail call i32 @llvm.smin.i32(i32 %30, i32 %31)\n  %33 = load i32, ptr @RTXAGC_CCK_MCS32, align 4, !tbaa !16\n  %34 = load i32, ptr @BTX_AGCRATECCK, align 4, !tbaa !16\n  %35 = tail call i32 @rtl_set_bbreg(ptr noundef %0, i32 noundef %33, i32 noundef %34, i32 noundef %32) #2\n  ret void\n}\n\ndeclare ptr @rtl_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_mac(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_efuse(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtl_set_bbreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"rtl_efuse\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"rtl_mac\", !10, i64 0}\n!15 = !{!10, !10, i64 0}\n!16 = !{!7, !7, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/wireless/realtek/rtlwifi/rtl8192se/extr_rf.c_rtl92s_phy_rf6052_set_ccktxpower.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rtl_efuse = type { i32, i32, i64 }\n\n@TX_HIGH_PWR_LEVEL_LEVEL1 = dso_local local_unnamed_addr global i64 0, align 8\n@TX_HIGH_PWR_LEVEL_LEVEL2 = dso_local local_unnamed_addr global i64 0, align 8\n@RF6052_MAX_TX_PWR = dso_local local_unnamed_addr global i32 0, align 4\n@RTXAGC_CCK_MCS32 = dso_local local_unnamed_addr global i32 0, align 4\n@BTX_AGCRATECCK = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @rtl92s_phy_rf6052_set_ccktxpower(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {\n  %3 = tail call ptr @rtl_priv(ptr noundef %0) #3\n  %4 = tail call ptr @rtl_priv(ptr noundef %0) #3\n  %5 = tail call ptr @rtl_mac(ptr noundef %4) #3\n  %6 = tail call ptr @rtl_priv(ptr noundef %0) #3\n  %7 = tail call ptr @rtl_efuse(ptr noundef %6) #3\n  %8 = load i32, ptr %7, align 8, !tbaa !5\n  %9 = icmp sgt i32 %8, 1\n  br i1 %9, label %10, label %19\n\n10:                                               ; preds = %2\n  %11 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !11\n  %13 = icmp eq i32 %12, 1\n  br i1 %13, label %18, label %14\n\n14:                                               ; preds = %10\n  %15 = getelementptr inbounds %struct.rtl_efuse, ptr %7, i64 0, i32 2\n  %16 = load i64, ptr %15, align 8, !tbaa !12\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %19, label %18\n\n18:                                               ; preds = %14, %10\n  br label %19\n\n19:                                               ; preds = %2, %18, %14\n  %20 = phi i32 [ %1, %18 ], [ 63, %14 ], [ 63, %2 ]\n  %21 = load i64, ptr %5, align 8, !tbaa !13\n  %22 = icmp eq i64 %21, 0\n  br i1 %22, label %23, label %31\n\n23:                                               ; preds = %19\n  %24 = load i64, ptr %3, align 8, !tbaa !15\n  %25 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL1, align 8, !tbaa !18\n  %26 = icmp eq i64 %24, %25\n  br i1 %26, label %31, label %27\n\n27:                                               ; preds = %23\n  %28 = load i64, ptr @TX_HIGH_PWR_LEVEL_LEVEL2, align 8, !tbaa !18\n  %29 = icmp eq i64 %24, %28\n  %30 = select i1 %29, i32 0, i32 %1\n  br label %31\n\n31:                                               ; preds = %19, %27, %23\n  %32 = phi i32 [ 16, %23 ], [ %30, %27 ], [ %20, %19 ]\n  %33 = load i32, ptr @RF6052_MAX_TX_PWR, align 4, !tbaa !19\n  %34 = tail call i32 @llvm.smin.i32(i32 %32, i32 %33)\n  %35 = load i32, ptr @RTXAGC_CCK_MCS32, align 4, !tbaa !19\n  %36 = load i32, ptr @BTX_AGCRATECCK, align 4, !tbaa !19\n  %37 = tail call i32 @rtl_set_bbreg(ptr noundef %0, i32 noundef %35, i32 noundef %36, i32 noundef %34) #3\n  ret void\n}\n\ndeclare ptr @rtl_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_mac(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rtl_efuse(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rtl_set_bbreg(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"rtl_efuse\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"rtl_mac\", !10, i64 0}\n!15 = !{!16, !10, i64 0}\n!16 = !{!\"rtl_priv\", !17, i64 0}\n!17 = !{!\"TYPE_2__\", !10, i64 0}\n!18 = !{!10, !10, i64 0}\n!19 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dm-raid1.c_get_mirror.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function get_mirror\n\t.type\tget_mirror,@function\nget_mirror:                             # @get_mirror\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rcx, %rbp\n\tmovl\t%edx, %r15d\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\tmovq\t8(%rcx), %rdi\n\tleaq\t16(%rsp), %rdx\n\tleaq\t15(%rsp), %rcx\n\tmovl\t$.L.str, %esi\n\tcallq\tsscanf@PLT\n\tcmpl\t$1, %eax\n\tjne\t.LBB0_1\n# %bb.2:\n\tmovq\t(%rbp), %rbp\n\tmovl\t8(%rbx), %edi\n\tcallq\tdm_table_get_mode@PLT\n\tmovq\t(%r14), %rcx\n\tmovl\t%r15d, %r15d\n\tleaq\t(%r15,%r15,4), %rdx\n\tleaq\t(%rcx,%rdx,8), %rcx\n\taddq\t$32, %rcx\n\tmovq\t%rbx, %rdi\n\tmovq\t%rbp, %rsi\n\tmovl\t%eax, %edx\n\tcallq\tdm_get_device@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_4\n# %bb.3:\n\tmovl\t%eax, %ebp\n\tmovq\t$.L.str.2, (%rbx)\n\tjmp\t.LBB0_5\n.LBB0_1:\n\tmovq\t$.L.str.1, (%rbx)\n\txorl\t%ebp, %ebp\n\tsubl\tEINVAL(%rip), %ebp\n\tjmp\t.LBB0_5\n.LBB0_4:\n\tmovq\t(%r14), %rax\n\tshlq\t$3, %r15\n\tleaq\t(%r15,%r15,4), %rbx\n\tmovq\t%r14, 24(%rax,%rbx)\n\tleaq\t(%rax,%rbx), %rdi\n\taddq\t$16, %rdi\n\txorl\t%ebp, %ebp\n\txorl\t%esi, %esi\n\tcallq\tatomic_set@PLT\n\tmovq\t(%r14), %rax\n\tmovq\t$0, 8(%rax,%rbx)\n\tmovq\t16(%rsp), %rcx\n\tmovq\t%rcx, (%rax,%rbx)\n.LBB0_5:\n\tmovl\t%ebp, %eax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tget_mirror, .Lfunc_end0-get_mirror\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%llu%c\"\n\t.size\t.L.str, 7\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"Invalid offset\"\n\t.size\t.L.str.1, 15\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.bss\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\t.L.str.2,@object                # @.str.2\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.2:\n\t.asciz\t\"Device lookup failure\"\n\t.size\t.L.str.2, 22\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mirror_info = type { ptr, ptr }\n%struct.mirror_set = type { ptr, i32, i32, ptr, ptr }\n\n@.str = private unnamed_addr constant [7 x i8] c\"%llu%c\\00\", align 1\n@.str.1 = private unnamed_addr constant [15 x i8] c\"Invalid offset\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [22 x i8] c\"Device lookup failure\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_mirror], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @get_mirror(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3) #0 {\n  %5 = alloca ptr, align 8\n  %6 = alloca i8, align 1\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #4\n  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #4\n  %7 = getelementptr inbounds %struct.mirror_info, ptr %3, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !5\n  %9 = call i32 @sscanf(ptr noundef %8, ptr noundef nonnull @.str, ptr noundef nonnull %5, ptr noundef nonnull %6)\n  %10 = icmp eq i32 %9, 1\n  br i1 %10, label %14, label %11\n\n11:                                               ; preds = %4\n  store ptr @.str.1, ptr %1, align 8, !tbaa !10\n  %12 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %13 = sub nsw i32 0, %12\n  br label %30\n\n14:                                               ; preds = %4\n  %15 = load ptr, ptr %3, align 8, !tbaa !10\n  %16 = getelementptr inbounds %struct.mirror_set, ptr %1, i64 0, i32 1\n  %17 = load i32, ptr %16, align 8, !tbaa !13\n  %18 = call i32 @dm_table_get_mode(i32 noundef %17) #4\n  %19 = load ptr, ptr %0, align 8, !tbaa !14\n  %20 = zext i32 %2 to i64\n  %21 = getelementptr inbounds %struct.mirror_set, ptr %19, i64 %20, i32 4\n  %22 = call i32 @dm_get_device(ptr noundef nonnull %1, ptr noundef %15, i32 noundef %18, ptr noundef nonnull %21) #4\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %14\n  store ptr @.str.2, ptr %1, align 8, !tbaa !10\n  %25 = sub nsw i32 0, %22\n  br label %30\n\n27:                                               ; preds = %14\n  %28 = load ptr, ptr %0, align 8, !tbaa !14\n  %29 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20\n  store ptr %0, ptr %29, align 8, !tbaa !10\n  %30 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20, i32 2\n  %31 = call i32 @atomic_set(ptr noundef nonnull %30, i32 noundef 0) #4\n  %32 = load ptr, ptr %0, align 8, !tbaa !14\n  %33 = getelementptr inbounds %struct.mirror_set, ptr %32, i64 %20, i32 3\n  store ptr null, ptr %33, align 8, !tbaa !16\n  %34 = load ptr, ptr %5, align 8, !tbaa !17\n  store ptr %34, ptr %29, align 8, !tbaa !10\n  br label %30\n\n35:                                               ; preds = %36\n  %37 = add nuw nsw i32 %38, 1\n  %38 = phi i32 [ 0, %36 ], [ %39, %36 ]\n  %39 = add nuw nsw i32 %38, 1\n  %40 = icmp eq i32 %39, %2\n  br i1 %40, label %41, label %36, !llvm.loop !18\n\n41:                                               ; preds = %35\n  %42 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %43 = sub nsw i32 0, %42\n  br label %30\n\n44:                                               ; preds = %41\n  %45 = phi i32 [ %43, %41 ], [ %42, %44 ]\n  %46 = phi ptr [ %47, %41 ], [ %48, %44 ]\n  %47 = getelementptr inbounds %struct.mirror_set, ptr %46, i64 1\n  %48 = getelementptr inbounds %struct.mirror_set, ptr %46, i64 1, i32 2\n  %49 = load i32, ptr %48, align 8, !tbaa !13\n  %50 = icmp eq i32 %49, 0\n  br i1 %50, label %51, label %35, !llvm.loop !18\n\n51:                                               ; preds = %44\n  %52 = getelementptr inbounds %struct.mirror_set, ptr %46, i64 1, i32 3\n  store ptr %0, ptr %52, align 8, !tbaa !16\n  %53 = getelementptr inbounds %struct.mirror_set, ptr %46, i64 1, i32 1\n  %54 = call i32 @atomic_set(ptr noundef nonnull %53, i32 noundef 0) #4\n  %55 = load ptr, ptr %0, align 8, !tbaa !14\n  %56 = getelementptr inbounds %struct.mirror_set, ptr %55, i64 %39\n  store ptr null, ptr %56, align 8, !tbaa !10\n  %57 = load ptr, ptr %5, align 8, !tbaa !17\n  store ptr %57, ptr %56, align 8, !tbaa !10\n  %58 = icmp eq i32 %39, %2\n  br i1 %58, label %30, label %44\n\n59:                                               ; preds = %51\n  %60 = add nuw nsw i32 %61, 1\n  %61 = phi i32 [ %62, %51 ], [ %39, %59 ]\n  %62 = add nuw nsw i32 %61, 1\n  %63 = icmp eq i32 %62, %2\n  br i1 %63, label %64, label %51, !llvm.loop !18\n\n64:                                               ; preds = %59\n  %65 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %66 = sub nsw i32 0, %65\n  br label %30\n\n67:                                               ; preds = %64\n  %68 = phi i32 [ %66, %64 ], [ %69, %67 ]\n  %69 = add nuw nsw i32 %70, 1\n  %70 = add nuw nsw i32 %69, 1\n  %71 = icmp eq i32 %70, %2\n  br i1 %71, label %72, label %67, !llvm.loop !18\n\n72:                                               ; preds = %67\n  %73 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %74 = sub nsw i32 0, %73\n  br label %30\n\n75:                                               ; preds = %72\n  %76 = phi i32 [ %74, %72 ], [ %77, %75 ]\n  %77 = add nuw nsw i32 %78, 1\n  %78 = add nuw nsw i32 %77, 1\n  %79 = icmp eq i32 %78, %2\n  br i1 %79, label %80, label %75, !llvm.loop !18\n\n80:                                               ; preds = %75\n  %81 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %82 = sub nsw i32 0, %81\n  br label %30\n\n83:                                               ; preds = %80\n  %84 = phi i32 [ %82, %80 ], [ %85, %83 ]\n  %85 = add nuw nsw i32 %86, 1\n  %86 = add nuw nsw i32 %85, 1\n  %87 = icmp eq i32 %86, %2\n  br i1 %87, label %88, label %83, !llvm.loop !18\n\n88:                                               ; preds = %83\n  %89 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %90 = sub nsw i32 0, %89\n  br label %30\n\n91:                                               ; preds = %88\n  %92 = phi i32 [ %90, %88 ], [ %93, %91 ]\n  %93 = add nuw nsw i32 %94, 1\n  %94 = add nuw nsw i32 %93, 1\n  %95 = icmp eq i32 %94, %2\n  br i1 %95, label %96, label %91, !llvm.loop !18\n\n96:                                               ; preds = %91\n  %97 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %98 = sub nsw i32 0, %97\n  br label %30\n\n109:                                              ; preds = %96\n  %100 = phi i32 [ %98, %96 ], [ %101, %", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mirror_info = type { ptr, ptr }\n%struct.mirror_set = type { ptr, i32, i32, ptr, ptr }\n\n@.str = private unnamed_addr constant [7 x i8] c\"%llu%c\\00\", align 1\n@.str.1 = private unnamed_addr constant [15 x i8] c\"Invalid offset\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [22 x i8] c\"Device lookup failure\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_mirror], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @get_mirror(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3) #0 {\n  %5 = alloca ptr, align 8\n  %6 = alloca i8, align 1\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #4\n  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #4\n  %7 = getelementptr inbounds %struct.mirror_info, ptr %3, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !5\n  %9 = call i32 @sscanf(ptr noundef %8, ptr noundef nonnull @.str, ptr noundef nonnull %5, ptr noundef nonnull %6)\n  %10 = icmp eq i32 %9, 1\n  br i1 %10, label %14, label %11\n\n11:                                               ; preds = %4\n  store ptr @.str.1, ptr %1, align 8, !tbaa !10\n  %12 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %13 = sub nsw i32 0, %12\n  br label %30\n\n14:                                               ; preds = %4\n  %15 = load ptr, ptr %3, align 8, !tbaa !10\n  %16 = getelementptr inbounds %struct.mirror_set, ptr %1, i64 0, i32 1\n  %17 = load i32, ptr %16, align 8, !tbaa !13\n  %18 = call i32 @dm_table_get_mode(i32 noundef %17) #4\n  %19 = load ptr, ptr %0, align 8, !tbaa !14\n  %20 = zext i32 %2 to i64\n  %21 = getelementptr inbounds %struct.mirror_set, ptr %19, i64 %20, i32 4\n  %22 = call i32 @dm_get_device(ptr noundef nonnull %1, ptr noundef %15, i32 noundef %18, ptr noundef nonnull %21) #4\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %14\n  store ptr @.str.2, ptr %1, align 8, !tbaa !10\n  %25 = sub nsw i32 0, %22\n  br label %30\n\n27:                                               ; preds = %14\n  %28 = load ptr, ptr %0, align 8, !tbaa !14\n  %29 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20, i32 3\n  store ptr %0, ptr %29, align 8, !tbaa !16\n  %30 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20, i32 2\n  %31 = call i32 @atomic_set(ptr noundef nonnull %30, i32 noundef 0) #4\n  %32 = load ptr, ptr %0, align 8, !tbaa !14\n  %33 = getelementptr inbounds %struct.mirror_set, ptr %32, i64 %20, i32 1\n  store ptr null, ptr %33, align 8, !tbaa !17\n  %34 = load ptr, ptr %5, align 8, !tbaa !18\n  store ptr %34, ptr %32, align 8, !tbaa !19\n  br label %30\n\n35:                                               ; preds = %30\n  %36 = phi i32 [ %22, %24 ], [ %25, %27 ]\n  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #4\n  ret i32 %36\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @dm_table_get_mode(i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @dm_get_device(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @atomic_set(ptr noundef, i32 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"mirror_info\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!14, !12, i64 8}\n!14 = !{!\"mirror_set\", !7, i64 0, !12, i64 8, !12, i64 12, !7, i64 16, !7, i64 24}\n!15 = !{!16, !7, i64 24}\n!16 = !{!14, !7, i64 24}\n!17 = !{!14, !7, i64 8}\n!18 = !{!7, !7, i64 0}\n!19 = !{!14, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mirror_info = type { ptr, ptr }\n%struct.mirror_set = type { ptr, i32, i32, ptr, ptr }\n\n@.str = private unnamed_addr constant [7 x i8] c\"%llu%c\\00\", align 1\n@.str.1 = private unnamed_addr constant [15 x i8] c\"Invalid offset\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [22 x i8] c\"Device lookup failure\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_mirror], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @get_mirror(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3) #0 {\n  %5 = alloca ptr, align 8\n  %6 = alloca i8, align 1\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #4\n  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #4\n  %7 = getelementptr inbounds %struct.mirror_info, ptr %3, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !5\n  %9 = call i32 @sscanf(ptr noundef %8, ptr noundef nonnull @.str, ptr noundef nonnull %5, ptr noundef nonnull %6)\n  %10 = icmp eq i32 %9, 1\n  br i1 %10, label %14, label %11\n\n11:                                               ; preds = %4\n  store ptr @.str.1, ptr %1, align 8, !tbaa !10\n  %12 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %13 = sub nsw i32 0, %12\n  br label %30\n\n14:                                               ; preds = %4\n  %15 = load ptr, ptr %3, align 8, !tbaa !10\n  %16 = getelementptr inbounds %struct.mirror_set, ptr %1, i64 0, i32 1\n  %17 = load i32, ptr %16, align 8, !tbaa !13\n  %18 = call i32 @dm_table_get_mode(i32 noundef %17) #4\n  %19 = load ptr, ptr %0, align 8, !tbaa !14\n  %20 = zext i32 %2 to i64\n  %21 = getelementptr inbounds %struct.mirror_set, ptr %19, i64 %20, i32 4\n  %22 = call i32 @dm_get_device(ptr noundef nonnull %1, ptr noundef %15, i32 noundef %18, ptr noundef nonnull %21) #4\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %14\n  store ptr @.str.2, ptr %1, align 8, !tbaa !10\n  %25 = sub nsw i32 0, %22\n  br label %30\n\n27:                                               ; preds = %14\n  %28 = load ptr, ptr %0, align 8, !tbaa !14\n  %29 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20, i32 3\n  store ptr %0, ptr %29, align 8, !tbaa !16\n  %30 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20, i32 2\n  %31 = call i32 @atomic_set(ptr noundef nonnull %30, i32 noundef 0) #4\n  %32 = load ptr, ptr %0, align 8, !tbaa !14\n  %33 = getelementptr inbounds %struct.mirror_set, ptr %32, i64 %20, i32 1\n  store ptr null, ptr %33, align 8, !tbaa !17\n  %34 = load ptr, ptr %5, align 8, !tbaa !18\n  store ptr %34, ptr %32, align 8, !tbaa !19\n  br label %30\n\n35:                                               ; preds = %30\n  %36 = phi i32 [ %22, %24 ], [ %25, %27 ]\n  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #4\n  ret i32 %36\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @dm_table_get_mode(i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @dm_get_device(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @atomic_set(ptr noundef, i32 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"mirror_info\", !7, i64 0, !7, i64 8}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!14, !12, i64 8}\n!14 = !{!\"mirror_set\", !7, i64 0, !12, i64 8, !12, i64 12, !7, i64 16, !7, i64 24}\n!15 = !{!16, !7, i64 24}\n!16 = !{!14, !7, i64 24}\n!17 = !{!14, !7, i64 8}\n!18 = !{!7, !7, i64 0}\n!19 = !{!14, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mirror_info = type { i64, ptr }\n%struct.mirror_set = type { ptr, i32, i32, ptr, ptr }\n\n@.str = private unnamed_addr constant [7 x i8] c\"%llu%c\\00\", align 1\n@.str.1 = private unnamed_addr constant [15 x i8] c\"Invalid offset\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [22 x i8] c\"Device lookup failure\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_mirror], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @get_mirror(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3) #0 {\n  %5 = alloca i64, align 8\n  %6 = alloca i8, align 1\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #3\n  %7 = getelementptr inbounds %struct.mirror_info, ptr %3, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !5\n  %9 = call i32 @sscanf(ptr noundef %8, ptr noundef nonnull @.str, ptr noundef nonnull %5, ptr noundef nonnull %6) #3\n  %10 = icmp eq i32 %9, 1\n  br i1 %10, label %14, label %11\n\n11:                                               ; preds = %4\n  store ptr @.str.1, ptr %1, align 8, !tbaa !11\n  %12 = load i32, ptr @EINVAL, align 4, !tbaa !13\n  %13 = sub nsw i32 0, %12\n  br label %30\n\n14:                                               ; preds = %4\n  %15 = load i64, ptr %3, align 8, !tbaa !14\n  %16 = getelementptr inbounds %struct.mirror_set, ptr %0, i64 0, i32 1\n  %17 = load i32, ptr %16, align 8, !tbaa !15\n  %18 = call i32 @dm_table_get_mode(i32 noundef %17) #3\n  %19 = load ptr, ptr %0, align 8, !tbaa !17\n  %20 = zext i32 %2 to i64\n  %21 = getelementptr inbounds %struct.mirror_set, ptr %19, i64 %20, i32 4\n  %22 = call i32 @dm_get_device(ptr noundef nonnull %1, i64 noundef %15, i32 noundef %18, ptr noundef nonnull %21) #3\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %14\n  store ptr @.str.2, ptr %1, align 8, !tbaa !11\n  %25 = sub nsw i32 0, %22\n  br label %30\n\n27:                                               ; preds = %14\n  %28 = load ptr, ptr %0, align 8, !tbaa !17\n  %29 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20\n  store ptr %0, ptr %29, align 8, !tbaa !17\n  %30 = getelementptr inbounds %struct.mirror_set, ptr %28, i64 %20, i32 2\n  %31 = call i32 @atomic_set(ptr noundef nonnull %30, i32 noundef 0) #3\n  %32 = load ptr, ptr %0, align 8, !tbaa !17\n  %33 = getelementptr inbounds %struct.mirror_set, ptr %32, i64 %20, i32 3\n  store ptr null, ptr %33, align 8, !tbaa !18\n  %34 = load i64, ptr %5, align 8, !tbaa !19\n  store i64 %34, ptr %32, align 8, !tbaa !17\n  br label %30\n\n35:                                               ; preds = %30\n  %36 = phi i32 [ %22, %24 ], [ %25, %27 ]\n  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #3\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #3\n  ret i32 %36\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sscanf(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @dm_table_get_mode(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @dm_get_device(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @atomic_set(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"mirror_info\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"mirror_set\", !10, i64 0, !13, i64 8, !13, i64 12, !10, i64 16, !10, i64 24}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!6, !7, i64 0}\n!15 = !{!12, !13, i64 8}\n!16 = !{!17, !10, i64 0}\n!17 = !{!12, !10, i64 0}\n!18 = !{!12, !10, i64 16}\n!19 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/md/extr_dm-raid1.c_get_mirror.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dm_target = type { ptr, i32 }\n%struct.TYPE_2__ = type { i64, i64, i32, ptr, i32 }\n\n@.str = private unnamed_addr constant [7 x i8] c\"%llu%c\\00\", align 1\n@.str.1 = private unnamed_addr constant [15 x i8] c\"Invalid offset\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [22 x i8] c\"Device lookup failure\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_mirror], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @get_mirror(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readonly %3) #0 {\n  %5 = alloca i64, align 8\n  %6 = alloca i8, align 1\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #4\n  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %6) #4\n  %7 = getelementptr inbounds ptr, ptr %3, i64 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !5\n  %9 = call i32 @sscanf(ptr noundef %8, ptr noundef nonnull @.str, ptr noundef nonnull %5, ptr noundef nonnull %6)\n  %10 = icmp eq i32 %9, 1\n  br i1 %10, label %14, label %11\n\n11:                                               ; preds = %4\n  store ptr @.str.1, ptr %1, align 8, !tbaa !9\n  %12 = load i32, ptr @EINVAL, align 4, !tbaa !12\n  %13 = sub nsw i32 0, %12\n  br label %34\n\n14:                                               ; preds = %4\n  %15 = load ptr, ptr %3, align 8, !tbaa !5\n  %16 = getelementptr inbounds %struct.dm_target, ptr %1, i64 0, i32 1\n  %17 = load i32, ptr %16, align 8, !tbaa !13\n  %18 = call i32 @dm_table_get_mode(i32 noundef %17) #4\n  %19 = load ptr, ptr %0, align 8, !tbaa !14\n  %20 = zext i32 %2 to i64\n  %21 = getelementptr inbounds %struct.TYPE_2__, ptr %19, i64 %20, i32 4\n  %22 = call i32 @dm_get_device(ptr noundef %1, ptr noundef %15, i32 noundef %18, ptr noundef nonnull %21) #4\n  %23 = icmp eq i32 %22, 0\n  br i1 %23, label %25, label %24\n\n24:                                               ; preds = %14\n  store ptr @.str.2, ptr %1, align 8, !tbaa !9\n  br label %34\n\n25:                                               ; preds = %14\n  %26 = load ptr, ptr %0, align 8, !tbaa !14\n  %27 = getelementptr inbounds %struct.TYPE_2__, ptr %26, i64 %20, i32 3\n  store ptr %0, ptr %27, align 8, !tbaa !16\n  %28 = getelementptr inbounds %struct.TYPE_2__, ptr %26, i64 %20, i32 2\n  %29 = call i32 @atomic_set(ptr noundef nonnull %28, i32 noundef 0) #4\n  %30 = load ptr, ptr %0, align 8, !tbaa !14\n  %31 = getelementptr inbounds %struct.TYPE_2__, ptr %30, i64 %20, i32 1\n  store i64 0, ptr %31, align 8, !tbaa !20\n  %32 = load i64, ptr %5, align 8, !tbaa !21\n  %33 = getelementptr inbounds %struct.TYPE_2__, ptr %30, i64 %20\n  store i64 %32, ptr %33, align 8, !tbaa !22\n  br label %34\n\n34:                                               ; preds = %25, %24, %11\n  %35 = phi i32 [ %13, %11 ], [ %22, %24 ], [ 0, %25 ]\n  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %6) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #4\n  ret i32 %35\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @dm_get_device(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @dm_table_get_mode(i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @atomic_set(ptr noundef, i32 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"dm_target\", !6, i64 0, !11, i64 8}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 8}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"mirror_set\", !6, i64 0}\n!16 = !{!17, !6, i64 24}\n!17 = !{!\"TYPE_2__\", !18, i64 0, !19, i64 8, !11, i64 16, !6, i64 24, !11, i64 32}\n!18 = !{!\"long long\", !7, i64 0}\n!19 = !{!\"long\", !7, i64 0}\n!20 = !{!17, !19, i64 8}\n!21 = !{!18, !18, i64 0}\n!22 = !{!17, !18, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_touptek.c_sd_init_controls.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function sd_init_controls\n\t.type\tsd_init_controls,@function\nsd_init_controls:                       # @sd_init_controls\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tleaq\t24(%rdi), %rbp\n\tmovq\t%rbp, 16(%rdi)\n\tmovq\t%rbp, %rdi\n\tmovl\t$4, %esi\n\tcallq\tv4l2_ctrl_handler_init@PLT\n\tmovl\tV4L2_CID_EXPOSURE(%rip), %edx\n\tmovl\t$350, (%rsp)                    # imm = 0x15E\n\txorl\t%r14d, %r14d\n\tmovl\t$sd_ctrl_ops, %esi\n\tmovq\t%rbp, %rdi\n\txorl\t%ecx, %ecx\n\tmovl\t$800, %r8d                      # imm = 0x320\n\tmovl\t$1, %r9d\n\tcallq\tv4l2_ctrl_new_std@PLT\n\tmovq\t%rax, 8(%rbx)\n\tmovl\tV4L2_CID_GAIN(%rip), %edx\n\tmovl\t$128, (%rsp)\n\tmovl\t$sd_ctrl_ops, %esi\n\tmovq\t%rbp, %rdi\n\txorl\t%ecx, %ecx\n\tmovl\t$511, %r8d                      # imm = 0x1FF\n\tmovl\t$1, %r9d\n\tcallq\tv4l2_ctrl_new_std@PLT\n\tmovq\t%rax, (%rbx)\n\tmovl\tV4L2_CID_BLUE_BALANCE(%rip), %edx\n\tmovl\t$80, (%rsp)\n\tmovl\t$sd_ctrl_ops, %esi\n\tmovq\t%rbp, %rdi\n\txorl\t%ecx, %ecx\n\tmovl\t$1023, %r8d                     # imm = 0x3FF\n\tmovl\t$1, %r9d\n\tcallq\tv4l2_ctrl_new_std@PLT\n\tmovq\t%rax, 8(%rbx)\n\tmovl\tV4L2_CID_RED_BALANCE(%rip), %edx\n\tmovl\t$295, (%rsp)                    # imm = 0x127\n\tmovl\t$sd_ctrl_ops, %esi\n\tmovq\t%rbp, %rdi\n\txorl\t%ecx, %ecx\n\tmovl\t$1023, %r8d                     # imm = 0x3FF\n\tmovl\t$1, %r9d\n\tcallq\tv4l2_ctrl_new_std@PLT\n\tmovq\t%rax, (%rbx)\n\tcmpl\t$0, 24(%rbx)\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\t$.L.str, %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tgspca_err@PLT\n\tmovl\t24(%rbx), %r14d\n.LBB0_2:\n\tmovl\t%r14d, %eax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tsd_init_controls, .Lfunc_end0-sd_init_controls\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tsd_ctrl_ops,@object             # @sd_ctrl_ops\n\t.bss\n\t.globl\tsd_ctrl_ops\n\t.p2align\t2\nsd_ctrl_ops:\n\t.long\t0                               # 0x0\n\t.size\tsd_ctrl_ops, 4\n\n\t.type\tV4L2_CID_EXPOSURE,@object       # @V4L2_CID_EXPOSURE\n\t.globl\tV4L2_CID_EXPOSURE\n\t.p2align\t2\nV4L2_CID_EXPOSURE:\n\t.long\t0                               # 0x0\n\t.size\tV4L2_CID_EXPOSURE, 4\n\n\t.type\tV4L2_CID_GAIN,@object           # @V4L2_CID_GAIN\n\t.globl\tV4L2_CID_GAIN\n\t.p2align\t2\nV4L2_CID_GAIN:\n\t.long\t0                               # 0x0\n\t.size\tV4L2_CID_GAIN, 4\n\n\t.type\tV4L2_CID_BLUE_BALANCE,@object   # @V4L2_CID_BLUE_BALANCE\n\t.globl\tV4L2_CID_BLUE_BALANCE\n\t.p2align\t2\nV4L2_CID_BLUE_BALANCE:\n\t.long\t0                               # 0x0\n\t.size\tV4L2_CID_BLUE_BALANCE, 4\n\n\t.type\tV4L2_CID_RED_BALANCE,@object    # @V4L2_CID_RED_BALANCE\n\t.globl\tV4L2_CID_RED_BALANCE\n\t.p2align\t2\nV4L2_CID_RED_BALANCE:\n\t.long\t0                               # 0x0\n\t.size\tV4L2_CID_RED_BALANCE, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Could not initialize controls\\n\"\n\t.size\t.L.str, 31\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.gspca_dev = type { ptr, ptr, ptr, i32 }\n\n@sd_ctrl_ops = dso_local global i32 0, align 4\n@V4L2_CID_EXPOSURE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_GAIN = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_BLUE_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_RED_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"Could not initialize controls\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sd_init_controls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sd_init_controls(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 3\n  %3 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 2\n  store ptr %2, ptr %3, align 8, !tbaa !5\n  %4 = tail call i32 @v4l2_ctrl_handler_init(ptr noundef nonnull %2, i32 noundef 4) #2\n  %5 = load i32, ptr @V4L2_CID_EXPOSURE, align 4, !tbaa !11\n  %6 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %5, i32 noundef 0, i32 noundef 800, i32 noundef 1, i32 noundef 350) #2\n  %7 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 1\n  store ptr %6, ptr %7, align 8, !tbaa !12\n  %8 = load i32, ptr @V4L2_CID_GAIN, align 4, !tbaa !11\n  %9 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %8, i32 noundef 0, i32 noundef 511, i32 noundef 1, i32 noundef 128) #2\n  store ptr %9, ptr %0, align 8, !tbaa !13\n  %10 = load i32, ptr @V4L2_CID_BLUE_BALANCE, align 4, !tbaa !11\n  %11 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %10, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 80) #2\n  store ptr %11, ptr %7, align 8, !tbaa !12\n  %12 = load i32, ptr @V4L2_CID_RED_BALANCE, align 4, !tbaa !11\n  %13 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %12, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 295) #2\n  store ptr %13, ptr %0, align 8, !tbaa !13\n  %14 = load i32, ptr %2, align 4, !tbaa !14\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %1\n  %17 = tail call i32 @gspca_err(ptr noundef nonnull %0, ptr noundef nonnull @.str) #2\n  %18 = load i32, ptr %2, align 4, !tbaa !14\n  br label %19\n\n19:                                               ; preds = %16, %1\n  %20 = phi i32 [ %18, %16 ], [ 0, %1 ]\n  ret i32 %20\n}\n\ndeclare i32 @v4l2_ctrl_handler_init(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @v4l2_ctrl_new_std(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @gspca_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"gspca_dev\", !7, i64 0, !7, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!10, !10, i64 0}\n!12 = !{!6, !7, i64 8}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"sd\", !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.gspca_dev = type { ptr, ptr, ptr, i32 }\n\n@sd_ctrl_ops = dso_local global i32 0, align 4\n@V4L2_CID_EXPOSURE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_GAIN = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_BLUE_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_RED_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"Could not initialize controls\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sd_init_controls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sd_init_controls(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 3\n  %3 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 2\n  store ptr %2, ptr %3, align 8, !tbaa !5\n  %4 = tail call i32 @v4l2_ctrl_handler_init(ptr noundef nonnull %2, i32 noundef 4) #2\n  %5 = load i32, ptr @V4L2_CID_EXPOSURE, align 4, !tbaa !11\n  %6 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %5, i32 noundef 0, i32 noundef 800, i32 noundef 1, i32 noundef 350) #2\n  %7 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 1\n  store ptr %6, ptr %7, align 8, !tbaa !12\n  %8 = load i32, ptr @V4L2_CID_GAIN, align 4, !tbaa !11\n  %9 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %8, i32 noundef 0, i32 noundef 511, i32 noundef 1, i32 noundef 128) #2\n  store ptr %9, ptr %0, align 8, !tbaa !13\n  %10 = load i32, ptr @V4L2_CID_BLUE_BALANCE, align 4, !tbaa !11\n  %11 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %10, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 80) #2\n  store ptr %11, ptr %7, align 8, !tbaa !12\n  %12 = load i32, ptr @V4L2_CID_RED_BALANCE, align 4, !tbaa !11\n  %13 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %12, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 295) #2\n  store ptr %13, ptr %0, align 8, !tbaa !13\n  %14 = load i32, ptr %2, align 8, !tbaa !14\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %1\n  %17 = tail call i32 @gspca_err(ptr noundef nonnull %0, ptr noundef nonnull @.str) #2\n  %18 = load i32, ptr %2, align 8, !tbaa !14\n  br label %19\n\n19:                                               ; preds = %16, %1\n  %20 = phi i32 [ %18, %16 ], [ 0, %1 ]\n  ret i32 %20\n}\n\ndeclare i32 @v4l2_ctrl_handler_init(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @v4l2_ctrl_new_std(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @gspca_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"gspca_dev\", !7, i64 0, !7, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!10, !10, i64 0}\n!12 = !{!6, !7, i64 8}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !10, i64 24}\n!15 = !{!\"sd\", !16, i64 0}\n!16 = !{!\"TYPE_2__\", !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.gspca_dev = type { ptr, ptr, ptr, i32 }\n\n@sd_ctrl_ops = dso_local global i32 0, align 4\n@V4L2_CID_EXPOSURE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_GAIN = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_BLUE_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_RED_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"Could not initialize controls\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sd_init_controls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sd_init_controls(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 3\n  %3 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 2\n  store ptr %2, ptr %3, align 8, !tbaa !5\n  %4 = tail call i32 @v4l2_ctrl_handler_init(ptr noundef nonnull %2, i32 noundef 4) #2\n  %5 = load i32, ptr @V4L2_CID_EXPOSURE, align 4, !tbaa !11\n  %6 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %5, i32 noundef 0, i32 noundef 800, i32 noundef 1, i32 noundef 350) #2\n  %7 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 1\n  store ptr %6, ptr %7, align 8, !tbaa !12\n  %8 = load i32, ptr @V4L2_CID_GAIN, align 4, !tbaa !11\n  %9 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %8, i32 noundef 0, i32 noundef 511, i32 noundef 1, i32 noundef 128) #2\n  store ptr %9, ptr %0, align 8, !tbaa !13\n  %10 = load i32, ptr @V4L2_CID_BLUE_BALANCE, align 4, !tbaa !11\n  %11 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %10, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 80) #2\n  store ptr %11, ptr %7, align 8, !tbaa !12\n  %12 = load i32, ptr @V4L2_CID_RED_BALANCE, align 4, !tbaa !11\n  %13 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %12, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 295) #2\n  store ptr %13, ptr %0, align 8, !tbaa !13\n  %14 = load i32, ptr %2, align 4, !tbaa !14\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %1\n  %17 = tail call i32 @gspca_err(ptr noundef nonnull %0, ptr noundef nonnull @.str) #2\n  %18 = load i32, ptr %2, align 4, !tbaa !14\n  br label %19\n\n19:                                               ; preds = %16, %1\n  %20 = phi i32 [ %18, %16 ], [ 0, %1 ]\n  ret i32 %20\n}\n\ndeclare i32 @v4l2_ctrl_handler_init(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @v4l2_ctrl_new_std(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @gspca_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"gspca_dev\", !7, i64 0, !7, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!10, !10, i64 0}\n!12 = !{!6, !7, i64 8}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"sd\", !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.gspca_dev = type { ptr, ptr, ptr, i32 }\n\n@sd_ctrl_ops = dso_local global i32 0, align 4\n@V4L2_CID_EXPOSURE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_GAIN = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_BLUE_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_RED_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"Could not initialize controls\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sd_init_controls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sd_init_controls(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 3\n  %3 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 2\n  store ptr %2, ptr %3, align 8, !tbaa !5\n  %4 = tail call i32 @v4l2_ctrl_handler_init(ptr noundef nonnull %2, i32 noundef 4) #2\n  %5 = load i32, ptr @V4L2_CID_EXPOSURE, align 4, !tbaa !11\n  %6 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %5, i32 noundef 0, i32 noundef 800, i32 noundef 1, i32 noundef 350) #2\n  %7 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 1\n  store ptr %6, ptr %7, align 8, !tbaa !12\n  %8 = load i32, ptr @V4L2_CID_GAIN, align 4, !tbaa !11\n  %9 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %8, i32 noundef 0, i32 noundef 511, i32 noundef 1, i32 noundef 128) #2\n  store ptr %9, ptr %0, align 8, !tbaa !13\n  %10 = load i32, ptr @V4L2_CID_BLUE_BALANCE, align 4, !tbaa !11\n  %11 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %10, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 80) #2\n  store ptr %11, ptr %7, align 8, !tbaa !12\n  %12 = load i32, ptr @V4L2_CID_RED_BALANCE, align 4, !tbaa !11\n  %13 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %12, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 295) #2\n  store ptr %13, ptr %0, align 8, !tbaa !13\n  %14 = load i32, ptr %2, align 4, !tbaa !14\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %1\n  %17 = tail call i32 @gspca_err(ptr noundef nonnull %0, ptr noundef nonnull @.str) #2\n  %18 = load i32, ptr %2, align 4, !tbaa !14\n  br label %19\n\n19:                                               ; preds = %16, %1\n  %20 = phi i32 [ %18, %16 ], [ 0, %1 ]\n  ret i32 %20\n}\n\ndeclare i32 @v4l2_ctrl_handler_init(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @v4l2_ctrl_new_std(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @gspca_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"gspca_dev\", !7, i64 0, !7, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!10, !10, i64 0}\n!12 = !{!6, !7, i64 8}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"sd\", !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/media/usb/gspca/extr_touptek.c_sd_init_controls.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.gspca_dev = type { ptr, ptr, %struct.TYPE_2__, %struct.v4l2_ctrl_handler }\n%struct.TYPE_2__ = type { ptr }\n%struct.v4l2_ctrl_handler = type { i32 }\n\n@sd_ctrl_ops = dso_local global i32 0, align 4\n@V4L2_CID_EXPOSURE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_GAIN = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_BLUE_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@V4L2_CID_RED_BALANCE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"Could not initialize controls\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sd_init_controls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sd_init_controls(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 3\n  %3 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 2\n  store ptr %2, ptr %3, align 8, !tbaa !5\n  %4 = tail call i32 @v4l2_ctrl_handler_init(ptr noundef nonnull %2, i32 noundef 4) #2\n  %5 = load i32, ptr @V4L2_CID_EXPOSURE, align 4, !tbaa !13\n  %6 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %5, i32 noundef 0, i32 noundef 800, i32 noundef 1, i32 noundef 350) #2\n  %7 = getelementptr inbounds %struct.gspca_dev, ptr %0, i64 0, i32 1\n  store ptr %6, ptr %7, align 8, !tbaa !14\n  %8 = load i32, ptr @V4L2_CID_GAIN, align 4, !tbaa !13\n  %9 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %8, i32 noundef 0, i32 noundef 511, i32 noundef 1, i32 noundef 128) #2\n  store ptr %9, ptr %0, align 8, !tbaa !15\n  %10 = load i32, ptr @V4L2_CID_BLUE_BALANCE, align 4, !tbaa !13\n  %11 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %10, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 80) #2\n  store ptr %11, ptr %7, align 8, !tbaa !16\n  %12 = load i32, ptr @V4L2_CID_RED_BALANCE, align 4, !tbaa !13\n  %13 = tail call ptr @v4l2_ctrl_new_std(ptr noundef nonnull %2, ptr noundef nonnull @sd_ctrl_ops, i32 noundef %12, i32 noundef 0, i32 noundef 1023, i32 noundef 1, i32 noundef 295) #2\n  store ptr %13, ptr %0, align 8, !tbaa !18\n  %14 = load i32, ptr %2, align 4, !tbaa !19\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %1\n  %17 = tail call i32 @gspca_err(ptr noundef nonnull %0, ptr noundef nonnull @.str) #2\n  %18 = load i32, ptr %2, align 4, !tbaa !19\n  br label %19\n\n19:                                               ; preds = %1, %16\n  %20 = phi i32 [ %18, %16 ], [ 0, %1 ]\n  ret i32 %20\n}\n\ndeclare i32 @v4l2_ctrl_handler_init(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @v4l2_ctrl_new_std(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @gspca_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"gspca_dev\", !7, i64 0, !7, i64 8, !10, i64 16, !11, i64 24}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_2__\", !7, i64 0}\n!11 = !{!\"v4l2_ctrl_handler\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!6, !7, i64 8}\n!15 = !{!6, !7, i64 0}\n!16 = !{!17, !7, i64 8}\n!17 = !{!\"sd\", !7, i64 0, !7, i64 8}\n!18 = !{!17, !7, i64 0}\n!19 = !{!11, !12, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_geom_io.c_g_clone_bio.ll\"\n\t.globl\tg_clone_bio                     # -- Begin function g_clone_bio\n\t.p2align\t4, 0x90\n\t.type\tg_clone_bio,@function\ng_clone_bio:                            # @g_clone_bio\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rdi, %rbx\n\tmovl\tbiozone(%rip), %edi\n\tmovl\tM_ZERO(%rip), %esi\n\torl\tM_NOWAIT(%rip), %esi\n\tcallq\tuma_zalloc@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.1:\n\tmovq\t%rbx, 64(%rax)\n\tmovq\t(%rbx), %rcx\n\tmovq\t%rcx, (%rax)\n\tmovl\tBIO_UNMAPPED(%rip), %ecx\n\torl\tBIO_ORDERED(%rip), %ecx\n\torl\tBIO_VLIST(%rip), %ecx\n\tandl\t8(%rbx), %ecx\n\tmovl\t%ecx, 8(%rax)\n\tmovl\t56(%rbx), %ecx\n\tmovl\t%ecx, 56(%rax)\n\tmovq\t48(%rbx), %rcx\n\tmovq\t%rcx, 48(%rax)\n\tmovups\t32(%rbx), %xmm0\n\tmovups\t%xmm0, 32(%rax)\n\tmovq\t(%rbx), %rcx\n\tcmpq\tBIO_ZONE(%rip), %rcx\n\tjne\t.LBB0_3\n# %bb.2:\n\tmovl\t28(%rbx), %ecx\n\tmovl\t%ecx, 28(%rax)\n.LBB0_3:\n\tmovq\t20(%rbx), %rcx\n\tmovq\t%rcx, 20(%rax)\n\tincl\t12(%rbx)\n.LBB0_4:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tg_clone_bio, .Lfunc_end0-g_clone_bio\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tbiozone,@object                 # @biozone\n\t.bss\n\t.globl\tbiozone\n\t.p2align\t2\nbiozone:\n\t.long\t0                               # 0x0\n\t.size\tbiozone, 4\n\n\t.type\tM_NOWAIT,@object                # @M_NOWAIT\n\t.globl\tM_NOWAIT\n\t.p2align\t2\nM_NOWAIT:\n\t.long\t0                               # 0x0\n\t.size\tM_NOWAIT, 4\n\n\t.type\tM_ZERO,@object                  # @M_ZERO\n\t.globl\tM_ZERO\n\t.p2align\t2\nM_ZERO:\n\t.long\t0                               # 0x0\n\t.size\tM_ZERO, 4\n\n\t.type\tBIO_ORDERED,@object             # @BIO_ORDERED\n\t.globl\tBIO_ORDERED\n\t.p2align\t2\nBIO_ORDERED:\n\t.long\t0                               # 0x0\n\t.size\tBIO_ORDERED, 4\n\n\t.type\tBIO_UNMAPPED,@object            # @BIO_UNMAPPED\n\t.globl\tBIO_UNMAPPED\n\t.p2align\t2\nBIO_UNMAPPED:\n\t.long\t0                               # 0x0\n\t.size\tBIO_UNMAPPED, 4\n\n\t.type\tBIO_VLIST,@object               # @BIO_VLIST\n\t.globl\tBIO_VLIST\n\t.p2align\t2\nBIO_VLIST:\n\t.long\t0                               # 0x0\n\t.size\tBIO_VLIST, 4\n\n\t.type\tBIO_ZONE,@object                # @BIO_ZONE\n\t.globl\tBIO_ZONE\n\t.p2align\t3\nBIO_ZONE:\n\t.quad\t0                               # 0x0\n\t.size\tBIO_ZONE, 8\n\n\t.type\tKTR_COMPILE,@object             # @KTR_COMPILE\n\t.globl\tKTR_COMPILE\n\t.p2align\t2\nKTR_COMPILE:\n\t.long\t0                               # 0x0\n\t.size\tKTR_COMPILE, 4\n\n\t.type\tKTR_GEOM,@object                # @KTR_GEOM\n\t.globl\tKTR_GEOM\n\t.p2align\t2\nKTR_GEOM:\n\t.long\t0                               # 0x0\n\t.size\tKTR_GEOM, 4\n\n\t.type\tktr_mask,@object                # @ktr_mask\n\t.globl\tktr_mask\n\t.p2align\t2\nktr_mask:\n\t.long\t0                               # 0x0\n\t.size\tktr_mask, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.bio = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32,", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.bio = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32,", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.bio = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32,", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.bio = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32,"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/geom/extr_geom_io.c_g_clone_bio.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.bio = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }\n\n@biozone = dso_local local_unnamed_addr global i32 0, align 4\n@M_NOWAIT = dso_local local_unnamed_addr global i32 0, align 4\n@M_ZERO = dso_local local_unnamed_addr global i32 0, align 4\n@BIO_ORDERED = dso_local local_unnamed_addr global i32 0, align 4\n@BIO_UNMAPPED = dso_local local_unnamed_addr global i32 0, align 4\n@BIO_VLIST = dso_local local_unnamed_addr global i32 0, align 4\n@BIO_ZONE = dso_local local_unnamed_addr global i64 0, align 8\n@KTR_COMPILE = dso_local local_unnamed_addr global i32 0, align 4\n@KTR_GEOM = dso_local local_unnamed_addr global i32 0, align 4\n@ktr_mask = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @g_clone_bio(ptr noundef %0) local_unnamed_addr #0 {\n  %2 = load i32, ptr @biozone, align 4, !tbaa !5\n  %3 = load i32, ptr @M_NOWAIT, align 4, !tbaa !5\n  %4 = load i32, ptr @M_ZERO, align 4, !tbaa !5\n  %5 = or i32 %4, %3\n  %6 = tail call ptr @uma_zalloc(i32 noundef %2, i32 noundef %5) #2\n  %7 = icmp eq ptr %6, null\n  br i1 %7, label %43, label %8\n\n8:                                                ; preds = %1\n  %9 = getelementptr inbounds %struct.bio, ptr %6, i64 0, i32 14\n  store ptr %0, ptr %9, align 8, !tbaa !9\n  %10 = load i64, ptr %0, align 8, !tbaa !13\n  store i64 %10, ptr %6, align 8, !tbaa !13\n  %11 = getelementptr inbounds %struct.bio, ptr %0, i64 0, i32 1\n  %12 = load i32, ptr %11, align 8, !tbaa !14\n  %13 = load i32, ptr @BIO_ORDERED, align 4, !tbaa !5\n  %14 = load i32, ptr @BIO_UNMAPPED, align 4, !tbaa !5\n  %15 = or i32 %14, %13\n  %16 = load i32, ptr @BIO_VLIST, align 4, !tbaa !5\n  %17 = or i32 %15, %16\n  %18 = and i32 %17, %12\n  %19 = getelementptr inbounds %struct.bio, ptr %6, i64 0, i32 1\n  store i32 %18, ptr %19, align 8, !tbaa !14\n  %20 = getelementptr inbounds %struct.bio, ptr %0, i64 0, i32 13\n  %21 = load i32, ptr %20, align 8, !tbaa !15\n  %22 = getelementptr inbounds %struct.bio, ptr %6, i64 0, i32 13\n  store i32 %21, ptr %22, align 8, !tbaa !15\n  %23 = getelementptr inbounds %struct.bio, ptr %0, i64 0, i32 11\n  %24 = getelementptr inbounds %struct.bio, ptr %6, i64 0, i32 11\n  %25 = load <2 x i32>, ptr %23, align 8, !tbaa !5\n  store <2 x i32> %25, ptr %24, align 8, !tbaa !5\n  %26 = getelementptr inbounds %struct.bio, ptr %0, i64 0, i32 7\n  %27 = getelementptr inbounds %struct.bio, ptr %6, i64 0, i32 7\n  %28 = load <4 x i32>, ptr %26, align 8, !tbaa !5\n  store <4 x i32> %28, ptr %27, align 8, !tbaa !5\n  %29 = load i64, ptr %0, align 8, !tbaa !13\n  %30 = load i64, ptr @BIO_ZONE, align 8, !tbaa !16\n  %31 = icmp eq i64 %29, %30\n  br i1 %31, label %32, label %36\n\n32:                                               ; preds = %8\n  %33 = getelementptr inbounds %struct.bio, ptr %0, i64 0, i32 6\n  %34 = getelementptr inbounds %struct.bio, ptr %6, i64 0, i32 6\n  %35 = load i32, ptr %33, align 1\n  store i32 %35, ptr %34, align 1\n  br label %36\n\n36:                                               ; preds = %32, %8\n  %37 = getelementptr inbounds %struct.bio, ptr %0, i64 0, i32 4\n  %38 = getelementptr inbounds %struct.bio, ptr %6, i64 0, i32 4\n  %39 = load <2 x i32>, ptr %37, align 4, !tbaa !5\n  store <2 x i32> %39, ptr %38, align 4, !tbaa !5\n  %40 = getelementptr inbounds %struct.bio, ptr %0, i64 0, i32 2\n  %41 = load i32, ptr %40, align 4, !tbaa !17\n  %42 = add nsw i32 %41, 1\n  store i32 %42, ptr %40, align 4, !tbaa !17\n  br label %43\n\n43:                                               ; preds = %36, %1\n  ret ptr %6\n}\n\ndeclare ptr @uma_zalloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !12, i64 64}\n!10 = !{!\"bio\", !11, i64 0, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !6, i64 40, !6, i64 44, !6, i64 48, !6, i64 52, !6, i64 56, !12, i64 64}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n!13 = !{!10, !11, i64 0}\n!14 = !{!10, !6, i64 8}\n!15 = !{!10, !6, i64 56}\n!16 = !{!11, !11, i64 0}\n!17 = !{!10, !6, i64 12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_command.c_DownCommand.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function DownCommand\n\t.type\tDownCommand,@function\nDownCommand:                            # @DownCommand\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tmovl\t(%rdi), %ecx\n\tmovslq\t4(%rdi), %rax\n\tcmpl\t%eax, %ecx\n\tjne\t.LBB0_3\n# %bb.1:\n\tmovq\t16(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_7\n# %bb.2:\n\tmovl\tCLOSE_STAYDOWN(%rip), %esi\n\tcallq\tdatalink_Down@PLT\n\tjmp\t.LBB0_12\n.LBB0_3:\n\tleal\t1(%rax), %edx\n\tmovl\t$-1, %ebp\n\tcmpl\t%edx, %ecx\n\tjne\t.LBB0_13\n# %bb.4:\n\tmovq\t24(%rbx), %rcx\n\tmovl\t(%rcx,%rax,4), %edi\n\tmovl\t$.L.str, %esi\n\tcallq\tstrcasecmp@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_8\n# %bb.5:\n\tmovq\t24(%rbx), %rax\n\tmovslq\t4(%rbx), %rcx\n\tmovl\t(%rax,%rcx,4), %edi\n\tmovl\t$.L.str.1, %esi\n\tcallq\tstrcasecmp@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_13\n# %bb.6:\n\tmovq\t16(%rbx), %rax\n\taddq\t$8, %rbx\n\ttestq\t%rax, %rax\n\tcmovneq\t%rax, %rbx\n\tmovq\t(%rbx), %rdi\n\tcallq\tfsm2initial@PLT\n\tjmp\t.LBB0_12\n.LBB0_7:\n\tmovq\t8(%rbx), %rdi\n\tmovl\tCLOSE_STAYDOWN(%rip), %esi\n.LBB0_11:\n\tcallq\tbundle_Down@PLT\n\tjmp\t.LBB0_12\n.LBB0_8:\n\tmovq\t16(%rbx), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_10\n# %bb.9:\n\tmovl\tCLOSE_LCP(%rip), %esi\n\tcallq\tdatalink_Down@PLT\n.LBB0_12:\n\txorl\t%ebp, %ebp\n.LBB0_13:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_10:\n\t.cfi_def_cfa_offset 32\n\tmovq\t8(%rbx), %rdi\n\tmovl\tCLOSE_LCP(%rip), %esi\n\tjmp\t.LBB0_11\n.Lfunc_end0:\n\t.size\tDownCommand, .Lfunc_end0-DownCommand\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCLOSE_STAYDOWN,@object          # @CLOSE_STAYDOWN\n\t.bss\n\t.globl\tCLOSE_STAYDOWN\n\t.p2align\t2\nCLOSE_STAYDOWN:\n\t.long\t0                               # 0x0\n\t.size\tCLOSE_STAYDOWN, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"lcp\"\n\t.size\t.L.str, 4\n\n\t.type\tCLOSE_LCP,@object               # @CLOSE_LCP\n\t.bss\n\t.globl\tCLOSE_LCP\n\t.p2align\t2\nCLOSE_LCP:\n\t.long\t0                               # 0x0\n\t.size\tCLOSE_LCP, 4\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"ccp\"\n\t.size\t.L.str.1, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32, ptr, ptr }\n\n@CLOSE_STAYDOWN = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [4 x i8] c\"lcp\\00\", align 1\n@CLOSE_LCP = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [4 x i8] c\"ccp\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DownCommand], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @DownCommand(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i32, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  %5 = icmp eq i32 %2, %4\n  br i1 %5, label %6, label %17\n\n6:                                                ; preds = %1\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %29, label %10\n\n10:                                               ; preds = %6\n  %11 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %12 = tail call i32 @datalink_Down(ptr noundef nonnull %8, i32 noundef %11) #2\n  br label %44\n\n13:                                               ; preds = %41\n  %14 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  %15 = load ptr, ptr %14, align 8, !tbaa !12\n  %16 = tail call i32 @datalink_Down(ptr noundef %15, i32 noundef %11) #2\n  br label %44\n\n17:                                               ; preds = %1\n  %18 = add nsw i32 %4, 1\n  %19 = icmp eq i32 %2, %18\n  br i1 %19, label %20, label %44\n\n20:                                               ; preds = %17\n  %21 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  %22 = load ptr, ptr %21, align 8, !tbaa !14\n  %23 = sext i32 %4 to i64\n  %24 = getelementptr inbounds i32, ptr %22, i64 %23\n  %25 = load i32, ptr %24, align 4, !tbaa !13\n  %26 = tail call i32 @strcasecmp(i32 noundef %25, ptr noundef nonnull @.str) #2\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %41\n\n28:                                               ; preds = %20\n  br label %39\n\n29:                                               ; preds = %6\n  %30 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  %31 = load ptr, ptr %30, align 8, !tbaa !14\n  %32 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %33 = tail call i32 @bundle_Down(ptr noundef %31, i32 noundef %32) #2\n  br label %44\n\n34:                                               ; preds = %41\n  %35 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 2\n  %36 = load ptr, ptr %35, align 8, !tbaa !14\n  %37 = load i32, ptr @CLOSE_LCP, align 4, !tbaa !13\n  %38 = tail call i32 @datalink_Down(ptr noundef %36, i32 noundef %37) #2\n  br label %44\n\n39:                                               ; preds = %28\n  %40 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 3\n  br label %41\n\n41:                                               ; preds = %39, %20\n  %42 = phi ptr [ %30, %39 ], [ %21, %20 ]\n  %43 = load i32, ptr %42, align 4, !tbaa !13\n  br label %44\n\n44:                                               ; preds = %17, %41, %34, %29, %13, %10\n  %45 = phi i32 [ 0, %10 ], [ 0, %13 ], [ 0, %29 ], [ 0, %34 ], [ -1, %17 ], [ -1, %41 ]\n  ret i32 %45\n}\n\ndeclare i32 @datalink_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strcasecmp(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @bundle_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_3__\", !7, i64 0, !7, i64 4, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 16}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i32, ptr, ptr }\n\n@CLOSE_STAYDOWN = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [4 x i8] c\"lcp\\00\", align 1\n@CLOSE_LCP = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [4 x i8] c\"ccp\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DownCommand], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @DownCommand(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i32, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  %5 = icmp eq i32 %2, %4\n  br i1 %5, label %6, label %17\n\n6:                                                ; preds = %1\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %28, label %10\n\n10:                                               ; preds = %6\n  %11 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %12 = tail call i32 @datalink_Down(ptr noundef nonnull %8, i32 noundef %11) #2\n  br label %42\n\n13:                                               ; preds = %40\n  %14 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %15 = load ptr, ptr %14, align 8, !tbaa !14\n  %16 = tail call i32 @bundle_Down(ptr noundef %15, i32 noundef %17) #2\n  br label %42\n\n17:                                               ; preds = %1\n  %18 = add nsw i32 %4, 1\n  %19 = icmp eq i32 %2, %18\n  br i1 %19, label %20, label %42\n\n20:                                               ; preds = %17\n  %21 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %22 = load ptr, ptr %21, align 8, !tbaa !14\n  %23 = sext i32 %4 to i64\n  %24 = getelementptr inbounds i32, ptr %22, i64 %23\n  %25 = load i32, ptr %24, align 4, !tbaa !13\n  %26 = tail call i32 @strcasecmp(i32 noundef %25, ptr noundef nonnull @.str) #2\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %36, label %40\n\n28:                                               ; preds = %6\n  %29 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %30 = load ptr, ptr %29, align 8, !tbaa !14\n  %31 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %32 = tail call i32 @bundle_Down(ptr noundef %30, i32 noundef %31) #2\n  br label %42\n\n33:                                               ; preds = %40\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %35 = load ptr, ptr %34, align 8, !tbaa !14\n  br label %42\n\n36:                                               ; preds = %20\n  %37 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 3\n  %38 = load ptr, ptr %37, align 8, !tbaa !12\n  %39 = icmp eq ptr %38, null\n  br i1 %39, label %42, label %40\n\n40:                                               ; preds = %36, %20\n  %41 = phi ptr [ %38, %36 ], [ %22, %20 ]\n  br label %13\n\n42:                                               ; preds = %33, %36, %13, %17, %28, %10\n  %43 = phi i32 [ 0, %10 ], [ 0, %28 ], [ 0, %17 ], [ 0, %13 ], [ -1, %36 ], [ -1, %33 ]\n  ret i32 %43\n}\n\ndeclare i32 @datalink_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bundle_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strcasecmp(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 4, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 16}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i32, ptr, ptr }\n\n@CLOSE_STAYDOWN = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [4 x i8] c\"lcp\\00\", align 1\n@CLOSE_LCP = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [4 x i8] c\"ccp\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DownCommand], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @DownCommand(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i32, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  %5 = icmp eq i32 %2, %4\n  br i1 %5, label %6, label %16\n\n6:                                                ; preds = %1\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %28, label %10\n\n10:                                               ; preds = %6\n  %11 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %12 = tail call i32 @datalink_Down(ptr noundef nonnull %8, i32 noundef %11) #2\n  br label %42\n\n13:                                               ; preds = %42\n  %14 = phi i32 [ %15, %42 ], [ 0, %6 ]\n  ret i32 %14\n\n15:                                               ; preds = %42\n  br i1 %9, label %28, label %16\n\n16:                                               ; preds = %15, %1\n  %17 = add nsw i32 %4, 1\n  %18 = icmp eq i32 %2, %17\n  br i1 %18, label %19, label %42\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %21 = load ptr, ptr %20, align 8, !tbaa !14\n  %22 = sext i32 %4 to i64\n  %23 = getelementptr inbounds i32, ptr %21, i64 %22\n  %24 = load i32, ptr %23, align 4, !tbaa !13\n  %25 = tail call i32 @strcasecmp(i32 noundef %24, ptr noundef nonnull @.str) #2\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %27, label %42\n\n27:                                               ; preds = %19\n  br label %38\n\n28:                                               ; preds = %15, %6\n  %29 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %30 = load ptr, ptr %29, align 8, !tbaa !14\n  %31 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %32 = tail call i32 @bundle_Down(ptr noundef %30, i32 noundef %31) #2\n  br label %42\n\n33:                                               ; preds = %38\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %35 = load ptr, ptr %34, align 8, !tbaa !14\n  %36 = sext i32 %4 to i64\n  %37 = getelementptr inbounds i32, ptr %35, i64 %36\n  br label %42\n\n38:                                               ; preds = %27\n  %39 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 3\n  %40 = load ptr, ptr %39, align 8, !tbaa !12\n  %41 = load i32, ptr %40, align 4, !tbaa !13\n  br label %42\n\n42:                                               ; preds = %19, %38, %16, %28, %13, %10\n  %43 = phi i32 [ %14, %13 ], [ 0, %10 ], [ %14, %16 ], [ 0, %28 ], [ %14, %19 ], [ 0, %38 ]\n  ret i32 %43\n}\n\ndeclare i32 @datalink_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strcasecmp(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @bundle_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 4, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 16}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, i32, ptr, ptr }\n\n@CLOSE_STAYDOWN = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [4 x i8] c\"lcp\\00\", align 1\n@CLOSE_LCP = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [4 x i8] c\"ccp\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DownCommand], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @DownCommand(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i32, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  %5 = icmp eq i32 %2, %4\n  br i1 %5, label %6, label %16\n\n6:                                                ; preds = %1\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %28, label %10\n\n10:                                               ; preds = %6\n  %11 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %12 = tail call i32 @datalink_Down(ptr noundef nonnull %8, i32 noundef %11) #2\n  br label %42\n\n13:                                               ; preds = %42\n  %14 = phi i32 [ %15, %42 ], [ 0, %6 ]\n  ret i32 %14\n\n15:                                               ; preds = %42\n  br label %13\n\n16:                                               ; preds = %1\n  %17 = add nsw i32 %4, 1\n  %18 = icmp eq i32 %2, %17\n  br i1 %18, label %19, label %42\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %21 = load ptr, ptr %20, align 8, !tbaa !14\n  %22 = sext i32 %4 to i64\n  %23 = getelementptr inbounds i32, ptr %21, i64 %22\n  %24 = load i32, ptr %23, align 4, !tbaa !13\n  %25 = tail call i32 @strcasecmp(i32 noundef %24, ptr noundef nonnull @.str) #2\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %27, label %42\n\n27:                                               ; preds = %19\n  br label %36\n\n28:                                               ; preds = %6\n  %29 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %30 = load ptr, ptr %29, align 8, !tbaa !14\n  %31 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %32 = tail call i32 @bundle_Down(ptr noundef %30, i32 noundef %31) #2\n  br label %42\n\n33:                                               ; preds = %36\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %35 = load ptr, ptr %34, align 8, !tbaa !14\n  br label %42\n\n36:                                               ; preds = %27, %33\n  %37 = phi ptr [ %35, %33 ], [ %29, %27 ]\n  %38 = load ptr, ptr %37, align 8, !tbaa !15\n  %39 = tail call i32 @fsm2initial(ptr noundef %38) #2\n  %40 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %41 = tail call i32 @datalink_Down(ptr noundef %38, i32 noundef %40) #2\n  br label %42\n\n42:                                               ; preds = %19, %36, %16, %28, %13, %15\n  %43 = phi i32 [ %14, %13 ], [ 0, %15 ], [ 0, %28 ], [ 0, %16 ], [ 0, %36 ], [ 0, %19 ]\n  ret i32 %43\n}\n\ndeclare i32 @datalink_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strcasecmp(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @bundle_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsm2initial(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 4, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 16}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n!15 = !{!10, !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/usr.sbin/ppp/extr_command.c_DownCommand.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cmdargs = type { i32, i32, ptr, ptr, ptr }\n\n@CLOSE_STAYDOWN = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [4 x i8] c\"lcp\\00\", align 1\n@CLOSE_LCP = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [4 x i8] c\"ccp\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DownCommand], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @DownCommand(ptr nocapture noundef readonly %0) #0 {\n  %2 = load i32, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 1\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  %5 = icmp eq i32 %2, %4\n  br i1 %5, label %6, label %18\n\n6:                                                ; preds = %1\n  %7 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = icmp eq ptr %8, null\n  br i1 %9, label %13, label %10\n\n10:                                               ; preds = %6\n  %11 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %12 = tail call i32 @datalink_Down(ptr noundef nonnull %8, i32 noundef %11) #2\n  br label %57\n\n13:                                               ; preds = %6\n  %14 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 2\n  %15 = load ptr, ptr %14, align 8, !tbaa !14\n  %16 = load i32, ptr @CLOSE_STAYDOWN, align 4, !tbaa !13\n  %17 = tail call i32 @bundle_Down(ptr noundef %15, i32 noundef %16) #2\n  br label %57\n\n18:                                               ; preds = %1\n  %19 = add nsw i32 %4, 1\n  %20 = icmp eq i32 %2, %19\n  br i1 %20, label %21, label %57\n\n21:                                               ; preds = %18\n  %22 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 4\n  %23 = load ptr, ptr %22, align 8, !tbaa !15\n  %24 = sext i32 %4 to i64\n  %25 = getelementptr inbounds i32, ptr %23, i64 %24\n  %26 = load i32, ptr %25, align 4, !tbaa !13\n  %27 = tail call i32 @strcasecmp(i32 noundef %26, ptr noundef nonnull @.str) #2\n  %28 = icmp eq i32 %27, 0\n  br i1 %28, label %29, label %41\n\n29:                                               ; preds = %21\n  %30 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 3\n  %31 = load ptr, ptr %30, align 8, !tbaa !12\n  %32 = icmp eq ptr %31, null\n  br i1 %32, label %36, label %33\n\n33:                                               ; preds = %29\n  %34 = load i32, ptr @CLOSE_LCP, align 4, !tbaa !13\n  %35 = tail call i32 @datalink_Down(ptr noundef nonnull %31, i32 noundef %34) #2\n  br label %57\n\n36:                                               ; preds = %29\n  %37 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 2\n  %38 = load ptr, ptr %37, align 8, !tbaa !14\n  %39 = load i32, ptr @CLOSE_LCP, align 4, !tbaa !13\n  %40 = tail call i32 @bundle_Down(ptr noundef %38, i32 noundef %39) #2\n  br label %57\n\n41:                                               ; preds = %21\n  %42 = load ptr, ptr %22, align 8, !tbaa !15\n  %43 = load i32, ptr %3, align 4, !tbaa !11\n  %44 = sext i32 %43 to i64\n  %45 = getelementptr inbounds i32, ptr %42, i64 %44\n  %46 = load i32, ptr %45, align 4, !tbaa !13\n  %47 = tail call i32 @strcasecmp(i32 noundef %46, ptr noundef nonnull @.str.1) #2\n  %48 = icmp eq i32 %47, 0\n  br i1 %48, label %49, label %57\n\n49:                                               ; preds = %41\n  %50 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 3\n  %51 = load ptr, ptr %50, align 8, !tbaa !12\n  %52 = icmp eq ptr %51, null\n  %53 = getelementptr inbounds %struct.cmdargs, ptr %0, i64 0, i32 2\n  %54 = select i1 %52, ptr %53, ptr %51\n  %55 = load ptr, ptr %54, align 8, !tbaa !16\n  %56 = tail call i32 @fsm2initial(ptr noundef %55) #2\n  br label %57\n\n57:                                               ; preds = %13, %10, %49, %36, %33, %18, %41\n  %58 = phi i32 [ -1, %41 ], [ -1, %18 ], [ 0, %33 ], [ 0, %36 ], [ 0, %49 ], [ 0, %10 ], [ 0, %13 ]\n  ret i32 %58\n}\n\ndeclare i32 @datalink_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @bundle_Down(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @strcasecmp(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @fsm2initial(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"cmdargs\", !7, i64 0, !7, i64 4, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 16}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n!15 = !{!6, !10, i64 24}\n!16 = !{!10, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_eset.c_eset_insert_locked.ll\"\n\t.globl\teset_insert_locked              # -- Begin function eset_insert_locked\n\t.p2align\t4, 0x90\n\t.type\teset_insert_locked,@function\neset_insert_locked:                     # @eset_insert_locked\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r13, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdx, %r14\n\tmovq\t%rsi, %r13\n\taddq\t$28, %rsi\n\tcallq\tmalloc_mutex_assert_owner@PLT\n\tmovq\t%r14, %rdi\n\tcallq\textent_state_get@PLT\n\txorl\t%edi, %edi\n\tcmpq\t(%r13), %rax\n\tsete\t%dil\n\tcallq\tassert@PLT\n\tmovq\t%r14, %rdi\n\tcallq\textent_size_get@PLT\n\tmovq\t%rax, %r15\n\tmovq\t%rax, %rdi\n\tcallq\tsz_psz_quantize_floor@PLT\n\tmovq\t%rax, %rdi\n\tcallq\tsz_psz2ind@PLT\n\tmovq\t%rax, %r12\n\tmovq\t%rax, %rbx\n\tshlq\t$2, %rbx\n\tmovq\t16(%r13), %rdi\n\taddq\t%rbx, %rdi\n\tcallq\textent_heap_empty@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\t24(%r13), %edi\n\tmovl\t$eset_bitmap_info, %esi\n\tmovq\t%r12, %rdx\n\tcallq\tbitmap_unset@PLT\n.LBB0_2:\n\taddq\t16(%r13), %rbx\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\textent_heap_insert@PLT\n\tcmpq\t$0, config_stats(%rip)\n\tje\t.LBB0_4\n# %bb.3:\n\tmovq\t%r13, %rdi\n\tmovq\t%r12, %rsi\n\tmovq\t%r15, %rdx\n\tcallq\teset_stats_add@PLT\n.LBB0_4:\n\tleaq\t12(%r13), %rdi\n\tmovq\t%r14, %rsi\n\tcallq\textent_list_append@PLT\n\tmovzbl\tLG_PAGE(%rip), %ecx\n\tshrq\t%cl, %r15\n\taddq\t$8, %r13\n\tmovl\tATOMIC_RELAXED(%rip), %esi\n\tmovq\t%r13, %rdi\n\tcallq\tatomic_load_zu@PLT\n\taddq\t%rax, %r15\n\tmovl\tATOMIC_RELAXED(%rip), %edx\n\tmovq\t%r13, %rdi\n\tmovq\t%r15, %rsi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\tatomic_store_zu@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\teset_insert_locked, .Lfunc_end0-eset_insert_locked\n\t.cfi_endproc\n                                        # -- End function\n\t.type\teset_bitmap_info,@object        # @eset_bitmap_info\n\t.bss\n\t.globl\teset_bitmap_info\n\t.p2align\t2\neset_bitmap_info:\n\t.long\t0                               # 0x0\n\t.size\teset_bitmap_info, 4\n\n\t.type\tconfig_stats,@object            # @config_stats\n\t.globl\tconfig_stats\n\t.p2align\t3\nconfig_stats:\n\t.quad\t0                               # 0x0\n\t.size\tconfig_stats, 8\n\n\t.type\tLG_PAGE,@object                 # @LG_PAGE\n\t.globl\tLG_PAGE\n\t.p2align\t3\nLG_PAGE:\n\t.quad\t0                               # 0x0\n\t.size\tLG_PAGE, 8\n\n\t.type\tATOMIC_RELAXED,@object          # @ATOMIC_RELAXED\n\t.globl\tATOMIC_RELAXED\n\t.p2align\t2\nATOMIC_RELAXED:\n\t.long\t0                               # 0x0\n\t.size\tATOMIC_RELAXED, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32, i32, ptr, i32 }\n\n@eset_bitmap_info = dso_local global i32 0, align 4\n@config_stats = dso_local local_unnamed_addr global i64 0, align 8\n@LG_PAGE = dso_local local_unnamed_addr global i64 0, align 8\n@ATOMIC_RELAXED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @eset_insert_locked(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %5 = tail call i32 @malloc_mutex_assert_owner(ptr noundef %0, ptr noundef nonnull %4) #2\n  %6 = tail call ptr @extent_state_get(ptr noundef %2) #2\n  %7 = load i64, ptr %1, align 8, !tbaa !5\n  %8 = icmp eq i64 %6, %7\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @assert(i32 noundef %9) #2\n  %11 = tail call i64 @extent_size_get(ptr noundef %2) #2\n  %12 = tail call i64 @sz_psz_quantize_floor(i64 noundef %11) #2\n  %13 = tail call i64 @sz_psz2ind(i64 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 3\n  %15 = load ptr, ptr %14, align 8, !tbaa !11\n  %16 = getelementptr inbounds i32, ptr %15, i64 %13\n  %17 = tail call i64 @extent_heap_empty(ptr noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %3\n  %20 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %21 = load i32, ptr %20, align 8, !tbaa !12\n  tail call void @bitmap_unset(i32 noundef %21, ptr noundef nonnull @eset_bitmap_info, i64 noundef %13) #2\n  br label %22\n\n22:                                               ; preds = %19, %3\n  %23 = load ptr, ptr %14, align 8, !tbaa !11\n  %24 = getelementptr inbounds i32, ptr %23, i64 %13\n  %25 = tail call i32 @extent_heap_insert(ptr noundef %24, ptr noundef %2) #2\n  %26 = load i64, ptr @config_stats, align 8, !tbaa !13\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %22\n  %29 = tail call i32 @eset_stats_add(ptr noundef nonnull %1, i64 noundef %13, i64 noundef %11) #2\n  br label %30\n\n30:                                               ; preds = %28, %22\n  %31 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 2\n  %32 = tail call i32 @extent_list_append(ptr noundef nonnull %31, ptr noundef %2) #2\n  %33 = load i64, ptr @LG_PAGE, align 8, !tbaa !13\n  %34 = lshr i64 %11, %33\n  %35 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %36 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %37 = tail call i64 @atomic_load_zu(ptr noundef nonnull %35, i32 noundef %36) #2\n  %38 = add nsw i64 %34, %37\n  %39 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %40 = tail call i32 @atomic_store_zu(ptr noundef nonnull %35, i64 noundef %38, i32 noundef %39) #2\n  ret void\n}\n\ndeclare i32 @malloc_mutex_assert_owner(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @extent_state_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_size_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz_quantize_floor(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz2ind(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_heap_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare void @bitmap_unset(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_heap_insert(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @eset_stats_add(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_list_append(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @atomic_load_zu(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_store_zu(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!7, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32, i32, ptr, i32 }\n\n@eset_bitmap_info = dso_local global i32 0, align 4\n@config_stats = dso_local local_unnamed_addr global i64 0, align 8\n@LG_PAGE = dso_local local_unnamed_addr global i64 0, align 8\n@ATOMIC_RELAXED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @eset_insert_locked(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %5 = tail call i32 @malloc_mutex_assert_owner(ptr noundef %0, ptr noundef nonnull %4) #2\n  %6 = tail call ptr @extent_state_get(ptr noundef %2) #2\n  %7 = load i64, ptr %1, align 8, !tbaa !5\n  %8 = icmp eq i64 %6, %7\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @assert(i32 noundef %9) #2\n  %11 = tail call i64 @extent_size_get(ptr noundef %2) #2\n  %12 = tail call i64 @sz_psz_quantize_floor(i64 noundef %11) #2\n  %13 = tail call i64 @sz_psz2ind(i64 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 3\n  %15 = load ptr, ptr %14, align 8, !tbaa !11\n  %16 = getelementptr inbounds i32, ptr %15, i64 %13\n  %17 = tail call i64 @extent_heap_empty(ptr noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %3\n  %20 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %21 = load i32, ptr %20, align 8, !tbaa !12\n  tail call void @bitmap_unset(i32 noundef %21, ptr noundef nonnull @eset_bitmap_info, i64 noundef %13) #2\n  br label %22\n\n22:                                               ; preds = %19, %3\n  %23 = load ptr, ptr %14, align 8, !tbaa !11\n  %24 = getelementptr inbounds i32, ptr %23, i64 %13\n  %25 = tail call i32 @extent_heap_insert(ptr noundef %24, ptr noundef %2) #2\n  %26 = load i64, ptr @config_stats, align 8, !tbaa !13\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %22\n  %29 = tail call i32 @eset_stats_add(ptr noundef nonnull %1, i64 noundef %13, i64 noundef %11) #2\n  br label %30\n\n30:                                               ; preds = %28, %22\n  %31 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 2\n  %32 = tail call i32 @extent_list_append(ptr noundef nonnull %31, ptr noundef %2) #2\n  %33 = load i64, ptr @LG_PAGE, align 8, !tbaa !13\n  %34 = lshr i64 %11, %33\n  %35 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %36 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %37 = tail call i64 @atomic_load_zu(ptr noundef nonnull %35, i32 noundef %36) #2\n  %38 = add nsw i64 %34, %37\n  %39 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %40 = tail call i32 @atomic_store_zu(ptr noundef nonnull %35, i64 noundef %38, i32 noundef %39) #2\n  ret void\n}\n\ndeclare i32 @malloc_mutex_assert_owner(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @extent_state_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz_quantize_floor(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz2ind(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_size_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_heap_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare void @bitmap_unset(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_heap_insert(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @eset_stats_add(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_list_append(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @atomic_load_zu(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_store_zu(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!7, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32, i32, ptr, i32 }\n\n@eset_bitmap_info = dso_local global i32 0, align 4\n@config_stats = dso_local local_unnamed_addr global i64 0, align 8\n@LG_PAGE = dso_local local_unnamed_addr global i64 0, align 8\n@ATOMIC_RELAXED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @eset_insert_locked(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %5 = tail call i32 @malloc_mutex_assert_owner(ptr noundef %0, ptr noundef nonnull %4) #2\n  %6 = tail call ptr @extent_state_get(ptr noundef %2) #2\n  %7 = load i64, ptr %1, align 8, !tbaa !5\n  %8 = icmp eq i64 %6, %7\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @assert(i32 noundef %9) #2\n  %11 = tail call i64 @extent_size_get(ptr noundef %2) #2\n  %12 = tail call i64 @sz_psz_quantize_floor(i64 noundef %11) #2\n  %13 = tail call i64 @sz_psz2ind(i64 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 3\n  %15 = load ptr, ptr %14, align 8, !tbaa !11\n  %16 = getelementptr inbounds i32, ptr %15, i64 %13\n  %17 = tail call i64 @extent_heap_empty(ptr noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %3\n  %20 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %21 = load i32, ptr %20, align 8, !tbaa !12\n  tail call void @bitmap_unset(i32 noundef %21, ptr noundef nonnull @eset_bitmap_info, i64 noundef %13) #2\n  br label %22\n\n22:                                               ; preds = %19, %3\n  %23 = load ptr, ptr %14, align 8, !tbaa !11\n  %24 = getelementptr inbounds i32, ptr %23, i64 %13\n  %25 = tail call i32 @extent_heap_insert(ptr noundef %24, ptr noundef %2) #2\n  %26 = load i64, ptr @config_stats, align 8, !tbaa !13\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %22\n  %29 = tail call i32 @eset_stats_add(ptr noundef nonnull %1, i64 noundef %13, i64 noundef %11) #2\n  br label %30\n\n30:                                               ; preds = %28, %22\n  %31 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 2\n  %32 = tail call i32 @extent_list_append(ptr noundef nonnull %31, ptr noundef %2) #2\n  %33 = load i64, ptr @LG_PAGE, align 8, !tbaa !13\n  %34 = lshr i64 %11, %33\n  %35 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %36 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %37 = tail call i64 @atomic_load_zu(ptr noundef nonnull %35, i32 noundef %36) #2\n  %38 = add nsw i64 %34, %37\n  %39 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %40 = tail call i32 @atomic_store_zu(ptr noundef nonnull %35, i64 noundef %38, i32 noundef %39) #2\n  ret void\n}\n\ndeclare i32 @malloc_mutex_assert_owner(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @extent_state_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz_quantize_floor(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz2ind(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_size_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_heap_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare void @bitmap_unset(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_heap_insert(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @eset_stats_add(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_list_append(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @atomic_load_zu(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_store_zu(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!7, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32, i32, ptr, i32 }\n\n@eset_bitmap_info = dso_local global i32 0, align 4\n@config_stats = dso_local local_unnamed_addr global i64 0, align 8\n@LG_PAGE = dso_local local_unnamed_addr global i64 0, align 8\n@ATOMIC_RELAXED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @eset_insert_locked(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %5 = tail call i32 @malloc_mutex_assert_owner(ptr noundef %0, ptr noundef nonnull %4) #2\n  %6 = tail call ptr @extent_state_get(ptr noundef %2) #2\n  %7 = load i64, ptr %1, align 8, !tbaa !5\n  %8 = icmp eq i64 %6, %7\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @assert(i32 noundef %9) #2\n  %11 = tail call i64 @extent_size_get(ptr noundef %2) #2\n  %12 = tail call i64 @sz_psz_quantize_floor(i64 noundef %11) #2\n  %13 = tail call i64 @sz_psz2ind(i64 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 3\n  %15 = load ptr, ptr %14, align 8, !tbaa !11\n  %16 = getelementptr inbounds i32, ptr %15, i64 %13\n  %17 = tail call i64 @extent_heap_empty(ptr noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %3\n  %20 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 4\n  %21 = load i32, ptr %20, align 8, !tbaa !12\n  tail call void @bitmap_unset(i32 noundef %21, ptr noundef nonnull @eset_bitmap_info, i64 noundef %13) #2\n  br label %22\n\n22:                                               ; preds = %19, %3\n  %23 = load ptr, ptr %14, align 8, !tbaa !11\n  %24 = getelementptr inbounds i32, ptr %23, i64 %13\n  %25 = tail call i32 @extent_heap_insert(ptr noundef %24, ptr noundef %2) #2\n  %26 = load i64, ptr @config_stats, align 8, !tbaa !13\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %22\n  %29 = tail call i32 @eset_stats_add(ptr noundef nonnull %1, i64 noundef %13, i64 noundef %11) #2\n  br label %30\n\n30:                                               ; preds = %28, %22\n  %31 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 2\n  %32 = tail call i32 @extent_list_append(ptr noundef nonnull %31, ptr noundef %2) #2\n  %33 = load i64, ptr @LG_PAGE, align 8, !tbaa !13\n  %34 = lshr i64 %11, %33\n  %35 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %36 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %37 = tail call i64 @atomic_load_zu(ptr noundef nonnull %35, i32 noundef %36) #2\n  %38 = add nsw i64 %34, %37\n  %39 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !14\n  %40 = tail call i32 @atomic_store_zu(ptr noundef nonnull %35, i64 noundef %38, i32 noundef %39) #2\n  ret void\n}\n\ndeclare i32 @malloc_mutex_assert_owner(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @extent_state_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz_quantize_floor(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz2ind(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_size_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_heap_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare void @bitmap_unset(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_heap_insert(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @eset_stats_add(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_list_append(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @atomic_load_zu(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_store_zu(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 24}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !10, i64 16}\n!12 = !{!6, !10, i64 24}\n!13 = !{!7, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/jemalloc/src/extr_eset.c_eset_insert_locked.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i32, i32, ptr, i32, i32 }\n\n@eset_bitmap_info = dso_local global i32 0, align 4\n@config_stats = dso_local local_unnamed_addr global i64 0, align 8\n@LG_PAGE = dso_local local_unnamed_addr global i64 0, align 8\n@ATOMIC_RELAXED = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @eset_insert_locked(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 5\n  %5 = tail call i32 @malloc_mutex_assert_owner(ptr noundef %0, ptr noundef nonnull %4) #2\n  %6 = tail call i64 @extent_state_get(ptr noundef %2) #2\n  %7 = load i64, ptr %1, align 8, !tbaa !5\n  %8 = icmp eq i64 %6, %7\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @assert(i32 noundef %9) #2\n  %11 = tail call i64 @extent_size_get(ptr noundef %2) #2\n  %12 = tail call i64 @sz_psz_quantize_floor(i64 noundef %11) #2\n  %13 = tail call i64 @sz_psz2ind(i64 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 3\n  %15 = load ptr, ptr %14, align 8, !tbaa !12\n  %16 = getelementptr inbounds i32, ptr %15, i64 %13\n  %17 = tail call i64 @extent_heap_empty(ptr noundef %16) #2\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %3\n  %20 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 4\n  %21 = load i32, ptr %20, align 8, !tbaa !13\n  %22 = tail call i32 @bitmap_unset(i32 noundef %21, ptr noundef nonnull @eset_bitmap_info, i64 noundef %13) #2\n  br label %23\n\n23:                                               ; preds = %19, %3\n  %24 = load ptr, ptr %14, align 8, !tbaa !12\n  %25 = getelementptr inbounds i32, ptr %24, i64 %13\n  %26 = tail call i32 @extent_heap_insert(ptr noundef %25, ptr noundef %2) #2\n  %27 = load i64, ptr @config_stats, align 8, !tbaa !14\n  %28 = icmp eq i64 %27, 0\n  br i1 %28, label %31, label %29\n\n29:                                               ; preds = %23\n  %30 = tail call i32 @eset_stats_add(ptr noundef nonnull %1, i64 noundef %13, i64 noundef %11) #2\n  br label %31\n\n31:                                               ; preds = %29, %23\n  %32 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 2\n  %33 = tail call i32 @extent_list_append(ptr noundef nonnull %32, ptr noundef %2) #2\n  %34 = load i64, ptr @LG_PAGE, align 8, !tbaa !14\n  %35 = lshr i64 %11, %34\n  %36 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 1\n  %37 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !15\n  %38 = tail call i64 @atomic_load_zu(ptr noundef nonnull %36, i32 noundef %37) #2\n  %39 = add i64 %38, %35\n  %40 = load i32, ptr @ATOMIC_RELAXED, align 4, !tbaa !15\n  %41 = tail call i32 @atomic_store_zu(ptr noundef nonnull %36, i64 noundef %39, i32 noundef %40) #2\n  ret void\n}\n\ndeclare i32 @malloc_mutex_assert_owner(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_state_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_size_get(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz_quantize_floor(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @sz_psz2ind(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @extent_heap_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @bitmap_unset(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_heap_insert(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @eset_stats_add(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @extent_list_append(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @atomic_load_zu(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_store_zu(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8, !10, i64 12, !11, i64 16, !10, i64 24, !10, i64 28}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!6, !11, i64 16}\n!13 = !{!6, !10, i64 24}\n!14 = !{!7, !7, i64 0}\n!15 = !{!10, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %41\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %41\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %31, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %26\n  br label %31\n\n31:                                               ; preds = %30, %26, %18\n  %32 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %20, %30 ]\n  %33 = phi i32 [ %27, %18 ], [ %28, %26 ], [ %20, %30 ]\n  %34 = icmp slt i32 %22, %1\n  %35 = icmp sgt i32 %22, %2\n  %36 = select i1 %34, i1 true, i1 %35\n  br i1 %36, label %41, label %37\n\n37:                                               ; preds = %31\n  %38 = add nsw i32 %32, %1\n  %39 = add nsw i32 %33, %22\n  %40 = select i1 %34, i32 %1, i32 %22\n  br label %45\n\n41:                                               ; preds = %31, %8, %3\n  %42 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %43 = add nsw i32 %2, -1\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %42, i32 noundef %1, i32 noundef %43, i32 noundef 0) #2\n  br label %52\n\n45:                                               ; preds = %37\n  %46 = load i32, ptr %13, align 4, !tbaa !15\n  %47 = tail call i32 @SETARG_A(i32 noundef %46, i32 noundef %40) #2\n  %48 = load i32, ptr %13, align 4, !tbaa !15\n  %49 = sub nsw i32 %39, %40\n  %50 = tail call i32 @SETARG_B(i32 noundef %48, i32 noundef %49) #2\n  %51 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %52\n\n52:                                               ; preds = %45, %41\n  %53 = phi i64 [ %42, %41 ], [ %51, %45 ]\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %39\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %39\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %25, %2\n  br i1 %32, label %39, label %33\n\n33:                                               ; preds = %30, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %35 = phi i32 [ %25, %19 ], [ %25, %27 ], [ %25, %30 ]\n  %36 = icmp slt i32 %34, %1\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %33\n  %38 = icmp sgt i32 %35, %2\n  br i1 %38, label %39, label %42\n\n39:                                               ; preds = %33, %37, %30, %8, %3\n  %40 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %41 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %40, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %51\n\n42:                                               ; preds = %37\n  %43 = load i32, ptr %14, align 4, !tbaa !15\n  %44 = tail call i32 @SETARG_A(i32 noundef %43, i32 noundef %1) #2\n  %45 = load i32, ptr %14, align 4, !tbaa !15\n  %46 = sub nsw i32 %35, %1\n  %47 = tail call i32 @SETARG_B(i32 noundef %45, i32 noundef %46) #2\n  br label %51\n\n51:                                               ; preds = %42, %39\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %38\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %38\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %2, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, %21\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %38, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %2\n  %32 = select i1 %31, i1 true, i1 %29\n  br i1 %32, label %38, label %35\n\n33:                                               ; preds = %19\n  %34 = icmp slt i32 %23, %1\n  br i1 %34, label %38, label %35\n\n35:                                               ; preds = %33, %30\n  %36 = add nsw i32 %23, %20\n  %37 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  br label %38\n\n38:                                               ; preds = %35, %33, %30, %27, %8, %3\n  %39 = phi i32 [ %2, %3 ], [ %2, %8 ], [ %2, %27 ], [ %2, %30 ], [ %36, %35 ], [ %21, %33 ]\n  %40 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %41 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %40, i32 noundef %1, i32 noundef %39, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %39\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %39\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %36, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %36, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp slt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %39, label %34\n\n34:                                               ; preds = %30\n  %35 = add nsw i32 %23, %25\n  br label %36\n\n36:                                               ; preds = %34, %27, %19\n  %37 = phi i32 [ %20, %27 ], [ %21, %19 ], [ %35, %34 ]\n  %38 = phi i32 [ %25, %27 ], [ %25, %19 ], [ %23, %34 ]\n  br label %42\n\n39:                                               ; preds = %30, %8, %3\n  %40 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %41 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %40, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %47\n\n42:                                               ; preds = %36\n  %43 = load i32, ptr %14, align 4, !tbaa !15\n  %44 = tail call i32 @SETARG_A(i32 noundef %43, i32 noundef %37) #2\n  %45 = load i32, ptr %14, align 4, !tbaa !15\n  %46 = sub nsw i32 %38, %37\n  br label %47\n\n47:                                               ; preds = %42, %39\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/xLua/build/lua-5.3.3/src/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_spectrum_buffers.c_mlxsw_sp_sb_pms_init.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mlxsw_sp_sb_pms_init\n\t.type\tmlxsw_sp_sb_pms_init,@function\nmlxsw_sp_sb_pms_init:                   # @mlxsw_sp_sb_pms_init\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, %r15d\n\tmovl\t%esi, 4(%rsp)                   # 4-byte Spill\n\tmovq\t(%rdi), %rax\n\tmovl\t(%rax), %ecx\n\ttestl\t%ecx, %ecx\n\tjle\t.LBB0_9\n# %bb.1:\n\tmovq\t%rdx, %r12\n\tmovq\t%rdi, %rbp\n\txorl\t%ebx, %ebx\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_6:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%rbp, %rdi\n\tmovl\t4(%rsp), %esi                   # 4-byte Reload\n\tmovl\t%ebx, %edx\n\tmovl\t%r13d, %ecx\n\tmovl\t%r14d, %r8d\n\tcallq\tmlxsw_sp_sb_pm_write@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_10\n# %bb.7:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t(%rbp), %rax\n\tmovl\t(%rax), %ecx\n.LBB0_8:                                #   in Loop: Header=BB0_2 Depth=1\n\tincq\t%rbx\n\tmovslq\t%ecx, %rdx\n\tcmpq\t%rdx, %rbx\n\tjge\t.LBB0_9\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\ttestl\t%r15d, %r15d\n\tje\t.LBB0_4\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t8(%rax), %rdx\n\tmovq\t(%rdx,%rbx,8), %rdx\n\tcmpq\tMLXSW_REG_SBXX_DIR_INGRESS(%rip), %rdx\n\tje\t.LBB0_8\n.LBB0_4:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\t4(%r12,%rbx,8), %esi\n\tmovq\t%rbp, %rdi\n\tcallq\tmlxsw_sp_bytes_cells@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t(%r12,%rbx,8), %r14d\n\tmovq\t%rbp, %rdi\n\tmovl\t%ebx, %esi\n\tcallq\tmlxsw_sp_sb_pool_is_static@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.5:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%rbp, %rdi\n\tmovl\t%r14d, %esi\n\tcallq\tmlxsw_sp_bytes_cells@PLT\n\tmovl\t%eax, %r14d\n\tjmp\t.LBB0_6\n.LBB0_9:\n\txorl\t%eax, %eax\n.LBB0_10:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmlxsw_sp_sb_pms_init, .Lfunc_end0-mlxsw_sp_sb_pms_init\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMLXSW_REG_SBXX_DIR_INGRESS,@object # @MLXSW_REG_SBXX_DIR_INGRESS\n\t.bss\n\t.globl\tMLXSW_REG_SBXX_DIR_INGRESS\n\t.p2align\t3\nMLXSW_REG_SBXX_DIR_INGRESS:\n\t.quad\t0                               # 0x0\n\t.size\tMLXSW_REG_SBXX_DIR_INGRESS, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr }\n%struct.mlxsw_sp_sb_pm_info = type { i32, i32 }\n\n@MLXSW_REG_SBXX_DIR_INGRESS = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlxsw_sp_sb_pms_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mlxsw_sp_sb_pms_init(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr %0, align 8, !tbaa !5\n  %6 = load i32, ptr %5, align 8, !tbaa !10\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %34\n\n8:                                                ; preds = %4\n  %9 = icmp eq i32 %3, 0\n  %10 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 0, i32 1\n  br label %11\n\n11:                                               ; preds = %8, %29\n  %12 = phi i32 [ %6, %8 ], [ %30, %29 ]\n  %13 = phi i64 [ 0, %8 ], [ %31, %29 ]\n  br i1 %9, label %20, label %14\n\n14:                                               ; preds = %11\n  %15 = load ptr, ptr %10, align 8, !tbaa !13\n  %16 = getelementptr inbounds i64, ptr %15, i64 %13\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = load i64, ptr @MLXSW_REG_SBXX_DIR_INGRESS, align 8, !tbaa !14\n  %19 = icmp eq i64 %17, %18\n  br i1 %19, label %29, label %20\n\n20:                                               ; preds = %14, %11\n  %21 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13, i32 1\n  %22 = load i32, ptr %21, align 4, !tbaa !16\n  %23 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %22) #2\n  %24 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = tail call i64 @mlxsw_sp_sb_pool_is_static(ptr noundef nonnull %0, i32 noundef %13) #2\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %29, label %28\n\n28:                                               ; preds = %20\n  %29 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %25) #2\n  br label %20\n\n30:                                               ; preds = %29\n  %31 = add nuw nsw i64 %13, 1\n  %32 = load ptr, ptr %0, align 8, !tbaa !5\n  %33 = load i32, ptr %32, align 8, !tbaa !10\n  br label %11, !llvm.loop !19\n\n34:                                               ; preds = %4\n  %35 = icmp eq i32 %6, 0\n  br i1 %35, label %36, label %37\n\n36:                                               ; preds = %34\n  ret i32 0\n\n37:                                               ; preds = %34\n  %38 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %1) #2\n  %39 = tail call i32 @mlxsw_sp_sb_pm_write(ptr noundef nonnull %0, i32 noundef %1, i32 noundef 0, i32 noundef %38, i32 noundef %3)\n  ret i32 %39\n}\n\ndeclare i32 @mlxsw_sp_bytes_cells(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mlxsw_sp_sb_pool_is_static(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlxsw_sp_sb_pm_write(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"mlxsw_sp\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_2__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !7, i64 8}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !12, i64 4}\n!17 = !{!\"mlxsw_sp_sb_pm_info\", !12, i64 0, !12, i64 4}\n!18 = !{!17, !12, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr }\n%struct.mlxsw_sp_sb_pm_info = type { i32, i32 }\n\n@MLXSW_REG_SBXX_DIR_INGRESS = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlxsw_sp_sb_pms_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mlxsw_sp_sb_pms_init(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr %0, align 8, !tbaa !5\n  %6 = load i32, ptr %5, align 8, !tbaa !10\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %34\n\n8:                                                ; preds = %4\n  %9 = icmp eq i32 %3, 0\n  %10 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 0, i32 1\n  br label %11\n\n11:                                               ; preds = %8, %29\n  %12 = phi i32 [ %6, %8 ], [ %30, %29 ]\n  %13 = phi i64 [ 0, %8 ], [ %31, %29 ]\n  br i1 %9, label %20, label %14\n\n14:                                               ; preds = %11\n  %15 = load ptr, ptr %10, align 8, !tbaa !13\n  %16 = getelementptr inbounds i64, ptr %15, i64 %13\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = load i64, ptr @MLXSW_REG_SBXX_DIR_INGRESS, align 8, !tbaa !14\n  %19 = icmp eq i64 %17, %18\n  br i1 %19, label %29, label %20\n\n20:                                               ; preds = %14, %11\n  %21 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13, i32 1\n  %22 = load i32, ptr %21, align 4, !tbaa !16\n  %23 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %22) #2\n  %24 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = tail call i64 @mlxsw_sp_sb_pool_is_static(ptr noundef nonnull %0, i32 noundef %13) #2\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %20\n  %29 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %25) #2\n  br label %30\n\n30:                                               ; preds = %28, %20\n  %31 = add nuw nsw i64 %13, 1\n  %32 = sext i32 %12 to i64\n  %33 = icmp slt i64 %31, %32\n  br i1 %33, label %11, label %34, !llvm.loop !19\n\n34:                                               ; preds = %30, %4\n  %35 = phi i32 [ 0, %4 ], [ 0, %30 ]\n  ret i32 %35\n\n}\n\ndeclare i32 @mlxsw_sp_bytes_cells(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mlxsw_sp_sb_pool_is_static(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"mlxsw_sp\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_2__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !7, i64 8}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !12, i64 4}\n!17 = !{!\"mlxsw_sp_sb_pm_info\", !12, i64 0, !12, i64 4}\n!18 = !{!17, !12, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr }\n%struct.mlxsw_sp_sb_pm_info = type { i32, i32 }\n\n@MLXSW_REG_SBXX_DIR_INGRESS = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlxsw_sp_sb_pms_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mlxsw_sp_sb_pms_init(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr %0, align 8, !tbaa !5\n  %6 = load i32, ptr %5, align 8, !tbaa !10\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %34\n\n8:                                                ; preds = %4\n  %9 = icmp eq i32 %3, 0\n  %10 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 0, i32 1\n  br label %11\n\n11:                                               ; preds = %8, %29\n  %12 = phi i32 [ %6, %8 ], [ %30, %29 ]\n  %13 = phi i64 [ 0, %8 ], [ %31, %29 ]\n  br i1 %9, label %20, label %14\n\n14:                                               ; preds = %11\n  %15 = load ptr, ptr %10, align 8, !tbaa !13\n  %16 = getelementptr inbounds i64, ptr %15, i64 %13\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = load i64, ptr @MLXSW_REG_SBXX_DIR_INGRESS, align 8, !tbaa !14\n  %19 = icmp eq i64 %17, %18\n  br i1 %19, label %29, label %20\n\n20:                                               ; preds = %14, %11\n  %21 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13, i32 1\n  %22 = load i32, ptr %21, align 4, !tbaa !16\n  %23 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %22) #2\n  %24 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = tail call i64 @mlxsw_sp_sb_pool_is_static(ptr noundef nonnull %0, i32 noundef %13) #2\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %20\n  %29 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %25) #2\n  br label %30\n\n30:                                               ; preds = %28, %20\n  %31 = add nuw nsw i64 %13, 1\n  %32 = sext i32 %12 to i64\n  %33 = icmp slt i64 %31, %32\n  br i1 %33, label %11, label %34, !llvm.loop !19\n\n34:                                               ; preds = %30, %4\n  %35 = phi i32 [ 0, %4 ], [ 0, %30 ]\n  ret i32 %35\n\n}\n\ndeclare i32 @mlxsw_sp_bytes_cells(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mlxsw_sp_sb_pool_is_static(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"mlxsw_sp\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_2__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !7, i64 8}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !12, i64 4}\n!17 = !{!\"mlxsw_sp_sb_pm_info\", !12, i64 0, !12, i64 4}\n!18 = !{!17, !12, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr }\n%struct.mlxsw_sp_sb_pm_info = type { i32, i32 }\n\n@MLXSW_REG_SBXX_DIR_INGRESS = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlxsw_sp_sb_pms_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mlxsw_sp_sb_pms_init(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr %0, align 8, !tbaa !5\n  %6 = load i32, ptr %5, align 8, !tbaa !10\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %34\n\n8:                                                ; preds = %4\n  %9 = icmp eq i32 %3, 0\n  %10 = getelementptr inbounds %struct.TYPE_2__, ptr %5, i64 0, i32 1\n  br label %11\n\n11:                                               ; preds = %8, %29\n  %12 = phi i32 [ %6, %8 ], [ %30, %29 ]\n  %13 = phi i64 [ 0, %8 ], [ %31, %29 ]\n  br i1 %9, label %20, label %14\n\n14:                                               ; preds = %11\n  %15 = load ptr, ptr %10, align 8, !tbaa !13\n  %16 = getelementptr inbounds i64, ptr %15, i64 %13\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = load i64, ptr @MLXSW_REG_SBXX_DIR_INGRESS, align 8, !tbaa !14\n  %19 = icmp eq i64 %17, %18\n  br i1 %19, label %29, label %20\n\n20:                                               ; preds = %14, %11\n  %21 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13, i32 1\n  %22 = load i32, ptr %21, align 4, !tbaa !16\n  %23 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %22) #2\n  %24 = getelementptr inbounds %struct.mlxsw_sp_sb_pm_info, ptr %2, i64 %13\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = tail call i64 @mlxsw_sp_sb_pool_is_static(ptr noundef nonnull %0, i32 noundef %13) #2\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %29, label %28\n\n28:                                               ; preds = %20\n  %29 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %25) #2\n  br label %20\n\n30:                                               ; preds = %29\n  %31 = add nuw nsw i64 %13, 1\n  %32 = load ptr, ptr %0, align 8, !tbaa !5\n  %33 = load i32, ptr %32, align 8, !tbaa !10\n  br label %11, !llvm.loop !19\n\n34:                                               ; preds = %4\n  %35 = icmp eq i32 %6, 0\n  br i1 %35, label %36, label %37\n\n36:                                               ; preds = %34\n  ret i32 0\n\n37:                                               ; preds = %34\n  %38 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %1) #2\n  %39 = tail call i32 @mlxsw_sp_sb_pm_write(ptr noundef nonnull %0, i32 noundef %1, i32 noundef 0, i32 noundef %38, i32 noundef %3)\n  ret i32 %39\n}\n\ndeclare i32 @mlxsw_sp_bytes_cells(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mlxsw_sp_sb_pool_is_static(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlxsw_sp_sb_pm_write(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"mlxsw_sp\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_2__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !7, i64 8}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !12, i64 4}\n!17 = !{!\"mlxsw_sp_sb_pm_info\", !12, i64 0, !12, i64 4}\n!18 = !{!17, !12, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/ethernet/mellanox/mlxsw/extr_spectrum_buffers.c_mlxsw_sp_sb_pms_init.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlxsw_sp_sb_pm = type { i32, i32 }\n%struct.TYPE_2__ = type { i32, ptr }\n%struct.mlxsw_sp_sb_pool_des = type { i64 }\n\n@MLXSW_REG_SBXX_DIR_INGRESS = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlxsw_sp_sb_pms_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @mlxsw_sp_sb_pms_init(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr %0, align 8, !tbaa !5\n  %6 = load i32, ptr %5, align 8, !tbaa !10\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %45\n\n8:                                                ; preds = %4\n  %9 = icmp eq i32 %3, 0\n  br label %10\n\n10:                                               ; preds = %8, %39\n  %11 = phi i32 [ %6, %8 ], [ %40, %39 ]\n  %12 = phi ptr [ %5, %8 ], [ %41, %39 ]\n  %13 = phi i64 [ 0, %8 ], [ %42, %39 ]\n  %14 = getelementptr inbounds %struct.mlxsw_sp_sb_pm, ptr %2, i64 %13\n  br i1 %9, label %22, label %15\n\n15:                                               ; preds = %10\n  %16 = getelementptr inbounds %struct.TYPE_2__, ptr %12, i64 0, i32 1\n  %17 = load ptr, ptr %16, align 8, !tbaa !13\n  %18 = getelementptr inbounds %struct.mlxsw_sp_sb_pool_des, ptr %17, i64 %13\n  %19 = load i64, ptr %18, align 8, !tbaa !14\n  %20 = load i64, ptr @MLXSW_REG_SBXX_DIR_INGRESS, align 8, !tbaa !17\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %39, label %22\n\n22:                                               ; preds = %15, %10\n  %23 = getelementptr inbounds %struct.mlxsw_sp_sb_pm, ptr %2, i64 %13, i32 1\n  %24 = load i32, ptr %23, align 4, !tbaa !18\n  %25 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %24) #2\n  %26 = load i32, ptr %14, align 4, !tbaa !20\n  %27 = trunc i64 %13 to i32\n  %28 = tail call i64 @mlxsw_sp_sb_pool_is_static(ptr noundef nonnull %0, i32 noundef %27) #2\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %32, label %30\n\n30:                                               ; preds = %22\n  %31 = tail call i32 @mlxsw_sp_bytes_cells(ptr noundef nonnull %0, i32 noundef %26) #2\n  br label %32\n\n32:                                               ; preds = %30, %22\n  %33 = phi i32 [ %31, %30 ], [ %26, %22 ]\n  %34 = tail call i32 @mlxsw_sp_sb_pm_write(ptr noundef nonnull %0, i32 noundef %1, i32 noundef %27, i32 noundef %25, i32 noundef %33) #2\n  %35 = icmp eq i32 %34, 0\n  br i1 %35, label %36, label %45\n\n36:                                               ; preds = %32\n  %37 = load ptr, ptr %0, align 8, !tbaa !5\n  %38 = load i32, ptr %37, align 8, !tbaa !10\n  br label %39\n\n39:                                               ; preds = %36, %15\n  %40 = phi i32 [ %38, %36 ], [ %11, %15 ]\n  %41 = phi ptr [ %37, %36 ], [ %12, %15 ]\n  %42 = add nuw nsw i64 %13, 1\n  %43 = sext i32 %40 to i64\n  %44 = icmp slt i64 %42, %43\n  br i1 %44, label %10, label %45, !llvm.loop !21\n\n45:                                               ; preds = %39, %32, %4\n  %46 = phi i32 [ 0, %4 ], [ %34, %32 ], [ 0, %39 ]\n  ret i32 %46\n}\n\ndeclare i32 @mlxsw_sp_bytes_cells(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mlxsw_sp_sb_pool_is_static(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlxsw_sp_sb_pm_write(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"mlxsw_sp\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_2__\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !7, i64 8}\n!14 = !{!15, !16, i64 0}\n!15 = !{!\"mlxsw_sp_sb_pool_des\", !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n!17 = !{!16, !16, i64 0}\n!18 = !{!19, !12, i64 4}\n!19 = !{!\"mlxsw_sp_sb_pm\", !12, i64 0, !12, i64 4}\n!20 = !{!19, !12, i64 0}\n!21 = distinct !{!21, !22}\n!22 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_md5.c_MDString.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function MDString\n\t.type\tMDString,@function\nMDString:                               # @MDString\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%rbx\n\tpushq\t%rax\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %r15\n\tmovq\t%rsi, %rdi\n\tcallq\tstrlen@PLT\n\tmovl\tHEX_DIGEST_LENGTH(%rip), %ecx\n\tmovq\t%rsp, %rbx\n\taddq\t$15, %rcx\n\tandq\t$-16, %rcx\n\tsubq\t%rcx, %rbx\n\tmovq\t%rbx, %rsp\n\tmovq\t%r14, %rdi\n\tmovq\t%rax, %rsi\n\tmovq\t%rbx, %rdx\n\tcallq\t*8(%r15)\n\tcmpq\t$0, qflag(%rip)\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\t$.L.str, %edi\n\tmovq\t%rbx, %rsi\n\txorl\t%eax, %eax\n\tcallq\tprintf@PLT\n\tjmp\t.LBB0_5\n.LBB0_2:\n\tcmpq\t$0, rflag(%rip)\n\tje\t.LBB0_4\n# %bb.3:\n\tmovl\t$.L.str.1, %edi\n\tmovq\t%rbx, %rsi\n\tmovq\t%r14, %rdx\n\txorl\t%eax, %eax\n\tcallq\tprintf@PLT\n\tjmp\t.LBB0_5\n.LBB0_4:\n\tmovq\t(%r15), %rsi\n\tmovl\t$.L.str.2, %edi\n\tmovq\t%r14, %rdx\n\tmovq\t%rbx, %rcx\n\txorl\t%eax, %eax\n\tcallq\tprintf@PLT\n.LBB0_5:\n\tmovq\tcheckAgainst(%rip), %rsi\n\ttestq\t%rsi, %rsi\n\tje\t.LBB0_9\n# %bb.6:\n\tmovq\t%rbx, %rdi\n\tcallq\tstrcasecmp@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_9\n# %bb.7:\n\tincl\tchecksFailed(%rip)\n\tcmpq\t$0, qflag(%rip)\n\tjne\t.LBB0_9\n# %bb.8:\n\tmovl\t$.L.str.3, %edi\n\txorl\t%eax, %eax\n\tcallq\tprintf@PLT\n.LBB0_9:\n\tmovl\t$10, %edi\n\tcallq\tputchar@PLT\n\tleaq\t-24(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.Lfunc_end0:\n\t.size\tMDString, .Lfunc_end0-MDString\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tHEX_DIGEST_LENGTH,@object       # @HEX_DIGEST_LENGTH\n\t.bss\n\t.globl\tHEX_DIGEST_LENGTH\n\t.p2align\t2\nHEX_DIGEST_LENGTH:\n\t.long\t0                               # 0x0\n\t.size\tHEX_DIGEST_LENGTH, 4\n\n\t.type\tqflag,@object                   # @qflag\n\t.globl\tqflag\n\t.p2align\t3\nqflag:\n\t.quad\t0                               # 0x0\n\t.size\tqflag, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%s\"\n\t.size\t.L.str, 3\n\n\t.type\trflag,@object                   # @rflag\n\t.bss\n\t.globl\trflag\n\t.p2align\t3\nrflag:\n\t.quad\t0                               # 0x0\n\t.size\trflag, 8\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"%s \\\"%s\\\"\"\n\t.size\t.L.str.1, 8\n\n\t.type\t.L.str.2,@object                # @.str.2\n.L.str.2:\n\t.asciz\t\"%s (\\\"%s\\\") = %s\"\n\t.size\t.L.str.2, 15\n\n\t.type\tcheckAgainst,@object            # @checkAgainst\n\t.bss\n\t.globl\tcheckAgainst\n\t.p2align\t3\ncheckAgainst:\n\t.quad\t0                               # 0x0\n\t.size\tcheckAgainst, 8\n\n\t.type\tchecksFailed,@object            # @checksFailed\n\t.globl\tchecksFailed\n\t.p2align\t2\nchecksFailed:\n\t.long\t0                               # 0x0\n\t.size\tchecksFailed, 4\n\n\t.type\t.L.str.3,@object                # @.str.3\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.3:\n\t.asciz\t\" [ failed ]\"\n\t.size\t.L.str.3, 12\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, ptr }\n\n@HEX_DIGEST_LENGTH = dso_local local_unnamed_addr global i32 0, align 4\n@qflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"%s\\00\", align 1\n@rflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [8 x i8] c\"%s \\22%s\\22\\00\", align 1\n@.str.2 = private unnamed_addr constant [15 x i8] c\"%s (\\22%s\\22) = %s\\00\", align 1\n@checkAgainst = dso_local local_unnamed_addr global i64 0, align 8\n@checksFailed = dso_local local_unnamed_addr global i32 0, align 4\n@.str.3 = private unnamed_addr constant [12 x i8] c\" [ failed ]\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @MDString], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @MDString(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = tail call i64 @strlen(ptr noundef %1) #3\n  %4 = load i32, ptr @HEX_DIGEST_LENGTH, align 4, !tbaa !5\n  %5 = zext i32 %4 to i64\n  %6 = alloca i8, i64 %5, align 16\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = call i32 %8(ptr noundef %1, i64 noundef %3, ptr noundef nonnull %6) #3\n  %10 = load i64, ptr @qflag, align 8, !tbaa !12\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %2\n  %13 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, ptr noundef nonnull %6) #3\n  br label %23\n\n14:                                               ; preds = %2\n  %15 = load i64, ptr @rflag, align 8, !tbaa !12\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %14\n  %18 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, ptr noundef nonnull %6, ptr noundef %1) #3\n  br label %23\n\n19:                                               ; preds = %14\n  %20 = load ptr, ptr %0, align 8, !tbaa !14\n  %21 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.2, ptr noundef %20, ptr noundef %1, ptr noundef nonnull %6) #3\n  %22 = load i64, ptr @checkAgainst, align 8, !tbaa !12\n  br label %23\n\n23:                                               ; preds = %19, %17, %12\n  %24 = phi i64 [ %22, %19 ], [ %1, %17 ], [ %1, %12 ]\n  %25 = icmp eq i64 %24, 0\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %23\n  %27 = call i64 @strcasecmp(ptr noundef nonnull %6, i64 noundef %24) #3\n  %28 = icmp eq i64 %27, 0\n  br i1 %28, label %32, label %29\n\n29:                                               ; preds = %26\n  %30 = load i32, ptr @checksFailed, align 4, !tbaa !5\n  %31 = add nsw i32 %30, 1\n  store i32 %31, ptr @checksFailed, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %29, %26, %23\n  %33 = call i32 @putchar(i32 10) #3\n  ret void\n}\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @printf(ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @strcasecmp(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @putchar(i32) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 8}\n!10 = !{!\"TYPE_3__\", !11, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !7, i64 0}\n!14 = !{!10, !11, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, ptr }\n\n@HEX_DIGEST_LENGTH = dso_local local_unnamed_addr global i32 0, align 4\n@qflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"%s\\00\", align 1\n@rflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [8 x i8] c\"%s \\22%s\\22\\00\", align 1\n@.str.2 = private unnamed_addr constant [15 x i8] c\"%s (\\22%s\\22) = %s\\00\", align 1\n@checkAgainst = dso_local local_unnamed_addr global i64 0, align 8\n@checksFailed = dso_local local_unnamed_addr global i32 0, align 4\n@.str.3 = private unnamed_addr constant [12 x i8] c\" [ failed ]\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @MDString], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @MDString(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = tail call i64 @strlen(ptr noundef %1) #3\n  %4 = load i32, ptr @HEX_DIGEST_LENGTH, align 4, !tbaa !5\n  %5 = zext i32 %4 to i64\n  %6 = alloca i8, i64 %5, align 16\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = call i32 %8(ptr noundef %1, i64 noundef %3, ptr noundef nonnull %6) #3\n  %10 = load i64, ptr @qflag, align 8, !tbaa !12\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %2\n  %13 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, ptr noundef nonnull %6) #3\n  br label %23\n\n14:                                               ; preds = %2\n  %15 = load i64, ptr @rflag, align 8, !tbaa !12\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %14\n  %18 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, ptr noundef nonnull %6, ptr noundef %1) #3\n  br label %23\n\n19:                                               ; preds = %14\n  %20 = load ptr, ptr %0, align 8, !tbaa !14\n  %21 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.2, ptr noundef %20, ptr noundef %1, ptr noundef nonnull %6) #3\n  %22 = load i64, ptr @checkAgainst, align 8, !tbaa !12\n  br label %23\n\n23:                                               ; preds = %19, %17, %12\n  %24 = phi i64 [ %22, %19 ], [ %1, %17 ], [ %1, %12 ]\n  %25 = icmp eq i64 %24, 0\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %23\n  %27 = call i64 @strcasecmp(ptr noundef nonnull %6, i64 noundef %24) #3\n  %28 = icmp eq i64 %27, 0\n  br i1 %28, label %32, label %29\n\n29:                                               ; preds = %26\n  %30 = load i32, ptr @checksFailed, align 4, !tbaa !5\n  %31 = add nsw i32 %30, 1\n  store i32 %31, ptr @checksFailed, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %29, %26, %23\n  %33 = call i32 @putchar(i32 10) #3\n  ret void\n}\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @printf(ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @strcasecmp(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @putchar(i32) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 8}\n!10 = !{!\"TYPE_3__\", !11, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !7, i64 0}\n!14 = !{!10, !11, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, ptr }\n\n@HEX_DIGEST_LENGTH = dso_local local_unnamed_addr global i32 0, align 4\n@qflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"%s\\00\", align 1\n@rflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [8 x i8] c\"%s \\22%s\\22\\00\", align 1\n@.str.2 = private unnamed_addr constant [15 x i8] c\"%s (\\22%s\\22) = %s\\00\", align 1\n@checkAgainst = dso_local local_unnamed_addr global i64 0, align 8\n@checksFailed = dso_local local_unnamed_addr global i32 0, align 4\n@.str.3 = private unnamed_addr constant [12 x i8] c\" [ failed ]\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @MDString], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @MDString(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = tail call i64 @strlen(ptr noundef %1) #3\n  %4 = load i32, ptr @HEX_DIGEST_LENGTH, align 4, !tbaa !5\n  %5 = zext i32 %4 to i64\n  %6 = alloca i8, i64 %5, align 16\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = call i32 %8(ptr noundef %1, i64 noundef %3, ptr noundef nonnull %6) #3\n  %10 = load i64, ptr @qflag, align 8, !tbaa !12\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %2\n  %13 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, ptr noundef nonnull %6) #3\n  br label %23\n\n14:                                               ; preds = %2\n  %15 = load i64, ptr @rflag, align 8, !tbaa !12\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %14\n  %18 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, ptr noundef nonnull %6, ptr noundef %1) #3\n  br label %23\n\n19:                                               ; preds = %14\n  %20 = load ptr, ptr %0, align 8, !tbaa !14\n  %21 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.2, ptr noundef %20, ptr noundef %1, ptr noundef nonnull %6) #3\n  %22 = load i64, ptr @checkAgainst, align 8, !tbaa !12\n  br label %23\n\n23:                                               ; preds = %19, %17, %12\n  %24 = phi i64 [ %22, %19 ], [ %1, %17 ], [ %1, %12 ]\n  %25 = icmp eq i64 %24, 0\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %23\n  %27 = call i64 @strcasecmp(ptr noundef nonnull %6, i64 noundef %24) #3\n  %28 = icmp eq i64 %27, 0\n  br i1 %28, label %32, label %29\n\n29:                                               ; preds = %26\n  %30 = load i32, ptr @checksFailed, align 4, !tbaa !5\n  %31 = add nsw i32 %30, 1\n  store i32 %31, ptr @checksFailed, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %29, %26, %23\n  %33 = call i32 @putchar(i32 10) #3\n  ret void\n}\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @printf(ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @strcasecmp(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @putchar(i32) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 8}\n!10 = !{!\"TYPE_3__\", !11, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !7, i64 0}\n!14 = !{!10, !11, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, ptr }\n\n@HEX_DIGEST_LENGTH = dso_local local_unnamed_addr global i32 0, align 4\n@qflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"%s\\00\", align 1\n@rflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [8 x i8] c\"%s \\22%s\\22\\00\", align 1\n@.str.2 = private unnamed_addr constant [15 x i8] c\"%s (\\22%s\\22) = %s\\00\", align 1\n@checkAgainst = dso_local local_unnamed_addr global i64 0, align 8\n@checksFailed = dso_local local_unnamed_addr global i32 0, align 4\n@.str.3 = private unnamed_addr constant [12 x i8] c\" [ failed ]\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @MDString], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @MDString(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = tail call i64 @strlen(ptr noundef %1) #3\n  %4 = load i32, ptr @HEX_DIGEST_LENGTH, align 4, !tbaa !5\n  %5 = zext i32 %4 to i64\n  %6 = alloca i8, i64 %5, align 16\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = call i32 %8(ptr noundef %1, i64 noundef %3, ptr noundef nonnull %6) #3\n  %10 = load i64, ptr @qflag, align 8, !tbaa !12\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %2\n  %13 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, ptr noundef nonnull %6) #3\n  br label %23\n\n14:                                               ; preds = %2\n  %15 = load i64, ptr @rflag, align 8, !tbaa !12\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %14\n  %18 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, ptr noundef nonnull %6, ptr noundef %1) #3\n  br label %23\n\n19:                                               ; preds = %14\n  %20 = load ptr, ptr %0, align 8, !tbaa !14\n  %21 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.2, ptr noundef %20, ptr noundef %1, ptr noundef nonnull %6) #3\n  %22 = load i64, ptr @checkAgainst, align 8, !tbaa !12\n  br label %23\n\n23:                                               ; preds = %19, %17, %12\n  %24 = phi i64 [ %22, %19 ], [ %1, %17 ], [ %1, %12 ]\n  %25 = icmp eq i64 %24, 0\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %23\n  %27 = call i64 @strcasecmp(ptr noundef nonnull %6, i64 noundef %24) #3\n  %28 = icmp eq i64 %27, 0\n  br i1 %28, label %32, label %29\n\n29:                                               ; preds = %26\n  %30 = load i32, ptr @checksFailed, align 4, !tbaa !5\n  %31 = add nsw i32 %30, 1\n  store i32 %31, ptr @checksFailed, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %29, %26, %23\n  %33 = call i32 @putchar(i32 10) #3\n  ret void\n}\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @printf(ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @strcasecmp(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @putchar(i32) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 8}\n!10 = !{!\"TYPE_3__\", !11, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !7, i64 0}\n!14 = !{!10, !11, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sbin/md5/extr_md5.c_MDString.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, ptr }\n\n@HEX_DIGEST_LENGTH = dso_local local_unnamed_addr global i32 0, align 4\n@qflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [3 x i8] c\"%s\\00\", align 1\n@rflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [8 x i8] c\"%s \\22%s\\22\\00\", align 1\n@.str.2 = private unnamed_addr constant [15 x i8] c\"%s (\\22%s\\22) = %s\\00\", align 1\n@checkAgainst = dso_local local_unnamed_addr global i64 0, align 8\n@checksFailed = dso_local local_unnamed_addr global i32 0, align 4\n@.str.3 = private unnamed_addr constant [12 x i8] c\" [ failed ]\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @MDString], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @MDString(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {\n  %3 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1)\n  %4 = load i32, ptr @HEX_DIGEST_LENGTH, align 4, !tbaa !5\n  %5 = zext i32 %4 to i64\n  %6 = alloca i8, i64 %5, align 16\n  %7 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = call i32 %8(ptr noundef %1, i64 noundef %3, ptr noundef nonnull %6) #5\n  %10 = load i64, ptr @qflag, align 8, !tbaa !12\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %14, label %12\n\n12:                                               ; preds = %2\n  %13 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str, ptr noundef nonnull %6)\n  br label %22\n\n14:                                               ; preds = %2\n  %15 = load i64, ptr @rflag, align 8, !tbaa !12\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %19, label %17\n\n17:                                               ; preds = %14\n  %18 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.1, ptr noundef nonnull %6, ptr noundef %1)\n  br label %22\n\n19:                                               ; preds = %14\n  %20 = load ptr, ptr %0, align 8, !tbaa !14\n  %21 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.2, ptr noundef %20, ptr noundef %1, ptr noundef nonnull %6)\n  br label %22\n\n22:                                               ; preds = %17, %19, %12\n  %23 = load i64, ptr @checkAgainst, align 8, !tbaa !12\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %35, label %25\n\n25:                                               ; preds = %22\n  %26 = call i64 @strcasecmp(ptr noundef nonnull %6, i64 noundef %23) #5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %35, label %28\n\n28:                                               ; preds = %25\n  %29 = load i32, ptr @checksFailed, align 4, !tbaa !5\n  %30 = add nsw i32 %29, 1\n  store i32 %30, ptr @checksFailed, align 4, !tbaa !5\n  %31 = load i64, ptr @qflag, align 8, !tbaa !12\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %33, label %35\n\n33:                                               ; preds = %28\n  %34 = call i32 (ptr, ...) @printf(ptr noundef nonnull @.str.3)\n  br label %35\n\n35:                                               ; preds = %28, %33, %25, %22\n  %36 = call i32 @putchar(i32 10)\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn\ndeclare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #2\n\ndeclare i64 @strcasecmp(ptr noundef, i64 noundef) local_unnamed_addr #3\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nofree nounwind readonly willreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nofree nounwind }\nattributes #5 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 8}\n!10 = !{!\"TYPE_3__\", !11, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !7, i64 0}\n!14 = !{!10, !11, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_devices.c_iwl6000_nic_config.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function iwl6000_nic_config\n\t.type\tiwl6000_nic_config,@function\niwl6000_nic_config:                     # @iwl6000_nic_config\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t16(%rdi), %rax\n\tmovl\t(%rax), %eax\n\taddl\t$-128, %eax\n\tcmpl\t$5, %eax\n\tja\t.LBB0_8\n# %bb.1:\n\tmovq\t%rdi, %rbx\n\tjmpq\t*.LJTI0_0(,%rax,8)\n.LBB0_9:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_8:\n\t.cfi_def_cfa_offset 16\n\tmovl\t$1, %edi\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tWARN_ON@PLT                     # TAILCALL\n.LBB0_5:\n\t.cfi_def_cfa_offset 16\n\tmovq\t8(%rbx), %rax\n\tcmpl\t$6, (%rax)\n\tjl\t.LBB0_7\n# %bb.6:\n\tmovl\t(%rbx), %edi\n\tmovl\tCSR_GP_DRIVER_REG(%rip), %esi\n\tmovl\tCSR_GP_DRIVER_REG_BIT_CALIB_VERSION6(%rip), %edx\n\tcallq\tiwl_set_bit@PLT\n.LBB0_7:\n\tmovl\t(%rbx), %edi\n\tmovl\tCSR_GP_DRIVER_REG(%rip), %esi\n\tmovl\tCSR_GP_DRIVER_REG_BIT_6050_1x2(%rip), %edx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tiwl_set_bit@PLT                 # TAILCALL\n.LBB0_2:\n\t.cfi_def_cfa_offset 16\n\tmovl\t(%rbx), %edi\n\tmovl\tCSR_GP_DRIVER_REG(%rip), %esi\n\tmovl\tCSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA(%rip), %edx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tiwl_write32@PLT                 # TAILCALL\n.LBB0_3:\n\t.cfi_def_cfa_offset 16\n\tmovq\t8(%rbx), %rax\n\tcmpl\t$6, (%rax)\n\tjl\t.LBB0_9\n# %bb.4:\n\tmovl\t(%rbx), %edi\n\tmovl\tCSR_GP_DRIVER_REG(%rip), %esi\n\tmovl\tCSR_GP_DRIVER_REG_BIT_CALIB_VERSION6(%rip), %edx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tjmp\tiwl_set_bit@PLT                 # TAILCALL\n.Lfunc_end0:\n\t.size\tiwl6000_nic_config, .Lfunc_end0-iwl6000_nic_config\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_3\n\t.quad\t.LBB0_9\n\t.quad\t.LBB0_9\n\t.quad\t.LBB0_2\n\t.quad\t.LBB0_9\n                                        # -- End function\n\t.type\tCSR_GP_DRIVER_REG,@object       # @CSR_GP_DRIVER_REG\n\t.bss\n\t.globl\tCSR_GP_DRIVER_REG\n\t.p2align\t2\nCSR_GP_DRIVER_REG:\n\t.long\t0                               # 0x0\n\t.size\tCSR_GP_DRIVER_REG, 4\n\n\t.type\tCSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA,@object # @CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA\n\t.globl\tCSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA\n\t.p2align\t2\nCSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA:\n\t.long\t0                               # 0x0\n\t.size\tCSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA, 4\n\n\t.type\tCSR_GP_DRIVER_REG_BIT_CALIB_VERSION6,@object # @CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6\n\t.globl\tCSR_GP_DRIVER_REG_BIT_CALIB_VERSION6\n\t.p2align\t2\nCSR_GP_DRIVER_REG_BIT_CALIB_VERSION6:\n\t.long\t0                               # 0x0\n\t.size\tCSR_GP_DRIVER_REG_BIT_CALIB_VERSION6, 4\n\n\t.type\tCSR_GP_DRIVER_REG_BIT_6050_1x2,@object # @CSR_GP_DRIVER_REG_BIT_6050_1x2\n\t.globl\tCSR_GP_DRIVER_REG_BIT_6050_1x2\n\t.p2align\t2\nCSR_GP_DRIVER_REG_BIT_6050_1x2:\n\t.long\t0                               # 0x0\n\t.size\tCSR_GP_DRIVER_REG_BIT_6050_1x2, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iwl_priv = type { i32, ptr, ptr }\n\n@CSR_GP_DRIVER_REG = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6 = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_6050_1x2 = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iwl6000_nic_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iwl6000_nic_config(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  switch i32 %4, label %29 [\n    i32 130, label %5\n    i32 129, label %15\n    i32 128, label %15\n    i32 131, label %23\n    i32 132, label %23\n    i32 133, label %23\n    i32 134, label %23\n  ]\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr %0, align 8, !tbaa !13\n  %7 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %8 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA, align 4, !tbaa !14\n  %9 = tail call i32 @iwl_write32(i32 noundef %6, i32 noundef %7, i32 noundef %8) #2\n  br label %29\n\n10:                                               ; preds = %1\n  %11 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !15\n  %13 = load i32, ptr %12, align 4, !tbaa !16\n  %14 = icmp slt i32 %13, 6\n  br i1 %14, label %29, label %18\n\n15:                                               ; preds = %1, %1\n  %16 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %17 = load ptr, ptr %16, align 8, !tbaa !15\n  br label %23\n\n18:                                               ; preds = %10\n  %19 = load i32, ptr %0, align 8, !tbaa !13\n  %20 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %21 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6, align 4, !tbaa !14\n  %22 = tail call i32 @iwl_set_bit(i32 noundef %19, i32 noundef %20, i32 noundef %21) #2\n  br label %29\n\n23:                                               ; preds = %1, %1, %1, %1\n  %24 = load i32, ptr %0, align 8, !tbaa !13\n  %25 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %26 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_6050_1x2, align 4, !tbaa !14\n  %27 = tail call i32 @iwl_set_bit(i32 noundef %24, i32 noundef %25, i32 noundef %26) #2\n  br label %29\n\n28:                                               ; preds = %18, %23\n  ret void\n\n29:                                               ; preds = %1, %10, %23, %15, %5\n  %30 = tail call i32 @WARN_ON(i32 noundef 1) #2\n  br label %28\n}\n\ndeclare i32 @iwl_write32(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iwl_set_bit(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @WARN_ON(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"iwl_priv\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_2__\", !7, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"TYPE_3__\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iwl_priv = type { i32, ptr, ptr }\n\n@CSR_GP_DRIVER_REG = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6 = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_6050_1x2 = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iwl6000_nic_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iwl6000_nic_config(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  switch i32 %4, label %30 [\n    i32 130, label %5\n    i32 129, label %13\n    i32 128, label %21\n    i32 131, label %21\n    i32 132, label %21\n    i32 133, label %21\n    i32 134, label %21\n  ]\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr %0, align 8, !tbaa !13\n  %7 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %8 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA, align 4, !tbaa !14\n  %9 = tail call i32 @iwl_write32(i32 noundef %6, i32 noundef %7, i32 noundef %8) #2\n  %10 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %11 = load ptr, ptr %10, align 8, !tbaa !15\n  %12 = load i32, ptr %11, align 4, !tbaa !16\n  br label %30\n\n13:                                               ; preds = %1\n  %14 = load i32, ptr %0, align 8, !tbaa !13\n  %15 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %16 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA, align 4, !tbaa !14\n  %17 = tail call i32 @iwl_write32(i32 noundef %14, i32 noundef %15, i32 noundef %16) #2\n  %18 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %19 = load ptr, ptr %18, align 8, !tbaa !15\n  %20 = load i32, ptr %19, align 4, !tbaa !16\n  br label %30\n\n21:                                               ; preds = %1, %1, %1, %1, %1\n  %22 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %23 = load ptr, ptr %22, align 8, !tbaa !15\n  %24 = load i32, ptr %23, align 4, !tbaa !16\n  %25 = icmp sgt i32 %24, 5\n  br i1 %25, label %26, label %30\n\n26:                                               ; preds = %21\n  %27 = load i32, ptr %0, align 8, !tbaa !13\n  %28 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %29 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6, align 4, !tbaa !14\n  br label %30\n\n30:                                               ; preds = %21, %26, %1, %5, %13\n  ret void\n}\n\ndeclare i32 @iwl_write32(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"iwl_priv\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_2__\", !7, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"TYPE_3__\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iwl_priv = type { i32, ptr, ptr }\n\n@CSR_GP_DRIVER_REG = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6 = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_6050_1x2 = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iwl6000_nic_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iwl6000_nic_config(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  switch i32 %4, label %30 [\n    i32 130, label %5\n    i32 129, label %16\n    i32 128, label %24\n    i32 131, label %24\n    i32 132, label %24\n    i32 133, label %24\n    i32 134, label %24\n  ]\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr %0, align 8, !tbaa !13\n  %7 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %8 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA, align 4, !tbaa !14\n  %9 = tail call i32 @iwl_write32(i32 noundef %6, i32 noundef %7, i32 noundef %8) #2\n  %10 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %11 = load ptr, ptr %10, align 8, !tbaa !15\n  %12 = load i32, ptr %11, align 4, !tbaa !16\n  %13 = icmp sgt i32 %12, 5\n  br i1 %13, label %14, label %24\n\n14:                                               ; preds = %5\n  %15 = load i32, ptr %0, align 8, !tbaa !13\n  br label %24\n\n16:                                               ; preds = %1\n  %17 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !15\n  %19 = load i32, ptr %18, align 4, !tbaa !16\n  %20 = icmp sgt i32 %19, 5\n  br i1 %20, label %21, label %24\n\n21:                                               ; preds = %16\n  %22 = load i32, ptr %0, align 8, !tbaa !13\n  %23 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  br label %24\n\n24:                                               ; preds = %1, %1, %1, %1, %1, %16, %21, %5, %14\n  %25 = phi i32 [ %15, %14 ], [ %22, %21 ], [ %12, %5 ], [ %19, %16 ], [ %6, %1 ], [ %6, %1 ], [ %6, %1 ], [ %6, %1 ], [ %6, %1 ]\n  %26 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %27 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6, align 4, !tbaa !14\n  %28 = tail call i32 @iwl_set_bit(i32 noundef %25, i32 noundef %26, i32 noundef %27) #2\n  %29 = load i32, ptr %0, align 8, !tbaa !13\n  br label %30\n\n30:                                               ; preds = %24, %1\n  %31 = phi i32 [ %29, %24 ], [ %6, %1 ]\n  %32 = tail call i32 @WARN_ON(i32 noundef 1) #2\n  ret void\n}\n\ndeclare i32 @iwl_write32(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iwl_set_bit(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @WARN_ON(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"iwl_priv\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_2__\", !7, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"TYPE_3__\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iwl_priv = type { i32, ptr, ptr }\n\n@CSR_GP_DRIVER_REG = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6 = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_6050_1x2 = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iwl6000_nic_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iwl6000_nic_config(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  switch i32 %4, label %30 [\n    i32 130, label %5\n    i32 129, label %16\n    i32 128, label %23\n    i32 131, label %23\n    i32 132, label %23\n    i32 133, label %23\n    i32 134, label %23\n  ]\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr %0, align 8, !tbaa !13\n  %7 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %8 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA, align 4, !tbaa !14\n  %9 = tail call i32 @iwl_write32(i32 noundef %6, i32 noundef %7, i32 noundef %8) #2\n  %10 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %11 = load ptr, ptr %10, align 8, !tbaa !15\n  %12 = load i32, ptr %11, align 4, !tbaa !16\n  %13 = icmp sgt i32 %12, 5\n  br i1 %13, label %14, label %23\n\n14:                                               ; preds = %5\n  %15 = load i32, ptr %0, align 8, !tbaa !13\n  br label %23\n\n16:                                               ; preds = %1\n  %17 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !15\n  %19 = load i32, ptr %18, align 4, !tbaa !16\n  %20 = icmp sgt i32 %19, 5\n  br i1 %20, label %21, label %23\n\n21:                                               ; preds = %16\n  %22 = load i32, ptr %0, align 8, !tbaa !13\n  br label %23\n\n23:                                               ; preds = %1, %1, %1, %1, %1, %21, %16, %5\n  %24 = phi i32 [ %22, %21 ], [ %15, %14 ], [ %6, %5 ], [ %6, %1 ], [ %6, %1 ], [ %6, %1 ], [ %6, %1 ], [ %6, %1 ]\n  %25 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %26 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6, align 4, !tbaa !14\n  %27 = tail call i32 @iwl_set_bit(i32 noundef %24, i32 noundef %25, i32 noundef %26) #2\n  %28 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %29 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_6050_1x2, align 4, !tbaa !14\n  br label %30\n\n30:                                               ; preds = %23, %1\n  %31 = tail call i32 @WARN_ON(i32 noundef 1) #2\n  ret void\n}\n\ndeclare i32 @iwl_write32(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iwl_set_bit(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @WARN_ON(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"iwl_priv\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_2__\", !7, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"TYPE_3__\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/drivers/net/wireless/iwlwifi/dvm/extr_devices.c_iwl6000_nic_config.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iwl_priv = type { i32, ptr, ptr }\n\n@CSR_GP_DRIVER_REG = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6 = dso_local local_unnamed_addr global i32 0, align 4\n@CSR_GP_DRIVER_REG_BIT_6050_1x2 = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iwl6000_nic_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iwl6000_nic_config(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr %3, align 4, !tbaa !11\n  switch i32 %4, label %35 [\n    i32 131, label %37\n    i32 130, label %37\n    i32 133, label %37\n    i32 132, label %5\n    i32 129, label %10\n    i32 128, label %20\n  ]\n\n5:                                                ; preds = %1\n  %6 = load i32, ptr %0, align 8, !tbaa !13\n  %7 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %8 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_RADIO_SKU_2x2_IPA, align 4, !tbaa !14\n  %9 = tail call i32 @iwl_write32(i32 noundef %6, i32 noundef %7, i32 noundef %8) #2\n  br label %37\n\n10:                                               ; preds = %1\n  %11 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !15\n  %13 = load i32, ptr %12, align 4, !tbaa !16\n  %14 = icmp sgt i32 %13, 5\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %10\n  %16 = load i32, ptr %0, align 8, !tbaa !13\n  %17 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %18 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6, align 4, !tbaa !14\n  %19 = tail call i32 @iwl_set_bit(i32 noundef %16, i32 noundef %17, i32 noundef %18) #2\n  br label %37\n\n20:                                               ; preds = %1\n  %21 = getelementptr inbounds %struct.iwl_priv, ptr %0, i64 0, i32 1\n  %22 = load ptr, ptr %21, align 8, !tbaa !15\n  %23 = load i32, ptr %22, align 4, !tbaa !16\n  %24 = icmp sgt i32 %23, 5\n  br i1 %24, label %25, label %30\n\n25:                                               ; preds = %20\n  %26 = load i32, ptr %0, align 8, !tbaa !13\n  %27 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %28 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_CALIB_VERSION6, align 4, !tbaa !14\n  %29 = tail call i32 @iwl_set_bit(i32 noundef %26, i32 noundef %27, i32 noundef %28) #2\n  br label %30\n\n30:                                               ; preds = %25, %20\n  %31 = load i32, ptr %0, align 8, !tbaa !13\n  %32 = load i32, ptr @CSR_GP_DRIVER_REG, align 4, !tbaa !14\n  %33 = load i32, ptr @CSR_GP_DRIVER_REG_BIT_6050_1x2, align 4, !tbaa !14\n  %34 = tail call i32 @iwl_set_bit(i32 noundef %31, i32 noundef %32, i32 noundef %33) #2\n  br label %37\n\n35:                                               ; preds = %1\n  %36 = tail call i32 @WARN_ON(i32 noundef 1) #2\n  br label %37\n\n37:                                               ; preds = %10, %15, %1, %1, %1, %35, %30, %5\n  ret void\n}\n\ndeclare i32 @iwl_write32(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iwl_set_bit(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @WARN_ON(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"iwl_priv\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_3__\", !7, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"TYPE_4__\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ngene-core.c_ngene_init.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ngene_init\n\t.type\tngene_init,@function\nngene_init:                             # @ngene_init\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tmovq\t40(%rdi), %r14\n\taddq\t$32, %rdi\n\tmovl\tevent_tasklet(%rip), %esi\n\tmovq\t%rbx, %rdx\n\tcallq\ttasklet_init@PLT\n\tmovl\t$49152, %edi                    # imm = 0xC000\n\taddq\t24(%rbx), %rdi\n\txorl\t%esi, %esi\n\tmovl\t$544, %edx                      # imm = 0x220\n\tcallq\tmemset_io@PLT\n\tmovl\t$50176, %edi                    # imm = 0xC400\n\taddq\t24(%rbx), %rdi\n\txorl\t%esi, %esi\n\tmovl\t$256, %edx                      # imm = 0x100\n\tcallq\tmemset_io@PLT\n\tcmpl\t$0, MAX_STREAM(%rip)\n\tjle\t.LBB0_3\n# %bb.1:\n\tmovq\t16(%rbx), %rax\n\taddq\t$8, %rax\n\txorl\t%ecx, %ecx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rbx, (%rax)\n\tmovl\t%ecx, -8(%rax)\n\tincq\t%rcx\n\tmovslq\tMAX_STREAM(%rip), %rdx\n\taddq\t$16, %rax\n\tcmpq\t%rdx, %rcx\n\tjl\t.LBB0_2\n.LBB0_3:\n\tmovq\t$0, 8(%rbx)\n\tmovl\tNGENE_INT_ENABLE(%rip), %esi\n\txorl\t%edi, %edi\n\tcallq\tngwritel@PLT\n\tmovl\tNGENE_INT_COUNTS(%rip), %edi\n\tcallq\tngreadl@PLT\n\tmovl\t%eax, (%rbx)\n\tmovl\tDEV_VER(%rip), %edi\n\tcallq\tngreadl@PLT\n\tandl\t$15, %eax\n\tmovl\t%eax, 4(%rbx)\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %edx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tdev_info@PLT                    # TAILCALL\n.Lfunc_end0:\n\t.size\tngene_init, .Lfunc_end0-ngene_init\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tevent_tasklet,@object           # @event_tasklet\n\t.bss\n\t.globl\tevent_tasklet\n\t.p2align\t2\nevent_tasklet:\n\t.long\t0                               # 0x0\n\t.size\tevent_tasklet, 4\n\n\t.type\tMAX_STREAM,@object              # @MAX_STREAM\n\t.globl\tMAX_STREAM\n\t.p2align\t2\nMAX_STREAM:\n\t.long\t0                               # 0x0\n\t.size\tMAX_STREAM, 4\n\n\t.type\tNGENE_INT_ENABLE,@object        # @NGENE_INT_ENABLE\n\t.globl\tNGENE_INT_ENABLE\n\t.p2align\t2\nNGENE_INT_ENABLE:\n\t.long\t0                               # 0x0\n\t.size\tNGENE_INT_ENABLE, 4\n\n\t.type\tNGENE_INT_COUNTS,@object        # @NGENE_INT_COUNTS\n\t.globl\tNGENE_INT_COUNTS\n\t.p2align\t2\nNGENE_INT_COUNTS:\n\t.long\t0                               # 0x0\n\t.size\tNGENE_INT_COUNTS, 4\n\n\t.type\tDEV_VER,@object                 # @DEV_VER\n\t.globl\tDEV_VER\n\t.p2align\t2\nDEV_VER:\n\t.long\t0                               # 0x0\n\t.size\tDEV_VER, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Device version %d\\n\"\n\t.size\t.L.str, 19\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ngene = type { i32, i32, i64, ptr, i32, i32 }\n%struct.TYPE_2__ = type { i32, i32, ptr }\n\n@event_tasklet = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_COUNTS = dso_local local_unnamed_addr global i32 0, align 4\n@DEV_VER = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [19 x i8] c\"Device version %d\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngene_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ngene_init(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 5\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 4\n  %5 = load i32, ptr @event_tasklet, align 4, !tbaa !12\n  %6 = tail call i32 @tasklet_init(ptr noundef nonnull %4, i32 noundef %5, ptr noundef %0) #2\n  %7 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !13\n  %9 = getelementptr inbounds i32, ptr %8, i64 8192\n  %10 = tail call i32 @memset_io(ptr noundef nonnull %9, i32 noundef 0, i32 noundef 544) #2\n  %11 = load ptr, ptr %7, align 8, !tbaa !13\n  %12 = getelementptr inbounds i32, ptr %11, i64 8196\n  %13 = tail call i32 @memset_io(ptr noundef nonnull %12, i32 noundef 0, i32 noundef 256) #2\n  %14 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  %15 = icmp sgt i32 %14, 0\n  br i1 %15, label %16, label %25\n\n16:                                               ; preds = %1\n  %17 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !14\n  %19 = getelementptr inbounds %struct.TYPE_2__, ptr %18, i64 0, i32 2\n  br label %20\n\n20:                                               ; preds = %16, %20\n  %21 = phi i64 [ 0, %16 ], [ %22, %20 ]\n  %22 = add nuw nsw i64 %21, 1\n  store ptr %0, ptr %19, align 8, !tbaa !15\n  %23 = trunc i64 %21 to i32\n  store i32 %23, ptr %18, align 8, !tbaa !17\n  %24 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  br i1 %22 < %24, label %20, label %25, !llvm.loop !18\n\n25:                                               ; preds = %20, %1\n  %26 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  store i64 0, ptr %26, align 8, !tbaa !14\n  %27 = load i32, ptr @NGENE_INT_ENABLE, align 4, !tbaa !12\n  %28 = tail call i32 @ngwritel(i32 noundef 0, i32 noundef %27) #2\n  %29 = load i32, ptr @NGENE_INT_COUNTS, align 4, !tbaa !12\n  %30 = tail call i32 @ngreadl(i32 noundef %29) #2\n  store i32 %30, ptr %0, align 8, !tbaa !20\n  %31 = load i32, ptr @DEV_VER, align 4, !tbaa !12\n  %32 = tail call i32 @ngreadl(i32 noundef %31) #2\n  %33 = and i32 %32, 15\n  %34 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 1\n  store i32 %33, ptr %34, align 4, !tbaa !21\n  %35 = tail call i32 @dev_info(ptr noundef %3, ptr noundef nonnull @.str, i32 noundef %33) #2\n  ret void\n}\n\ndeclare i32 @tasklet_init(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset_io(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngwritel(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngreadl(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 40}\n!6 = !{!\"ngene\", !7, i64 0, !7, i64 4, !10, i64 8, !11, i64 16, !7, i64 24, !7, i64 32}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !11, i64 16}\n!14 = !{!6, !11, i64 8}\n!15 = !{!16, !11, i64 8}\n!16 = !{!\"TYPE_2__\", !7, i64 0, !7, i64 4, !11, i64 8}\n!17 = !{!16, !7, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n!20 = !{!6, !7, i64 0}\n!21 = !{!6, !7, i64 4}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ngene = type { i32, i32, i64, ptr, i64, i32 }\n%struct.TYPE_2__ = type { i32, i32, ptr }\n\n@event_tasklet = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_COUNTS = dso_local local_unnamed_addr global i32 0, align 4\n@DEV_VER = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [19 x i8] c\"Device version %d\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngene_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ngene_init(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 5\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 4\n  %5 = load i32, ptr @event_tasklet, align 4, !tbaa !12\n  %6 = tail call i32 @tasklet_init(ptr noundef nonnull %4, i32 noundef %5, ptr noundef %0) #2\n  %7 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 3\n  %8 = load i64, ptr %7, align 8, !tbaa !13\n  %9 = add nsw i64 %8, 49152\n  %10 = tail call i32 @memset_io(i64 noundef %9, i32 noundef 0, i32 noundef 544) #2\n  %11 = load i64, ptr %7, align 8, !tbaa !13\n  %12 = add nsw i64 %11, 50176\n  %13 = tail call i32 @memset_io(i64 noundef %12, i32 noundef 0, i32 noundef 256) #2\n  %14 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  %15 = icmp sgt i32 %14, 0\n  br i1 %15, label %16, label %26\n\n16:                                               ; preds = %1\n  %17 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !14\n  br label %19\n\n19:                                               ; preds = %16, %19\n  %20 = phi i64 [ 0, %16 ], [ %22, %19 ]\n  %21 = getelementptr inbounds %struct.TYPE_2__, ptr %18, i64 %20\n  store ptr %0, ptr %21, align 8, !tbaa !15\n  %22 = add nuw nsw i64 %20, 1\n  %23 = trunc i64 %22 to i32\n  store i32 %23, ptr %21, align 8, !tbaa !15\n  %24 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  %25 = sext i32 %24 to i64\n  %26 = icmp slt i64 %22, %25\n  br i1 %26, label %19, label %29, !llvm.loop !17\n\n27:                                               ; preds = %29\n  %28 = add nuw nsw i64 %30, 1\n  store i64 %28, ptr %0, align 8, !tbaa !19\n  br label %33\n\n29:                                               ; preds = %19\n  %30 = phi i64 [ 0, %19 ], [ %28, %27 ]\n  %31 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  %32 = load i64, ptr %31, align 8, !tbaa !14\n  store i64 %32, ptr %0, align 8, !tbaa !19\n  br label %33\n\n33:                                               ; preds = %29, %27\n  %34 = load i32, ptr @NGENE_INT_ENABLE, align 4, !tbaa !12\n  %35 = tail call i32 @ngwritel(i32 noundef 0, i32 noundef %34) #2\n  %36 = load i32, ptr @NGENE_INT_COUNTS, align 4, !tbaa !12\n  %37 = tail call i32 @ngreadl(i32 noundef %36) #2\n  store i32 %37, ptr %0, align 8, !tbaa !19\n  %38 = load i32, ptr @DEV_VER, align 4, !tbaa !12\n  %39 = tail call i32 @ngreadl(i32 noundef %38) #2\n  %40 = and i32 %39, 15\n  %41 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 1\n  store i32 %40, ptr %41, align 4, !tbaa !20\n  %42 = tail call i32 @dev_info(ptr noundef %3, ptr noundef nonnull @.str, i32 noundef %40) #2\n  ret void\n}\n\ndeclare i32 @tasklet_init(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset_io(i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngwritel(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngreadl(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 40}\n!6 = !{!\"ngene\", !7, i64 0, !7, i64 4, !10, i64 8, !11, i64 16, !10, i64 24, !7, i64 32}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 24}\n!14 = !{!6, !11, i64 16}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"TYPE_2__\", !7, i64 0, !7, i64 4, !11, i64 8}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n!19 = !{!6, !10, i64 0}\n!20 = !{!6, !7, i64 4}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ngene = type { i32, i32, ptr, ptr, i32, i32 }\n%struct.TYPE_2__ = type { ptr, i32 }\n\n@event_tasklet = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_COUNTS = dso_local local_unnamed_addr global i32 0, align 4\n@DEV_VER = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [19 x i8] c\"Device version %d\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngene_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ngene_init(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 5\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 4\n  %5 = load i32, ptr @event_tasklet, align 4, !tbaa !11\n  %6 = tail call i32 @tasklet_init(ptr noundef nonnull %4, i32 noundef %5, ptr noundef %0) #2\n  %7 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !12\n  %9 = getelementptr inbounds i32, ptr %8, i64 8192\n  %10 = tail call i32 @memset_io(ptr noundef nonnull %9, i32 noundef 0, i32 noundef 544) #2\n  %11 = load ptr, ptr %7, align 8, !tbaa !12\n  %12 = getelementptr inbounds i32, ptr %11, i64 8196\n  %13 = tail call i32 @memset_io(ptr noundef nonnull %12, i32 noundef 0, i32 noundef 256) #2\n  %14 = load i32, ptr @MAX_STREAM, align 4, !tbaa !11\n  %15 = icmp sgt i32 %14, 0\n  br i1 %15, label %16, label %25\n\n16:                                               ; preds = %1\n  %17 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !13\n  %19 = getelementptr inbounds %struct.TYPE_2__, ptr %18, i64 0, i32 1\n  br label %20\n\n20:                                               ; preds = %16, %20\n  %21 = phi i64 [ 0, %16 ], [ %22, %20 ]\n  %22 = add nuw nsw i64 %21, 1\n  %23 = getelementptr inbounds %struct.TYPE_2__, ptr %18, i64 %22\n  store ptr %0, ptr %23, align 8, !tbaa !14\n  %24 = trunc i64 %22 to i32\n  store i32 %24, ptr %19, align 8, !tbaa !16\n  br label %20\n\n25:                                               ; preds = %1\n  %26 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  store ptr null, ptr %26, align 8, !tbaa !13\n  %27 = load i32, ptr @NGENE_INT_ENABLE, align 4, !tbaa !11\n  %28 = tail call i32 @ngwritel(i32 noundef 0, i32 noundef %27) #2\n  %29 = load i32, ptr @NGENE_INT_COUNTS, align 4, !tbaa !11\n  %30 = tail call i32 @ngreadl(i32 noundef %29) #2\n  store i32 %30, ptr %0, align 8, !tbaa !17\n  %31 = load i32, ptr @DEV_VER, align 4, !tbaa !11\n  %32 = tail call i32 @ngreadl(i32 noundef %31) #2\n  %33 = and i32 %32, 15\n  %34 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 1\n  store i32 %33, ptr %34, align 4, !tbaa !18\n  %35 = tail call i32 @dev_info(ptr noundef %3, ptr noundef nonnull @.str, i32 noundef %33) #2\n  ret void\n}\n\ndeclare i32 @tasklet_init(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset_io(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngwritel(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngreadl(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 40}\n!6 = !{!\"ngene\", !7, i64 0, !7, i64 4, !10, i64 8, !10, i64 16, !7, i64 24, !7, i64 28}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!6, !10, i64 16}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"TYPE_2__\", !10, i64 0, !7, i64 8}\n!16 = !{!15, !7, i64 8}\n!17 = !{!6, !7, i64 0}\n!18 = !{!6, !7, i64 4}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ngene = type { i32, i32, i64, ptr, i32, i32 }\n%struct.TYPE_2__ = type { i32, i32, ptr }\n\n@event_tasklet = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_COUNTS = dso_local local_unnamed_addr global i32 0, align 4\n@DEV_VER = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [19 x i8] c\"Device version %d\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngene_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ngene_init(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 5\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 4\n  %5 = load i32, ptr @event_tasklet, align 4, !tbaa !12\n  %6 = tail call i32 @tasklet_init(ptr noundef nonnull %4, i32 noundef %5, ptr noundef %0) #2\n  %7 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 3\n  %8 = load ptr, ptr %7, align 8, !tbaa !13\n  %9 = getelementptr inbounds i32, ptr %8, i64 8192\n  %10 = tail call i32 @memset_io(ptr noundef nonnull %9, i32 noundef 0, i32 noundef 544) #2\n  %11 = load ptr, ptr %7, align 8, !tbaa !13\n  %12 = getelementptr inbounds i32, ptr %11, i64 8196\n  %13 = tail call i32 @memset_io(ptr noundef nonnull %12, i32 noundef 0, i32 noundef 256) #2\n  %14 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  %15 = icmp sgt i32 %14, 0\n  br i1 %15, label %16, label %25\n\n16:                                               ; preds = %1\n  %17 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !14\n  %19 = getelementptr inbounds %struct.TYPE_2__, ptr %18, i64 0, i32 2\n  br label %20\n\n20:                                               ; preds = %16, %20\n  %21 = phi i64 [ 0, %16 ], [ %22, %20 ]\n  %22 = add nuw nsw i64 %21, 1\n  store ptr %0, ptr %19, align 8, !tbaa !15\n  %23 = trunc i64 %21 to i32\n  store i32 %23, ptr %18, align 8, !tbaa !17\n  %24 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  br i1 %22 < %24, label %20, label %25, !llvm.loop !18\n\n25:                                               ; preds = %20, %1\n  %26 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  store i64 0, ptr %26, align 8, !tbaa !14\n  %27 = load i32, ptr @NGENE_INT_ENABLE, align 4, !tbaa !12\n  %28 = tail call i32 @ngwritel(i32 noundef 0, i32 noundef %27) #2\n  %29 = load i32, ptr @NGENE_INT_COUNTS, align 4, !tbaa !12\n  %30 = tail call i32 @ngreadl(i32 noundef %29) #2\n  store i32 %30, ptr %0, align 8, !tbaa !20\n  %31 = load i32, ptr @DEV_VER, align 4, !tbaa !12\n  %32 = tail call i32 @ngreadl(i32 noundef %31) #2\n  %33 = and i32 %32, 15\n  %34 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 1\n  store i32 %33, ptr %34, align 4, !tbaa !21\n  %35 = tail call i32 @dev_info(ptr noundef %3, ptr noundef nonnull @.str, i32 noundef %33) #2\n  ret void\n}\n\ndeclare i32 @tasklet_init(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset_io(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngwritel(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngreadl(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 40}\n!6 = !{!\"ngene\", !7, i64 0, !7, i64 4, !10, i64 8, !11, i64 16, !7, i64 24, !7, i64 32}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !11, i64 16}\n!14 = !{!6, !11, i64 8}\n!15 = !{!16, !11, i64 8}\n!16 = !{!\"TYPE_2__\", !7, i64 0, !7, i64 4, !11, i64 8}\n!17 = !{!16, !7, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n!20 = !{!6, !7, i64 0}\n!21 = !{!6, !7, i64 4}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/media/pci/ngene/extr_ngene-core.c_ngene_init.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ngene = type { i32, i32, i64, ptr, i64, i32, ptr }\n%struct.TYPE_4__ = type { i32, ptr }\n\n@event_tasklet = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_STREAM = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_ENABLE = dso_local local_unnamed_addr global i32 0, align 4\n@NGENE_INT_COUNTS = dso_local local_unnamed_addr global i32 0, align 4\n@DEV_VER = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [19 x i8] c\"Device version %d\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngene_init], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ngene_init(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 6\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 5\n  %5 = load i32, ptr @event_tasklet, align 4, !tbaa !12\n  %6 = ptrtoint ptr %0 to i64\n  %7 = tail call i32 @tasklet_init(ptr noundef nonnull %4, i32 noundef %5, i64 noundef %6) #2\n  %8 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 4\n  %9 = load i64, ptr %8, align 8, !tbaa !13\n  %10 = add nsw i64 %9, 49152\n  %11 = tail call i32 @memset_io(i64 noundef %10, i32 noundef 0, i32 noundef 544) #2\n  %12 = load i64, ptr %8, align 8, !tbaa !13\n  %13 = add nsw i64 %12, 50176\n  %14 = tail call i32 @memset_io(i64 noundef %13, i32 noundef 0, i32 noundef 256) #2\n  %15 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  %16 = icmp sgt i32 %15, 0\n  br i1 %16, label %17, label %29\n\n17:                                               ; preds = %1\n  %18 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 3\n  %19 = load ptr, ptr %18, align 8, !tbaa !14\n  br label %20\n\n20:                                               ; preds = %17, %20\n  %21 = phi i64 [ 0, %17 ], [ %25, %20 ]\n  %22 = getelementptr inbounds %struct.TYPE_4__, ptr %19, i64 %21, i32 1\n  store ptr %0, ptr %22, align 8, !tbaa !15\n  %23 = getelementptr inbounds %struct.TYPE_4__, ptr %19, i64 %21\n  %24 = trunc i64 %21 to i32\n  store i32 %24, ptr %23, align 8, !tbaa !17\n  %25 = add nuw nsw i64 %21, 1\n  %26 = load i32, ptr @MAX_STREAM, align 4, !tbaa !12\n  %27 = sext i32 %26 to i64\n  %28 = icmp slt i64 %25, %27\n  br i1 %28, label %20, label %29, !llvm.loop !18\n\n29:                                               ; preds = %20, %1\n  %30 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 2\n  store i64 0, ptr %30, align 8, !tbaa !20\n  %31 = load i32, ptr @NGENE_INT_ENABLE, align 4, !tbaa !12\n  %32 = tail call i32 @ngwritel(i32 noundef 0, i32 noundef %31) #2\n  %33 = load i32, ptr @NGENE_INT_COUNTS, align 4, !tbaa !12\n  %34 = tail call i32 @ngreadl(i32 noundef %33) #2\n  store i32 %34, ptr %0, align 8, !tbaa !21\n  %35 = load i32, ptr @DEV_VER, align 4, !tbaa !12\n  %36 = tail call i32 @ngreadl(i32 noundef %35) #2\n  %37 = and i32 %36, 15\n  %38 = getelementptr inbounds %struct.ngene, ptr %0, i64 0, i32 1\n  store i32 %37, ptr %38, align 4, !tbaa !22\n  %39 = tail call i32 @dev_info(ptr noundef %3, ptr noundef nonnull @.str, i32 noundef %37) #2\n  ret void\n}\n\ndeclare i32 @tasklet_init(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @memset_io(i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngwritel(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ngreadl(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 40}\n!6 = !{!\"ngene\", !7, i64 0, !7, i64 4, !10, i64 8, !11, i64 16, !10, i64 24, !7, i64 32, !11, i64 40}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 24}\n!14 = !{!6, !11, i64 16}\n!15 = !{!16, !11, i64 8}\n!16 = !{!\"TYPE_4__\", !7, i64 0, !11, i64 8}\n!17 = !{!16, !7, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n!20 = !{!6, !10, i64 8}\n!21 = !{!6, !7, i64 0}\n!22 = !{!6, !7, i64 4}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_counter.c_counter_counts_register.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function counter_counts_register\n\t.type\tcounter_counts_register,@function\ncounter_counts_register:                # @counter_counts_register\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tcmpq\t$0, (%rsi)\n\tje\t.LBB0_6\n# %bb.1:\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\txorl\t%r13d, %r13d\n\txorl\t%r12d, %r12d\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t8(%r14), %rbp\n\tmovl\tGFP_KERNEL(%rip), %edi\n\tmovl\t(%rbp,%r13), %edx\n\tmovl\t$.L.str, %esi\n\tcallq\tkasprintf@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_7\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\taddq\t%r13, %rbp\n\tmovq\t%rax, 8(%rbx)\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tmovq\t%rbp, %rdx\n\tmovq\t%rax, %rcx\n\tcallq\tcounter_synapses_register@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_9\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rsi\n\tmovq\t%rbp, %rdx\n\tcallq\tcounter_count_attributes_create@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_9\n# %bb.5:                                #   in Loop: Header=BB0_2 Depth=1\n\tincq\t%r12\n\taddq\t$16, %rbx\n\taddq\t$4, %r13\n\tcmpq\t(%r14), %r12\n\tjb\t.LBB0_2\n.LBB0_6:\n\txorl\t%r15d, %r15d\n\tjmp\t.LBB0_12\n.LBB0_9:\n\tmovl\t%eax, %r15d\n\tjmp\t.LBB0_10\n.LBB0_7:\n\txorl\t%r15d, %r15d\n\tsubl\tENOMEM(%rip), %r15d\n.LBB0_10:\n\tnotq\t%r12\n\t.p2align\t4, 0x90\n.LBB0_11:                               # =>This Inner Loop Header: Depth=1\n\tmovq\t8(%rbx), %rdi\n\tcallq\tkfree@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tcounter_device_attr_list_free@PLT\n\taddq\t$-16, %rbx\n\tincq\t%r12\n\tjne\t.LBB0_11\n.LBB0_12:\n\tmovl\t%r15d, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcounter_counts_register, .Lfunc_end0-counter_counts_register\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tGFP_KERNEL,@object              # @GFP_KERNEL\n\t.bss\n\t.globl\tGFP_KERNEL\n\t.p2align\t2\nGFP_KERNEL:\n\t.long\t0                               # 0x0\n\t.size\tGFP_KERNEL, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"count%d\"\n\t.size\t.L.str, 8\n\n\t.type\tENOMEM,@object                  # @ENOMEM\n\t.bss\n\t.globl\tENOMEM\n\t.p2align\t2\nENOMEM:\n\t.long\t0                               # 0x0\n\t.size\tENOMEM, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.counter_device = type { i64, ptr }\n%struct.counter_count = type { i32 }\n\n@GFP_KERNEL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"count%d\\00\", align 1\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @counter_counts_register], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @counter_counts_register(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %36, label %5\n\n5:                                                ; preds = %2\n  %6 = getelementptr inbounds %struct.counter_device, ptr %1, i64 0, i32 1\n  br label %11\n\n7:                                                ; preds = %11\n  %8 = add nuw i64 %12, 1\n  %9 = load i64, ptr %1, align 8, !tbaa !5\n  %10 = icmp ult i64 %8, %9\n  br i1 %10, label %11, label %36, !llvm.loop !11\n\n11:                                               ; preds = %5, %7\n  %12 = phi i64 [ 0, %5 ], [ %8, %7 ]\n  %13 = load ptr, ptr %6, align 8, !tbaa !13\n  %14 = getelementptr inbounds %struct.counter_count, ptr %13, i64 %12\n  %15 = load i32, ptr @GFP_KERNEL, align 4, !tbaa !14\n  %16 = load i32, ptr %14, align 4, !tbaa !15\n  %17 = tail call ptr @kasprintf(i32 noundef %15, ptr noundef nonnull @.str, i32 noundef %16) #2\n  %18 = icmp eq ptr %17, null\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %11\n  %20 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %12\n  store ptr %17, ptr %20, align 8, !tbaa !13\n  %21 = tail call i32 @counter_synapses_register(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14, ptr noundef nonnull %17) #2\n  br label %25\n\n22:                                               ; preds = %11\n  %23 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  %24 = sub nsw i32 0, %23\n  br label %30\n\n25:                                               ; preds = %19, %28\n  %26 = phi i32 [ %21, %19 ], [ %29, %28 ]\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %30\n\n28:                                               ; preds = %25\n  %29 = tail call i32 @counter_count_attributes_create(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14) #2\n  br label %25\n\n30:                                               ; preds = %25, %22\n  %31 = phi i32 [ %24, %22 ], [ %26, %25 ]\n  %32 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %12\n  %33 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %12, i32 1\n  %34 = load ptr, ptr %33, align 8, !tbaa !13\n  %35 = tail call i32 @kfree(ptr noundef %34) #2\n  %36 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %32) #2\n  br label %7\n\n37:                                               ; preds = %30\n  %38 = phi i32 [ %31, %30 ], [ 0, %7 ]\n  ret i32 %38\n}\n\ndeclare ptr @kasprintf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_synapses_register(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_count_attributes_create(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_device_attr_list_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"counter_device\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!6, !10, i64 8}\n!14 = !{!14, !14, i64 0}\n!15 = !{!16, !17, i64 0}\n!16 = !{!\"counter_count\", !17, i64 0}\n!17 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.counter_device = type { i64, ptr }\n%struct.counter_count = type { i32 }\n\n@GFP_KERNEL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"count%d\\00\", align 1\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @counter_counts_register], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @counter_counts_register(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %34, label %5\n\n5:                                                ; preds = %2\n  %6 = getelementptr inbounds %struct.counter_device, ptr %1, i64 0, i32 1\n  br label %11\n\n7:                                                ; preds = %11\n  %8 = add nuw i64 %12, 1\n  %9 = load i64, ptr %1, align 8, !tbaa !5\n  %10 = icmp ult i64 %8, %9\n  br i1 %10, label %11, label %34, !llvm.loop !11\n\n11:                                               ; preds = %5, %7\n  %12 = phi i64 [ 0, %5 ], [ %8, %7 ]\n  %13 = load ptr, ptr %6, align 8, !tbaa !13\n  %14 = getelementptr inbounds %struct.counter_count, ptr %13, i64 %12\n  %15 = load i32, ptr @GFP_KERNEL, align 4, !tbaa !14\n  %16 = load i32, ptr %14, align 4, !tbaa !15\n  %17 = tail call ptr @kasprintf(i32 noundef %15, ptr noundef nonnull @.str, i32 noundef %16) #2\n  %18 = icmp eq ptr %17, null\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %11\n  %20 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %12\n  store ptr %17, ptr %20, align 8, !tbaa !13\n  %21 = tail call i32 @counter_synapses_register(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14, ptr noundef nonnull %17) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %25, label %31\n\n23:                                               ; preds = %11\n  %24 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  br label %31\n\n25:                                               ; preds = %19\n  %26 = tail call i32 @counter_count_attributes_create(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14) #2\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %7, label %31\n\n28:                                               ; preds = %30\n  %29 = add nuw i64 %32, 1\n  br label %30\n\n30:                                               ; preds = %28, %25\n  %31 = phi i32 [ %26, %25 ], [ %21, %28 ]\n  br label %32\n\n32:                                               ; preds = %30, %25\n  %33 = phi i64 [ %32, %30 ], [ %12, %25 ]\n  br label %34\n\n34:                                               ; preds = %7, %2, %32\n  %35 = phi i32 [ %31, %32 ], [ 0, %2 ], [ 0, %7 ]\n  ret i32 %35\n}\n\ndeclare ptr @kasprintf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_synapses_register(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_count_attributes_create(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"counter_device\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!6, !10, i64 8}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.counter_device = type { i64, ptr }\n%struct.counter_count = type { i32 }\n\n@GFP_KERNEL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"count%d\\00\", align 1\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @counter_counts_register], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @counter_counts_register(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %35, label %5\n\n5:                                                ; preds = %2\n  %6 = getelementptr inbounds %struct.counter_device, ptr %1, i64 0, i32 1\n  br label %11\n\n7:                                                ; preds = %11\n  %8 = add nuw i64 %12, 1\n  %9 = load i64, ptr %1, align 8, !tbaa !5\n  %10 = icmp ult i64 %8, %9\n  br i1 %10, label %11, label %35, !llvm.loop !11\n\n11:                                               ; preds = %5, %7\n  %12 = phi i64 [ 0, %5 ], [ %8, %7 ]\n  %13 = load ptr, ptr %6, align 8, !tbaa !13\n  %14 = getelementptr inbounds %struct.counter_count, ptr %13, i64 %12\n  %15 = load i32, ptr @GFP_KERNEL, align 4, !tbaa !14\n  %16 = load i32, ptr %14, align 4, !tbaa !15\n  %17 = tail call ptr @kasprintf(i32 noundef %15, ptr noundef nonnull @.str, i32 noundef %16) #2\n  %18 = icmp eq ptr %17, null\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %11\n  %20 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %12\n  store ptr %17, ptr %20, align 8, !tbaa !13\n  %21 = tail call i32 @counter_synapses_register(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14, ptr noundef nonnull %17) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %25, label %32\n\n23:                                               ; preds = %11\n  %24 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  br label %32\n\n25:                                               ; preds = %19\n  %26 = tail call i32 @counter_count_attributes_create(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14) #2\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %7, label %32\n\n28:                                               ; preds = %30\n  %29 = add nuw i64 %31, 1\n  br label %30\n\n30:                                               ; preds = %28, %32\n  %31 = phi i64 [ %29, %28 ], [ %12, %32 ]\n  %32 = phi i32 [ %33, %28 ], [ %26, %32 ]\n  %33 = phi i32 [ %34, %28 ], [ %21, %32 ]\n  %34 = tail call i32 @kfree(ptr noundef %17) #2\n  %35 = tail call i32 @counter_device_attr_list_free(ptr noundef %0) #2\n  %36 = icmp eq i64 %31, %12\n  br i1 %36, label %37, label %28, !llvm.loop !17\n\n37:                                               ; preds = %30\n  %38 = phi i32 [ 0, %30 ], [ %32, %28 ]\n  ret i32 %38\n\n32:                                               ; preds = %25, %19, %23\n  %33 = phi i32 [ %24, %23 ], [ %21, %19 ], [ %26, %25 ]\n  br label %37\n}\n\ndeclare ptr @kasprintf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_synapses_register(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_count_attributes_create(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_device_attr_list_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"counter_device\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!6, !10, i64 8}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"int\", !8, i64 0}\n!16 = !{!17, !12}\n!17 = distinct !{!17, !12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.counter_device = type { i64, ptr }\n%struct.counter_count = type { i32 }\n\n@GFP_KERNEL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"count%d\\00\", align 1\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @counter_counts_register], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @counter_counts_register(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %35, label %5\n\n5:                                                ; preds = %2\n  %6 = getelementptr inbounds %struct.counter_device, ptr %1, i64 0, i32 1\n  br label %11\n\n7:                                                ; preds = %11\n  %8 = add nuw i64 %12, 1\n  %9 = load i64, ptr %1, align 8, !tbaa !5\n  %10 = icmp ult i64 %8, %9\n  br i1 %10, label %11, label %35, !llvm.loop !11\n\n11:                                               ; preds = %5, %7\n  %12 = phi i64 [ 0, %5 ], [ %8, %7 ]\n  %13 = load ptr, ptr %6, align 8, !tbaa !13\n  %14 = getelementptr inbounds %struct.counter_count, ptr %13, i64 %12\n  %15 = load i32, ptr @GFP_KERNEL, align 4, !tbaa !14\n  %16 = load i32, ptr %14, align 4, !tbaa !15\n  %17 = tail call ptr @kasprintf(i32 noundef %15, ptr noundef nonnull @.str, i32 noundef %16) #2\n  %18 = icmp eq ptr %17, null\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %11\n  %20 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %12\n  store ptr %17, ptr %20, align 8, !tbaa !13\n  %21 = tail call i32 @counter_synapses_register(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14, ptr noundef nonnull %17) #2\n  br label %25\n\n22:                                               ; preds = %11\n  %23 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  %24 = sub nsw i32 0, %23\n  br label %32\n\n25:                                               ; preds = %19, %28\n  %26 = phi i32 [ %21, %19 ], [ %29, %28 ]\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %32\n\n28:                                               ; preds = %25\n  %29 = tail call i32 @counter_count_attributes_create(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %14) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %7, label %32\n\n31:                                               ; preds = %32, %31\n  %33 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %34\n  %34 = add nuw i64 %34, 1\n  %35 = icmp eq i64 %34, %12\n  br i1 %35, label %36, label %31, !llvm.loop !17\n\n32:                                               ; preds = %25, %28, %22\n  %36 = phi i32 [ %24, %22 ], [ %26, %28 ], [ %29, %25 ]\n  br label %37\n\n37:                                               ; preds = %32, %37\n  %38 = phi i64 [ %34, %32 ], [ %39, %37 ]\n  %39 = add i64 %38, -1\n  %40 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %39\n  %41 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %39, i32 1\n  %42 = load ptr, ptr %41, align 8, !tbaa !13\n  %43 = tail call i32 @kfree(ptr noundef %42) #2\n  %44 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %40) #2\n  %45 = icmp eq i64 %39, 0\n  br i1 %45, label %31, label %37, !llvm.loop !18\n\n38:                                               ; preds = %31\n  %39 = add i64 %34, 1\n  %40 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %34\n  %41 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %34, i32 1\n  %42 = load ptr, ptr %41, align 8, !tbaa !13\n  %43 = tail call i32 @kfree(ptr noundef %42) #2\n  %44 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %40) #2\n  %45 = icmp eq i64 %39, %12\n  br i1 %45, label %31, label %38, !llvm.loop !19\n\n40:                                               ; preds = %38\n  %41 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %42\n  %42 = load ptr, ptr %41, align 8, !tbaa !13\n  %43 = tail call i32 @kfree(ptr noundef %42) #2\n  %44 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %40) #2\n  %45 = icmp eq i64 %42, %12\n  br i1 %45, label %31, label %40, !llvm.loop !20\n\n41:                                               ; preds = %40\n  %42 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %43\n  %43 = load ptr, ptr %42, align 8, !tbaa !13\n  %44 = tail call i32 @kfree(ptr noundef %43) #2\n  %45 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %42) #2\n  %46 = icmp eq i64 %43, %12\n  br i1 %46, label %31, label %41, !llvm.loop !21\n\n42:                                               ; preds = %41\n  %43 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %44\n  %44 = load ptr, ptr %43, align 8, !tbaa !13\n  %45 = tail call i32 @kfree(ptr noundef %44) #2\n  %46 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %43) #2\n  %47 = icmp eq i64 %44, %12\n  br i1 %47, label %31, label %42, !llvm.loop !22\n\n48:                                               ; preds = %42\n  %49 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %45\n  %50 = load ptr, ptr %49, align 8, !tbaa !13\n  %51 = tail call i32 @kfree(ptr noundef %50) #2\n  %52 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %49) #2\n  %53 = icmp eq i64 %45, %12\n  br i1 %53, label %31, label %48, !llvm.loop !23\n\n49:                                               ; preds = %48\n  %50 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %46\n  %51 = load ptr, ptr %50, align 8, !tbaa !13\n  %52 = tail call i32 @kfree(ptr noundef %51) #2\n  %53 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %50) #2\n  %54 = icmp eq i64 %46, %12\n  br i1 %54, label %31, label %49, !llvm.loop !24\n\n50:                                               ; preds = %49\n  %51 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %47\n  %52 = load ptr, ptr %51, align 8, !tbaa !13\n  %53 = tail call i32 @kfree(ptr noundef %52) #2\n  %54 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %51) #2\n  %55 = icmp eq i64 %47, %12\n  br i1 %55, label %31, label %50, !llvm.loop !25\n\n51:                                               ; preds = %50\n  %52 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %48\n  %53 = load ptr, ptr %52, align 8, !tbaa !13\n  %54 = tail call i32 @kfree(ptr noundef %53) #2\n  %55 = tail call i32 @counter_device_attr_list_free(ptr noundef nonnull %52) #2\n  %56 = icmp eq i64 %48, %12\n  br i1 %56, label %31, label %51, !llvm.loop !26\n\n52:                                               ; preds = %51\n  %53 = getelementptr inbounds %struct.counter_device, ptr %0, i64 %49\n  %54 = load ptr, ptr %53, align 8, !tbaa !13\n  %55 = tail call i32 @kfree(ptr noundef %5"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/counter/extr_counter.c_counter_counts_register.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.counter_device = type { i64, ptr }\n%struct.counter_count = type { i32 }\n%struct.counter_device_attr_group = type { i32, %struct.TYPE_2__ }\n%struct.TYPE_2__ = type { ptr }\n\n@GFP_KERNEL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"count%d\\00\", align 1\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @counter_counts_register], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @counter_counts_register(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = load i64, ptr %1, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %41, label %5\n\n5:                                                ; preds = %2\n  %6 = getelementptr inbounds %struct.counter_device, ptr %1, i64 0, i32 1\n  br label %7\n\n7:                                                ; preds = %5, %26\n  %8 = phi i64 [ 0, %5 ], [ %27, %26 ]\n  %9 = load ptr, ptr %6, align 8, !tbaa !11\n  %10 = getelementptr inbounds %struct.counter_count, ptr %9, i64 %8\n  %11 = load i32, ptr @GFP_KERNEL, align 4, !tbaa !12\n  %12 = load i32, ptr %10, align 4, !tbaa !14\n  %13 = tail call ptr @kasprintf(i32 noundef %11, ptr noundef nonnull @.str, i32 noundef %12) #2\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %15, label %18\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ENOMEM, align 4, !tbaa !12\n  %17 = sub nsw i32 0, %16\n  br label %30\n\n18:                                               ; preds = %7\n  %19 = getelementptr inbounds %struct.counter_device_attr_group, ptr %0, i64 %8\n  %20 = getelementptr inbounds %struct.counter_device_attr_group, ptr %0, i64 %8, i32 1\n  store ptr %13, ptr %20, align 8, !tbaa !16\n  %21 = tail call i32 @counter_synapses_register(ptr noundef %19, ptr noundef nonnull %1, ptr noundef nonnull %10, ptr noundef nonnull %13) #2\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %23, label %30\n\n23:                                               ; preds = %18\n  %24 = tail call i32 @counter_count_attributes_create(ptr noundef nonnull %19, ptr noundef nonnull %1, ptr noundef nonnull %10) #2\n  %25 = icmp eq i32 %24, 0\n  br i1 %25, label %26, label %30\n\n26:                                               ; preds = %23\n  %27 = add nuw i64 %8, 1\n  %28 = load i64, ptr %1, align 8, !tbaa !5\n  %29 = icmp ult i64 %27, %28\n  br i1 %29, label %7, label %41, !llvm.loop !19\n\n30:                                               ; preds = %23, %18, %15\n  %31 = phi i32 [ %17, %15 ], [ %21, %18 ], [ %24, %23 ]\n  br label %32\n\n32:                                               ; preds = %32, %30\n  %33 = phi i64 [ %8, %30 ], [ %39, %32 ]\n  %34 = getelementptr inbounds %struct.counter_device_attr_group, ptr %0, i64 %33\n  %35 = getelementptr inbounds %struct.counter_device_attr_group, ptr %0, i64 %33, i32 1\n  %36 = load ptr, ptr %35, align 8, !tbaa !16\n  %37 = tail call i32 @kfree(ptr noundef %36) #2\n  %38 = tail call i32 @counter_device_attr_list_free(ptr noundef %34) #2\n  %39 = add i64 %33, -1\n  %40 = icmp eq i64 %33, 0\n  br i1 %40, label %41, label %32, !llvm.loop !21\n\n41:                                               ; preds = %26, %32, %2\n  %42 = phi i32 [ 0, %2 ], [ %31, %32 ], [ 0, %26 ]\n  ret i32 %42\n}\n\ndeclare ptr @kasprintf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_synapses_register(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_count_attributes_create(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kfree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @counter_device_attr_list_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"counter_device\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!15, !13, i64 0}\n!15 = !{!\"counter_count\", !13, i64 0}\n!16 = !{!17, !10, i64 8}\n!17 = !{!\"counter_device_attr_group\", !13, i64 0, !18, i64 8}\n!18 = !{!\"TYPE_2__\", !10, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n!21 = distinct !{!21, !20}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_zfcp_fsf.c_zfcp_fsf_set_data_dir.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function zfcp_fsf_set_data_dir\n\t.type\tzfcp_fsf_set_data_dir,@function\nzfcp_fsf_set_data_dir:                  # @zfcp_fsf_set_data_dir\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tcallq\tscsi_get_prot_op@PLT\n                                        # kill: def $eax killed $eax def $rax\n\taddl\t$-128, %eax\n\tcmpl\t$4, %eax\n\tja\t.LBB0_12\n# %bb.1:\n\tjmpq\t*.LJTI0_0(,%rax,8)\n.LBB0_11:\n\tmovl\tFSF_DATADIR_DIF_WRITE_CONVERT(%rip), %eax\n\tjmp\t.LBB0_8\n.LBB0_9:\n\tmovl\tFSF_DATADIR_DIF_WRITE_INSERT(%rip), %eax\n\tjmp\t.LBB0_8\n.LBB0_7:\n\tmovl\tFSF_DATADIR_DIF_READ_STRIP(%rip), %eax\n\tjmp\t.LBB0_8\n.LBB0_10:\n\tmovl\tFSF_DATADIR_DIF_READ_CONVERT(%rip), %eax\n.LBB0_8:\n\tmovl\t%eax, (%r14)\n\txorl\t%eax, %eax\n\tjmp\t.LBB0_13\n.LBB0_2:\n\txorl\t%eax, %eax\n\tmovl\t$-133, %ecx\n\taddl\t(%rbx), %ecx\n\tcmpl\t$3, %ecx\n\tja\t.LBB0_13\n# %bb.3:\n\tjmpq\t*.LJTI0_1(,%rcx,8)\n.LBB0_6:\n\tmovl\tFSF_DATADIR_WRITE(%rip), %ecx\n\tmovl\t%ecx, (%r14)\n\tjmp\t.LBB0_13\n.LBB0_12:\n\txorl\t%eax, %eax\n\tsubl\tEINVAL(%rip), %eax\n.LBB0_13:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_4:\n\t.cfi_def_cfa_offset 32\n\tmovl\tFSF_DATADIR_CMND(%rip), %ecx\n\tmovl\t%ecx, (%r14)\n\tjmp\t.LBB0_13\n.LBB0_5:\n\tmovl\tFSF_DATADIR_READ(%rip), %ecx\n\tmovl\t%ecx, (%r14)\n\tjmp\t.LBB0_13\n.Lfunc_end0:\n\t.size\tzfcp_fsf_set_data_dir, .Lfunc_end0-zfcp_fsf_set_data_dir\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_11\n\t.quad\t.LBB0_9\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_10\n\t.quad\t.LBB0_2\n.LJTI0_1:\n\t.quad\t.LBB0_6\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_12\n                                        # -- End function\n\t.type\tFSF_DATADIR_CMND,@object        # @FSF_DATADIR_CMND\n\t.bss\n\t.globl\tFSF_DATADIR_CMND\n\t.p2align\t2\nFSF_DATADIR_CMND:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_CMND, 4\n\n\t.type\tFSF_DATADIR_READ,@object        # @FSF_DATADIR_READ\n\t.globl\tFSF_DATADIR_READ\n\t.p2align\t2\nFSF_DATADIR_READ:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_READ, 4\n\n\t.type\tFSF_DATADIR_WRITE,@object       # @FSF_DATADIR_WRITE\n\t.globl\tFSF_DATADIR_WRITE\n\t.p2align\t2\nFSF_DATADIR_WRITE:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_WRITE, 4\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\tFSF_DATADIR_DIF_READ_STRIP,@object # @FSF_DATADIR_DIF_READ_STRIP\n\t.globl\tFSF_DATADIR_DIF_READ_STRIP\n\t.p2align\t2\nFSF_DATADIR_DIF_READ_STRIP:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_READ_STRIP, 4\n\n\t.type\tFSF_DATADIR_DIF_WRITE_INSERT,@object # @FSF_DATADIR_DIF_WRITE_INSERT\n\t.globl\tFSF_DATADIR_DIF_WRITE_INSERT\n\t.p2align\t2\nFSF_DATADIR_DIF_WRITE_INSERT:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_WRITE_INSERT, 4\n\n\t.type\tFSF_DATADIR_DIF_READ_CONVERT,@object # @FSF_DATADIR_DIF_READ_CONVERT\n\t.globl\tFSF_DATADIR_DIF_READ_CONVERT\n\t.p2align\t2\nFSF_DATADIR_DIF_READ_CONVERT:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_READ_CONVERT, 4\n\n\t.type\tFSF_DATADIR_DIF_WRITE_CONVERT,@object # @FSF_DATADIR_DIF_WRITE_CONVERT\n\t.globl\tFSF_DATADIR_DIF_WRITE_CONVERT\n\t.p2align\t2\nFSF_DATADIR_DIF_WRITE_CONVERT:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_WRITE_CONVERT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %22 [\n    i32 131, label %4\n    i32 130, label %10\n    i32 129, label %14\n    i32 128, label %18\n    i32 133, label %20\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %22 [\n    i32 0, label %6\n    i32 1, label %8\n    i32 2, label %10\n    i32 3, label %12\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %24\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %24\n\n10:                                               ; preds = %4, %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %24\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %24\n\n14:                                               ; preds = %2\n  %15 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %15, ptr %1, align 4, !tbaa !10\n  br label %24\n\n16:                                               ; preds = %2\n  %17 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %24\n\n18:                                               ; preds = %2\n  %19 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %19, ptr %1, align 4, !tbaa !10\n  br label %24\n\n20:                                               ; preds = %2\n  %21 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %24\n\n22:                                               ; preds = %2, %4\n  %23 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %24\n\n24:                                               ; preds = %22, %20, %18, %16, %14, %12, %10, %8, %6\n  %25 = phi i32 [ %23, %22 ], [ %21, %20 ], [ 0, %18 ], [ 0, %16 ], [ 0, %14 ], [ 0, %12 ], [ 0, %10 ], [ 0, %8 ], [ 0, %6 ]\n  ret i32 %25\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %22 [\n    i32 131, label %4\n    i32 130, label %10\n    i32 129, label %16\n    i32 128, label %20\n    i32 133, label %24\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %24 [\n    i32 130, label %6\n    i32 129, label %8\n    i32 131, label %10\n    i32 132, label %12\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %24\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %24\n\n10:                                               ; preds = %4, %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %24\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %24\n\n14:                                               ; preds = %18\n  %15 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %24\n\n16:                                               ; preds = %2\n  %17 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %24\n\n18:                                               ; preds = %14\n  %19 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %24\n\n20:                                               ; preds = %2\n  %21 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %21, ptr %1, align 4, !tbaa !10\n  br label %24\n\n22:                                               ; preds = %2\n  %23 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %24\n\n24:                                               ; preds = %2, %22, %18, %14, %16, %12, %10, %8, %6, %4\n  %25 = phi i32 [ %23, %22 ], [ %19, %18 ], [ 0, %4 ], [ 0, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %12 ], [ 0, %16 ], [ 0, %14 ], [ 0, %2 ]\n  ret i32 %25\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 132, label %4\n    i32 131, label %10\n    i32 130, label %14\n    i32 129, label %18\n    i32 128, label %21\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %23 [\n    i32 0, label %6\n    i32 1, label %10\n    i32 2, label %12\n    i32 3, label %14\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %25\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %25\n\n10:                                               ; preds = %4, %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %25\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %25\n\n14:                                               ; preds = %4, %2\n  %15 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %15, ptr %1, align 4, !tbaa !10\n  br label %25\n\n16:                                               ; preds = %2\n  %17 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %25\n\n18:                                               ; preds = %2\n  %19 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %19, ptr %1, align 4, !tbaa !10\n  br label %25\n\n20:                                               ; preds = %2\n  %21 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %21, ptr %1, align 4, !tbaa !10\n  br label %25\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %25\n\n23:                                               ; preds = %2, %4\n  %24 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %25\n\n25:                                               ; preds = %23, %21, %20, %18, %16, %14, %12, %10, %8, %6\n  %26 = phi i32 [ %24, %23 ], [ %22, %21 ], [ 0, %20 ], [ 0, %18 ], [ 0, %16 ], [ 0, %14 ], [ 0, %12 ], [ 0, %10 ], [ 0, %8 ], [ 0, %6 ]\n  ret i32 %26\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 131, label %4\n    i32 130, label %10\n    i32 129, label %16\n    i32 128, label %20\n    i32 133, label %26\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %26 [\n    i32 130, label %6\n    i32 129, label %8\n    i32 131, label %10\n    i32 132, label %12\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %26\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %26\n\n10:                                               ; preds = %4, %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %26\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %26\n\n14:                                               ; preds = %2\n  %15 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %26\n\n16:                                               ; preds = %2\n  %17 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %26\n\n18:                                               ; preds = %2\n  %19 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %19, ptr %1, align 4, !tbaa !10\n  br label %26\n\n20:                                               ; preds = %2\n  %21 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %21, ptr %1, align 4, !tbaa !10\n  br label %26\n\n22:                                               ; preds = %2\n  %23 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  %24 = sub nsw i32 0, %23\n  br label %26\n\n25:                                               ; preds = %4\n  store i32 -133, ptr %1, align 4, !tbaa !10\n  br label %26\n\n26:                                               ; preds = %2, %4, %22, %25, %18, %20, %16, %14, %12, %10, %8, %6\n  %27 = phi i32 [ %24, %22 ], [ 0, %25 ], [ 0, %18 ], [ 0, %20 ], [ 0, %16 ], [ 0, %14 ], [ 0, %12 ], [ 0, %10 ], [ 0, %8 ], [ 0, %6 ], [ 0, %10 ], [ 0, %6 ]\n  ret i32 %27\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/drivers/s390/scsi/extr_zfcp_fsf.c_zfcp_fsf_set_data_dir.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 132, label %4\n    i32 130, label %15\n    i32 129, label %17\n    i32 131, label %19\n    i32 128, label %21\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %26 [\n    i32 134, label %6\n    i32 135, label %8\n    i32 133, label %10\n    i32 136, label %12\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %26\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %26\n\n10:                                               ; preds = %4\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %26\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  %14 = sub nsw i32 0, %13\n  br label %26\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %16, ptr %1, align 4, !tbaa !10\n  br label %26\n\n17:                                               ; preds = %2\n  %18 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %18, ptr %1, align 4, !tbaa !10\n  br label %26\n\n19:                                               ; preds = %2\n  %20 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %20, ptr %1, align 4, !tbaa !10\n  br label %26\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %22, ptr %1, align 4, !tbaa !10\n  br label %26\n\n23:                                               ; preds = %2\n  %24 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  %25 = sub nsw i32 0, %24\n  br label %26\n\n26:                                               ; preds = %15, %17, %19, %21, %4, %10, %8, %6, %23, %12\n  %27 = phi i32 [ %25, %23 ], [ %14, %12 ], [ 0, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %4 ], [ 0, %21 ], [ 0, %19 ], [ 0, %17 ], [ 0, %15 ]\n  ret i32 %27\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pt_packet.c_pt_pkt_read_cyc.ll\"\n\t.globl\tpt_pkt_read_cyc                 # -- Begin function pt_pkt_read_cyc\n\t.p2align\t4, 0x90\n\t.type\tpt_pkt_read_cyc,@function\npt_pkt_read_cyc:                        # @pt_pkt_read_cyc\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_3\n# %bb.1:\n\ttestq\t%rsi, %rsi\n\tje\t.LBB0_3\n# %bb.2:\n\ttestq\t%rdx, %rdx\n\tje\t.LBB0_3\n# %bb.4:\n\tmovl\t(%rsi), %ebp\n\tmovl\tpt_opm_cyc_shr(%rip), %ecx\n\tmovl\t%ebp, %r9d\n\tsarl\t%cl, %r9d\n\tleaq\t4(%rsi), %rax\n\ttestl\t%ebp, pt_opm_cyc_ext(%rip)\n\tje\t.LBB0_11\n# %bb.5:\n\tmovq\t(%rdx), %r10\n\tmovl\t$8, %r11d\n\tmovl\t$8, %edx\n\tsubl\t%ecx, %edx\n\tmovl\tpt_opm_cycx_shr(%rip), %r8d\n\tsubl\t%r8d, %r11d\n\tmovl\tpt_opm_cycx_ext(%rip), %r14d\n\tmovl\t%r8d, %r15d\n\tnegl\t%r15d\n\t.p2align\t4, 0x90\n.LBB0_6:                                # =>This Inner Loop Header: Depth=1\n\tcmpq\t%rax, %r10\n\tjbe\t.LBB0_7\n# %bb.8:                                #   in Loop: Header=BB0_6 Depth=1\n\tleal\t(%r15,%rdx), %ecx\n\taddl\t$8, %ecx\n\tcmpl\t$33, %ecx\n\tjae\t.LBB0_9\n# %bb.10:                               #   in Loop: Header=BB0_6 Depth=1\n\tmovl\t(%rax), %ebx\n\tmovl\t%ebx, %ebp\n\tmovl\t%r8d, %ecx\n\tsarl\t%cl, %ebp\n\tmovl\t%edx, %ecx\n\tshll\t%cl, %ebp\n\torl\t%ebp, %r9d\n\taddq\t$4, %rax\n\taddl\t%r11d, %edx\n\ttestl\t%ebx, %r14d\n\tjne\t.LBB0_6\n.LBB0_11:\n\tmovl\t%r9d, (%rdi)\n\tsubq\t%rsi, %rax\n\tshrq\t$2, %rax\n\tjmp\t.LBB0_12\n.LBB0_3:\n\txorl\t%eax, %eax\n\tsubl\tpte_internal(%rip), %eax\n.LBB0_12:\n                                        # kill: def $eax killed $eax killed $rax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_7:\n\t.cfi_def_cfa_offset 40\n\txorl\t%eax, %eax\n\tsubl\tpte_eos(%rip), %eax\n\tjmp\t.LBB0_12\n.LBB0_9:\n\txorl\t%eax, %eax\n\tsubl\tpte_bad_packet(%rip), %eax\n\tjmp\t.LBB0_12\n.Lfunc_end0:\n\t.size\tpt_pkt_read_cyc, .Lfunc_end0-pt_pkt_read_cyc\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tpte_internal,@object            # @pte_internal\n\t.bss\n\t.globl\tpte_internal\n\t.p2align\t2\npte_internal:\n\t.long\t0                               # 0x0\n\t.size\tpte_internal, 4\n\n\t.type\tpt_opm_cyc_ext,@object          # @pt_opm_cyc_ext\n\t.globl\tpt_opm_cyc_ext\n\t.p2align\t2\npt_opm_cyc_ext:\n\t.long\t0                               # 0x0\n\t.size\tpt_opm_cyc_ext, 4\n\n\t.type\tpt_opm_cyc_shr,@object          # @pt_opm_cyc_shr\n\t.globl\tpt_opm_cyc_shr\n\t.p2align\t2\npt_opm_cyc_shr:\n\t.long\t0                               # 0x0\n\t.size\tpt_opm_cyc_shr, 4\n\n\t.type\tpte_eos,@object                 # @pte_eos\n\t.globl\tpte_eos\n\t.p2align\t2\npte_eos:\n\t.long\t0                               # 0x0\n\t.size\tpte_eos, 4\n\n\t.type\tpt_opm_cycx_ext,@object         # @pt_opm_cycx_ext\n\t.globl\tpt_opm_cycx_ext\n\t.p2align\t2\npt_opm_cycx_ext:\n\t.long\t0                               # 0x0\n\t.size\tpt_opm_cycx_ext, 4\n\n\t.type\tpt_opm_cycx_shr,@object         # @pt_opm_cycx_shr\n\t.globl\tpt_opm_cycx_shr\n\t.p2align\t2\npt_opm_cycx_shr:\n\t.long\t0                               # 0x0\n\t.size\tpt_opm_cycx_shr, 4\n\n\t.type\tpte_bad_packet,@object          # @pte_bad_packet\n\t.globl\tpte_bad_packet\n\t.p2align\t2\npte_bad_packet:\n\t.long\t0                               # 0x0\n\t.size\tpte_bad_packet, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@pte_internal = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_eos = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_bad_packet = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine dso_local i32 @pt_pkt_read_cyc(ptr noundef writeonly %0, ptr noundef readonly %1, ptr noundef readonly %2) local_unnamed_addr #0 {\n  %4 = icmp ne ptr %0, null\n  %5 = icmp ne ptr %1, null\n  %6 = and i1 %4, %5\n  %7 = icmp ne ptr %2, null\n  %8 = and i1 %6, %7\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %3\n  %10 = load i32, ptr @pte_internal, align 4, !tbaa !5\n  %11 = sub nsw i32 0, %10\n  br label %48\n\n12:                                               ; preds = %3\n  %13 = load i32, ptr %1, align 4, !tbaa !5\n  %14 = load i32, ptr @pt_opm_cyc_ext, align 4, !tbaa !5\n  %15 = and i32 %14, %13\n  %16 = icmp eq i32 %15, 0\n  %17 = load i32, ptr @pt_opm_cyc_shr, align 4, !tbaa !5\n  %18 = ashr i32 %13, %17\n  %19 = getelementptr inbounds i32, ptr %1, i64 1\n  br i1 %16, label %44, label %20\n\n20:                                               ; preds = %12\n  %21 = load ptr, ptr %2, align 8, !tbaa !9\n  %22 = sub nsw i32 8, %17\n  %23 = sub nsw i32 8, %17\n  %24 = load i32, ptr @pt_opm_cycx_ext, align 4, !tbaa !5\n  %25 = load i32, ptr @pt_opm_cycx_shr, align 4, !tbaa !5\n  %26 = sub nsw i32 8, %25\n  %27 = getelementptr inbounds i32, ptr %1, i64 2\n  br label %28\n\n28:                                               ; preds = %20, %39\n  %29 = phi i32 [ %18, %20 ], [ %40, %39 ]\n  %30 = phi i32 [ %22, %20 ], [ %41, %39 ]\n  %31 = phi ptr [ %19, %20 ], [ %37, %39 ]\n  %32 = phi i32 [ %25, %20 ], [ %42, %39 ]\n  %33 = phi i32 [ %23, %20 ], [ %43, %39 ]\n  %34 = phi ptr [ %21, %20 ], [ %38, %39 ]\n  %35 = icmp ugt ptr %34, %31\n  br i1 %35, label %39, label %36\n\n36:                                               ; preds = %28\n  %37 = getelementptr inbounds i32, ptr %31, i64 1\n  %38 = getelementptr inbounds i32, ptr %34, i64 1\n  %39 = icmp ugt ptr %38, %37\n  br i1 %39, label %28, label %40, !llvm.loop !12\n\n40:                                               ; preds = %36\n  %41 = add nsw i32 %30, %33\n  %42 = load i32, ptr @pte_eos, align 4, !tbaa !5\n  %43 = sub nsw i32 0, %42\n  %44 = select i1 %16, i32 %43, i32 %18\n  store i32 %44, ptr %0, align 4, !tbaa !5\n  %45 = ptrtoint ptr %38 to i64\n  %46 = ptrtoint ptr %1 to i64\n  %47 = sub i64 %45, %46\n  br label %48\n\n48:                                               ; preds = %40, %9\n  %49 = phi i32 [ %11, %9 ], [ %47, %40 ]\n  ret i32 %49\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"pt_packet_decoder\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@pte_internal = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_eos = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_bad_packet = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine dso_local i32 @pt_pkt_read_cyc(ptr noundef writeonly %0, ptr noundef readonly %1, ptr noundef readonly %2) local_unnamed_addr #0 {\n  %4 = icmp ne ptr %0, null\n  %5 = icmp ne ptr %1, null\n  %6 = and i1 %4, %5\n  %7 = icmp ne ptr %2, null\n  %8 = and i1 %6, %7\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %3\n  %10 = load i32, ptr @pte_internal, align 4, !tbaa !5\n  %11 = sub nsw i32 0, %10\n  br label %47\n\n12:                                               ; preds = %3\n  %13 = load i32, ptr %1, align 4, !tbaa !5\n  %14 = load i32, ptr @pt_opm_cyc_ext, align 4, !tbaa !5\n  %15 = and i32 %14, %13\n  %16 = icmp eq i32 %15, 0\n  %17 = load i32, ptr @pt_opm_cyc_shr, align 4, !tbaa !5\n  %18 = ashr i32 %13, %17\n  %19 = getelementptr inbounds i32, ptr %1, i64 1\n  br i1 %16, label %44, label %20\n\n20:                                               ; preds = %12\n  %21 = load ptr, ptr %2, align 8, !tbaa !9\n  %22 = sub nsw i32 8, %17\n  %23 = sub nsw i32 8, %17\n  %24 = load i32, ptr @pt_opm_cycx_ext, align 4, !tbaa !5\n  %25 = load i32, ptr @pt_opm_cycx_shr, align 4, !tbaa !5\n  %26 = sub nsw i32 8, %25\n  %27 = getelementptr inbounds i32, ptr %1, i64 2\n  br label %28\n\n28:                                               ; preds = %20, %39\n  %29 = phi i32 [ %18, %20 ], [ %40, %39 ]\n  %30 = phi i32 [ %22, %20 ], [ %41, %39 ]\n  %31 = phi i32 [ %25, %20 ], [ %42, %39 ]\n  %32 = phi i32 [ %23, %20 ], [ %43, %39 ]\n  %33 = phi ptr [ %19, %20 ], [ %37, %39 ]\n  %34 = icmp ugt ptr %21, %33\n  br i1 %34, label %39, label %35\n\n35:                                               ; preds = %28\n  %36 = load i32, ptr @pte_eos, align 4, !tbaa !5\n  %37 = getelementptr inbounds i32, ptr %21, i64 1\n  %38 = sub nsw i32 0, %36\n  br label %47\n\n39:                                               ; preds = %28\n  %40 = phi i32 [ %29, %28 ], [ %31, %39 ]\n  %41 = phi i32 [ %30, %28 ], [ %32, %39 ]\n  %42 = phi i32 [ %31, %28 ], [ %33, %39 ]\n  %43 = phi i32 [ %32, %28 ], [ %25, %39 ]\n  %44 = icmp eq i32 %42, 0\n  br i1 %44, label %47, label %28, !llvm.loop !12\n\n45:                                               ; preds = %39\n  %46 = load i32, ptr @pte_bad_packet, align 4, !tbaa !5\n  br label %47\n\n47:                                               ; preds = %39, %45, %12, %35, %9\n  %48 = phi i32 [ %11, %9 ], [ %38, %35 ], [ %46, %45 ], [ %40, %12 ], [ %18, %39 ]\n  %49 = phi ptr [ %1, %9 ], [ %37, %35 ], [ %27, %45 ], [ %19, %12 ], [ %27, %39 ]\n  %50 = ptrtoint ptr %49 to i64\n  %51 = ptrtoint ptr %1 to i64\n  %52 = sub i64 %50, %51\n  %53 = lshr exact i64 %52, 2\n  %54 = trunc i64 %53 to i32\n  store i32 %48, ptr %0, align 4, !tbaa !5\n  ret i32 %54\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"pt_packet_decoder\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@pte_internal = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_eos = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_bad_packet = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine dso_local i32 @pt_pkt_read_cyc(ptr noundef writeonly %0, ptr noundef readonly %1, ptr noundef readonly %2) local_unnamed_addr #0 {\n  %4 = icmp ne ptr %0, null\n  %5 = icmp ne ptr %1, null\n  %6 = and i1 %4, %5\n  %7 = icmp ne ptr %2, null\n  %8 = and i1 %6, %7\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %3\n  %10 = load i32, ptr @pte_internal, align 4, !tbaa !5\n  %11 = sub nsw i32 0, %10\n  br label %47\n\n12:                                               ; preds = %3\n  %13 = load i32, ptr %1, align 4, !tbaa !5\n  %14 = load i32, ptr @pt_opm_cyc_ext, align 4, !tbaa !5\n  %15 = and i32 %14, %13\n  %16 = icmp eq i32 %15, 0\n  %17 = load i32, ptr @pt_opm_cyc_shr, align 4, !tbaa !5\n  %18 = ashr i32 %13, %17\n  %19 = getelementptr inbounds i32, ptr %1, i64 1\n  br i1 %16, label %43, label %20\n\n20:                                               ; preds = %12\n  %21 = load ptr, ptr %2, align 8, !tbaa !9\n  %22 = sub nsw i32 8, %17\n  %23 = sub nsw i32 8, %17\n  %24 = load i32, ptr @pt_opm_cycx_ext, align 4, !tbaa !5\n  %25 = load i32, ptr @pt_opm_cycx_shr, align 4, !tbaa !5\n  %26 = sub nsw i32 8, %25\n  %27 = getelementptr inbounds i32, ptr %1, i64 2\n  br label %28\n\n28:                                               ; preds = %20, %38\n  %29 = phi i32 [ %23, %20 ], [ %39, %38 ]\n  %30 = phi i32 [ %22, %20 ], [ %40, %38 ]\n  %31 = phi ptr [ %21, %20 ], [ %41, %38 ]\n  %32 = phi ptr [ %19, %20 ], [ %42, %38 ]\n  %33 = icmp ugt ptr %31, %32\n  br i1 %33, label %38, label %34\n\n34:                                               ; preds = %28\n  %35 = load i32, ptr @pte_eos, align 4, !tbaa !5\n  %36 = sub nsw i32 0, %35\n  %37 = add nsw i32 %36, %29\n  br label %47\n\n38:                                               ; preds = %28\n  %39 = add nsw i32 %29, %30\n  %40 = add nsw i32 %30, %25\n  %41 = getelementptr inbounds i32, ptr %31, i64 1\n  %42 = getelementptr inbounds i32, ptr %32, i64 1\n  %43 = load i32, ptr %32, align 4, !tbaa !5\n  %44 = and i32 %44, %24\n  %45 = icmp eq i32 %44, 0\n  br i1 %45, label %46, label %28, !llvm.loop !12\n\n46:                                               ; preds = %38\n  br label %43\n\n47:                                               ; preds = %46, %34, %9\n  %48 = phi i32 [ %11, %9 ], [ %37, %34 ], [ %39, %46 ]\n  %49 = phi ptr [ %19, %9 ], [ %32, %34 ], [ %27, %46 ]\n  store i32 %48, ptr %0, align 4, !tbaa !5\n  %50 = ptrtoint ptr %49 to i64\n  %51 = ptrtoint ptr %1 to i64\n  %52 = sub i64 %50, %51\n  %53 = lshr exact i64 %52, 2\n  %54 = trunc i64 %53 to i32\n  ret i32 %54\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"pt_packet_decoder\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@pte_internal = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_eos = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_bad_packet = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine dso_local i32 @pt_pkt_read_cyc(ptr noundef writeonly %0, ptr noundef readonly %1, ptr noundef readonly %2) local_unnamed_addr #0 {\n  %4 = icmp ne ptr %0, null\n  %5 = icmp ne ptr %1, null\n  %6 = and i1 %4, %5\n  %7 = icmp ne ptr %2, null\n  %8 = and i1 %6, %7\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %3\n  %10 = load i32, ptr @pte_internal, align 4, !tbaa !5\n  %11 = sub nsw i32 0, %10\n  br label %48\n\n12:                                               ; preds = %3\n  %13 = load i32, ptr %1, align 4, !tbaa !5\n  %14 = load i32, ptr @pt_opm_cyc_ext, align 4, !tbaa !5\n  %15 = and i32 %14, %13\n  %16 = icmp eq i32 %15, 0\n  %17 = load i32, ptr @pt_opm_cyc_shr, align 4, !tbaa !5\n  %18 = ashr i32 %13, %17\n  %19 = getelementptr inbounds i32, ptr %1, i64 1\n  br i1 %16, label %44, label %20\n\n20:                                               ; preds = %12\n  %21 = load ptr, ptr %2, align 8, !tbaa !9\n  %22 = getelementptr inbounds i32, ptr %21, i64 1\n  %23 = load i32, ptr @pt_opm_cycx_ext, align 4, !tbaa !5\n  %24 = load i32, ptr @pt_opm_cycx_shr, align 4, !tbaa !5\n  %25 = sub nsw i32 8, %24\n  %26 = sub nsw i32 8, %17\n  %27 = icmp eq i32 %23, 0\n  br label %28\n\n28:                                               ; preds = %20, %39\n  %29 = phi i32 [ %30, %39 ], [ %23, %20 ]\n  %30 = phi i32 [ %31, %39 ], [ %22, %20 ]\n  %31 = phi ptr [ %32, %39 ], [ %21, %20 ]\n  %32 = getelementptr inbounds i32, ptr %31, i64 1\n  %33 = icmp ugt ptr %30, %19\n  br i1 %33, label %39, label %34\n\n34:                                               ; preds = %28\n  %35 = load i32, ptr @pte_eos, align 4, !tbaa !5\n  %36 = sub nsw i32 0, %35\n  %37 = getelementptr inbounds i32, ptr %1, i64 2\n  %38 = icmp ugt ptr %30, %37\n  br i1 %38, label %48, label %46\n\n39:                                               ; preds = %28\n  %40 = add i32 %25, %26\n  %41 = add i32 %40, 8\n  %42 = icmp ult i32 %41, 33\n  br i1 %42, label %43, label %46\n\n43:                                               ; preds = %39\n  %44 = getelementptr inbounds i32, ptr %1, i64 2\n  br label %45\n\n45:                                               ; preds = %43, %45\n  %46 = phi ptr [ %44, %43 ], [ %31, %45 ]\n  %47 = phi i32 [ %41, %43 ], [ %26, %45 ]\n  br label %28, !llvm.loop !11\n\n48:                                               ; preds = %34, %12\n  %49 = phi i32 [ %18, %12 ], [ %36, %34 ]\n  store i32 %49, ptr %0, align 4, !tbaa !5\n  %50 = ptrtoint ptr %19 to i64\n  %51 = ptrtoint ptr %1 to i64\n  %52 = sub i64 %50, %51\n  %53 = lshr exact i64 %52, 2\n  %54 = trunc i64 %53 to i32\n  br label %48, !llvm.loop !13\n\n46:                                               ; preds = %39, %34\n  %55 = phi i32 [ %36, %34 ], [ %41, %39 ]\n  %56 = load i32, ptr @pte_bad_packet, align 4, !tbaa !5\n  %57 = sub nsw i32 0, %56\n  br label %48\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/processor-trace/libipt/src/extr_pt_packet.c_pt_pkt_read_cyc.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@pte_internal = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cyc_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_eos = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_ext = dso_local local_unnamed_addr global i32 0, align 4\n@pt_opm_cycx_shr = dso_local local_unnamed_addr global i32 0, align 4\n@pte_bad_packet = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine dso_local i32 @pt_pkt_read_cyc(ptr noundef writeonly %0, ptr noundef %1, ptr noundef readonly %2) local_unnamed_addr #0 {\n  %4 = icmp ne ptr %0, null\n  %5 = icmp ne ptr %1, null\n  %6 = and i1 %4, %5\n  %7 = icmp ne ptr %2, null\n  %8 = and i1 %6, %7\n  br i1 %8, label %12, label %9\n\n9:                                                ; preds = %3\n  %10 = load i32, ptr @pte_internal, align 4, !tbaa !5\n  %11 = sub nsw i32 0, %10\n  br label %56\n\n12:                                               ; preds = %3\n  %13 = load ptr, ptr %2, align 8, !tbaa !9\n  %14 = load i32, ptr %1, align 4, !tbaa !5\n  %15 = load i32, ptr @pt_opm_cyc_ext, align 4, !tbaa !5\n  %16 = and i32 %15, %14\n  %17 = load i32, ptr @pt_opm_cyc_shr, align 4, !tbaa !5\n  %18 = ashr i32 %14, %17\n  %19 = getelementptr inbounds i32, ptr %1, i64 1\n  %20 = icmp eq i32 %16, 0\n  br i1 %20, label %48, label %21\n\n21:                                               ; preds = %12\n  %22 = sub nsw i32 8, %17\n  %23 = load i32, ptr @pt_opm_cycx_shr, align 4\n  %24 = sub nsw i32 8, %23\n  %25 = load i32, ptr @pt_opm_cycx_ext, align 4\n  br label %26\n\n26:                                               ; preds = %21, %40\n  %27 = phi ptr [ %19, %21 ], [ %46, %40 ]\n  %28 = phi i32 [ %22, %21 ], [ %35, %40 ]\n  %29 = phi i32 [ %18, %21 ], [ %45, %40 ]\n  %30 = icmp ugt ptr %13, %27\n  br i1 %30, label %34, label %31\n\n31:                                               ; preds = %26\n  %32 = load i32, ptr @pte_eos, align 4, !tbaa !5\n  %33 = sub nsw i32 0, %32\n  br label %56\n\n34:                                               ; preds = %26\n  %35 = add nsw i32 %24, %28\n  %36 = icmp ugt i32 %35, 32\n  br i1 %36, label %37, label %40\n\n37:                                               ; preds = %34\n  %38 = load i32, ptr @pte_bad_packet, align 4, !tbaa !5\n  %39 = sub nsw i32 0, %38\n  br label %56\n\n40:                                               ; preds = %34\n  %41 = load i32, ptr %27, align 4, !tbaa !5\n  %42 = and i32 %25, %41\n  %43 = ashr i32 %41, %23\n  %44 = shl i32 %43, %28\n  %45 = or i32 %44, %29\n  %46 = getelementptr inbounds i32, ptr %27, i64 1\n  %47 = icmp eq i32 %42, 0\n  br i1 %47, label %48, label %26, !llvm.loop !12\n\n48:                                               ; preds = %40, %12\n  %49 = phi i32 [ %18, %12 ], [ %45, %40 ]\n  %50 = phi ptr [ %19, %12 ], [ %46, %40 ]\n  store i32 %49, ptr %0, align 4, !tbaa !14\n  %51 = ptrtoint ptr %50 to i64\n  %52 = ptrtoint ptr %1 to i64\n  %53 = sub i64 %51, %52\n  %54 = lshr exact i64 %53, 2\n  %55 = trunc i64 %54 to i32\n  br label %56\n\n56:                                               ; preds = %37, %31, %48, %9\n  %57 = phi i32 [ %55, %48 ], [ %11, %9 ], [ %39, %37 ], [ %33, %31 ]\n  ret i32 %57\n}\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"pt_config\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"pt_packet_cyc\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_wmi.c_ath10k_wmi_op_gen_addba_set_resp.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ath10k_wmi_op_gen_addba_set_resp\n\t.type\tath10k_wmi_op_gen_addba_set_resp,@function\nath10k_wmi_op_gen_addba_set_resp:       # @ath10k_wmi_op_gen_addba_set_resp\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\ttestq\t%rdx, %rdx\n\tje\t.LBB0_1\n# %bb.3:\n\tmovl\t%r8d, %r12d\n\tmovl\t%ecx, %r14d\n\tmovq\t%rdx, %rbx\n\tmovl\t%esi, %ebp\n\tmovq\t%rdi, %r13\n\tmovl\t$32, %esi\n\tcallq\tath10k_wmi_alloc_skb@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.5:\n\tmovq\t%rax, %r15\n\tmovl\t%r14d, 16(%rsp)                 # 4-byte Spill\n\tmovl\t%ebp, 20(%rsp)                  # 4-byte Spill\n\tmovq\t(%rax), %r14\n\tmovl\t%ebp, %edi\n\tcallq\t__cpu_to_le32@PLT\n\tmovq\t%rax, 24(%r14)\n\tmovl\t16(%r14), %edi\n\tmovq\t%rbx, %rsi\n\tcallq\tether_addr_copy@PLT\n\tmovl\t16(%rsp), %ebp                  # 4-byte Reload\n\tmovl\t%ebp, %edi\n\tcallq\t__cpu_to_le32@PLT\n\tmovq\t%rax, 8(%r14)\n\tmovl\t%r12d, %edi\n\tcallq\t__cpu_to_le32@PLT\n\tmovq\t%rax, (%r14)\n\tmovl\tATH10K_DBG_WMI(%rip), %esi\n\tmovl\t%r12d, (%rsp)\n\tmovl\t$.L.str, %edx\n\tmovq\t%r13, %rdi\n\tmovl\t20(%rsp), %ecx                  # 4-byte Reload\n\tmovq\t%rbx, %r8\n\tmovl\t%ebp, %r9d\n\tcallq\tath10k_dbg@PLT\n\tmovq\t%r15, %rax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_1:\n\t.cfi_def_cfa_offset 80\n\txorl\t%edi, %edi\n\tsubl\tEINVAL(%rip), %edi\n\tjmp\t.LBB0_2\n.LBB0_4:\n\txorl\t%edi, %edi\n\tsubl\tENOMEM(%rip), %edi\n.LBB0_2:\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tERR_PTR@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\tath10k_wmi_op_gen_addba_set_resp, .Lfunc_end0-ath10k_wmi_op_gen_addba_set_resp\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.bss\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\tENOMEM,@object                  # @ENOMEM\n\t.globl\tENOMEM\n\t.p2align\t2\nENOMEM:\n\t.long\t0                               # 0x0\n\t.size\tENOMEM, 4\n\n\t.type\tATH10K_DBG_WMI,@object          # @ATH10K_DBG_WMI\n\t.globl\tATH10K_DBG_WMI\n\t.p2align\t2\nATH10K_DBG_WMI:\n\t.long\t0                               # 0x0\n\t.size\tATH10K_DBG_WMI, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"wmi addba set resp vdev_id 0x%X mac_addr %pM tid %u status %u\\n\"\n\t.size\t.L.str, 63\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wmi_addba_set_resp_cmd = type { ptr, ptr, i32 }\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@ATH10K_DBG_WMI = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [63 x i8] c\"wmi addba set resp vdev_id 0x%X mac_addr %pM tid %u status %u\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath10k_wmi_op_gen_addba_set_resp], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ath10k_wmi_op_gen_addba_set_resp(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %2, null\n  br i1 %6, label %7, label %11\n\n7:                                                ; preds = %5\n  %8 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  %10 = tail call ptr @ERR_PTR(i32 noundef %9) #2\n  br label %25\n\n11:                                               ; preds = %5\n  %12 = tail call ptr @ath10k_wmi_alloc_skb(ptr noundef %0, i32 noundef 32) #2\n  %13 = icmp eq ptr %12, null\n  br i1 %13, label %14, label %18\n\n14:                                               ; preds = %11\n  %15 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %16 = sub nsw i32 0, %15\n  %17 = tail call ptr @ERR_PTR(i32 noundef %16) #2\n  br label %25\n\n18:                                               ; preds = %11\n  %19 = load ptr, ptr %12, align 8, !tbaa !9\n  %20 = tail call ptr @__cpu_to_le32(i32 noundef %1) #2\n  %21 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  store ptr %20, ptr %21, align 8, !tbaa !12\n  %22 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 1\n  %23 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  %24 = tail call i32 @ether_addr_copy(i32 noundef %1, ptr noundef %2) #2\n  store ptr %20, ptr %22, align 8, !tbaa !14\n  %25 = tail call ptr @__cpu_to_le32(i32 noundef %4) #2\n  store ptr %25, ptr %19, align 8, !tbaa !15\n  %26 = load i32, ptr @ATH10K_DBG_WMI, align 4, !tbaa !5\n  %27 = tail call i32 @ath10k_dbg(ptr noundef %0, i32 noundef %26, ptr noundef nonnull @.str, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #2\n  br label %28\n\n28:                                               ; preds = %18, %14, %7\n  %29 = phi ptr [ %17, %14 ], [ %12, %18 ], [ %10, %7 ]\n  ret ptr %29\n}\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @ath10k_wmi_alloc_skb(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @__cpu_to_le32(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ether_addr_copy(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ath10k_dbg(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"sk_buff\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !11, i64 16}\n!13 = !{!\"wmi_addba_set_resp_cmd\", !11, i64 0, !11, i64 8, !6, i64 16}\n!14 = !{!13, !11, i64 8}\n!15 = !{!13, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wmi_addba_set_resp_cmd = type { ptr, ptr, i32 }\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@ATH10K_DBG_WMI = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [63 x i8] c\"wmi addba set resp vdev_id 0x%X mac_addr %pM tid %u status %u\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath10k_wmi_op_gen_addba_set_resp], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ath10k_wmi_op_gen_addba_set_resp(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %2, null\n  br i1 %6, label %7, label %11\n\n7:                                                ; preds = %5\n  %8 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  %10 = tail call ptr @ERR_PTR(i32 noundef %9) #2\n  br label %25\n\n11:                                               ; preds = %5\n  %12 = tail call ptr @ath10k_wmi_alloc_skb(ptr noundef %0, i32 noundef 32) #2\n  %13 = icmp eq ptr %12, null\n  br i1 %13, label %14, label %18\n\n14:                                               ; preds = %11\n  %15 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %16 = sub nsw i32 0, %15\n  %17 = tail call ptr @ERR_PTR(i32 noundef %16) #2\n  br label %25\n\n18:                                               ; preds = %11\n  %19 = load ptr, ptr %12, align 8, !tbaa !9\n  %20 = tail call ptr @__cpu_to_le32(i32 noundef %1) #2\n  %21 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  store ptr %20, ptr %21, align 8, !tbaa !12\n  %22 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 1\n  %23 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  %24 = tail call i32 @ether_addr_copy(i32 noundef %1, ptr noundef %2) #2\n  store ptr %20, ptr %22, align 8, !tbaa !14\n  %25 = tail call ptr @__cpu_to_le32(i32 noundef %4) #2\n  store ptr %25, ptr %19, align 8, !tbaa !15\n  %26 = load i32, ptr @ATH10K_DBG_WMI, align 4, !tbaa !5\n  %27 = tail call i32 @ath10k_dbg(ptr noundef %0, i32 noundef %26, ptr noundef nonnull @.str, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #2\n  br label %29\n\n28:                                               ; preds = %29\n  %29 = phi ptr [ %30, %29 ], [ %12, %18 ]\n  ret ptr %29\n\n29:                                               ; preds = %28, %18\n  %30 = phi ptr [ %12, %18 ], [ %29, %28 ]\n  %31 = load i32, ptr %30, align 4, !tbaa !16\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %28, label %33\n\n33:                                               ; preds = %29\n  %34 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  %35 = load i32, ptr %34, align 8, !tbaa !12\n  %36 = tail call ptr @__cpu_to_le32(i32 noundef %35) #2\n  store ptr %36, ptr %34, align 8, !tbaa !12\n  %37 = tail call i32 @ath10k_wmi_cmd_send(ptr noundef nonnull %0, ptr noundef nonnull %30, i32 noundef %31) #2\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %28, label %39\n\n39:                                               ; preds = %33\n  %40 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %41 = sub nsw i32 0, %40\n  %42 = tail call ptr @ERR_PTR(i32 noundef %41) #2\n  br label %25\n\n43:                                               ; preds = %39\n  %44 = phi ptr [ %42, %39 ], [ %30, %33 ]\n  ret ptr %44\n\n45:                                               ; preds = %43\n  %46 = phi ptr [ %44, %43 ], [ %17, %14 ]\n  ret ptr %46\n\n47:                                               ; preds = %45\n  %48 = phi ptr [ %46, %45 ], [ %10, %7 ]\n  ret ptr %48\n\n49:                                               ; preds = %47\n  ret ptr %47\n}\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @ath10k_wmi_alloc_skb(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @__cpu_to_le32(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ether_addr_copy(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ath10k_dbg(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ath10k_wmi_cmd_send(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"sk_buff\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !11, i64 16}\n!13 = !{!\"wmi_addba_set_resp_cmd\", !11, i64 0, !11, i64 8, !6, i64 16}\n!14 = !{!13, !11, i64 8}\n!15 = !{!13, !11, i64 0}\n!16 = !{!17, !6, i64 0}\n!17 = !{!\"wmi_cmd\", !6, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wmi_addba_set_resp_cmd = type { ptr, ptr, i32 }\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@ATH10K_DBG_WMI = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [63 x i8] c\"wmi addba set resp vdev_id 0x%X mac_addr %pM tid %u status %u\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath10k_wmi_op_gen_addba_set_resp], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ath10k_wmi_op_gen_addba_set_resp(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %2, null\n  br i1 %6, label %7, label %11\n\n7:                                                ; preds = %5\n  %8 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  %10 = tail call ptr @ERR_PTR(i32 noundef %9) #2\n  br label %25\n\n11:                                               ; preds = %5\n  %12 = tail call ptr @ath10k_wmi_alloc_skb(ptr noundef %0, i32 noundef 32) #2\n  %13 = icmp eq ptr %12, null\n  br i1 %13, label %14, label %18\n\n14:                                               ; preds = %11\n  %15 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %16 = sub nsw i32 0, %15\n  %17 = tail call ptr @ERR_PTR(i32 noundef %16) #2\n  br label %25\n\n18:                                               ; preds = %11\n  %19 = load ptr, ptr %12, align 8, !tbaa !9\n  %20 = tail call ptr @__cpu_to_le32(i32 noundef %1) #2\n  %21 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  store ptr %20, ptr %21, align 8, !tbaa !12\n  %22 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 1\n  %23 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  %24 = tail call i32 @ether_addr_copy(i32 noundef %1, ptr noundef %2) #2\n  store ptr %20, ptr %22, align 8, !tbaa !14\n  %25 = tail call ptr @__cpu_to_le32(i32 noundef %4) #2\n  store ptr %25, ptr %19, align 8, !tbaa !15\n  %26 = load i32, ptr @ATH10K_DBG_WMI, align 4, !tbaa !5\n  %27 = tail call i32 @ath10k_dbg(ptr noundef %0, i32 noundef %26, ptr noundef nonnull @.str, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #2\n  br label %29\n\n28:                                               ; preds = %29\n  %29 = phi ptr [ %30, %29 ], [ %12, %18 ]\n  ret ptr %29\n\n29:                                               ; preds = %28, %18\n  %30 = phi ptr [ %12, %18 ], [ %29, %28 ]\n  %31 = load i32, ptr %30, align 4, !tbaa !16\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %28, label %33\n\n33:                                               ; preds = %29\n  %34 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  %35 = load i32, ptr %34, align 8, !tbaa !12\n  %36 = tail call ptr @__cpu_to_le32(i32 noundef %35) #2\n  store ptr %36, ptr %34, align 8, !tbaa !12\n  %37 = tail call i32 @ath10k_wmi_cmd_send(ptr noundef nonnull %0, ptr noundef nonnull %30, i32 noundef %31) #2\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %28, label %39\n\n39:                                               ; preds = %33\n  %40 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %41 = sub nsw i32 0, %40\n  %42 = tail call ptr @ERR_PTR(i32 noundef %41) #2\n  br label %25\n\n43:                                               ; preds = %39\n  %44 = phi ptr [ %42, %39 ], [ %30, %33 ]\n  ret ptr %44\n\n45:                                               ; preds = %43\n  %46 = phi ptr [ %44, %43 ], [ %17, %14 ]\n  ret ptr %46\n\n47:                                               ; preds = %45\n  %48 = phi ptr [ %46, %45 ], [ %10, %7 ]\n  ret ptr %48\n\n49:                                               ; preds = %47\n  ret ptr %47\n}\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @ath10k_wmi_alloc_skb(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @__cpu_to_le32(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ether_addr_copy(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ath10k_dbg(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ath10k_wmi_cmd_send(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"sk_buff\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !11, i64 16}\n!13 = !{!\"wmi_addba_set_resp_cmd\", !11, i64 0, !11, i64 8, !6, i64 16}\n!14 = !{!13, !11, i64 8}\n!15 = !{!13, !11, i64 0}\n!16 = !{!17, !6, i64 0}\n!17 = !{!\"wmi_cmd\", !6, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wmi_addba_set_resp_cmd = type { ptr, ptr, i32 }\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@ATH10K_DBG_WMI = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [63 x i8] c\"wmi addba set resp vdev_id 0x%X mac_addr %pM tid %u status %u\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath10k_wmi_op_gen_addba_set_resp], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ath10k_wmi_op_gen_addba_set_resp(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %2, null\n  br i1 %6, label %7, label %11\n\n7:                                                ; preds = %5\n  %8 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  %10 = tail call ptr @ERR_PTR(i32 noundef %9) #2\n  br label %25\n\n11:                                               ; preds = %5\n  %12 = tail call ptr @ath10k_wmi_alloc_skb(ptr noundef %0, i32 noundef 32) #2\n  %13 = icmp eq ptr %12, null\n  br i1 %13, label %14, label %18\n\n14:                                               ; preds = %11\n  %15 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %16 = sub nsw i32 0, %15\n  %17 = tail call ptr @ERR_PTR(i32 noundef %16) #2\n  br label %25\n\n18:                                               ; preds = %11\n  %19 = load ptr, ptr %12, align 8, !tbaa !9\n  %20 = tail call ptr @__cpu_to_le32(i32 noundef %1) #2\n  %21 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  store ptr %20, ptr %21, align 8, !tbaa !12\n  %22 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 1\n  %23 = getelementptr inbounds %struct.wmi_addba_set_resp_cmd, ptr %19, i64 0, i32 2\n  %24 = tail call i32 @ether_addr_copy(i32 noundef %1, ptr noundef %2) #2\n  store ptr %20, ptr %22, align 8, !tbaa !14\n  %25 = tail call ptr @__cpu_to_le32(i32 noundef %4) #2\n  store ptr %25, ptr %19, align 8, !tbaa !15\n  %26 = load i32, ptr @ATH10K_DBG_WMI, align 4, !tbaa !5\n  %27 = tail call i32 @ath10k_dbg(ptr noundef %0, i32 noundef %26, ptr noundef nonnull @.str, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #2\n  br label %28\n\n28:                                               ; preds = %18, %14, %7\n  %29 = phi ptr [ %17, %14 ], [ %12, %18 ], [ %10, %7 ]\n  ret ptr %29\n}\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @ath10k_wmi_alloc_skb(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @__cpu_to_le32(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ether_addr_copy(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ath10k_dbg(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"sk_buff\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !11, i64 16}\n!13 = !{!\"wmi_addba_set_resp_cmd\", !11, i64 0, !11, i64 8, !6, i64 16}\n!14 = !{!13, !11, i64 8}\n!15 = !{!13, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/wireless/ath/ath10k/extr_wmi.c_ath10k_wmi_op_gen_addba_set_resp.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wmi_addba_setresponse_cmd = type { ptr, ptr, %struct.TYPE_2__, ptr }\n%struct.TYPE_2__ = type { i32 }\n\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@ATH10K_DBG_WMI = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [63 x i8] c\"wmi addba set resp vdev_id 0x%X mac_addr %pM tid %u status %u\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ath10k_wmi_op_gen_addba_set_resp], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ath10k_wmi_op_gen_addba_set_resp(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %2, null\n  br i1 %6, label %7, label %11\n\n7:                                                ; preds = %5\n  %8 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  %10 = tail call ptr @ERR_PTR(i32 noundef %9) #2\n  br label %31\n\n11:                                               ; preds = %5\n  %12 = tail call ptr @ath10k_wmi_alloc_skb(ptr noundef %0, i32 noundef 32) #2\n  %13 = icmp eq ptr %12, null\n  br i1 %13, label %14, label %18\n\n14:                                               ; preds = %11\n  %15 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %16 = sub nsw i32 0, %15\n  %17 = tail call ptr @ERR_PTR(i32 noundef %16) #2\n  br label %31\n\n18:                                               ; preds = %11\n  %19 = load i64, ptr %12, align 8, !tbaa !9\n  %20 = inttoptr i64 %19 to ptr\n  %21 = tail call ptr @__cpu_to_le32(i32 noundef %1) #2\n  %22 = getelementptr inbounds %struct.wmi_addba_setresponse_cmd, ptr %20, i64 0, i32 3\n  store ptr %21, ptr %22, align 8, !tbaa !12\n  %23 = getelementptr inbounds %struct.wmi_addba_setresponse_cmd, ptr %20, i64 0, i32 2\n  %24 = load i32, ptr %23, align 8, !tbaa !16\n  %25 = tail call i32 @ether_addr_copy(i32 noundef %24, ptr noundef nonnull %2) #2\n  %26 = tail call ptr @__cpu_to_le32(i32 noundef %3) #2\n  %27 = getelementptr inbounds %struct.wmi_addba_setresponse_cmd, ptr %20, i64 0, i32 1\n  store ptr %26, ptr %27, align 8, !tbaa !17\n  %28 = tail call ptr @__cpu_to_le32(i32 noundef %4) #2\n  store ptr %28, ptr %20, align 8, !tbaa !18\n  %29 = load i32, ptr @ATH10K_DBG_WMI, align 4, !tbaa !5\n  %30 = tail call i32 @ath10k_dbg(ptr noundef %0, i32 noundef %29, ptr noundef nonnull @.str, i32 noundef %1, ptr noundef nonnull %2, i32 noundef %3, i32 noundef %4) #2\n  br label %31\n\n31:                                               ; preds = %18, %14, %7\n  %32 = phi ptr [ %12, %18 ], [ %17, %14 ], [ %10, %7 ]\n  ret ptr %32\n}\n\ndeclare ptr @ERR_PTR(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @ath10k_wmi_alloc_skb(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @__cpu_to_le32(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ether_addr_copy(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ath10k_dbg(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"sk_buff\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!13, !14, i64 24}\n!13 = !{!\"wmi_addba_setresponse_cmd\", !14, i64 0, !14, i64 8, !15, i64 16, !14, i64 24}\n!14 = !{!\"any pointer\", !7, i64 0}\n!15 = !{!\"TYPE_2__\", !6, i64 0}\n!16 = !{!13, !6, i64 16}\n!17 = !{!13, !14, i64 8}\n!18 = !{!13, !14, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_qla_target.c_qlt_send_term_exchange.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function qlt_send_term_exchange\n\t.type\tqlt_send_term_exchange,@function\nqlt_send_term_exchange:                 # @qlt_send_term_exchange\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%r8d, %r12d\n\tmovl\t%ecx, %r14d\n\tmovq\t%rdx, %rbx\n\tmovq\t%rsi, %rbp\n\tmovq\t%rdi, %r13\n\tleaq\t16(%rsi), %rax\n\tleaq\t8(%rdi), %rcx\n\ttestq\t%rsi, %rsi\n\tcmoveq\t%rcx, %rax\n\tmovq\t(%rax), %r15\n\ttestl\t%r14d, %r14d\n\tjne\t.LBB0_2\n# %bb.1:\n\tmovl\t(%r13), %edi\n\txorl\t%esi, %esi\n\tcallq\tspin_lock_irqsave@PLT\n.LBB0_2:\n\tmovq\t%r13, %rdi\n\tmovq\t%rbp, %rsi\n\tmovq\t%rbx, %rdx\n\tcallq\t__qlt_send_term_exchange@PLT\n\taddl\tENOMEM(%rip), %eax\n\tjne\t.LBB0_4\n# %bb.3:\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\txorl\t%edx, %edx\n\txorl\t%ecx, %ecx\n\tcallq\tqlt_alloc_qfull_cmd@PLT\n.LBB0_4:\n\ttestq\t%rbp, %rbp\n\tje\t.LBB0_10\n# %bb.5:\n\ttestl\t%r12d, %r12d\n\tjne\t.LBB0_10\n# %bb.6:\n\tcmpl\t$0, 8(%rbp)\n\tje\t.LBB0_7\n.LBB0_10:\n\ttestl\t%r14d, %r14d\n\tje\t.LBB0_12\n.LBB0_11:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_7:\n\t.cfi_def_cfa_offset 64\n\tcmpq\t$0, (%rbp)\n\tje\t.LBB0_9\n# %bb.8:\n\tmovq\t%r15, %rdi\n\tmovq\t%rbp, %rsi\n\tcallq\tqlt_unmap_sg@PLT\n.LBB0_9:\n\tmovq\t(%r15), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rbp, %rdi\n\tcallq\t*(%rax)\n\ttestl\t%r14d, %r14d\n\tjne\t.LBB0_11\n.LBB0_12:\n\tmovl\t(%r13), %edi\n\txorl\t%esi, %esi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tspin_unlock_irqrestore@PLT      # TAILCALL\n.Lfunc_end0:\n\t.size\tqlt_send_term_exchange, .Lfunc_end0-qlt_send_term_exchange\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tENOMEM,@object                  # @ENOMEM\n\t.bss\n\t.globl\tENOMEM\n\t.p2align\t2\nENOMEM:\n\t.long\t0                               # 0x0\n\t.size\tENOMEM, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, i32 }\n%struct.TYPE_9__ = type { ptr, i32 }\n%struct.TYPE_8__ = type { i32, i32 }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qlt_send_term_exchange], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qlt_send_term_exchange(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %1, null\n  %7 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 1\n  %9 = select i1 %6, ptr %8, ptr %7\n  %10 = load ptr, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq i32 %3, 0\n  br i1 %11, label %12, label %15\n\n12:                                               ; preds = %5\n  %13 = load i32, ptr %0, align 8, !tbaa !9\n  %14 = tail call i32 @spin_lock_irqsave(i32 noundef %13, i64 noundef 0) #2\n  br label %15\n\n15:                                               ; preds = %12, %5\n  %16 = tail call i32 @__qlt_send_term_exchange(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %2) #2\n  %17 = load i32, ptr @ENOMEM, align 4, !tbaa !12\n  %18 = sub nsw i32 0, %17\n  %19 = icmp eq i32 %16, %18\n  br i1 %19, label %20, label %22\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @qlt_alloc_qfull_cmd(ptr noundef %10, ptr noundef %2, i32 noundef 0, i32 noundef 0) #2\n  br label %22\n\n22:                                               ; preds = %20, %15\n  br i1 %6, label %30, label %23\n\n23:                                               ; preds = %22\n  %24 = icmp eq i32 %4, 0\n  br i1 %24, label %25, label %30\n\n25:                                               ; preds = %23\n  %26 = load i32, ptr %7, align 8, !tbaa !13\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %30\n\n28:                                               ; preds = %25\n  %29 = load ptr, ptr %1, align 8, !tbaa !15\n  br label %35\n\n30:                                               ; preds = %25, %23, %22\n  br i1 %11, label %39, label %31\n\n31:                                               ; preds = %30\n  %32 = load i32, ptr %0, align 8, !tbaa !9\n  %33 = tail call i32 @spin_unlock_irqrestore(i32 noundef %32, i64 noundef 0) #2\n  br label %39\n\n34:                                               ; preds = %35\n  %35 = load ptr, ptr %10, align 8, !tbaa !17\n  %36 = load ptr, ptr %35, align 8, !tbaa !19\n  %37 = load ptr, ptr %36, align 8, !tbaa !21\n  %38 = tail call i32 %37(ptr noundef nonnull %1) #2\n  br label %39\n\n39:                                               ; preds = %34, %31, %30\n  ret void\n}\n\ndeclare i32 @spin_lock_irqsave(i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @__qlt_send_term_exchange(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_alloc_qfull_cmd(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_9__\", !6, i64 0, !11, i64 8}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!14, !11, i64 8}\n!14 = !{!\"TYPE_10__\", !6, i64 0, !11, i64 8}\n!15 = !{!16, !6, i64 0}\n!16 = !{!\"TYPE_11__\", !6, i64 0}\n!17 = !{!18, !6, i64 0}\n!18 = !{!\"TYPE_12__\", !6, i64 0}\n!19 = !{!20, !6, i64 0}\n!20 = !{!\"TYPE_13__\", !6, i64 0}\n!21 = !{!22, !6, i64 0}\n!22 = !{!\"TYPE_14__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qlt_send_term_exchange], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qlt_send_term_exchange(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %1, null\n  %7 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %0, i64 0, i32 2\n  %9 = select i1 %6, ptr %8, ptr %7\n  %10 = load ptr, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq i32 %3, 0\n  br i1 %11, label %12, label %15\n\n12:                                               ; preds = %5\n  %13 = load i32, ptr %0, align 8, !tbaa !9\n  %14 = tail call i32 @spin_lock_irqsave(i32 noundef %13, i64 noundef 0) #2\n  br label %15\n\n15:                                               ; preds = %12, %5\n  %16 = tail call i32 @__qlt_send_term_exchange(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %2) #2\n  %17 = load i32, ptr @ENOMEM, align 4, !tbaa !12\n  %18 = sub nsw i32 0, %17\n  %19 = icmp eq i32 %16, %18\n  br i1 %19, label %20, label %22\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @qlt_alloc_qfull_cmd(ptr noundef %10, ptr noundef %2, i32 noundef 0, i32 noundef 0) #2\n  br label %22\n\n22:                                               ; preds = %20, %15\n  %23 = icmp ne i32 %4, 0\n  %24 = or i1 %6, %23\n  br i1 %24, label %36, label %25\n\n25:                                               ; preds = %22\n  %26 = load i32, ptr %7, align 8, !tbaa !13\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %36\n\n28:                                               ; preds = %25\n  %29 = load ptr, ptr %1, align 8, !tbaa !15\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %34, label %31\n\n31:                                               ; preds = %28\n  %32 = tail call i32 @qlt_unmap_sg(ptr noundef %10, ptr noundef nonnull %1) #2\n  %33 = load ptr, ptr %10, align 8, !tbaa !17\n  br label %34\n\n34:                                               ; preds = %31, %28\n  %35 = load ptr, ptr %33, align 8, !tbaa !19\n  %36 = tail call i32 %35(ptr noundef nonnull %1) #2\n  br label %37\n\n37:                                               ; preds = %34, %25\n  br i1 %11, label %38, label %41\n\n38:                                               ; preds = %37\n  %39 = load i32, ptr %0, align 8, !tbaa !9\n  %40 = tail call i32 @spin_unlock_irqrestore(i32 noundef %39, i64 noundef 0) #2\n  br label %41\n\n41:                                               ; preds = %38, %37\n  ret void\n}\n\ndeclare i32 @spin_lock_irqsave(i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @__qlt_send_term_exchange(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_alloc_qfull_cmd(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_unmap_sg(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_11__\", !11, i64 0, !11, i64 4, !6, i64 8}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!14, !11, i64 8}\n!14 = !{!\"TYPE_10__\", !6, i64 0, !11, i64 8}\n!15 = !{!14, !6, i64 0}\n!16 = !{!17, !6, i64 0}\n!17 = !{!18, !6, i64 0}\n!18 = !{!\"TYPE_12__\", !6, i64 0}\n!19 = !{!20, !6, i64 0}\n!20 = !{!\"TYPE_13__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_11__ = type { ptr, i32 }\n%struct.TYPE_10__ = type { i32, i32 }\n%struct.TYPE_12__ = type { ptr, ptr }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qlt_send_term_exchange], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qlt_send_term_exchange(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %1, null\n  %7 = getelementptr inbounds %struct.TYPE_11__, ptr %1, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %9 = select i1 %6, ptr %8, ptr %7\n  %10 = load ptr, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq i32 %3, 0\n  br i1 %11, label %12, label %15\n\n12:                                               ; preds = %5\n  %13 = load i32, ptr %0, align 4, !tbaa !9\n  %14 = tail call i32 @spin_lock_irqsave(i32 noundef %13, i64 noundef 0) #2\n  br label %15\n\n15:                                               ; preds = %12, %5\n  %16 = tail call i32 @__qlt_send_term_exchange(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %2) #2\n  %17 = load i32, ptr @ENOMEM, align 4, !tbaa !12\n  %18 = sub nsw i32 0, %17\n  %19 = icmp eq i32 %16, %18\n  br i1 %19, label %20, label %22\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @qlt_alloc_qfull_cmd(ptr noundef %10, ptr noundef %2, i32 noundef 0, i32 noundef 0) #2\n  br label %22\n\n22:                                               ; preds = %20, %15\n  br i1 %6, label %31, label %23\n\n23:                                               ; preds = %22\n  %24 = icmp eq i32 %4, 0\n  br i1 %24, label %25, label %31\n\n25:                                               ; preds = %23\n  %26 = load i32, ptr %7, align 8, !tbaa !13\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %31\n\n28:                                               ; preds = %25\n  %29 = load ptr, ptr %1, align 8, !tbaa !15\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %34, label %32\n\n31:                                               ; preds = %25, %23\n  br label %39\n\n32:                                               ; preds = %28\n  %33 = tail call i32 @qlt_unmap_sg(ptr noundef %10, ptr noundef nonnull %1) #2\n  br label %34\n\n34:                                               ; preds = %32, %28\n  %35 = load ptr, ptr %10, align 8, !tbaa !17\n  %36 = load ptr, ptr %35, align 8, !tbaa !19\n  %37 = load ptr, ptr %36, align 8, !tbaa !21\n  %38 = tail call i32 %37(ptr noundef nonnull %1) #2\n  br label %39\n\n39:                                               ; preds = %34, %31\n  br i1 %11, label %40, label %42\n\n40:                                               ; preds = %39\n  %41 = load i32, ptr %0, align 4, !tbaa !9\n  br label %42\n\n42:                                               ; preds = %40, %39\n  %43 = phi i32 [ %41, %40 ], [ %3, %39 ]\n  %44 = tail call i32 @spin_unlock_irqrestore(i32 noundef %43, i64 noundef 0) #2\n  ret void\n}\n\ndeclare i32 @spin_lock_irqsave(i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @__qlt_send_term_exchange(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_alloc_qfull_cmd(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_unmap_sg(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_10__\", !11, i64 0, !11, i64 4}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!14, !11, i64 8}\n!14 = !{!\"TYPE_11__\", !6, i64 0, !11, i64 8}\n!15 = !{!14, !6, i64 0}\n!16 = !{!17, !6, i64 0}\n!17 = !{!\"TYPE_12__\", !6, i64 0, !6, i64 8}\n!18 = !{!16, !6, i64 0}\n!19 = !{!20, !6, i64 0}\n!20 = !{!\"TYPE_13__\", !6, i64 0}\n!21 = !{!22, !6, i64 0}\n!22 = !{!\"TYPE_14__\", !6, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_11__ = type { ptr, i32 }\n%struct.TYPE_10__ = type { i32, i32 }\n%struct.TYPE_12__ = type { ptr, ptr }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qlt_send_term_exchange], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qlt_send_term_exchange(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %1, null\n  %7 = getelementptr inbounds %struct.TYPE_11__, ptr %1, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %9 = select i1 %6, ptr %8, ptr %7\n  %10 = load ptr, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq i32 %3, 0\n  br i1 %11, label %12, label %15\n\n12:                                               ; preds = %5\n  %13 = load i32, ptr %0, align 4, !tbaa !9\n  %14 = tail call i32 @spin_lock_irqsave(i32 noundef %13, i64 noundef 0) #2\n  br label %15\n\n15:                                               ; preds = %12, %5\n  %16 = tail call i32 @__qlt_send_term_exchange(ptr noundef %0, ptr noundef nonnull %1, ptr noundef %2) #2\n  %17 = load i32, ptr @ENOMEM, align 4, !tbaa !12\n  %18 = sub nsw i32 0, %17\n  %19 = icmp eq i32 %16, %18\n  br i1 %19, label %20, label %22\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @qlt_alloc_qfull_cmd(ptr noundef %10, ptr noundef %2, i32 noundef 0, i32 noundef 0) #2\n  br label %22\n\n22:                                               ; preds = %20, %15\n  br i1 %6, label %30, label %23\n\n23:                                               ; preds = %22\n  %24 = icmp eq i32 %4, 0\n  br i1 %24, label %25, label %30\n\n25:                                               ; preds = %23\n  %26 = load i32, ptr %7, align 8, !tbaa !13\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %28, label %30\n\n28:                                               ; preds = %25\n  %29 = load ptr, ptr %1, align 8, !tbaa !15\n  br label %34\n\n30:                                               ; preds = %25, %23, %22\n  br i1 %11, label %38, label %31\n\n31:                                               ; preds = %30\n  %32 = load ptr, ptr %10, align 8, !tbaa !17\n  %33 = load ptr, ptr %32, align 8, !tbaa !19\n  tail call void %33(ptr noundef nonnull %1) #2\n  br label %38\n\n34:                                               ; preds = %28\n  %35 = icmp eq ptr %29, null\n  br i1 %35, label %38, label %36\n\n36:                                               ; preds = %34\n  %37 = tail call i32 @qlt_unmap_sg(ptr noundef %10, ptr noundef nonnull %1) #2\n  br label %38\n\n38:                                               ; preds = %36, %34, %31, %30\n  br i1 %11, label %39, label %41\n\n39:                                               ; preds = %38\n  %40 = load i32, ptr %0, align 4, !tbaa !9\n  br label %41\n\n41:                                               ; preds = %39, %38\n  %42 = phi i32 [ %40, %39 ], [ %13, %38 ]\n  %43 = tail call i32 @spin_unlock_irqrestore(i32 noundef %42, i64 noundef 0) #2\n  ret void\n}\n\ndeclare i32 @spin_lock_irqsave(i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @__qlt_send_term_exchange(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_alloc_qfull_cmd(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_unmap_sg(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_10__\", !11, i64 0, !11, i64 4}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!14, !11, i64 8}\n!14 = !{!\"TYPE_11__\", !6, i64 0, !11, i64 8}\n!15 = !{!14, !6, i64 0}\n!16 = !{!17, !6, i64 0}\n!17 = !{!\"TYPE_12__\", !6, i64 0, !6, i64 8}\n!18 = !{!16, !6, i64 0}\n!19 = !{!20, !6, i64 0}\n!20 = !{!\"TYPE_13__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/scsi/qla2xxx/extr_qla_target.c_qlt_send_term_exchange.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.qla_tgt_cmd = type { i64, i32, ptr }\n%struct.qla_qpair = type { i32, ptr }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qlt_send_term_exchange], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qlt_send_term_exchange(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {\n  %6 = icmp eq ptr %1, null\n  %7 = getelementptr inbounds %struct.qla_tgt_cmd, ptr %1, i64 0, i32 2\n  %8 = getelementptr inbounds %struct.qla_qpair, ptr %0, i64 0, i32 1\n  %9 = select i1 %6, ptr %8, ptr %7\n  %10 = load ptr, ptr %9, align 8, !tbaa !5\n  %11 = icmp eq i32 %3, 0\n  br i1 %11, label %17, label %12\n\n12:                                               ; preds = %5\n  %13 = tail call i32 @__qlt_send_term_exchange(ptr noundef %0, ptr noundef %1, ptr noundef %2) #2\n  %14 = load i32, ptr @ENOMEM, align 4, !tbaa !9\n  %15 = sub nsw i32 0, %14\n  %16 = icmp eq i32 %13, %15\n  br i1 %16, label %24, label %26\n\n17:                                               ; preds = %5\n  %18 = load i32, ptr %0, align 8, !tbaa !11\n  %19 = tail call i32 @spin_lock_irqsave(i32 noundef %18, i64 noundef 0) #2\n  %20 = tail call i32 @__qlt_send_term_exchange(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %2) #2\n  %21 = load i32, ptr @ENOMEM, align 4, !tbaa !9\n  %22 = sub nsw i32 0, %21\n  %23 = icmp eq i32 %20, %22\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %17, %12\n  %25 = tail call i32 @qlt_alloc_qfull_cmd(ptr noundef %10, ptr noundef %2, i32 noundef 0, i32 noundef 0) #2\n  br label %26\n\n26:                                               ; preds = %24, %17, %12\n  %27 = icmp ne i32 %4, 0\n  %28 = or i1 %6, %27\n  br i1 %28, label %43, label %29\n\n29:                                               ; preds = %26\n  %30 = getelementptr inbounds %struct.qla_tgt_cmd, ptr %1, i64 0, i32 1\n  %31 = load i32, ptr %30, align 8, !tbaa !13\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %33, label %43\n\n33:                                               ; preds = %29\n  %34 = load i64, ptr %1, align 8, !tbaa !16\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %38, label %36\n\n36:                                               ; preds = %33\n  %37 = tail call i32 @qlt_unmap_sg(ptr noundef %10, ptr noundef nonnull %1) #2\n  br label %38\n\n38:                                               ; preds = %36, %33\n  %39 = load ptr, ptr %10, align 8, !tbaa !17\n  %40 = load ptr, ptr %39, align 8, !tbaa !19\n  %41 = load ptr, ptr %40, align 8, !tbaa !22\n  %42 = tail call i32 %41(ptr noundef nonnull %1) #2\n  br label %43\n\n43:                                               ; preds = %38, %29, %26\n  br i1 %11, label %44, label %47\n\n44:                                               ; preds = %43\n  %45 = load i32, ptr %0, align 8, !tbaa !11\n  %46 = tail call i32 @spin_unlock_irqrestore(i32 noundef %45, i64 noundef 0) #2\n  br label %47\n\n47:                                               ; preds = %44, %43\n  ret void\n}\n\ndeclare i32 @__qlt_send_term_exchange(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_alloc_qfull_cmd(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_irqsave(i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @qlt_unmap_sg(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"qla_qpair\", !10, i64 0, !6, i64 8}\n!13 = !{!14, !10, i64 8}\n!14 = !{!\"qla_tgt_cmd\", !15, i64 0, !10, i64 8, !6, i64 16}\n!15 = !{!\"long\", !7, i64 0}\n!16 = !{!14, !15, i64 0}\n!17 = !{!18, !6, i64 0}\n!18 = !{!\"scsi_qla_host\", !6, i64 0}\n!19 = !{!20, !6, i64 0}\n!20 = !{!\"TYPE_6__\", !21, i64 0}\n!21 = !{!\"TYPE_5__\", !6, i64 0}\n!22 = !{!23, !6, i64 0}\n!23 = !{!\"TYPE_4__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ngx_http_upstream_ip_hash_module.c_ngx_http_upstream_init_ip_hash_peer.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ngx_http_upstream_init_ip_hash_peer\n\t.type\tngx_http_upstream_init_ip_hash_peer,@function\nngx_http_upstream_init_ip_hash_peer:    # @ngx_http_upstream_init_ip_hash_peer\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %rbx\n\tmovl\t16(%rdi), %edi\n\tmovl\t$40, %esi\n\tcallq\tngx_palloc@PLT\n\tmovl\t$NGX_ERROR, %r12d\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.1:\n\tmovq\t%rax, %r14\n\taddq\t$32, %rax\n\tmovq\t8(%rbx), %rcx\n\tmovq\t%rax, 8(%rcx)\n\tmovq\t%rbx, %rdi\n\tmovq\t%r15, %rsi\n\tcallq\tngx_http_upstream_init_round_robin_peer@PLT\n\tcmpq\tNGX_OK(%rip), %rax\n\tjne\t.LBB0_5\n# %bb.2:\n\tmovl\tngx_http_upstream_get_ip_hash_peer(%rip), %eax\n\tmovq\t8(%rbx), %rcx\n\tmovl\t%eax, (%rcx)\n\tmovq\t(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tcmpl\t$129, (%rax)\n\tje\t.LBB0_4\n# %bb.3:\n\tmovq\tngx_http_upstream_ip_hash_pseudo_addr(%rip), %rax\n.LBB0_4:\n\tmovq\t%rax, 24(%r14)\n\tmovabsq\t$382252089347, %rax             # imm = 0x5900000003\n\tmovq\t%rax, (%r14)\n\tmovq\t$0, 16(%r14)\n\tmovl\tngx_http_upstream_get_round_robin_peer(%rip), %eax\n\tmovl\t%eax, 8(%r14)\n\tmovl\t$NGX_OK, %r12d\n.LBB0_5:\n\tmovq\t(%r12), %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tngx_http_upstream_init_ip_hash_peer, .Lfunc_end0-ngx_http_upstream_init_ip_hash_peer\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNGX_ERROR,@object               # @NGX_ERROR\n\t.bss\n\t.globl\tNGX_ERROR\n\t.p2align\t3\nNGX_ERROR:\n\t.quad\t0                               # 0x0\n\t.size\tNGX_ERROR, 8\n\n\t.type\tNGX_OK,@object                  # @NGX_OK\n\t.globl\tNGX_OK\n\t.p2align\t3\nNGX_OK:\n\t.quad\t0                               # 0x0\n\t.size\tNGX_OK, 8\n\n\t.type\tngx_http_upstream_get_ip_hash_peer,@object # @ngx_http_upstream_get_ip_hash_peer\n\t.globl\tngx_http_upstream_get_ip_hash_peer\n\t.p2align\t2\nngx_http_upstream_get_ip_hash_peer:\n\t.long\t0                               # 0x0\n\t.size\tngx_http_upstream_get_ip_hash_peer, 4\n\n\t.type\tngx_http_upstream_ip_hash_pseudo_addr,@object # @ngx_http_upstream_ip_hash_pseudo_addr\n\t.globl\tngx_http_upstream_ip_hash_pseudo_addr\n\t.p2align\t3\nngx_http_upstream_ip_hash_pseudo_addr:\n\t.quad\t0\n\t.size\tngx_http_upstream_ip_hash_pseudo_addr, 8\n\n\t.type\tngx_http_upstream_get_round_robin_peer,@object # @ngx_http_upstream_get_round_robin_peer\n\t.globl\tngx_http_upstream_get_round_robin_peer\n\t.p2align\t2\nngx_http_upstream_get_round_robin_peer:\n\t.long\t0                               # 0x0\n\t.size\tngx_http_upstream_get_round_robin_peer, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/nginx/src/http/modules/extr_ngx_http_upstream_ip_hash_module.c_ngx_http_upstream_init_ip_hash_peer.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_19__ = type { ptr, ptr, i32 }\n%struct.TYPE_18__ = type { i32, i32, i32, i64, ptr, i32 }\n%struct.TYPE_12__ = type { i32, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_19__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %28, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 5\n  %9 = getelementptr inbounds %struct.TYPE_19__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_12__, ptr %10, i64 0, i32 1\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !15\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %28\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !17\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !18\n  %18 = load ptr, ptr %0, align 8, !tbaa !19\n  %19 = load ptr, ptr %18, align 8, !tbaa !20\n  %20 = load i32, ptr %19, align 4, !tbaa !22\n  %21 = icmp eq i32 %20, 129\n  %22 = load ptr, ptr @ngx_http_upstream_ip_hash_pseudo_addr, align 8\n  %23 = select i1 %21, ptr %19, ptr %22\n  %24 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 4\n  store ptr %23, ptr %24, align 8\n  store <2 x i32> <i32 3, i32 89>, ptr %5, align 8, !tbaa !17\n  %25 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 3\n  store i64 0, ptr %25, align 8, !tbaa !24\n  %26 = load i32, ptr @ngx_http_upstream_get_round_robin_peer, align 4, !tbaa !17\n  %27 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 2\n  store i32 %26, ptr %27, align 8, !tbaa !26\n  br label %28\n\n28:                                               ; preds = %7, %2, %15\n  %29 = phi ptr [ @NGX_OK, %15 ], [ @NGX_ERROR, %2 ], [ @NGX_ERROR, %7 ]\n  %30 = load i64, ptr %29, align 8, !tbaa !15\n  ret i64 %30\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_19__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_13__\", !14, i64 0}\n!14 = !{!\"TYPE_12__\", !10, i64 0, !7, i64 8}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n!17 = !{!10, !10, i64 0}\n!18 = !{!13, !10, i64 0}\n!19 = !{!6, !7, i64 0}\n!20 = !{!21, !7, i64 0}\n!21 = !{!\"TYPE_16__\", !7, i64 0}\n!22 = !{!23, !10, i64 0}\n!23 = !{!\"TYPE_15__\", !10, i64 0}\n!24 = !{!25, !16, i64 16}\n!25 = !{!\"TYPE_18__\", !10, i64 0, !10, i64 4, !10, i64 8, !16, i64 16, !7, i64 24, !10, i64 32}\n!26 = !{!25, !10, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_xfrm_policy.c_xfrm_sk_policy_insert.ll\"\n\t.globl\txfrm_sk_policy_insert           # -- Begin function xfrm_sk_policy_insert\n\t.p2align\t4, 0x90\n\t.type\txfrm_sk_policy_insert,@function\nxfrm_sk_policy_insert:                  # @xfrm_sk_policy_insert\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %r14\n\tmovl\t%esi, %ebx\n\tmovq\t%rdi, %r13\n\tcallq\tsock_net@PLT\n\tmovq\t%rax, %r12\n\tmovq\t%rax, %rdi\n\tcallq\tspin_lock_bh@PLT\n\tmovq\t(%r13), %rax\n\tmovl\t%ebx, 4(%rsp)                   # 4-byte Spill\n\tmovslq\t%ebx, %rbx\n\tmovl\t(%rax,%rbx,4), %ebp\n\tmovq\t%r12, %rdi\n\tcallq\tlockdep_is_held@PLT\n\tmovl\t%ebp, %edi\n\tmovl\t%eax, %esi\n\tcallq\trcu_dereference_protected@PLT\n\tmovq\t%rax, %r15\n\ttestq\t%r14, %r14\n\tje\t.LBB0_2\n# %bb.1:\n\txorl\t%eax, %eax\n\tcallq\tktime_get_real_seconds@PLT\n\tmovl\t%eax, 12(%r14)\n\tmovq\tXFRM_POLICY_MAX(%rip), %rsi\n\taddq\t%rbx, %rsi\n\tmovq\t%r12, %rdi\n\txorl\t%edx, %edx\n\tcallq\txfrm_gen_index@PLT\n\tmovl\t%eax, 8(%r14)\n\tmovq\t%r14, %rdi\n\tmovl\t%ebx, %esi\n\tcallq\txfrm_sk_policy_link@PLT\n.LBB0_2:\n\tmovq\t(%r13), %rax\n\tmovl\t(%rax,%rbx,4), %edi\n\tmovq\t%r14, %rsi\n\tcallq\trcu_assign_pointer@PLT\n\ttestq\t%r15, %r15\n\tje\t.LBB0_6\n# %bb.3:\n\ttestq\t%r14, %r14\n\tje\t.LBB0_5\n# %bb.4:\n\tmovq\t%r15, %rdi\n\tmovq\t%r14, %rsi\n\tcallq\txfrm_policy_requeue@PLT\n.LBB0_5:\n\tmovq\t%r15, %rdi\n\tmovl\t4(%rsp), %esi                   # 4-byte Reload\n\tcallq\txfrm_sk_policy_unlink@PLT\n\tmovq\t%r12, %rdi\n\tcallq\tspin_unlock_bh@PLT\n\tmovq\t%r15, %rdi\n\tcallq\txfrm_policy_kill@PLT\n\tjmp\t.LBB0_7\n.LBB0_6:\n\tmovq\t%r12, %rdi\n\tcallq\tspin_unlock_bh@PLT\n.LBB0_7:\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\txfrm_sk_policy_insert, .Lfunc_end0-xfrm_sk_policy_insert\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tXFRM_POLICY_MAX,@object         # @XFRM_POLICY_MAX\n\t.bss\n\t.globl\tXFRM_POLICY_MAX\n\t.p2align\t3\nXFRM_POLICY_MAX:\n\t.quad\t0                               # 0x0\n\t.size\tXFRM_POLICY_MAX, 8\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\tXFRM_POLICY_TYPE_MAIN,@object   # @XFRM_POLICY_TYPE_MAIN\n\t.globl\tXFRM_POLICY_TYPE_MAIN\n\t.p2align\t3\nXFRM_POLICY_TYPE_MAIN:\n\t.quad\t0                               # 0x0\n\t.size\tXFRM_POLICY_TYPE_MAIN, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xfrm_policy = type { i32, i32, i32, i32 }\n\n@XFRM_POLICY_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@XFRM_POLICY_TYPE_MAIN = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xfrm_sk_policy_insert(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call ptr @sock_net(ptr noundef %0) #2\n  %5 = tail call i32 @spin_lock_bh(ptr noundef %4) #2\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = sext i32 %1 to i64\n  %8 = getelementptr inbounds i32, ptr %6, i64 %7\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = tail call i32 @lockdep_is_held(ptr noundef %4) #2\n  %11 = tail call ptr @rcu_dereference_protected(i32 noundef %9, i32 noundef %10) #2\n  %12 = icmp eq ptr %2, null\n  br i1 %12, label %21, label %13\n\n13:                                               ; preds = %3\n  %14 = tail call i32 (...) @ktime_get_real_seconds() #2\n  %15 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 3\n  store i32 %14, ptr %15, align 4, !tbaa !12\n  %16 = load i64, ptr @XFRM_POLICY_MAX, align 8, !tbaa !14\n  %17 = add nsw i64 %16, %7\n  %18 = tail call i32 @xfrm_gen_index(ptr noundef %4, i64 noundef %17, i32 noundef 0) #2\n  %19 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 2\n  store i32 %18, ptr %19, align 4, !tbaa !16\n  %20 = tail call i32 @xfrm_sk_policy_link(ptr noundef nonnull %2, i32 noundef %1) #2\n  br label %21\n\n21:                                               ; preds = %13, %3\n  %22 = load ptr, ptr %0, align 8, !tbaa !5\n  %23 = getelementptr inbounds i32, ptr %22, i64 %7\n  %24 = load i32, ptr %23, align 4, !tbaa !10\n  %25 = tail call i32 @rcu_assign_pointer(i32 noundef %24, ptr noundef %2) #2\n  %26 = icmp eq ptr %11, null\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %21\n  br i1 %12, label %31, label %28\n\n28:                                               ; preds = %27\n  %29 = tail call i32 @xfrm_policy_requeue(ptr noundef nonnull %11, ptr noundef nonnull %2) #2\n  %30 = tail call i32 @xfrm_sk_policy_unlink(ptr noundef nonnull %11, i32 noundef %1) #2\n  br label %33\n\n31:                                               ; preds = %27\n  %32 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  br label %35\n\n33:                                               ; preds = %28, %21\n  %34 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  br label %35\n\n35:                                               ; preds = %33, %31\n  ret i32 0\n}\n\ndeclare ptr @sock_net(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rcu_dereference_protected(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lockdep_is_held(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ktime_get_real_seconds(...) local_unnamed_addr #1\n\ndeclare i32 @xfrm_gen_index(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_link(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_requeue(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_unlink(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_bh(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"sock\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 12}\n!13 = !{!\"xfrm_policy\", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!13, !11, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xfrm_policy = type { i32, i32, i32, i32 }\n\n@XFRM_POLICY_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@XFRM_POLICY_TYPE_MAIN = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xfrm_sk_policy_insert(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call ptr @sock_net(ptr noundef %0) #2\n  %5 = tail call i32 @spin_lock_bh(ptr noundef %4) #2\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = sext i32 %1 to i64\n  %8 = getelementptr inbounds i32, ptr %6, i64 %7\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = tail call i32 @lockdep_is_held(ptr noundef %4) #2\n  %11 = tail call ptr @rcu_dereference_protected(i32 noundef %9, i32 noundef %10) #2\n  %12 = icmp eq ptr %2, null\n  br i1 %12, label %20, label %13\n\n13:                                               ; preds = %3\n  %14 = tail call i32 (...) @ktime_get_real_seconds() #2\n  %15 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 3\n  store i32 %14, ptr %15, align 4, !tbaa !12\n  %16 = load i64, ptr @XFRM_POLICY_MAX, align 8, !tbaa !14\n  %17 = add nsw i64 %16, %7\n  %18 = tail call i32 @xfrm_gen_index(ptr noundef %4, i64 noundef %17, i32 noundef 0) #2\n  %19 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 2\n  store i32 %18, ptr %19, align 4, !tbaa !16\n  tail call void @xfrm_sk_policy_link(ptr noundef nonnull %2, i32 noundef %1) #2\n  br label %20\n\n20:                                               ; preds = %13, %3\n  %21 = load ptr, ptr %0, align 8, !tbaa !5\n  %22 = getelementptr inbounds i32, ptr %21, i64 %7\n  %23 = load i32, ptr %22, align 4, !tbaa !10\n  %24 = tail call i32 @rcu_assign_pointer(i32 noundef %23, ptr noundef %2) #2\n  %25 = icmp eq ptr %11, null\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %20\n  br i1 %12, label %30, label %27\n\n27:                                               ; preds = %26\n  %28 = tail call i32 @xfrm_policy_requeue(ptr noundef nonnull %11, ptr noundef nonnull %2) #2\n  %29 = tail call i32 @xfrm_sk_policy_unlink(ptr noundef nonnull %11, i32 noundef %1) #2\n  br label %32\n\n30:                                               ; preds = %26\n  %31 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  br label %35\n\n32:                                               ; preds = %27, %20\n  %33 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  %34 = tail call i32 @xfrm_policy_kill(ptr noundef nonnull %11) #2\n  br label %35\n\n35:                                               ; preds = %32, %30\n  ret i32 0\n}\n\ndeclare ptr @sock_net(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rcu_dereference_protected(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lockdep_is_held(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ktime_get_real_seconds(...) local_unnamed_addr #1\n\ndeclare i32 @xfrm_gen_index(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @xfrm_sk_policy_link(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_requeue(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_unlink(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_kill(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"sock\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 12}\n!13 = !{!\"xfrm_policy\", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!13, !11, i64 8}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xfrm_policy = type { i32, i32, i32, i32 }\n\n@XFRM_POLICY_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@XFRM_POLICY_TYPE_MAIN = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xfrm_sk_policy_insert(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call ptr @sock_net(ptr noundef %0) #2\n  %5 = tail call i32 @spin_lock_bh(ptr noundef %4) #2\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = sext i32 %1 to i64\n  %8 = getelementptr inbounds i32, ptr %6, i64 %7\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = tail call i32 @lockdep_is_held(ptr noundef %4) #2\n  %11 = tail call ptr @rcu_dereference_protected(i32 noundef %9, i32 noundef %10) #2\n  %12 = icmp eq ptr %2, null\n  br i1 %12, label %20, label %13\n\n13:                                               ; preds = %3\n  %14 = tail call i32 (...) @ktime_get_real_seconds() #2\n  %15 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 3\n  store i32 %14, ptr %15, align 4, !tbaa !12\n  %16 = load i64, ptr @XFRM_POLICY_MAX, align 8, !tbaa !14\n  %17 = add nsw i64 %16, %7\n  %18 = tail call i32 @xfrm_gen_index(ptr noundef %4, i64 noundef %17, i32 noundef 0) #2\n  %19 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 2\n  store i32 %18, ptr %19, align 4, !tbaa !16\n  tail call void @xfrm_sk_policy_link(ptr noundef nonnull %2, i32 noundef %1) #2\n  br label %20\n\n20:                                               ; preds = %13, %3\n  %21 = load ptr, ptr %0, align 8, !tbaa !5\n  %22 = getelementptr inbounds i32, ptr %21, i64 %7\n  %23 = load i32, ptr %22, align 4, !tbaa !10\n  %24 = tail call i32 @rcu_assign_pointer(i32 noundef %23, ptr noundef %2) #2\n  %25 = icmp eq ptr %11, null\n  br i1 %25, label %32, label %26\n\n26:                                               ; preds = %20\n  br i1 %12, label %30, label %27\n\n27:                                               ; preds = %26\n  %28 = tail call i32 @xfrm_policy_requeue(ptr noundef nonnull %11, ptr noundef nonnull %2) #2\n  %29 = tail call i32 @xfrm_sk_policy_unlink(ptr noundef nonnull %11, i32 noundef %1) #2\n  br label %32\n\n30:                                               ; preds = %26\n  %31 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  br label %35\n\n32:                                               ; preds = %27, %20\n  %33 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  %34 = tail call i32 @xfrm_policy_kill(ptr noundef nonnull %11) #2\n  br label %35\n\n35:                                               ; preds = %32, %30\n  ret i32 0\n}\n\ndeclare ptr @sock_net(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rcu_dereference_protected(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lockdep_is_held(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ktime_get_real_seconds(...) local_unnamed_addr #1\n\ndeclare i32 @xfrm_gen_index(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare void @xfrm_sk_policy_link(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_requeue(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_unlink(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_kill(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"sock\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 12}\n!13 = !{!\"xfrm_policy\", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!13, !11, i64 8}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xfrm_policy = type { i32, i32, i32, i32 }\n\n@XFRM_POLICY_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@XFRM_POLICY_TYPE_MAIN = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xfrm_sk_policy_insert(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call ptr @sock_net(ptr noundef %0) #2\n  %5 = tail call i32 @spin_lock_bh(ptr noundef %4) #2\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = sext i32 %1 to i64\n  %8 = getelementptr inbounds i32, ptr %6, i64 %7\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = tail call i32 @lockdep_is_held(ptr noundef %4) #2\n  %11 = tail call ptr @rcu_dereference_protected(i32 noundef %9, i32 noundef %10) #2\n  %12 = icmp eq ptr %2, null\n  br i1 %12, label %21, label %13\n\n13:                                               ; preds = %3\n  %14 = tail call i32 (...) @ktime_get_real_seconds() #2\n  %15 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 3\n  store i32 %14, ptr %15, align 4, !tbaa !12\n  %16 = load i64, ptr @XFRM_POLICY_MAX, align 8, !tbaa !14\n  %17 = add nsw i64 %16, %7\n  %18 = tail call i32 @xfrm_gen_index(ptr noundef %4, i64 noundef %17, i32 noundef 0) #2\n  %19 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 2\n  store i32 %18, ptr %19, align 4, !tbaa !16\n  %20 = tail call i32 @xfrm_sk_policy_link(ptr noundef nonnull %2, i32 noundef %1) #2\n  br label %21\n\n21:                                               ; preds = %13, %3\n  %22 = load ptr, ptr %0, align 8, !tbaa !5\n  %23 = getelementptr inbounds i32, ptr %22, i64 %7\n  %24 = load i32, ptr %23, align 4, !tbaa !10\n  %25 = tail call i32 @rcu_assign_pointer(i32 noundef %24, ptr noundef %2) #2\n  %26 = icmp eq ptr %11, null\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %21\n  br i1 %12, label %31, label %28\n\n28:                                               ; preds = %27\n  %29 = tail call i32 @xfrm_policy_requeue(ptr noundef nonnull %11, ptr noundef nonnull %2) #2\n  %30 = tail call i32 @xfrm_sk_policy_unlink(ptr noundef nonnull %11, i32 noundef %1) #2\n  br label %33\n\n31:                                               ; preds = %27\n  %32 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  br label %35\n\n33:                                               ; preds = %28, %21\n  %34 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  br label %35\n\n35:                                               ; preds = %33, %31\n  ret i32 0\n}\n\ndeclare ptr @sock_net(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rcu_dereference_protected(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lockdep_is_held(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ktime_get_real_seconds(...) local_unnamed_addr #1\n\ndeclare i32 @xfrm_gen_index(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_link(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_requeue(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_unlink(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_bh(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"sock\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 12}\n!13 = !{!\"xfrm_policy\", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!13, !11, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/net/xfrm/extr_xfrm_policy.c_xfrm_sk_policy_insert.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xfrm_policy = type { i64, i32, %struct.TYPE_3__ }\n%struct.TYPE_3__ = type { i32 }\n\n@XFRM_POLICY_MAX = dso_local local_unnamed_addr global i64 0, align 8\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@XFRM_POLICY_TYPE_MAIN = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xfrm_sk_policy_insert(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = tail call ptr @sock_net(ptr noundef %0) #2\n  %5 = tail call i32 @spin_lock_bh(ptr noundef %4) #2\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = sext i32 %1 to i64\n  %8 = getelementptr inbounds i32, ptr %6, i64 %7\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = tail call i32 @lockdep_is_held(ptr noundef %4) #2\n  %11 = tail call ptr @rcu_dereference_protected(i32 noundef %9, i32 noundef %10) #2\n  %12 = icmp eq ptr %2, null\n  br i1 %12, label %21, label %13\n\n13:                                               ; preds = %3\n  %14 = tail call i32 (...) @ktime_get_real_seconds() #2\n  %15 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 2\n  store i32 %14, ptr %15, align 4, !tbaa !12\n  %16 = load i64, ptr @XFRM_POLICY_MAX, align 8, !tbaa !16\n  %17 = add nsw i64 %16, %7\n  %18 = tail call i32 @xfrm_gen_index(ptr noundef %4, i64 noundef %17, i32 noundef 0) #2\n  %19 = getelementptr inbounds %struct.xfrm_policy, ptr %2, i64 0, i32 1\n  store i32 %18, ptr %19, align 8, !tbaa !17\n  %20 = tail call i32 @xfrm_sk_policy_link(ptr noundef nonnull %2, i32 noundef %1) #2\n  br label %21\n\n21:                                               ; preds = %13, %3\n  %22 = load ptr, ptr %0, align 8, !tbaa !5\n  %23 = getelementptr inbounds i32, ptr %22, i64 %7\n  %24 = load i32, ptr %23, align 4, !tbaa !10\n  %25 = tail call i32 @rcu_assign_pointer(i32 noundef %24, ptr noundef %2) #2\n  %26 = icmp eq ptr %11, null\n  br i1 %26, label %34, label %27\n\n27:                                               ; preds = %21\n  br i1 %12, label %30, label %28\n\n28:                                               ; preds = %27\n  %29 = tail call i32 @xfrm_policy_requeue(ptr noundef nonnull %11, ptr noundef nonnull %2) #2\n  br label %30\n\n30:                                               ; preds = %27, %28\n  %31 = tail call i32 @xfrm_sk_policy_unlink(ptr noundef nonnull %11, i32 noundef %1) #2\n  %32 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  %33 = tail call i32 @xfrm_policy_kill(ptr noundef nonnull %11) #2\n  br label %36\n\n34:                                               ; preds = %21\n  %35 = tail call i32 @spin_unlock_bh(ptr noundef %4) #2\n  br label %36\n\n36:                                               ; preds = %34, %30\n  ret i32 0\n}\n\ndeclare ptr @sock_net(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @rcu_dereference_protected(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @lockdep_is_held(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ktime_get_real_seconds(...) local_unnamed_addr #1\n\ndeclare i32 @xfrm_gen_index(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_link(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @rcu_assign_pointer(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_requeue(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_sk_policy_unlink(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_bh(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xfrm_policy_kill(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"sock\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"int\", !8, i64 0}\n!12 = !{!13, !11, i64 12}\n!13 = !{!\"xfrm_policy\", !14, i64 0, !11, i64 8, !15, i64 12}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!\"TYPE_3__\", !11, i64 0}\n!16 = !{!14, !14, i64 0}\n!17 = !{!13, !11, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_zfcp_fsf.c_zfcp_fsf_set_data_dir.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function zfcp_fsf_set_data_dir\n\t.type\tzfcp_fsf_set_data_dir,@function\nzfcp_fsf_set_data_dir:                  # @zfcp_fsf_set_data_dir\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tcallq\tscsi_get_prot_op@PLT\n                                        # kill: def $eax killed $eax def $rax\n\taddl\t$-128, %eax\n\tcmpl\t$4, %eax\n\tja\t.LBB0_12\n# %bb.1:\n\tjmpq\t*.LJTI0_0(,%rax,8)\n.LBB0_11:\n\tmovl\tFSF_DATADIR_DIF_WRITE_CONVERT(%rip), %eax\n\tjmp\t.LBB0_8\n.LBB0_9:\n\tmovl\tFSF_DATADIR_DIF_WRITE_INSERT(%rip), %eax\n\tjmp\t.LBB0_8\n.LBB0_7:\n\tmovl\tFSF_DATADIR_DIF_READ_STRIP(%rip), %eax\n\tjmp\t.LBB0_8\n.LBB0_10:\n\tmovl\tFSF_DATADIR_DIF_READ_CONVERT(%rip), %eax\n.LBB0_8:\n\tmovl\t%eax, (%r14)\n\txorl\t%eax, %eax\n\tjmp\t.LBB0_13\n.LBB0_2:\n\txorl\t%eax, %eax\n\tmovl\t$-133, %ecx\n\taddl\t(%rbx), %ecx\n\tcmpl\t$3, %ecx\n\tja\t.LBB0_13\n# %bb.3:\n\tjmpq\t*.LJTI0_1(,%rcx,8)\n.LBB0_6:\n\tmovl\tFSF_DATADIR_WRITE(%rip), %ecx\n\tmovl\t%ecx, (%r14)\n\tjmp\t.LBB0_13\n.LBB0_12:\n\txorl\t%eax, %eax\n\tsubl\tEINVAL(%rip), %eax\n.LBB0_13:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_4:\n\t.cfi_def_cfa_offset 32\n\tmovl\tFSF_DATADIR_CMND(%rip), %ecx\n\tmovl\t%ecx, (%r14)\n\tjmp\t.LBB0_13\n.LBB0_5:\n\tmovl\tFSF_DATADIR_READ(%rip), %ecx\n\tmovl\t%ecx, (%r14)\n\tjmp\t.LBB0_13\n.Lfunc_end0:\n\t.size\tzfcp_fsf_set_data_dir, .Lfunc_end0-zfcp_fsf_set_data_dir\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_11\n\t.quad\t.LBB0_9\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_10\n\t.quad\t.LBB0_2\n.LJTI0_1:\n\t.quad\t.LBB0_6\n\t.quad\t.LBB0_4\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_12\n                                        # -- End function\n\t.type\tFSF_DATADIR_CMND,@object        # @FSF_DATADIR_CMND\n\t.bss\n\t.globl\tFSF_DATADIR_CMND\n\t.p2align\t2\nFSF_DATADIR_CMND:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_CMND, 4\n\n\t.type\tFSF_DATADIR_READ,@object        # @FSF_DATADIR_READ\n\t.globl\tFSF_DATADIR_READ\n\t.p2align\t2\nFSF_DATADIR_READ:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_READ, 4\n\n\t.type\tFSF_DATADIR_WRITE,@object       # @FSF_DATADIR_WRITE\n\t.globl\tFSF_DATADIR_WRITE\n\t.p2align\t2\nFSF_DATADIR_WRITE:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_WRITE, 4\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\tFSF_DATADIR_DIF_READ_STRIP,@object # @FSF_DATADIR_DIF_READ_STRIP\n\t.globl\tFSF_DATADIR_DIF_READ_STRIP\n\t.p2align\t2\nFSF_DATADIR_DIF_READ_STRIP:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_READ_STRIP, 4\n\n\t.type\tFSF_DATADIR_DIF_WRITE_INSERT,@object # @FSF_DATADIR_DIF_WRITE_INSERT\n\t.globl\tFSF_DATADIR_DIF_WRITE_INSERT\n\t.p2align\t2\nFSF_DATADIR_DIF_WRITE_INSERT:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_WRITE_INSERT, 4\n\n\t.type\tFSF_DATADIR_DIF_READ_CONVERT,@object # @FSF_DATADIR_DIF_READ_CONVERT\n\t.globl\tFSF_DATADIR_DIF_READ_CONVERT\n\t.p2align\t2\nFSF_DATADIR_DIF_READ_CONVERT:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_READ_CONVERT, 4\n\n\t.type\tFSF_DATADIR_DIF_WRITE_CONVERT,@object # @FSF_DATADIR_DIF_WRITE_CONVERT\n\t.globl\tFSF_DATADIR_DIF_WRITE_CONVERT\n\t.p2align\t2\nFSF_DATADIR_DIF_WRITE_CONVERT:\n\t.long\t0                               # 0x0\n\t.size\tFSF_DATADIR_DIF_WRITE_CONVERT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 132, label %4\n    i32 131, label %10\n    i32 130, label %14\n    i32 129, label %18\n    i32 128, label %21\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %23 [\n    i32 0, label %6\n    i32 1, label %12\n    i32 2, label %16\n    i32 3, label %16\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %25\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %25\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %25\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %25\n\n14:                                               ; preds = %2\n  %15 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %15, ptr %1, align 4, !tbaa !10\n  br label %25\n\n16:                                               ; preds = %4, %4\n  %17 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %25\n\n18:                                               ; preds = %2\n  %19 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %19, ptr %1, align 4, !tbaa !10\n  br label %25\n\n20:                                               ; preds = %4\n  %21 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %21, ptr %1, align 4, !tbaa !10\n  br label %25\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %22, ptr %1, align 4, !tbaa !10\n  br label %25\n\n23:                                               ; preds = %2, %4\n  %24 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %25\n\n25:                                               ; preds = %23, %21, %20, %18, %16, %14, %12, %10, %8, %6\n  %26 = phi i32 [ %24, %23 ], [ 0, %21 ], [ 0, %20 ], [ 0, %18 ], [ 0, %16 ], [ 0, %14 ], [ 0, %12 ], [ 0, %10 ], [ 0, %8 ], [ 0, %6 ]\n  ret i32 %26\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 132, label %4\n    i32 131, label %10\n    i32 130, label %14\n    i32 129, label %18\n    i32 128, label %21\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %23 [\n    i32 0, label %6\n    i32 1, label %10\n    i32 2, label %12\n    i32 3, label %14\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %25\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %25\n\n10:                                               ; preds = %4, %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %25\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %25\n\n14:                                               ; preds = %4, %2\n  %15 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %15, ptr %1, align 4, !tbaa !10\n  br label %25\n\n16:                                               ; preds = %2\n  %17 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %25\n\n18:                                               ; preds = %2\n  %19 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %19, ptr %1, align 4, !tbaa !10\n  br label %25\n\n20:                                               ; preds = %2\n  %21 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %21, ptr %1, align 4, !tbaa !10\n  br label %25\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %25\n\n23:                                               ; preds = %2, %4\n  %24 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %25\n\n25:                                               ; preds = %23, %21, %20, %18, %16, %14, %12, %10, %8, %6\n  %26 = phi i32 [ %24, %23 ], [ %22, %21 ], [ 0, %20 ], [ 0, %18 ], [ 0, %16 ], [ 0, %14 ], [ 0, %12 ], [ 0, %10 ], [ 0, %8 ], [ 0, %6 ]\n  ret i32 %26\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 131, label %4\n    i32 130, label %10\n    i32 129, label %14\n    i32 128, label %18\n    i32 133, label %20\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %23 [\n    i32 0, label %6\n    i32 1, label %11\n    i32 2, label %16\n    i32 3, label %16\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %25\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %25\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %25\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %25\n\n14:                                               ; preds = %2\n  %15 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %15, ptr %1, align 4, !tbaa !10\n  br label %25\n\n16:                                               ; preds = %4, %4\n  %17 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %25\n\n18:                                               ; preds = %2\n  %19 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %19, ptr %1, align 4, !tbaa !10\n  br label %25\n\n20:                                               ; preds = %2\n  %21 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  %22 = sub nsw i32 0, %21\n  br label %25\n\n23:                                               ; preds = %4, %2\n  %24 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %25\n\n25:                                               ; preds = %23, %20, %18, %16, %14, %12, %10, %8, %6\n  %26 = phi i32 [ %22, %20 ], [ %24, %23 ], [ 0, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %12 ], [ 0, %16 ], [ 0, %14 ], [ 0, %18 ]\n  ret i32 %26\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 131, label %4\n    i32 130, label %10\n    i32 129, label %16\n    i32 128, label %20\n    i32 133, label %26\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %26 [\n    i32 130, label %6\n    i32 129, label %8\n    i32 131, label %10\n    i32 132, label %12\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %26\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %26\n\n10:                                               ; preds = %4, %2\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %26\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %13, ptr %1, align 4, !tbaa !10\n  br label %26\n\n14:                                               ; preds = %2\n  %15 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  br label %26\n\n16:                                               ; preds = %2\n  %17 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %17, ptr %1, align 4, !tbaa !10\n  br label %26\n\n18:                                               ; preds = %2\n  %19 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %19, ptr %1, align 4, !tbaa !10\n  br label %26\n\n20:                                               ; preds = %2\n  %21 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %21, ptr %1, align 4, !tbaa !10\n  br label %26\n\n22:                                               ; preds = %2\n  %23 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  %24 = sub nsw i32 0, %23\n  br label %26\n\n25:                                               ; preds = %4\n  store i32 -133, ptr %1, align 4, !tbaa !10\n  br label %26\n\n26:                                               ; preds = %2, %4, %22, %25, %18, %20, %16, %14, %12, %10, %8, %6\n  %27 = phi i32 [ %24, %22 ], [ 0, %25 ], [ 0, %18 ], [ 0, %20 ], [ 0, %16 ], [ 0, %14 ], [ 0, %12 ], [ 0, %10 ], [ 0, %8 ], [ 0, %6 ], [ 0, %10 ], [ 0, %6 ]\n  ret i32 %27\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/s390/scsi/extr_zfcp_fsf.c_zfcp_fsf_set_data_dir.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@FSF_DATADIR_CMND = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_READ = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_WRITE = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_STRIP = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_INSERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_READ_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@FSF_DATADIR_DIF_WRITE_CONVERT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @zfcp_fsf_set_data_dir], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @zfcp_fsf_set_data_dir(ptr noundef %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = tail call i32 @scsi_get_prot_op(ptr noundef %0) #2\n  switch i32 %3, label %23 [\n    i32 132, label %4\n    i32 130, label %15\n    i32 129, label %17\n    i32 131, label %19\n    i32 128, label %21\n  ]\n\n4:                                                ; preds = %2\n  %5 = load i32, ptr %0, align 4, !tbaa !5\n  switch i32 %5, label %26 [\n    i32 134, label %6\n    i32 135, label %8\n    i32 133, label %10\n    i32 136, label %12\n  ]\n\n6:                                                ; preds = %4\n  %7 = load i32, ptr @FSF_DATADIR_CMND, align 4, !tbaa !10\n  store i32 %7, ptr %1, align 4, !tbaa !10\n  br label %26\n\n8:                                                ; preds = %4\n  %9 = load i32, ptr @FSF_DATADIR_READ, align 4, !tbaa !10\n  store i32 %9, ptr %1, align 4, !tbaa !10\n  br label %26\n\n10:                                               ; preds = %4\n  %11 = load i32, ptr @FSF_DATADIR_WRITE, align 4, !tbaa !10\n  store i32 %11, ptr %1, align 4, !tbaa !10\n  br label %26\n\n12:                                               ; preds = %4\n  %13 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  %14 = sub nsw i32 0, %13\n  br label %26\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @FSF_DATADIR_DIF_READ_STRIP, align 4, !tbaa !10\n  store i32 %16, ptr %1, align 4, !tbaa !10\n  br label %26\n\n17:                                               ; preds = %2\n  %18 = load i32, ptr @FSF_DATADIR_DIF_WRITE_INSERT, align 4, !tbaa !10\n  store i32 %18, ptr %1, align 4, !tbaa !10\n  br label %26\n\n19:                                               ; preds = %2\n  %20 = load i32, ptr @FSF_DATADIR_DIF_READ_CONVERT, align 4, !tbaa !10\n  store i32 %20, ptr %1, align 4, !tbaa !10\n  br label %26\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @FSF_DATADIR_DIF_WRITE_CONVERT, align 4, !tbaa !10\n  store i32 %22, ptr %1, align 4, !tbaa !10\n  br label %26\n\n23:                                               ; preds = %2\n  %24 = load i32, ptr @EINVAL, align 4, !tbaa !10\n  %25 = sub nsw i32 0, %24\n  br label %26\n\n26:                                               ; preds = %15, %17, %19, %21, %4, %10, %8, %6, %23, %12\n  %27 = phi i32 [ %25, %23 ], [ %14, %12 ], [ 0, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %4 ], [ 0, %21 ], [ 0, %19 ], [ 0, %17 ], [ 0, %15 ]\n  ret i32 %27\n}\n\ndeclare i32 @scsi_get_prot_op(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"scsi_cmnd\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_macgpio.c_macgpio_suspend.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function macgpio_suspend\n\t.type\tmacgpio_suspend,@function\nmacgpio_suspend:                        # @macgpio_suspend\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tcallq\tdevice_get_softc@PLT\n\tmovq\t%rax, %r14\n\tmovl\t(%rax), %edi\n\tmovl\tGPIO_LEVELS_0(%rip), %esi\n\tcallq\tbus_read_4@PLT\n\tmovq\t24(%r14), %rcx\n\tmovq\t%rax, (%rcx)\n\tmovl\t(%r14), %edi\n\tmovl\tGPIO_LEVELS_1(%rip), %esi\n\tcallq\tbus_read_4@PLT\n\tmovq\t24(%r14), %rcx\n\tmovq\t%rax, 8(%rcx)\n\tcmpl\t$0, GPIO_COUNT(%rip)\n\tjle\t.LBB0_3\n# %bb.1:\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovl\t(%r14), %edi\n\tmovq\tGPIO_BASE(%rip), %rsi\n\taddq\t%rbx, %rsi\n\tcallq\tbus_read_1@PLT\n\tmovq\t16(%r14), %rcx\n\tmovq\t%rax, (%rcx,%rbx,8)\n\tincq\t%rbx\n\tmovslq\tGPIO_COUNT(%rip), %rax\n\tcmpq\t%rax, %rbx\n\tjl\t.LBB0_2\n.LBB0_3:\n\tcmpl\t$0, GPIO_EXTINT_COUNT(%rip)\n\tjle\t.LBB0_6\n# %bb.4:\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_5:                                # =>This Inner Loop Header: Depth=1\n\tmovl\t(%r14), %edi\n\tmovq\tGPIO_EXTINT_BASE(%rip), %rsi\n\taddq\t%rbx, %rsi\n\tcallq\tbus_read_1@PLT\n\tmovq\t8(%r14), %rcx\n\tmovq\t%rax, (%rcx,%rbx,8)\n\tincq\t%rbx\n\tmovslq\tGPIO_EXTINT_COUNT(%rip), %rax\n\tcmpq\t%rax, %rbx\n\tjl\t.LBB0_5\n.LBB0_6:\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tmacgpio_suspend, .Lfunc_end0-macgpio_suspend\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tGPIO_LEVELS_0,@object           # @GPIO_LEVELS_0\n\t.bss\n\t.globl\tGPIO_LEVELS_0\n\t.p2align\t2\nGPIO_LEVELS_0:\n\t.long\t0                               # 0x0\n\t.size\tGPIO_LEVELS_0, 4\n\n\t.type\tGPIO_LEVELS_1,@object           # @GPIO_LEVELS_1\n\t.globl\tGPIO_LEVELS_1\n\t.p2align\t2\nGPIO_LEVELS_1:\n\t.long\t0                               # 0x0\n\t.size\tGPIO_LEVELS_1, 4\n\n\t.type\tGPIO_COUNT,@object              # @GPIO_COUNT\n\t.globl\tGPIO_COUNT\n\t.p2align\t2\nGPIO_COUNT:\n\t.long\t0                               # 0x0\n\t.size\tGPIO_COUNT, 4\n\n\t.type\tGPIO_BASE,@object               # @GPIO_BASE\n\t.globl\tGPIO_BASE\n\t.p2align\t3\nGPIO_BASE:\n\t.quad\t0                               # 0x0\n\t.size\tGPIO_BASE, 8\n\n\t.type\tGPIO_EXTINT_COUNT,@object       # @GPIO_EXTINT_COUNT\n\t.globl\tGPIO_EXTINT_COUNT\n\t.p2align\t2\nGPIO_EXTINT_COUNT:\n\t.long\t0                               # 0x0\n\t.size\tGPIO_EXTINT_COUNT, 4\n\n\t.type\tGPIO_EXTINT_BASE,@object        # @GPIO_EXTINT_BASE\n\t.globl\tGPIO_EXTINT_BASE\n\t.p2align\t3\nGPIO_EXTINT_BASE:\n\t.quad\t0                               # 0x0\n\t.size\tGPIO_EXTINT_BASE, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.macgpio_softc = type { i32, ptr, ptr, ptr }\n\n@GPIO_LEVELS_0 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_LEVELS_1 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@GPIO_EXTINT_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_EXTINT_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @macgpio_suspend], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @macgpio_suspend(i32 noundef %0) #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr @GPIO_LEVELS_0, align 4, !tbaa !11\n  %5 = tail call i64 @bus_read_4(i32 noundef %3, i32 noundef %4) #2\n  %6 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 3\n  %7 = load ptr, ptr %6, align 8, !tbaa !12\n  store i64 %5, ptr %7, align 8, !tbaa !13\n  %8 = load i32, ptr %2, align 8, !tbaa !5\n  %9 = load i32, ptr @GPIO_LEVELS_1, align 4, !tbaa !11\n  %10 = tail call i64 @bus_read_4(i32 noundef %8, i32 noundef %9) #2\n  %11 = load ptr, ptr %6, align 8, !tbaa !12\n  %12 = getelementptr inbounds i64, ptr %11, i64 1\n  store i64 %10, ptr %12, align 8, !tbaa !13\n  %13 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  %14 = icmp sgt i32 %13, 0\n  br i1 %14, label %15, label %27\n\n15:                                               ; preds = %1\n  %16 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 2\n  br label %17\n\n17:                                               ; preds = %15, %17\n  %18 = phi i64 [ 0, %15 ], [ %23, %17 ]\n  %19 = load i32, ptr %2, align 8, !tbaa !5\n  %20 = load i64, ptr @GPIO_BASE, align 8, !tbaa !15\n  %21 = add nsw i64 %20, %18\n  %22 = tail call i64 @bus_read_1(i32 noundef %19, i64 noundef %21) #2\n  %23 = add nuw nsw i64 %18, 1\n  %24 = load ptr, ptr %16, align 8, !tbaa !16\n  %25 = getelementptr inbounds i64, ptr %24, i64 %18\n  store i64 %22, ptr %25, align 8, !tbaa !13\n  %26 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  br label %17, !llvm.loop !17\n\n27:                                               ; preds = %1\n  %28 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %29 = icmp sgt i32 %28, 0\n  br i1 %29, label %30, label %42\n\n30:                                               ; preds = %27\n  %31 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 1\n  br label %32\n\n32:                                               ; preds = %30, %32\n  %33 = phi i64 [ 0, %30 ], [ %38, %32 ]\n  %34 = load i32, ptr %2, align 8, !tbaa !5\n  %35 = load i64, ptr @GPIO_EXTINT_BASE, align 8, !tbaa !15\n  %36 = add nsw i64 %35, %33\n  %37 = tail call i64 @bus_read_1(i32 noundef %34, i64 noundef %36) #2\n  %38 = add nuw nsw i64 %33, 1\n  %39 = load ptr, ptr %31, align 8, !tbaa !19\n  %40 = getelementptr inbounds i64, ptr %39, i64 %33\n  store i64 %37, ptr %40, align 8, !tbaa !13\n  %41 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  br label %32, !llvm.loop !20\n\n42:                                               ; preds = %32, %27\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_4(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_1(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"macgpio_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!14, !14, i64 0}\n!16 = !{!6, !10, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n!19 = !{!6, !10, i64 8}\n!20 = distinct !{!20, !18}\n!21 = !{!22, !22, i64 0}\n!22 = !{!\"long long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.macgpio_softc = type { i32, ptr, ptr, ptr }\n\n@GPIO_LEVELS_0 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_LEVELS_1 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@GPIO_EXTINT_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_EXTINT_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @macgpio_suspend], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @macgpio_suspend(i32 noundef %0) #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr @GPIO_LEVELS_0, align 4, !tbaa !11\n  %5 = tail call i64 @bus_read_4(i32 noundef %3, i32 noundef %4) #2\n  %6 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 3\n  %7 = load ptr, ptr %6, align 8, !tbaa !12\n  store i64 %5, ptr %7, align 8, !tbaa !13\n  %8 = load i32, ptr %2, align 8, !tbaa !5\n  %9 = load i32, ptr @GPIO_LEVELS_1, align 4, !tbaa !11\n  %10 = tail call i64 @bus_read_4(i32 noundef %8, i32 noundef %9) #2\n  %11 = load ptr, ptr %6, align 8, !tbaa !12\n  %12 = getelementptr inbounds i64, ptr %11, i64 1\n  store i64 %10, ptr %12, align 8, !tbaa !13\n  %13 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  %14 = icmp sgt i32 %13, 0\n  br i1 %14, label %15, label %27\n\n15:                                               ; preds = %1\n  %16 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 2\n  br label %17\n\n17:                                               ; preds = %15, %17\n  %18 = phi i64 [ 0, %15 ], [ %23, %17 ]\n  %19 = load i32, ptr %2, align 8, !tbaa !5\n  %20 = load i64, ptr @GPIO_BASE, align 8, !tbaa !15\n  %21 = add nsw i64 %20, %18\n  %22 = tail call i64 @bus_read_1(i32 noundef %19, i64 noundef %21) #2\n  %23 = add nuw nsw i64 %18, 1\n  %24 = load ptr, ptr %16, align 8, !tbaa !16\n  %25 = getelementptr inbounds i64, ptr %24, i64 %18\n  store i64 %22, ptr %25, align 8, !tbaa !13\n  %26 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  br label %17, !llvm.loop !17\n\n27:                                               ; preds = %1\n  %28 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %29 = icmp sgt i32 %28, 0\n  br i1 %29, label %30, label %43\n\n30:                                               ; preds = %27\n  %31 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 1\n  br label %32\n\n32:                                               ; preds = %30, %32\n  %33 = phi i64 [ 0, %30 ], [ %39, %32 ]\n  %34 = load i32, ptr %2, align 8, !tbaa !5\n  %35 = load i64, ptr @GPIO_EXTINT_BASE, align 8, !tbaa !15\n  %36 = add nsw i64 %35, %33\n  %37 = tail call i64 @bus_read_1(i32 noundef %34, i64 noundef %36) #2\n  %38 = load ptr, ptr %31, align 8, !tbaa !19\n  %39 = add nuw nsw i64 %33, 1\n  %40 = getelementptr inbounds i64, ptr %38, i64 %33\n  store i64 %37, ptr %40, align 8, !tbaa !13\n  %41 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %42 = sext i32 %41 to i64\n  br label %32, !llvm.loop !20\n\n43:                                               ; preds = %32, %27\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_4(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_1(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"macgpio_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!14, !14, i64 0}\n!16 = !{!6, !10, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n!19 = !{!6, !10, i64 8}\n!20 = distinct !{!20, !18}\n!21 = !{!22, !22, i64 0}\n!22 = !{!\"long long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.macgpio_softc = type { i32, ptr, ptr, ptr }\n\n@GPIO_LEVELS_0 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_LEVELS_1 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@GPIO_EXTINT_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_EXTINT_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @macgpio_suspend], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @macgpio_suspend(i32 noundef %0) #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr @GPIO_LEVELS_0, align 4, !tbaa !11\n  %5 = tail call i64 @bus_read_4(i32 noundef %3, i32 noundef %4) #2\n  %6 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 3\n  %7 = load ptr, ptr %6, align 8, !tbaa !12\n  store i64 %5, ptr %7, align 8, !tbaa !13\n  %8 = load i32, ptr %2, align 8, !tbaa !5\n  %9 = load i32, ptr @GPIO_LEVELS_1, align 4, !tbaa !11\n  %10 = tail call i64 @bus_read_4(i32 noundef %8, i32 noundef %9) #2\n  %11 = load ptr, ptr %6, align 8, !tbaa !12\n  %12 = getelementptr inbounds i64, ptr %11, i64 1\n  store i64 %10, ptr %12, align 8, !tbaa !13\n  %13 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  %14 = icmp sgt i32 %13, 0\n  br i1 %14, label %15, label %27\n\n15:                                               ; preds = %1\n  %16 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 2\n  br label %17\n\n17:                                               ; preds = %15, %17\n  %18 = phi i64 [ 0, %15 ], [ %23, %17 ]\n  %19 = load i32, ptr %2, align 8, !tbaa !5\n  %20 = load i64, ptr @GPIO_BASE, align 8, !tbaa !15\n  %21 = add nsw i64 %20, %18\n  %22 = tail call i64 @bus_read_1(i32 noundef %19, i64 noundef %21) #2\n  %23 = add nuw nsw i64 %18, 1\n  %24 = load ptr, ptr %16, align 8, !tbaa !16\n  %25 = getelementptr inbounds i64, ptr %24, i64 %18\n  store i64 %22, ptr %25, align 8, !tbaa !13\n  %26 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  br label %17, !llvm.loop !17\n\n27:                                               ; preds = %1\n  %28 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %29 = icmp sgt i32 %28, 0\n  br i1 %29, label %30, label %42\n\n30:                                               ; preds = %27\n  %31 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 1\n  br label %32\n\n32:                                               ; preds = %30, %32\n  %33 = phi i64 [ 0, %30 ], [ %38, %32 ]\n  %34 = load i32, ptr %2, align 8, !tbaa !5\n  %35 = load i64, ptr @GPIO_EXTINT_BASE, align 8, !tbaa !15\n  %36 = add nsw i64 %35, %33\n  %37 = tail call i64 @bus_read_1(i32 noundef %34, i64 noundef %36) #2\n  %38 = add nuw nsw i64 %33, 1\n  %39 = load ptr, ptr %31, align 8, !tbaa !19\n  %40 = getelementptr inbounds i64, ptr %39, i64 %33\n  store i64 %37, ptr %40, align 8, !tbaa !13\n  %41 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  br label %32, !llvm.loop !20\n\n42:                                               ; preds = %32, %27\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_4(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_1(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"macgpio_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!14, !14, i64 0}\n!16 = !{!6, !10, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n!19 = !{!6, !10, i64 8}\n!20 = distinct !{!20, !18}\n!21 = !{!22, !22, i64 0}\n!22 = !{!\"long long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.macgpio_softc = type { i32, ptr, ptr, ptr }\n\n@GPIO_LEVELS_0 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_LEVELS_1 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@GPIO_EXTINT_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_EXTINT_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @macgpio_suspend], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @macgpio_suspend(i32 noundef %0) #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr @GPIO_LEVELS_0, align 4, !tbaa !11\n  %5 = tail call i64 @bus_read_4(i32 noundef %3, i32 noundef %4) #2\n  %6 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 3\n  %7 = load ptr, ptr %6, align 8, !tbaa !12\n  store i64 %5, ptr %7, align 8, !tbaa !13\n  %8 = load i32, ptr %2, align 8, !tbaa !5\n  %9 = load i32, ptr @GPIO_LEVELS_1, align 4, !tbaa !11\n  %10 = tail call i64 @bus_read_4(i32 noundef %8, i32 noundef %9) #2\n  %11 = load ptr, ptr %6, align 8, !tbaa !12\n  %12 = getelementptr inbounds i64, ptr %11, i64 1\n  store i64 %10, ptr %12, align 8, !tbaa !13\n  %13 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  %14 = icmp sgt i32 %13, 0\n  br i1 %14, label %15, label %27\n\n15:                                               ; preds = %1\n  %16 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 2\n  br label %17\n\n17:                                               ; preds = %15, %17\n  %18 = phi i64 [ 0, %15 ], [ %23, %17 ]\n  %19 = load i32, ptr %2, align 8, !tbaa !5\n  %20 = load i64, ptr @GPIO_BASE, align 8, !tbaa !15\n  %21 = add nsw i64 %20, %18\n  %22 = tail call i64 @bus_read_1(i32 noundef %19, i64 noundef %21) #2\n  %23 = add nuw nsw i64 %18, 1\n  %24 = load ptr, ptr %16, align 8, !tbaa !16\n  %25 = getelementptr inbounds i64, ptr %24, i64 %18\n  store i64 %22, ptr %25, align 8, !tbaa !13\n  %26 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  br label %17, !llvm.loop !17\n\n27:                                               ; preds = %1\n  %28 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %29 = icmp sgt i32 %28, 0\n  br i1 %29, label %30, label %41\n\n30:                                               ; preds = %27\n  %31 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 1\n  br label %32\n\n32:                                               ; preds = %30, %32\n  %33 = phi i64 [ 0, %30 ], [ %38, %32 ]\n  %34 = load i32, ptr %2, align 8, !tbaa !5\n  %35 = load i64, ptr @GPIO_EXTINT_BASE, align 8, !tbaa !15\n  %36 = add nsw i64 %35, %33\n  %37 = tail call i64 @bus_read_1(i32 noundef %34, i64 noundef %36) #2\n  %38 = add nuw nsw i64 %33, 1\n  %39 = load ptr, ptr %31, align 8, !tbaa !19\n  %40 = getelementptr inbounds i64, ptr %39, i64 %33\n  store i64 %37, ptr %40, align 8, !tbaa !13\n  %41 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %42 = sext i32 %41 to i64\n  %43 = icmp slt i64 %38, %42\n  br i1 %43, label %32, label %44, !llvm.loop !20\n\n44:                                               ; preds = %32\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_4(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @bus_read_1(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"macgpio_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!14, !14, i64 0}\n!16 = !{!6, !10, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n!19 = !{!6, !10, i64 8}\n!20 = distinct !{!20, !18}\n!21 = !{!22, !22, i64 0}\n!22 = !{!\"long long\", !8, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/powerpc/powermac/extr_macgpio.c_macgpio_suspend.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.macgpio_softc = type { i32, ptr, ptr, ptr }\n\n@GPIO_LEVELS_0 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_LEVELS_1 = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@GPIO_EXTINT_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@GPIO_EXTINT_BASE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @macgpio_suspend], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @macgpio_suspend(i32 noundef %0) #0 {\n  %2 = tail call ptr @device_get_softc(i32 noundef %0) #2\n  %3 = load i32, ptr %2, align 8, !tbaa !5\n  %4 = load i32, ptr @GPIO_LEVELS_0, align 4, !tbaa !11\n  %5 = tail call ptr @bus_read_4(i32 noundef %3, i32 noundef %4) #2\n  %6 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 3\n  %7 = load ptr, ptr %6, align 8, !tbaa !12\n  store ptr %5, ptr %7, align 8, !tbaa !13\n  %8 = load i32, ptr %2, align 8, !tbaa !5\n  %9 = load i32, ptr @GPIO_LEVELS_1, align 4, !tbaa !11\n  %10 = tail call ptr @bus_read_4(i32 noundef %8, i32 noundef %9) #2\n  %11 = load ptr, ptr %6, align 8, !tbaa !12\n  %12 = getelementptr inbounds ptr, ptr %11, i64 1\n  store ptr %10, ptr %12, align 8, !tbaa !13\n  %13 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  %14 = icmp sgt i32 %13, 0\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %1\n  %16 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 2\n  br label %22\n\n17:                                               ; preds = %22, %1\n  %18 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %19 = icmp sgt i32 %18, 0\n  br i1 %19, label %20, label %46\n\n20:                                               ; preds = %17\n  %21 = getelementptr inbounds %struct.macgpio_softc, ptr %2, i64 0, i32 1\n  br label %34\n\n22:                                               ; preds = %15, %22\n  %23 = phi i64 [ 0, %15 ], [ %30, %22 ]\n  %24 = load i32, ptr %2, align 8, !tbaa !5\n  %25 = load i64, ptr @GPIO_BASE, align 8, !tbaa !14\n  %26 = add nsw i64 %25, %23\n  %27 = tail call ptr @bus_read_1(i32 noundef %24, i64 noundef %26) #2\n  %28 = load ptr, ptr %16, align 8, !tbaa !16\n  %29 = getelementptr inbounds ptr, ptr %28, i64 %23\n  store ptr %27, ptr %29, align 8, !tbaa !13\n  %30 = add nuw nsw i64 %23, 1\n  %31 = load i32, ptr @GPIO_COUNT, align 4, !tbaa !11\n  %32 = sext i32 %31 to i64\n  %33 = icmp slt i64 %30, %32\n  br i1 %33, label %22, label %17, !llvm.loop !17\n\n34:                                               ; preds = %20, %34\n  %35 = phi i64 [ 0, %20 ], [ %42, %34 ]\n  %36 = load i32, ptr %2, align 8, !tbaa !5\n  %37 = load i64, ptr @GPIO_EXTINT_BASE, align 8, !tbaa !14\n  %38 = add nsw i64 %37, %35\n  %39 = tail call ptr @bus_read_1(i32 noundef %36, i64 noundef %38) #2\n  %40 = load ptr, ptr %21, align 8, !tbaa !19\n  %41 = getelementptr inbounds ptr, ptr %40, i64 %35\n  store ptr %39, ptr %41, align 8, !tbaa !13\n  %42 = add nuw nsw i64 %35, 1\n  %43 = load i32, ptr @GPIO_EXTINT_COUNT, align 4, !tbaa !11\n  %44 = sext i32 %43 to i64\n  %45 = icmp slt i64 %42, %44\n  br i1 %45, label %34, label %46, !llvm.loop !20\n\n46:                                               ; preds = %34, %17\n  ret i32 0\n}\n\ndeclare ptr @device_get_softc(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @bus_read_4(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @bus_read_1(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"macgpio_softc\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !10, i64 24}\n!13 = !{!10, !10, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!6, !10, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n!19 = !{!6, !10, i64 8}\n!20 = distinct !{!20, !18}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_main.c_brcms_b_write_template_ram.ll\"\n\t.globl\tbrcms_b_write_template_ram      # -- Begin function brcms_b_write_template_ram\n\t.p2align\t4, 0x90\n\t.type\tbrcms_b_write_template_ram,@function\nbrcms_b_write_template_ram:             # @brcms_b_write_template_ram\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rcx, %rbx\n\tmovl\t%edx, %ebp\n\tmovl\t%esi, %r15d\n\tmovq\t8(%rdi), %r14\n\tmovl\t(%rdi), %edx\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdi\n\tcallq\tbrcms_dbg_info@PLT\n\tmovl\ttplatewrptr(%rip), %edi\n\tcallq\tD11REGOFFS@PLT\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %esi\n\tmovl\t%r15d, %edx\n\tcallq\tbcma_write32@PLT\n\tmovl\tmaccontrol(%rip), %edi\n\tcallq\tD11REGOFFS@PLT\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %esi\n\tcallq\tbcma_read32@PLT\n\ttestl\t%ebp, %ebp\n\tjle\t.LBB0_6\n# %bb.1:                                # %.preheader\n\tmovl\t%eax, %r15d\n\tandl\tMCTL_BIGEND(%rip), %r15d\n\taddl\t$4, %ebp\n\tleaq\t12(%rsp), %r12\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_4:                                #   in Loop: Header=BB0_2 Depth=1\n\tcallq\tcpu_to_le32@PLT\n.LBB0_5:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\t%eax, 12(%rsp)\n\tmovl\ttplatewrdata(%rip), %edi\n\tcallq\tD11REGOFFS@PLT\n\tmovl\t12(%rsp), %edx\n\tmovq\t%r14, %rdi\n\tmovl\t%eax, %esi\n\tcallq\tbcma_write32@PLT\n\taddq\t$16, %rbx\n\taddl\t$-4, %ebp\n\tcmpl\t$4, %ebp\n\tjle\t.LBB0_6\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%r12, %rdi\n\tmovq\t%rbx, %rsi\n\tmovl\t$4, %edx\n\tcallq\tmemcpy@PLT\n\tmovl\t12(%rsp), %edi\n\ttestl\t%r15d, %r15d\n\tje\t.LBB0_4\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tcallq\tcpu_to_be32@PLT\n\tjmp\t.LBB0_5\n.LBB0_6:\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tbrcms_b_write_template_ram, .Lfunc_end0-brcms_b_write_template_ram\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"wl%d\\n\"\n\t.size\t.L.str, 6\n\n\t.type\ttplatewrptr,@object             # @tplatewrptr\n\t.bss\n\t.globl\ttplatewrptr\n\t.p2align\t2\ntplatewrptr:\n\t.long\t0                               # 0x0\n\t.size\ttplatewrptr, 4\n\n\t.type\tmaccontrol,@object              # @maccontrol\n\t.globl\tmaccontrol\n\t.p2align\t2\nmaccontrol:\n\t.long\t0                               # 0x0\n\t.size\tmaccontrol, 4\n\n\t.type\tMCTL_BIGEND,@object             # @MCTL_BIGEND\n\t.globl\tMCTL_BIGEND\n\t.p2align\t2\nMCTL_BIGEND:\n\t.long\t0                               # 0x0\n\t.size\tMCTL_BIGEND, 4\n\n\t.type\ttplatewrdata,@object            # @tplatewrdata\n\t.globl\ttplatewrdata\n\t.p2align\t2\ntplatewrdata:\n\t.long\t0                               # 0x0\n\t.size\ttplatewrdata, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %34\n\n17:                                               ; preds = %4, %29\n  %18 = phi i32 [ %30, %29 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %29 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %27, %25\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %33 = tail call i32 @D11REGOFFS(i32 noundef %32) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %33, i32 noundef %30) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  %35 = add i32 %18, -4\n  %36 = icmp sgt i32 %35, 3\n  br i1 %36, label %17, label %37, !llvm.loop !13\n\n37:                                               ; preds = %29\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %34\n\n17:                                               ; preds = %4, %29\n  %18 = phi i32 [ %30, %29 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %29 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %27, %25\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %33 = tail call i32 @D11REGOFFS(i32 noundef %32) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %33, i32 noundef %30) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  %35 = add i32 %18, -4\n  %36 = icmp sgt i32 %35, 3\n  br i1 %36, label %17, label %37, !llvm.loop !13\n\n37:                                               ; preds = %29\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %34\n\n17:                                               ; preds = %4, %29\n  %18 = phi i32 [ %30, %29 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %29 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %27, %25\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %33 = tail call i32 @D11REGOFFS(i32 noundef %32) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %33, i32 noundef %30) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  %35 = add i32 %18, -4\n  %36 = icmp sgt i32 %35, 3\n  br i1 %36, label %17, label %37, !llvm.loop !13\n\n37:                                               ; preds = %29\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = icmp sgt i32 %2, 0\n  br i1 %16, label %17, label %34\n\n17:                                               ; preds = %4, %29\n  %18 = phi i32 [ %30, %29 ], [ %2, %4 ]\n  %19 = phi ptr [ %31, %29 ], [ %3, %4 ]\n  %20 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %21 = and i32 %20, %15\n  %22 = icmp eq i32 %21, 0\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %19, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %22, label %27, label %25\n\n25:                                               ; preds = %17\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %17\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %25, %27\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = getelementptr inbounds i32, ptr %19, i64 4\n  %32 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %33 = tail call i32 @D11REGOFFS(i32 noundef %32) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %33, i32 noundef %30) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  %35 = add i32 %18, -4\n  %36 = icmp sgt i32 %35, 3\n  br i1 %36, label %17, label %37, !llvm.loop !13\n\n37:                                               ; preds = %29\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/wireless/broadcom/brcm80211/brcmsmac/extr_main.c_brcms_b_write_template_ram.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.brcms_hardware = type { i32, ptr }\n\n@.str = private unnamed_addr constant [6 x i8] c\"wl%d\\0A\\00\", align 1\n@tplatewrptr = dso_local local_unnamed_addr global i32 0, align 4\n@maccontrol = dso_local local_unnamed_addr global i32 0, align 4\n@MCTL_BIGEND = dso_local local_unnamed_addr global i32 0, align 4\n@tplatewrdata = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @brcms_b_write_template_ram(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = getelementptr inbounds %struct.brcms_hardware, ptr %0, i64 0, i32 1\n  %7 = load ptr, ptr %6, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = tail call i32 @brcms_dbg_info(ptr noundef %7, ptr noundef nonnull @.str, i32 noundef %8) #3\n  %10 = load i32, ptr @tplatewrptr, align 4, !tbaa !12\n  %11 = tail call i32 @D11REGOFFS(i32 noundef %10) #3\n  %12 = tail call i32 @bcma_write32(ptr noundef %7, i32 noundef %11, i32 noundef %1) #3\n  %13 = load i32, ptr @maccontrol, align 4, !tbaa !12\n  %14 = tail call i32 @D11REGOFFS(i32 noundef %13) #3\n  %15 = tail call i32 @bcma_read32(ptr noundef %7, i32 noundef %14) #3\n  %16 = load i32, ptr @MCTL_BIGEND, align 4, !tbaa !12\n  %17 = and i32 %16, %15\n  %18 = icmp eq i32 %17, 0\n  %19 = icmp sgt i32 %2, 0\n  br i1 %19, label %20, label %38\n\n20:                                               ; preds = %4, %29\n  %21 = phi i32 [ %36, %29 ], [ %2, %4 ]\n  %22 = phi ptr [ %35, %29 ], [ %3, %4 ]\n  %23 = call i32 @memcpy(ptr noundef nonnull %5, ptr noundef %22, i32 noundef 4) #3\n  %24 = load i32, ptr %5, align 4, !tbaa !12\n  br i1 %18, label %27, label %25\n\n25:                                               ; preds = %20\n  %26 = call i32 @cpu_to_be32(i32 noundef %24) #3\n  br label %29\n\n27:                                               ; preds = %20\n  %28 = call i32 @cpu_to_le32(i32 noundef %24) #3\n  br label %29\n\n29:                                               ; preds = %27, %25\n  %30 = phi i32 [ %28, %27 ], [ %26, %25 ]\n  store i32 %30, ptr %5, align 4, !tbaa !12\n  %31 = load i32, ptr @tplatewrdata, align 4, !tbaa !12\n  %32 = call i32 @D11REGOFFS(i32 noundef %31) #3\n  %33 = load i32, ptr %5, align 4, !tbaa !12\n  %34 = call i32 @bcma_write32(ptr noundef %7, i32 noundef %32, i32 noundef %33) #3\n  %35 = getelementptr inbounds i32, ptr %22, i64 4\n  %36 = add nsw i32 %21, -4\n  %37 = icmp sgt i32 %21, 4\n  br i1 %37, label %20, label %38, !llvm.loop !13\n\n38:                                               ; preds = %29, %4\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @brcms_dbg_info(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_write32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @D11REGOFFS(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @bcma_read32(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_be32(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cpu_to_le32(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"brcms_hardware\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tr_image.c_R_CreateDlightImage.ll\"\n\t.section\t.rodata.cst4,\"aM\",@progbits,4\n\t.p2align\t2                               # -- Begin function R_CreateDlightImage\n.LCPI0_0:\n\t.long\t0xbf000000                      # float -0.5\n.LCPI0_1:\n\t.long\t0x457a0000                      # float 4000\n\t.text\n\t.p2align\t4, 0x90\n\t.type\tR_CreateDlightImage,@function\nR_CreateDlightImage:                    # @R_CreateDlightImage\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r14\n\tpushq\t%rbx\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\tmovl\tDLIGHT_SIZE(%rip), %ecx\n\tmovq\t%rcx, %rax\n\timulq\t%rcx, %rax\n\tmovq\t%rsp, %rsi\n\tshlq\t$4, %rax\n\tsubq\t%rax, %rsi\n\tmovq\t%rsi, %rsp\n\ttestl\t%ecx, %ecx\n\tjle\t.LBB0_5\n# %bb.1:\n\tmovl\t%ecx, %eax\n\tshrl\t%eax\n\tcvtsi2ss\t%eax, %xmm0\n\taddss\t.LCPI0_0(%rip), %xmm0\n\tleaq\t12(%rsi), %r8\n\tmovq\t%rcx, %r14\n\tshlq\t$4, %r14\n\txorl\t%r10d, %r10d\n\tmovss\t.LCPI0_1(%rip), %xmm1           # xmm1 = mem[0],zero,zero,zero\n\tmovl\t$255, %r11d\n\txorl\t%r9d, %r9d\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Loop Header: Depth=1\n                                        #     Child Loop BB0_3 Depth 2\n\txorps\t%xmm3, %xmm3\n\tcvtsi2ss\t%r9d, %xmm3\n\tmovaps\t%xmm0, %xmm2\n\tsubss\t%xmm3, %xmm2\n\tmovq\t%r8, %rdi\n\txorl\t%eax, %eax\n\t.p2align\t4, 0x90\n.LBB0_3:                                #   Parent Loop BB0_2 Depth=1\n                                        # =>  This Inner Loop Header: Depth=2\n\txorps\t%xmm3, %xmm3\n\tcvtsi2ss\t%eax, %xmm3\n\tmovaps\t%xmm0, %xmm4\n\tsubss\t%xmm3, %xmm4\n\tmulss\t%xmm4, %xmm4\n\tmovaps\t%xmm2, %xmm3\n\tmulss\t%xmm2, %xmm3\n\taddss\t%xmm4, %xmm3\n\tmovaps\t%xmm1, %xmm4\n\tdivss\t%xmm3, %xmm4\n\tcvttss2si\t%xmm4, %edx\n\tcmpl\t$75, %edx\n\tmovl\t%edx, %ebx\n\tcmovll\t%r10d, %ebx\n\tcmpl\t$256, %edx                      # imm = 0x100\n\tcmovgel\t%r11d, %ebx\n\tmovl\t%ebx, -4(%rdi)\n\tmovl\t%ebx, -8(%rdi)\n\tmovl\t%ebx, -12(%rdi)\n\tmovl\t$255, (%rdi)\n\tincq\t%rax\n\taddq\t%r14, %rdi\n\tcmpq\t%rax, %rcx\n\tjne\t.LBB0_3\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\tincq\t%r9\n\taddq\t$16, %r8\n\tcmpq\t%rcx, %r9\n\tjne\t.LBB0_2\n.LBB0_5:\n\tmovl\tIMGTYPE_COLORALPHA(%rip), %r8d\n\tmovl\tIMGFLAG_CLAMPTOEDGE(%rip), %r9d\n\tsubq\t$8, %rsp\n\tmovl\t$.L.str, %edi\n\tmovl\t%ecx, %edx\n                                        # kill: def $ecx killed $ecx killed $rcx\n\tpushq\t$0\n\tcallq\tR_CreateImage@PLT\n\taddq\t$16, %rsp\n\tmovl\t%eax, tr(%rip)\n\tleaq\t-16(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r14\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.Lfunc_end0:\n\t.size\tR_CreateDlightImage, .Lfunc_end0-R_CreateDlightImage\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tDLIGHT_SIZE,@object             # @DLIGHT_SIZE\n\t.bss\n\t.globl\tDLIGHT_SIZE\n\t.p2align\t2\nDLIGHT_SIZE:\n\t.long\t0                               # 0x0\n\t.size\tDLIGHT_SIZE, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"*dlight\"\n\t.size\t.L.str, 8\n\n\t.type\tIMGTYPE_COLORALPHA,@object      # @IMGTYPE_COLORALPHA\n\t.bss\n\t.globl\tIMGTYPE_COLORALPHA\n\t.p2align\t2\nIMGTYPE_COLORALPHA:\n\t.long\t0                               # 0x0\n\t.size\tIMGTYPE_COLORALPHA, 4\n\n\t.type\tIMGFLAG_CLAMPTOEDGE,@object     # @IMGFLAG_CLAMPTOEDGE\n\t.globl\tIMGFLAG_CLAMPTOEDGE\n\t.p2align\t2\nIMGFLAG_CLAMPTOEDGE:\n\t.long\t0                               # 0x0\n\t.size\tIMGFLAG_CLAMPTOEDGE, 4\n\n\t.type\ttr,@object                      # @tr\n\t.globl\ttr\n\t.p2align\t2\ntr:\n\t.zero\t4\n\t.size\ttr, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %34\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %29\n  %14 = phi i64 [ 0, %7 ], [ %30, %29 ]\n  %15 = phi i64 [ 0, %7 ], [ %31, %29 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %25, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 3\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %22, %17\n  %25 = add nuw nsw i64 %19, 1\n  %26 = fdiv float %24, %23\n  %27 = fptosi float %26 to i32\n  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 75)\n  store i32 %28, ptr %20, align 4, !tbaa !9\n  br label %29\n\n29:                                               ; preds = %18, %18\n  %30 = add nuw nsw i64 %14, 1\n  %31 = add i64 %15, 1\n  %32 = icmp eq i64 %31, %12\n  br i1 %32, label %33, label %13, !llvm.loop !11\n\n33:                                               ; preds = %29\n  br label %34\n\n34:                                               ; preds = %33, %0\n  %35 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %36 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %37 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %1, i32 noundef %35, i32 noundef %36, i32 noundef 0) #3\n  store i32 %37, ptr @tr, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !6, i64 0}\n!14 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %37\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %32\n  %14 = phi i64 [ 0, %7 ], [ %33, %32 ]\n  %15 = phi i64 [ 0, %7 ], [ %34, %32 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %26, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 3\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %20, %22\n  %25 = fdiv float %24, %23\n  %26 = add nuw nsw i64 %19, 1\n  %27 = fptosi float %25 to i32\n  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 75)\n  %29 = tail call i32 @llvm.smin.i32(i32 %28, i32 256)\n  %30 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14\n  store i32 %29, ptr %30, align 4, !tbaa !9\n  %31 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 1\n  store i32 %29, ptr %31, align 4, !tbaa !11\n  store i32 %29, ptr %20, align 4, !tbaa !12\n  store i32 255, ptr %30, align 4, !tbaa !9\n  %32 = icmp eq i64 %26, %12\n  br i1 %32, label %33, label %18, !llvm.loop !13\n\n33:                                               ; preds = %18\n  %34 = add nuw nsw i64 %15, 1\n  %35 = icmp eq i64 %34, %12\n  br i1 %35, label %37, label %13, !llvm.loop !15\n\n36:                                               ; preds = %33\n  ret void\n\n37:                                               ; preds = %33, %0\n  %38 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %39 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %40 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %1, i32 noundef %38, i32 noundef %39, i32 noundef 0) #3\n  store i32 %40, ptr @tr, align 4, !tbaa !16\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = !{!10, !6, i64 4}\n!12 = !{!10, !6, i64 8}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n!15 = distinct !{!15, !14}\n!16 = !{!17, !6, i64 0}\n!17 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %35\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %31\n  %14 = phi i64 [ 0, %7 ], [ %32, %31 ]\n  %15 = phi i64 [ 0, %7 ], [ %33, %31 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %29, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 3\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %20, %22\n  %25 = fdiv float %24, %23\n  %26 = fptosi float %25 to i32\n  %27 = tail call i32 @llvm.smin.i32(i32 %26, i32 75)\n  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 256)\n  store i32 %28, ptr %20, align 4, !tbaa !9\n  %29 = add nuw nsw i64 %19, 1\n  %30 = icmp eq i64 %29, %12\n  br i1 %30, label %31, label %18, !llvm.loop !11\n\n31:                                               ; preds = %18\n  %32 = add nuw nsw i64 %14, 1\n  %33 = add nuw nsw i64 %15, 1\n  %34 = icmp eq i64 %33, %12\n  br i1 %34, label %35, label %13, !llvm.loop !13\n\n35:                                               ; preds = %31, %0\n  %36 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %37 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %38 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %1, i32 noundef %36, i32 noundef %37, i32 noundef 0) #3\n  store i32 %38, ptr @tr, align 4, !tbaa !14\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 12}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %35\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 3\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %30\n  %14 = phi i64 [ 0, %7 ], [ %31, %30 ]\n  %15 = phi i64 [ 0, %7 ], [ %32, %30 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %26, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 1\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %20, %22\n  %25 = fdiv float %24, %23\n  %26 = add nuw nsw i64 %19, 1\n  %27 = fptosi float %25 to i32\n  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 75)\n  %29 = tail call i32 @llvm.smin.i32(i32 %28, i32 256)\n  store i32 %29, ptr %20, align 4, !tbaa !9\n  store i32 %29, ptr %5, align 16, !tbaa !9\n  store i32 %29, ptr %11, align 4, !tbaa !9\n  store i32 255, ptr %5, align 16, !tbaa !9\n  %30 = add nuw nsw i64 %14, 1\n  %31 = and i64 %30, 4294967295\n  %32 = icmp eq i64 %31, %12\n  br i1 %32, label %33, label %18, !llvm.loop !11\n\n33:                                               ; preds = %18\n  %34 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14\n  br label %35\n\n35:                                               ; preds = %33, %0\n  %36 = phi ptr [ %34, %33 ], [ %5, %0 ]\n  %37 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %38 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %39 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %36, i32 noundef %1, i32 noundef %1, i32 noundef %37, i32 noundef %38, i32 noundef 0) #3\n  store i32 %39, ptr @tr, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !6, i64 0}\n!14 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/lab/engine/code/renderergl2/extr_tr_image.c_R_CreateDlightImage.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_2__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = mul nuw i64 %2, %2\n  %4 = alloca [4 x i32], i64 %3, align 16\n  %5 = icmp sgt i32 %1, 0\n  br i1 %5, label %6, label %39\n\n6:                                                ; preds = %0\n  %7 = lshr i32 %1, 1\n  %8 = sitofp i32 %7 to float\n  %9 = fadd float %8, -5.000000e-01\n  br label %10\n\n10:                                               ; preds = %36, %6\n  %11 = phi i64 [ 0, %6 ], [ %37, %36 ]\n  %12 = trunc i64 %11 to i32\n  %13 = sitofp i32 %12 to float\n  %14 = fsub float %9, %13\n  %15 = getelementptr inbounds [4 x i32], ptr %4, i64 %11\n  br label %16\n\n16:                                               ; preds = %10, %16\n  %17 = phi i64 [ 0, %10 ], [ %34, %16 ]\n  %18 = trunc i64 %17 to i32\n  %19 = sitofp i32 %18 to float\n  %20 = fsub float %9, %19\n  %21 = fmul float %20, %20\n  %22 = tail call float @llvm.fmuladd.f32(float %14, float %14, float %21)\n  %23 = fdiv float 4.000000e+03, %22\n  %24 = fptosi float %23 to i32\n  %25 = icmp sgt i32 %24, 255\n  %26 = icmp slt i32 %24, 75\n  %27 = select i1 %26, i32 0, i32 %24\n  %28 = select i1 %25, i32 255, i32 %27\n  %29 = mul nuw nsw i64 %17, %2\n  %30 = getelementptr inbounds [4 x i32], ptr %15, i64 %29\n  %31 = getelementptr inbounds [4 x i32], ptr %30, i64 0, i64 2\n  store i32 %28, ptr %31, align 8, !tbaa !5\n  %32 = getelementptr inbounds [4 x i32], ptr %30, i64 0, i64 1\n  store i32 %28, ptr %32, align 4, !tbaa !5\n  store i32 %28, ptr %30, align 16, !tbaa !5\n  %33 = getelementptr inbounds [4 x i32], ptr %30, i64 0, i64 3\n  store i32 255, ptr %33, align 4, !tbaa !5\n  %34 = add nuw nsw i64 %17, 1\n  %35 = icmp eq i64 %34, %2\n  br i1 %35, label %36, label %16, !llvm.loop !9\n\n36:                                               ; preds = %16\n  %37 = add nuw nsw i64 %11, 1\n  %38 = icmp eq i64 %37, %2\n  br i1 %38, label %39, label %10, !llvm.loop !11\n\n39:                                               ; preds = %36, %0\n  %40 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %41 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %42 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %4, i32 noundef %1, i32 noundef %1, i32 noundef %40, i32 noundef %41, i32 noundef 0) #3\n  store i32 %42, ptr @tr, align 4, !tbaa !12\n  ret void\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare float @llvm.fmuladd.f32(float, float, float) #1\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = distinct !{!9, !10}\n!10 = !{!\"llvm.loop.mustprogress\"}\n!11 = distinct !{!11, !10}\n!12 = !{!13, !6, i64 0}\n!13 = !{!\"TYPE_2__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_dib9000.c_dib9000_get_snr.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function dib9000_get_snr\n\t.type\tdib9000_get_snr,@function\ndib9000_get_snr:                        # @dib9000_get_snr\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t(%rdi), %rbx\n\tmovq\t8(%rbx), %r14\n\tmovq\t%rbx, %rdi\n\tcallq\tmutex_lock_interruptible@PLT\n\ttestq\t%rax, %rax\n\tjs\t.LBB0_1\n# %bb.2:\n\tmovl\tFE_SYNC_CHANNEL(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tdib9000_fw_memmbx_sync@PLT\n\ttestq\t%rax, %rax\n\tjs\t.LBB0_3\n# %bb.4:\n\tmovl\tFE_MM_R_FE_MONITOR(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rdx\n\tmovl\t$32, %ecx\n\tcallq\tdib9000_risc_mem_read@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tmutex_unlock@PLT\n\tmovl\t28(%r14), %ecx\n\tmovl\t32(%r14), %eax\n\tmovl\t%ecx, %edx\n\tshrl\t$4, %edx\n\tmovzbl\t%dl, %edi\n\tmovl\t%ecx, %edx\n\tandl\t$15, %edx\n\tmovl\t%eax, %esi\n\tshrl\t$14, %esi\n\tandl\t$3, %esi\n\tleal\t(%rsi,%rdx,4), %edx\n\tleal\t-64(%rdx), %esi\n\ttestb\t$8, %cl\n\tmovzbl\t%sil, %ecx\n\tcmovel\t%edx, %ecx\n\taddb\t$16, %cl\n                                        # kill: def $cl killed $cl killed $ecx\n\tshll\t%cl, %edi\n\ttestl\t%edi, %edi\n\tjle\t.LBB0_5\n# %bb.6:\n\tmovl\t%eax, %ecx\n\tshll\t$26, %ecx\n\tsarl\t$31, %ecx\n\tmovl\t%eax, %edx\n\tandl\t$63, %edx\n\tandl\t$192, %ecx\n\torl\t%edx, %ecx\n\tshrl\t$6, %eax\n\tmovzbl\t%al, %esi\n\taddb\t$16, %cl\n                                        # kill: def $cl killed $cl killed $ecx\n\tshll\t%cl, %esi\n\tmovl\t%esi, %eax\n\tcltd\n\tidivl\t%edi\n\tmovl\t%eax, %ecx\n\tshll\t$16, %ecx\n\tshll\t$16, %esi\n\tmovl\t%ecx, %eax\n\timull\t%edi, %eax\n\tsubl\t%eax, %esi\n\tmovl\t%esi, %eax\n\tcltd\n\tidivl\t%edi\n\taddl\t%ecx, %eax\n\tjmp\t.LBB0_7\n.LBB0_1:\n\tmovl\t$.L.str, %edi\n\tcallq\tdprintk@PLT\n\txorl\t%eax, %eax\n\tjmp\t.LBB0_7\n.LBB0_3:\n\tmovq\t%rbx, %rdi\n\tcallq\tmutex_unlock@PLT\n\txorl\t%eax, %eax\n\tjmp\t.LBB0_7\n.LBB0_5:\n\tmovl\t$-1, %eax\n.LBB0_7:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tdib9000_get_snr, .Lfunc_end0-dib9000_get_snr\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"could not get the lock\\n\"\n\t.size\t.L.str, 24\n\n\t.type\tFE_SYNC_CHANNEL,@object         # @FE_SYNC_CHANNEL\n\t.bss\n\t.globl\tFE_SYNC_CHANNEL\n\t.p2align\t2\nFE_SYNC_CHANNEL:\n\t.long\t0                               # 0x0\n\t.size\tFE_SYNC_CHANNEL, 4\n\n\t.type\tFE_MM_R_FE_MONITOR,@object      # @FE_MM_R_FE_MONITOR\n\t.globl\tFE_MM_R_FE_MONITOR\n\t.p2align\t2\nFE_MM_R_FE_MONITOR:\n\t.long\t0                               # 0x0\n\t.size\tFE_MM_R_FE_MONITOR, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dib9000_state = type { i32, ptr }\n\n@.str = private unnamed_addr constant [24 x i8] c\"could not get the lock\\0A\\00\", align 1\n@FE_SYNC_CHANNEL = dso_local local_unnamed_addr global i32 0, align 4\n@FE_MM_R_FE_MONITOR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dib9000_get_snr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dib9000_get_snr(ptr nocapture noundef readonly %0) #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.dib9000_state, ptr %2, i64 0, i32 1\n  %4 = load ptr, ptr %3, align 8, !tbaa !10\n  %5 = tail call i64 @mutex_lock_interruptible(ptr noundef %2) #2\n  %6 = icmp slt i64 %5, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @dprintk(ptr noundef nonnull @.str) #2\n  br label %36\n\n9:                                                ; preds = %1\n  %10 = load i32, ptr @FE_SYNC_CHANNEL, align 4, !tbaa !13\n  %11 = tail call i64 @dib9000_fw_memmbx_sync(ptr noundef nonnull %2, i32 noundef %10) #2\n  %12 = icmp slt i64 %11, 0\n  br i1 %12, label %13, label %15\n\n13:                                               ; preds = %9\n  %14 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  br label %36\n\n15:                                               ; preds = %9\n  %16 = load i32, ptr @FE_MM_R_FE_MONITOR, align 4, !tbaa !13\n  %17 = tail call i32 @dib9000_risc_mem_read(ptr noundef nonnull %2, i32 noundef %16, ptr noundef %4, i32 noundef 32) #2\n  %18 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  %19 = getelementptr inbounds i32, ptr %4, i64 7\n  %20 = load i32, ptr %19, align 4, !tbaa !13\n  %21 = getelementptr inbounds i32, ptr %4, i64 8\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %20, 8\n  %24 = icmp eq i32 %23, 0\n  %25 = and i32 %20, 15\n  %26 = and i32 %20, 192\n  %27 = or i32 %26, %25\n  %28 = lshr i32 %22, 14\n  %29 = and i32 %28, 3\n  %30 = or i32 %27, %29\n  %31 = add nuw nsw i32 %30, 16\n  %32 = select i1 %24, i32 %30, i32 %31\n  %33 = shl i32 %32, %32\n  %34 = icmp sgt i32 %33, 0\n  br i1 %34, label %35, label %36\n\n35:                                               ; preds = %15\n  br label %36\n\n36:                                               ; preds = %15, %35, %13, %7\n  %37 = phi i32 [ 0, %7 ], [ 0, %13 ], [ -1, %35 ], [ %33, %15 ]\n  ret i32 %37\n}\n\ndeclare i64 @mutex_lock_interruptible(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dprintk(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dib9000_fw_memmbx_sync(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dib9000_risc_mem_read(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dvb_frontend\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"dib9000_state\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dib9000_state = type { i32, ptr }\n\n@.str = private unnamed_addr constant [24 x i8] c\"could not get the lock\\0A\\00\", align 1\n@FE_SYNC_CHANNEL = dso_local local_unnamed_addr global i32 0, align 4\n@FE_MM_R_FE_MONITOR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dib9000_get_snr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dib9000_get_snr(ptr nocapture noundef readonly %0) #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.dib9000_state, ptr %2, i64 0, i32 1\n  %4 = load ptr, ptr %3, align 8, !tbaa !10\n  %5 = tail call i64 @mutex_lock_interruptible(ptr noundef %2) #2\n  %6 = icmp slt i64 %5, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @dprintk(ptr noundef nonnull @.str) #2\n  br label %35\n\n9:                                                ; preds = %1\n  %10 = load i32, ptr @FE_SYNC_CHANNEL, align 4, !tbaa !13\n  %11 = tail call i64 @dib9000_fw_memmbx_sync(ptr noundef nonnull %2, i32 noundef %10) #2\n  %12 = icmp slt i64 %11, 0\n  br i1 %12, label %13, label %15\n\n13:                                               ; preds = %9\n  %14 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  br label %35\n\n15:                                               ; preds = %9\n  %16 = load i32, ptr @FE_MM_R_FE_MONITOR, align 4, !tbaa !13\n  %17 = tail call i32 @dib9000_risc_mem_read(ptr noundef nonnull %2, i32 noundef %16, ptr noundef %4, i32 noundef 32) #2\n  %18 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  %19 = getelementptr inbounds i32, ptr %4, i64 7\n  %20 = load i32, ptr %19, align 4, !tbaa !13\n  %21 = getelementptr inbounds i32, ptr %4, i64 8\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %20, 15\n  %24 = lshr i32 %20, 4\n  %25 = and i32 %24, 15\n  %26 = or i32 %25, 4\n  %27 = lshr i32 %22, 14\n  %28 = and i32 %27, 3\n  %29 = add nuw nsw i32 %26, %28\n  %30 = and i32 %20, 8\n  %31 = icmp eq i32 %30, 0\n  %32 = add nuw nsw i32 %29, 16\n  %33 = select i1 %31, i32 %29, i32 %32\n  %34 = shl i32 %22, %33\n  br label %35\n\n35:                                               ; preds = %15, %13, %7\n  %36 = phi i32 [ 0, %7 ], [ 0, %13 ], [ %34, %15 ]\n  ret i32 %36\n}\n\ndeclare i64 @mutex_lock_interruptible(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dprintk(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dib9000_fw_memmbx_sync(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dib9000_risc_mem_read(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dvb_frontend\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"dib9000_state\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dib9000_state = type { i32, ptr }\n\n@.str = private unnamed_addr constant [24 x i8] c\"could not get the lock\\0A\\00\", align 1\n@FE_SYNC_CHANNEL = dso_local local_unnamed_addr global i32 0, align 4\n@FE_MM_R_FE_MONITOR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dib9000_get_snr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dib9000_get_snr(ptr nocapture noundef readonly %0) #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.dib9000_state, ptr %2, i64 0, i32 1\n  %4 = load ptr, ptr %3, align 8, !tbaa !10\n  %5 = tail call i64 @mutex_lock_interruptible(ptr noundef %2) #2\n  %6 = icmp slt i64 %5, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @dprintk(ptr noundef nonnull @.str) #2\n  br label %36\n\n9:                                                ; preds = %1\n  %10 = load i32, ptr @FE_SYNC_CHANNEL, align 4, !tbaa !13\n  %11 = tail call i64 @dib9000_fw_memmbx_sync(ptr noundef nonnull %2, i32 noundef %10) #2\n  %12 = icmp slt i64 %11, 0\n  br i1 %12, label %13, label %15\n\n13:                                               ; preds = %9\n  %14 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  br label %36\n\n15:                                               ; preds = %9\n  %16 = load i32, ptr @FE_MM_R_FE_MONITOR, align 4, !tbaa !13\n  %17 = tail call i32 @dib9000_risc_mem_read(ptr noundef nonnull %2, i32 noundef %16, ptr noundef %4, i32 noundef 32) #2\n  %18 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  %19 = getelementptr inbounds i32, ptr %4, i64 7\n  %20 = load i32, ptr %19, align 4, !tbaa !13\n  %21 = getelementptr inbounds i32, ptr %4, i64 8\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %20, 8\n  %24 = icmp eq i32 %23, 0\n  %25 = and i32 %20, 15\n  %26 = and i32 %20, 192\n  %27 = or i32 %26, %25\n  %28 = lshr i32 %22, 14\n  %29 = and i32 %28, 3\n  %30 = or i32 %27, %29\n  %31 = lshr i32 %30, 4\n  %32 = add nuw nsw i32 %31, 16\n  %33 = select i1 %24, i32 %30, i32 %32\n  %34 = and i32 %30, 15\n  %35 = shl i32 %34, %33\n  br label %36\n\n36:                                               ; preds = %15, %13, %7\n  %37 = phi i32 [ 0, %7 ], [ 0, %13 ], [ %35, %15 ]\n  ret i32 %37\n}\n\ndeclare i64 @mutex_lock_interruptible(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dprintk(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dib9000_fw_memmbx_sync(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dib9000_risc_mem_read(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dvb_frontend\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"dib9000_state\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dib9000_state = type { i32, ptr }\n\n@.str = private unnamed_addr constant [24 x i8] c\"could not get the lock\\0A\\00\", align 1\n@FE_SYNC_CHANNEL = dso_local local_unnamed_addr global i32 0, align 4\n@FE_MM_R_FE_MONITOR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dib9000_get_snr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dib9000_get_snr(ptr nocapture noundef readonly %0) #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.dib9000_state, ptr %2, i64 0, i32 1\n  %4 = load ptr, ptr %3, align 8, !tbaa !10\n  %5 = tail call i64 @mutex_lock_interruptible(ptr noundef %2) #2\n  %6 = icmp slt i64 %5, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %1\n  %8 = tail call i32 @dprintk(ptr noundef nonnull @.str) #2\n  br label %35\n\n9:                                                ; preds = %1\n  %10 = load i32, ptr @FE_SYNC_CHANNEL, align 4, !tbaa !13\n  %11 = tail call i64 @dib9000_fw_memmbx_sync(ptr noundef nonnull %2, i32 noundef %10) #2\n  %12 = icmp slt i64 %11, 0\n  br i1 %12, label %13, label %15\n\n13:                                               ; preds = %9\n  %14 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  br label %35\n\n15:                                               ; preds = %9\n  %16 = load i32, ptr @FE_MM_R_FE_MONITOR, align 4, !tbaa !13\n  %17 = tail call i32 @dib9000_risc_mem_read(ptr noundef nonnull %2, i32 noundef %16, ptr noundef %4, i32 noundef 32) #2\n  %18 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  %19 = getelementptr inbounds i32, ptr %4, i64 7\n  %20 = load i32, ptr %19, align 4, !tbaa !13\n  %21 = getelementptr inbounds i32, ptr %4, i64 8\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %20, 15\n  %24 = lshr i32 %20, 4\n  %25 = and i32 %24, 15\n  %26 = or i32 %25, 4\n  %27 = lshr i32 %22, 14\n  %28 = and i32 %27, 3\n  %29 = add nuw nsw i32 %26, %28\n  %30 = and i32 %20, 8\n  %31 = icmp eq i32 %30, 0\n  %32 = add nuw nsw i32 %29, 16\n  %33 = select i1 %31, i32 %29, i32 %32\n  %34 = shl i32 %22, %33\n  br label %35\n\n35:                                               ; preds = %15, %13, %7\n  %36 = phi i32 [ 0, %7 ], [ 0, %13 ], [ %34, %15 ]\n  ret i32 %36\n}\n\ndeclare i64 @mutex_lock_interruptible(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dprintk(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dib9000_fw_memmbx_sync(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dib9000_risc_mem_read(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dvb_frontend\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 8}\n!11 = !{!\"dib9000_state\", !12, i64 0, !7, i64 8}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/media/dvb-frontends/extr_dib9000.c_dib9000_get_snr.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dib9000_state = type { %struct.TYPE_4__, i64 }\n%struct.TYPE_4__ = type { %struct.TYPE_3__ }\n%struct.TYPE_3__ = type { i32 }\n\n@.str = private unnamed_addr constant [24 x i8] c\"could not get the lock\\0A\\00\", align 1\n@FE_SYNC_CHANNEL = dso_local local_unnamed_addr global i32 0, align 4\n@FE_MM_R_FE_MONITOR = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dib9000_get_snr], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dib9000_get_snr(ptr nocapture noundef readonly %0) #0 {\n  %2 = load ptr, ptr %0, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.dib9000_state, ptr %2, i64 0, i32 1\n  %4 = load i64, ptr %3, align 8, !tbaa !10\n  %5 = inttoptr i64 %4 to ptr\n  %6 = tail call i64 @mutex_lock_interruptible(ptr noundef %2) #2\n  %7 = icmp slt i64 %6, 0\n  br i1 %7, label %8, label %10\n\n8:                                                ; preds = %1\n  %9 = tail call i32 @dprintk(ptr noundef nonnull @.str) #2\n  br label %55\n\n10:                                               ; preds = %1\n  %11 = load i32, ptr @FE_SYNC_CHANNEL, align 4, !tbaa !16\n  %12 = tail call i64 @dib9000_fw_memmbx_sync(ptr noundef nonnull %2, i32 noundef %11) #2\n  %13 = icmp slt i64 %12, 0\n  br i1 %13, label %14, label %16\n\n14:                                               ; preds = %10\n  %15 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  br label %55\n\n16:                                               ; preds = %10\n  %17 = load i32, ptr @FE_MM_R_FE_MONITOR, align 4, !tbaa !16\n  %18 = tail call i32 @dib9000_risc_mem_read(ptr noundef nonnull %2, i32 noundef %17, ptr noundef %5, i32 noundef 32) #2\n  %19 = tail call i32 @mutex_unlock(ptr noundef nonnull %2) #2\n  %20 = getelementptr inbounds i32, ptr %5, i64 7\n  %21 = load i32, ptr %20, align 4, !tbaa !16\n  %22 = lshr i32 %21, 4\n  %23 = and i32 %22, 255\n  %24 = shl i32 %21, 2\n  %25 = and i32 %24, 60\n  %26 = getelementptr inbounds i32, ptr %5, i64 8\n  %27 = load i32, ptr %26, align 4, !tbaa !16\n  %28 = lshr i32 %27, 14\n  %29 = and i32 %28, 3\n  %30 = or i32 %29, %25\n  %31 = and i32 %21, 8\n  %32 = icmp eq i32 %31, 0\n  %33 = or i32 %30, -64\n  %34 = select i1 %32, i32 %30, i32 %33\n  %35 = add nsw i32 %34, 16\n  %36 = shl i32 %23, %35\n  %37 = icmp sgt i32 %36, 0\n  br i1 %37, label %38, label %55\n\n38:                                               ; preds = %16\n  %39 = and i32 %27, 32\n  %40 = icmp eq i32 %39, 0\n  %41 = and i32 %27, 63\n  %42 = select i1 %40, i32 0, i32 -64\n  %43 = lshr i32 %27, 6\n  %44 = and i32 %43, 255\n  %45 = add nuw nsw i32 %41, 16\n  %46 = add nsw i32 %45, %42\n  %47 = shl i32 %44, %46\n  %48 = sdiv i32 %47, %36\n  %49 = shl i32 %48, 16\n  %50 = shl i32 %47, 16\n  %51 = mul nsw i32 %49, %36\n  %52 = sub nsw i32 %50, %51\n  %53 = sdiv i32 %52, %36\n  %54 = add nsw i32 %49, %53\n  br label %55\n\n55:                                               ; preds = %16, %38, %14, %8\n  %56 = phi i32 [ 0, %8 ], [ 0, %14 ], [ %54, %38 ], [ -1, %16 ]\n  ret i32 %56\n}\n\ndeclare i64 @mutex_lock_interruptible(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dprintk(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dib9000_fw_memmbx_sync(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dib9000_risc_mem_read(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"dvb_frontend\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !15, i64 8}\n!11 = !{!\"dib9000_state\", !12, i64 0, !15, i64 8}\n!12 = !{!\"TYPE_4__\", !13, i64 0}\n!13 = !{!\"TYPE_3__\", !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!14, !14, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_caampkc.c_caam_rsa_count_leading_zeros.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function caam_rsa_count_leading_zeros\n\t.type\tcaam_rsa_count_leading_zeros,@function\ncaam_rsa_count_leading_zeros:           # @caam_rsa_count_leading_zeros\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %ebx\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbp\n\tcallq\tsg_nents_for_len@PLT\n\ttestl\t%eax, %eax\n\tjs\t.LBB0_13\n# %bb.1:\n\torl\tSG_MITER_FROM_SG(%rip), %ebx\n\tleaq\t8(%rsp), %rdi\n\tmovq\t%rbp, %rsi\n\tmovl\t%eax, %edx\n\tmovl\t%ebx, %ecx\n\tcallq\tsg_miter_start@PLT\n\ttestl\t%r14d, %r14d\n\tje\t.LBB0_11\n# %bb.2:\n\txorl\t%ecx, %ecx\n\tleaq\t8(%rsp), %r15\n                                        # implicit-def: $rax\n\tmovl\t%r14d, %ebp\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_9:                                #   in Loop: Header=BB0_3 Depth=1\n\ttestq\t%rdx, %rdx\n\tjne\t.LBB0_12\n.LBB0_10:                               #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t%r15, %rdi\n\tcallq\tsg_miter_next@PLT\n\tmovq\t16(%rsp), %rax\n\tmovl\t8(%rsp), %ecx\n\tsubl\t%ebx, %ebp\n\tje\t.LBB0_11\n.LBB0_3:                                # =>This Loop Header: Depth=1\n                                        #     Child Loop BB0_5 Depth 2\n\tmovl\t$0, %ebx\n\ttestl\t%ecx, %ecx\n\tje\t.LBB0_10\n# %bb.4:                                # %.preheader\n                                        #   in Loop: Header=BB0_3 Depth=1\n\tmovl\t%ecx, %ecx\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   Parent Loop BB0_3 Depth=1\n                                        # =>  This Inner Loop Header: Depth=2\n\tmovq\t(%rax,%rbx,8), %rdx\n\ttestq\t%rdx, %rdx\n\tjne\t.LBB0_9\n# %bb.6:                                #   in Loop: Header=BB0_5 Depth=2\n\tcmpl\t%ebx, %ebp\n\tjbe\t.LBB0_9\n# %bb.7:                                #   in Loop: Header=BB0_5 Depth=2\n\tincq\t%rbx\n\tcmpl\t%ebx, %ecx\n\tjne\t.LBB0_5\n# %bb.8:                                # %.loopexit\n                                        #   in Loop: Header=BB0_3 Depth=1\n\tmovl\t%ecx, %ebx\n\tjmp\t.LBB0_10\n.LBB0_11:\n\txorl\t%ebp, %ebp\n\txorl\t%ebx, %ebx\n.LBB0_12:\n\tmovl\t%ebx, 12(%rsp)\n\tleaq\t8(%rsp), %rdi\n\tcallq\tsg_miter_stop@PLT\n\tsubl\t%ebp, %r14d\n\taddl\t%ebx, %r14d\n\tmovl\t%r14d, %eax\n.LBB0_13:\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcaam_rsa_count_leading_zeros, .Lfunc_end0-caam_rsa_count_leading_zeros\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSG_MITER_FROM_SG,@object        # @SG_MITER_FROM_SG\n\t.bss\n\t.globl\tSG_MITER_FROM_SG\n\t.p2align\t2\nSG_MITER_FROM_SG:\n\t.long\t0                               # 0x0\n\t.size\tSG_MITER_FROM_SG, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sg_mapping_iter = type { i32, ptr }\n\n@SG_MITER_FROM_SG = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @caam_rsa_count_leading_zeros], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @caam_rsa_count_leading_zeros(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.sg_mapping_iter, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i32 @sg_nents_for_len(ptr noundef %0, i32 noundef %1) #3\n  %6 = icmp slt i32 %5, 0\n  br i1 %6, label %39, label %7\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @SG_MITER_FROM_SG, align 4, !tbaa !5\n  %9 = or i32 %8, %2\n  %10 = call i32 @sg_miter_start(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %5, i32 noundef %9) #3\n  %11 = icmp eq i32 %1, 0\n  br i1 %11, label %34, label %12\n\n12:                                               ; preds = %7\n  %13 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  %14 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  %15 = icmp eq i32 %1, %5\n  br label %16\n\n16:                                               ; preds = %12, %31\n  %17 = phi i32 [ %1, %12 ], [ %32, %31 ]\n  %18 = phi i32 [ 0, %12 ], [ %33, %31 ]\n  %19 = phi i32 [ %5, %12 ], [ %30, %31 ]\n  %20 = phi i32 [ 0, %12 ], [ %29, %31 ]\n  %21 = icmp eq i32 %20, 0\n  br i1 %21, label %31, label %22\n\n22:                                               ; preds = %16, %27\n  %23 = phi i32 [ %28, %27 ], [ %20, %16 ]\n  %24 = zext i32 %23 to i64\n  %25 = getelementptr inbounds i64, ptr %13, i64 %24\n  %26 = load i64, ptr %25, align 8, !tbaa !9\n  switch i64 %26, label %27 [\n    i64 0, label %31\n    i64 1, label %31\n  ]\n\n27:                                               ; preds = %22\n  %28 = add nuw nsw i32 %23, 1\n  %29 = icmp ugt i32 %28, %19\n  %30 = add i32 %17, -1\n  br i1 %29, label %16, label %34, !llvm.loop !11\n\n31:                                               ; preds = %22, %22\n  %32 = phi i32 [ %23, %22 ], [ %19, %22 ]\n  %33 = phi i32 [ %28, %22 ], [ %20, %22 ]\n  %34 = call i32 @sg_miter_next(ptr noundef nonnull %4) #3\n  %35 = load ptr, ptr %14, align 8, !tbaa !13\n  %36 = load i32, ptr %4, align 8, !tbaa !15\n  %37 = icmp eq ptr %35, %3\n  %38 = icmp eq i32 %36, %32\n  br i1 %37, label %34, label %16\n\n39:                                               ; preds = %3\n  %40 = phi i32 [ %5, %3 ], [ 0, %31 ]\n  %41 = phi i32 [ 0, %3 ], [ %33, %31 ]\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret i32 %40\n\n42:                                               ; preds = %31\n  %43 = phi i32 [ %38, %31 ], [ %33, %31 ]\n  %44 = phi i32 [ %36, %31 ], [ %32, %31 ]\n  %45 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %46 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %47 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %48 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %49 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %50 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %51 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %52 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %53 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %54 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %55 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %56 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %57 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %58 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %59 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %60 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %61 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %62 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %63 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %64 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %65 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %66 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %67 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %68 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %69 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %70 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %71 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %72 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %73 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %74 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %75 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %76 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %77 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %78 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %79 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %80 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %81 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %82 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %83 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %84 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %85 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %86 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %87 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %88 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %89 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %90 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %91 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %92 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %93 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %94 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %95 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %96 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %97 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %98 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %99 = phi i32 [ %30, %31 ], [ %17, %31 ]\n  %100 = phi i32 [ %32, %31 ], [ %33, %31 ]\n  %101", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sg_mapping_iter = type { i32, ptr }\n\n@SG_MITER_FROM_SG = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @caam_rsa_count_leading_zeros], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @caam_rsa_count_leading_zeros(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.sg_mapping_iter, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i32 @sg_nents_for_len(ptr noundef %0, i32 noundef %1) #3\n  %6 = icmp slt i32 %5, 0\n  br i1 %6, label %38, label %7\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @SG_MITER_FROM_SG, align 4, !tbaa !5\n  %9 = or i32 %8, %2\n  %10 = call i32 @sg_miter_start(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %5, i32 noundef %9) #3\n  %11 = icmp eq i32 %1, 0\n  br i1 %11, label %34, label %12\n\n12:                                               ; preds = %7\n  %13 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  %14 = icmp eq i32 %1, %5\n  br label %15\n\n15:                                               ; preds = %12, %31\n  %16 = phi i32 [ %1, %12 ], [ %32, %31 ]\n  %17 = phi i32 [ 0, %12 ], [ %33, %31 ]\n  %18 = phi i32 [ %5, %12 ], [ %30, %31 ]\n  %19 = phi i32 [ 0, %12 ], [ %29, %31 ]\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %31, label %21\n\n21:                                               ; preds = %15, %26\n  %22 = phi i32 [ %27, %26 ], [ %19, %15 ]\n  %23 = phi i32 [ %28, %26 ], [ %17, %15 ]\n  %24 = zext i32 %22 to i64\n  %25 = getelementptr inbounds i64, ptr %13, i64 %24\n  %26 = load i64, ptr %25, align 8, !tbaa !9\n  switch i64 %26, label %29 [\n    i64 0, label %27\n    i64 1, label %27\n  ]\n\n27:                                               ; preds = %21, %21\n  %28 = add nuw nsw i32 %23, 1\n  %29 = icmp ugt i32 %28, %18\n  br i1 %29, label %30, label %31, !llvm.loop !11\n\n30:                                               ; preds = %27\n  br label %31\n\n31:                                               ; preds = %21, %30, %15\n  %32 = phi i32 [ %16, %15 ], [ %16, %30 ], [ %28, %21 ]\n  %33 = phi i32 [ %17, %15 ], [ %28, %30 ], [ %23, %21 ]\n  %34 = call i32 @sg_miter_next(ptr noundef nonnull %4) #3\n  %35 = load ptr, ptr %13, align 8, !tbaa !13\n  %36 = load i32, ptr %4, align 8, !tbaa !14\n  %37 = icmp eq ptr %35, %36\n  br i1 %37, label %34, label %15, !llvm.loop !16\n\n38:                                               ; preds = %3\n  %39 = phi i32 [ %5, %3 ], [ 0, %31 ]\n  %40 = phi i32 [ 0, %3 ], [ %33, %31 ]\n  %41 = phi i32 [ 0, %3 ], [ %32, %31 ]\n  %42 = sub nsw i32 %1, %39\n  %43 = add i32 %42, %40\n  %44 = call i32 @sg_miter_stop(ptr noundef nonnull %4) #3\n  %45 = add i32 %43, %41\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret i32 %45\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sg_nents_for_len(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_start(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_next(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_stop(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !15, i64 8}\n!14 = !{!\"sg_mapping_iter\", !6, i64 0, !15, i64 8}\n!15 = !{!\"any pointer\", !7, i64 0}\n!16 = distinct !{!16, !12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sg_mapping_iter = type { i32, ptr }\n\n@SG_MITER_FROM_SG = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @caam_rsa_count_leading_zeros], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @caam_rsa_count_leading_zeros(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.sg_mapping_iter, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i32 @sg_nents_for_len(ptr noundef %0, i32 noundef %1) #3\n  %6 = icmp slt i32 %5, 0\n  br i1 %6, label %38, label %7\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @SG_MITER_FROM_SG, align 4, !tbaa !5\n  %9 = or i32 %8, %2\n  %10 = call i32 @sg_miter_start(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %5, i32 noundef %9) #3\n  %11 = icmp eq i32 %1, 0\n  br i1 %11, label %34, label %12\n\n12:                                               ; preds = %7\n  %13 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  %14 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  %15 = icmp eq i32 %1, %5\n  br label %16\n\n16:                                               ; preds = %12, %31\n  %17 = phi i32 [ %1, %12 ], [ %32, %31 ]\n  %18 = phi i32 [ 0, %12 ], [ %33, %31 ]\n  %19 = phi i32 [ %5, %12 ], [ %30, %31 ]\n  %20 = phi i32 [ %18, %12 ], [ %29, %31 ]\n  %21 = icmp eq i32 %20, 0\n  br i1 %21, label %31, label %22\n\n22:                                               ; preds = %16, %27\n  %23 = phi i32 [ %28, %27 ], [ %20, %16 ]\n  %24 = phi i64 [ %25, %27 ], [ 0, %16 ]\n  %25 = add nuw nsw i64 %24, 1\n  %26 = getelementptr inbounds i64, ptr %13, i64 %25\n  %27 = load i64, ptr %26, align 8, !tbaa !9\n  switch i64 %27, label %28 [\n    i64 0, label %31\n    i64 1, label %31\n  ]\n\n28:                                               ; preds = %22\n  %29 = trunc i64 %25 to i32\n  %30 = sub i32 %19, %29\n  %31 = icmp eq i32 %30, 0\n  br i1 %31, label %34, label %16, !llvm.loop !11\n\n32:                                               ; preds = %34, %28\n  %33 = phi i32 [ %29, %28 ], [ 0, %34 ]\n  %34 = phi i32 [ 0, %28 ], [ %17, %34 ]\n  store i32 %33, ptr %14, align 8, !tbaa !13\n  %35 = call i32 @sg_miter_stop(ptr noundef nonnull %4) #3\n  %36 = sub i32 %1, %34\n  %37 = add i32 %36, %33\n  br label %38\n\n38:                                               ; preds = %3, %32\n  %39 = phi i32 [ %37, %32 ], [ %5, %3 ]\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret i32 %39\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sg_nents_for_len(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_start(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_stop(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !6, i64 8}\n!14 = !{!\"sg_mapping_iter\", !6, i64 0, !15, i64 8}\n!15 = !{!\"any pointer\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sg_mapping_iter = type { i32, ptr }\n\n@SG_MITER_FROM_SG = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @caam_rsa_count_leading_zeros], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @caam_rsa_count_leading_zeros(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.sg_mapping_iter, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i32 @sg_nents_for_len(ptr noundef %0, i32 noundef %1) #3\n  %6 = icmp slt i32 %5, 0\n  br i1 %6, label %39, label %7\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @SG_MITER_FROM_SG, align 4, !tbaa !5\n  %9 = or i32 %8, %2\n  %10 = call i32 @sg_miter_start(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %5, i32 noundef %9) #3\n  %11 = icmp eq i32 %1, 0\n  br i1 %11, label %35, label %12\n\n12:                                               ; preds = %7\n  %13 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  %14 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  %15 = icmp eq i32 %1, %5\n  br label %16\n\n16:                                               ; preds = %12, %32\n  %17 = phi i32 [ %1, %12 ], [ %33, %32 ]\n  %18 = phi i32 [ 0, %12 ], [ %34, %32 ]\n  %19 = phi i32 [ %5, %12 ], [ %30, %32 ]\n  %20 = phi i32 [ 0, %12 ], [ %31, %32 ]\n  %21 = icmp eq i32 %20, 0\n  br i1 %21, label %32, label %22\n\n22:                                               ; preds = %16, %27\n  %23 = phi i32 [ %28, %27 ], [ %20, %16 ]\n  %24 = phi i64 [ %29, %27 ], [ 0, %16 ]\n  %25 = load i64, ptr %13, align 8, !tbaa !9\n  %26 = add nsw i64 %25, %24\n  %27 = load i64, ptr %26, align 8, !tbaa !12\n  switch i64 %27, label %28 [\n  i64 0, label %32\n  ]\n\n28:                                               ; preds = %22\n  %29 = add nuw i64 %24, 1\n  %30 = add i32 %19, -1\n  %31 = icmp ugt i32 %30, %23\n  br i1 %31, label %22, label %35, !llvm.loop !14\n\n32:                                               ; preds = %22, %16\n  %33 = phi i32 [ %17, %16 ], [ %19, %22 ]\n  %34 = phi i32 [ %18, %16 ], [ %23, %22 ]\n  br label %35\n\n35:                                               ; preds = %28, %32, %7\n  %36 = phi i32 [ 0, %7 ], [ %34, %32 ], [ %33, %28 ]\n  %37 = phi i32 [ 0, %7 ], [ %34, %32 ], [ %18, %28 ]\n  %38 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  store i32 %37, ptr %38, align 8, !tbaa !9\n  %39 = call i32 @sg_miter_stop(ptr noundef nonnull %4) #3\n  %40 = sub i32 %1, %36\n  %41 = add i32 %40, %37\n  br label %42\n\n42:                                               ; preds = %35, %42\n  %43 = phi i32 [ %41, %35 ], [ %44, %42 ]\n  ret i32 %43\n\n44 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sg_nents_for_len(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_start(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_stop(ptr noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"sg_mapping_iter\", !6, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"long\", !7, i64 0}\n!14 = distinct !{!14, !15}\n!15 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/crypto/caam/extr_caampkc.c_caam_rsa_count_leading_zeros.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sg_mapping_iter = type { i32, i32, ptr }\n\n@SG_MITER_FROM_SG = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @caam_rsa_count_leading_zeros], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @caam_rsa_count_leading_zeros(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.sg_mapping_iter, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i32 @sg_nents_for_len(ptr noundef %0, i32 noundef %1) #3\n  %6 = icmp slt i32 %5, 0\n  br i1 %6, label %47, label %7\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @SG_MITER_FROM_SG, align 4, !tbaa !5\n  %9 = or i32 %8, %2\n  %10 = call i32 @sg_miter_start(ptr noundef nonnull %4, ptr noundef %0, i32 noundef %5, i32 noundef %9) #3\n  %11 = icmp eq i32 %1, 0\n  br i1 %11, label %40, label %12\n\n12:                                               ; preds = %7\n  %13 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 2\n  br label %14\n\n14:                                               ; preds = %12, %33\n  %15 = phi ptr [ undef, %12 ], [ %36, %33 ]\n  %16 = phi i32 [ 0, %12 ], [ %37, %33 ]\n  %17 = phi i32 [ %1, %12 ], [ %38, %33 ]\n  %18 = icmp eq i32 %16, 0\n  br i1 %18, label %33, label %19\n\n19:                                               ; preds = %14, %27\n  %20 = phi ptr [ %30, %27 ], [ %15, %14 ]\n  %21 = phi i32 [ %29, %27 ], [ %16, %14 ]\n  %22 = phi i32 [ %28, %27 ], [ 0, %14 ]\n  %23 = load i64, ptr %20, align 8, !tbaa !9\n  %24 = icmp eq i64 %23, 0\n  %25 = icmp ugt i32 %17, %22\n  %26 = select i1 %24, i1 %25, i1 false\n  br i1 %26, label %27, label %32\n\n27:                                               ; preds = %19\n  %28 = add nuw nsw i32 %22, 1\n  %29 = add i32 %21, -1\n  %30 = getelementptr inbounds i64, ptr %20, i64 1\n  %31 = icmp eq i32 %29, 0\n  br i1 %31, label %33, label %19, !llvm.loop !11\n\n32:                                               ; preds = %19\n  br i1 %24, label %33, label %40\n\n33:                                               ; preds = %27, %14, %32\n  %34 = phi i32 [ %22, %32 ], [ 0, %14 ], [ %16, %27 ]\n  %35 = call i32 @sg_miter_next(ptr noundef nonnull %4) #3\n  %36 = load ptr, ptr %13, align 8, !tbaa !13\n  %37 = load i32, ptr %4, align 8, !tbaa !16\n  %38 = sub i32 %17, %34\n  %39 = icmp eq i32 %38, 0\n  br i1 %39, label %40, label %14, !llvm.loop !17\n\n40:                                               ; preds = %33, %32, %7\n  %41 = phi i32 [ 0, %7 ], [ %17, %32 ], [ 0, %33 ]\n  %42 = phi i32 [ 0, %7 ], [ %22, %32 ], [ 0, %33 ]\n  %43 = getelementptr inbounds %struct.sg_mapping_iter, ptr %4, i64 0, i32 1\n  store i32 %42, ptr %43, align 4, !tbaa !18\n  %44 = call i32 @sg_miter_stop(ptr noundef nonnull %4) #3\n  %45 = sub i32 %1, %41\n  %46 = add i32 %45, %42\n  br label %47\n\n47:                                               ; preds = %3, %40\n  %48 = phi i32 [ %46, %40 ], [ %5, %3 ]\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret i32 %48\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sg_nents_for_len(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_start(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_next(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @sg_miter_stop(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !15, i64 8}\n!14 = !{!\"sg_mapping_iter\", !6, i64 0, !6, i64 4, !15, i64 8}\n!15 = !{!\"any pointer\", !7, i64 0}\n!16 = !{!14, !6, i64 0}\n!17 = distinct !{!17, !12}\n!18 = !{!14, !6, i64 4}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %42\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %42\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %34, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %21\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %42, label %34\n\n34:                                               ; preds = %30, %27, %19\n  %35 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %36 = phi i32 [ %21, %19 ], [ %21, %27 ], [ %20, %30 ]\n  %37 = phi i32 [ %25, %19 ], [ %25, %27 ], [ %25, %30 ]\n  %38 = icmp slt i32 %35, %1\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %34\n  %40 = icmp sgt i32 %37, %2\n  br i1 %40, label %42, label %41\n\n41:                                               ; preds = %39\n  %42 = add nsw i32 %35, -1\n  %43 = add nsw i32 %37, -1\n  %44 = tail call i32 @llvm.smin.i32(i32 %35, i32 %1)\n  %45 = tail call i32 @llvm.smin.i32(i32 %43, i32 %2)\n  %46 = load i32, ptr %14, align 4, !tbaa !15\n  %47 = tail call i32 @SETARG_A(i32 noundef %46, i32 noundef %44) #2\n  %48 = load i32, ptr %14, align 4, !tbaa !15\n  %49 = sub nsw i32 %45, %44\n  %50 = tail call i32 @SETARG_B(i32 noundef %48, i32 noundef %49) #2\n  br label %53\n\n42:                                               ; preds = %34, %39, %30, %8, %3\n  %51 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %52 = add nsw i32 %2, -1\n  tail call void @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %51, i32 noundef %1, i32 noundef %52, i32 noundef 0) #2\n  br label %53\n\n53:                                               ; preds = %42, %41\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare void @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %42\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %42\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %34, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %21\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %42, label %34\n\n34:                                               ; preds = %30, %27, %19\n  %35 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %36 = phi i32 [ %21, %19 ], [ %21, %27 ], [ %20, %30 ]\n  %37 = phi i32 [ %25, %19 ], [ %25, %27 ], [ %25, %30 ]\n  %38 = icmp slt i32 %35, %1\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %34\n  %40 = icmp sgt i32 %37, %2\n  %41 = select i1 %40, i1 true, i1 %38\n  br i1 %41, label %42, label %45\n\n42:                                               ; preds = %34, %39, %30, %8, %3\n  %43 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %43, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %51\n\n45:                                               ; preds = %39\n  %46 = load i32, ptr %14, align 4, !tbaa !15\n  %47 = tail call i32 @SETARG_A(i32 noundef %46, i32 noundef %1) #2\n  %48 = load i32, ptr %14, align 4, !tbaa !15\n  %49 = sub nsw i32 %37, %1\n  %50 = tail call i32 @SETARG_B(i32 noundef %48, i32 noundef %49) #2\n  br label %51\n\n51:                                               ; preds = %45, %42\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %38\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %38\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %35, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, %21\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %38, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %2\n  %32 = icmp slt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %38, label %34\n\n34:                                               ; preds = %30\n  %35 = add nsw i32 %23, %25\n  br label %36\n\n36:                                               ; preds = %34, %36\n  %37 = phi i32 [ %35, %34 ], [ %39, %36 ]\n  br label %40\n\n38:                                               ; preds = %30, %27, %8, %3\n  %39 = add nsw i32 %2, -1\n  %40 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %17, i32 noundef %1, i32 noundef %39) #2\n  br label %45\n\n41:                                               ; preds = %40\n  %42 = add nsw i32 %43, %41\n  %43 = add nsw i32 %43, -1\n  %44 = icmp slt i32 %42, %1\n  br i1 %44, label %40, label %45, !llvm.loop !18\n\n45:                                               ; preds = %41, %38\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %37\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %31, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %26\n  br label %31\n\n31:                                               ; preds = %30, %26, %18\n  %32 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %20, %30 ]\n  %33 = phi i32 [ %24, %18 ], [ %24, %26 ], [ %20, %30 ]\n  %34 = icmp slt i32 %22, %1\n  %35 = icmp sgt i32 %22, %2\n  %36 = select i1 %34, i1 true, i1 %35\n  br i1 %36, label %37, label %39\n\n37:                                               ; preds = %31, %8, %3\n  %38 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %45\n\n39:                                               ; preds = %31\n  %40 = load i32, ptr %13, align 4, !tbaa !15\n  %41 = tail call i32 @llvm.smin.i32(i32 %22, i32 %1)\n  %42 = tail call i32 @llvm.smin.i32(i32 %33, i32 %20)\n  %43 = tail call i32 @SETARG_A(i32 noundef %40, i32 noundef %41) #2\n  %44 = tail call i32 @SETARG_B(i32 noundef %40, i32 noundef %42) #2\n  br label %47\n\n45:                                               ; preds = %37, %47\n  %46 = phi i64 [ %48, %47 ], [ %38, %37 ]\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %46, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %49\n\n48 = phi i64 [ %46, %47 ], [ %15, %37 ]\n  br label %49\n\n49:                                               ; preds = %48, %45\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/RetroArch/deps/lua/src/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_libunbound.c_ub_resolve_event.ll\"\n\t.globl\tub_resolve_event                # -- Begin function ub_resolve_event\n\t.p2align\t4, 0x90\n\t.type\tub_resolve_event,@function\nub_resolve_event:                       # @ub_resolve_event\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%r9d, 20(%rsp)                  # 4-byte Spill\n\tmovq\t%r8, %r14\n\tmovl\t%ecx, 16(%rsp)                  # 4-byte Spill\n\tmovl\t%edx, %r13d\n\tmovq\t%rsi, %rbp\n\tmovq\t%rdi, %rbx\n\tmovq\t80(%rsp), %rax\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\t$0, (%rax)\n.LBB0_2:\n\tleaq\t12(%rbx), %r12\n\tmovq\t%r12, %rdi\n\tcallq\tlock_basic_lock@PLT\n\tcmpl\t$0, 16(%rbx)\n\tje\t.LBB0_3\n.LBB0_5:\n\tmovq\t%r12, %rdi\n\tcallq\tlock_basic_unlock@PLT\n\tmovq\t(%rbx), %rax\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_8\n# %bb.6:\n\tmovl\t8(%rbx), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tlibworker_create_event@PLT\n\tmovq\t%rax, (%rbx)\n\ttestq\t%rax, %rax\n\tje\t.LBB0_7\n.LBB0_8:\n\tmovl\t(%rax), %edi\n\tcallq\tub_comm_base_now@PLT\n\tmovq\t%r14, (%rsp)\n\tmovq\t%rbx, %rdi\n\tmovq\t%rbp, %rsi\n\tmovl\t%r13d, %edx\n\tmovl\t16(%rsp), %ecx                  # 4-byte Reload\n\txorl\t%r8d, %r8d\n\tmovl\t20(%rsp), %r9d                  # 4-byte Reload\n\tcallq\tcontext_new@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_9\n# %bb.10:\n\tmovq\t%rbx, %rdi\n\tmovq\t%rax, %rsi\n\tmovq\t80(%rsp), %rdx\n\tcallq\tlibworker_attach_mesh@PLT\n\tmovl\t%eax, %r15d\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_12\n# %bb.11:\n\tmovl\tUB_NOERROR(%rip), %r15d\n\tjmp\t.LBB0_12\n.LBB0_3:\n\tmovq\t%rbx, %rdi\n\tcallq\tcontext_finalize@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_5\n# %bb.4:\n\tmovl\t%eax, %r15d\n\tmovq\t%r12, %rdi\n\tcallq\tlock_basic_unlock@PLT\n\tjmp\t.LBB0_12\n.LBB0_9:\n\tmovl\tUB_NOMEM(%rip), %r15d\n\tjmp\t.LBB0_12\n.LBB0_7:\n\tmovl\tUB_INITFAIL(%rip), %r15d\n.LBB0_12:\n\tmovl\t%r15d, %eax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tub_resolve_event, .Lfunc_end0-ub_resolve_event\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tUB_INITFAIL,@object             # @UB_INITFAIL\n\t.bss\n\t.globl\tUB_INITFAIL\n\t.p2align\t2\nUB_INITFAIL:\n\t.long\t0                               # 0x0\n\t.size\tUB_INITFAIL, 4\n\n\t.type\tUB_NOMEM,@object                # @UB_NOMEM\n\t.globl\tUB_NOMEM\n\t.p2align\t2\nUB_NOMEM:\n\t.long\t0                               # 0x0\n\t.size\tUB_NOMEM, 4\n\n\t.type\tUB_NOERROR,@object              # @UB_NOERROR\n\t.globl\tUB_NOERROR\n\t.p2align\t2\nUB_NOERROR:\n\t.long\t0                               # 0x0\n\t.size\tUB_NOERROR, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, i32, i32, i32 }\n\n@UB_INITFAIL = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOERROR = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ub_resolve_event(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, ptr noundef %6) local_unnamed_addr #0 {\n  %8 = icmp eq ptr %6, null\n  br i1 %8, label %10, label %9\n\n9:                                                ; preds = %7\n  store i32 0, ptr %6, align 4, !tbaa !5\n  br label %10\n\n10:                                               ; preds = %9, %7\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 3\n  %12 = tail call i32 @lock_basic_lock(ptr noundef nonnull %11) #2\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %14 = load i32, ptr %13, align 8, !tbaa !9\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %16, label %23\n\n16:                                               ; preds = %10\n  %17 = tail call i32 @context_finalize(ptr noundef nonnull %0) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %21 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %37\n\n22:                                               ; preds = %23\n  %23 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %24 = load ptr, ptr %0, align 8, !tbaa !12\n  %25 = icmp eq ptr %24, null\n  br i1 %25, label %26, label %33\n\n26:                                               ; preds = %22\n  %27 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %28 = load i32, ptr %27, align 8, !tbaa !13\n  %29 = tail call ptr @libworker_create_event(ptr noundef nonnull %0, i32 noundef %28) #2\n  store ptr %29, ptr %0, align 8, !tbaa !12\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %26\n  %32 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %37\n\n33:                                               ; preds = %26, %22\n  %34 = phi ptr [ %24, %22 ], [ %29, %26 ]\n  %35 = load i32, ptr %34, align 4, !tbaa !14\n  %36 = tail call i32 @ub_comm_base_now(i32 noundef %35) #2\n  tail call void @context_new(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef null, i32 noundef %5, ptr noundef %4) #2\n  %37 = tail call i32 @context_attach_mesh(ptr noundef nonnull %0, ptr noundef nonnull %34, ptr noundef %6) #2\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %39, label %41\n\n39:                                               ; preds = %33\n  %40 = load i32, ptr @UB_NOERROR, align 4, !tbaa !5\n  br label %41\n\n41:                                               ; preds = %33, %39\n  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]\n  ret i32 %42\n}\n\ndeclare i32 @lock_basic_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @context_finalize(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @lock_basic_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @libworker_create_event(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ub_comm_base_now(i32 noundef) local_unnamed_addr #1\n\ndeclare void @context_new(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @context_attach_mesh(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"TYPE_10__\", !11, i64 0, !6, i64 8, !6, i64 12, !6, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_9__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, i32, i32, i32 }\n\n@UB_INITFAIL = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOERROR = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ub_resolve_event(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, ptr noundef %6) local_unnamed_addr #0 {\n  %8 = icmp eq ptr %6, null\n  br i1 %8, label %10, label %9\n\n9:                                                ; preds = %7\n  store i32 0, ptr %6, align 4, !tbaa !5\n  br label %10\n\n10:                                               ; preds = %9, %7\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 3\n  %12 = tail call i32 @lock_basic_lock(ptr noundef nonnull %11) #2\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %14 = load i32, ptr %13, align 8, !tbaa !9\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %16, label %23\n\n16:                                               ; preds = %10\n  %17 = tail call i32 @context_finalize(ptr noundef nonnull %0) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %21 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %37\n\n22:                                               ; preds = %23\n  %23 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %24 = load ptr, ptr %0, align 8, !tbaa !12\n  %25 = icmp eq ptr %24, null\n  br i1 %25, label %26, label %34\n\n26:                                               ; preds = %22\n  %27 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %28 = load i32, ptr %27, align 8, !tbaa !13\n  %29 = tail call ptr @libworker_create_event(ptr noundef nonnull %0, i32 noundef %28) #2\n  store ptr %29, ptr %0, align 8, !tbaa !12\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %34\n\n31:                                               ; preds = %26\n  %32 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  %33 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  br label %37\n\n34:                                               ; preds = %26, %22\n  %35 = load i32, ptr %29, align 4, !tbaa !14\n  %36 = tail call i32 @ub_comm_base_now(i32 noundef %35) #2\n  tail call void @context_new(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef null, i32 noundef %5, ptr noundef %4) #2\n  %37 = tail call i32 @libworker_attach_mesh(ptr noundef nonnull %0, ptr noundef nonnull %29, ptr noundef %6) #2\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %39, label %41\n\n39:                                               ; preds = %34\n  %40 = load i32, ptr @UB_NOERROR, align 4, !tbaa !5\n  br label %41\n\n41:                                               ; preds = %34, %39\n  %42 = phi i32 [ %40, %39 ], [ %37, %34 ]\n  ret i32 %42\n}\n\ndeclare i32 @lock_basic_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @context_finalize(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @lock_basic_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @libworker_create_event(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ub_comm_base_now(i32 noundef) local_unnamed_addr #1\n\ndeclare void @context_new(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @libworker_attach_mesh(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"TYPE_10__\", !11, i64 0, !6, i64 8, !6, i64 12, !6, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_11__\", !6, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, i32, i32, i32 }\n\n@UB_INITFAIL = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOERROR = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ub_resolve_event(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, ptr noundef %6) local_unnamed_addr #0 {\n  %8 = icmp eq ptr %6, null\n  br i1 %8, label %10, label %9\n\n9:                                                ; preds = %7\n  store i32 0, ptr %6, align 4, !tbaa !5\n  br label %10\n\n10:                                               ; preds = %9, %7\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 3\n  %12 = tail call i32 @lock_basic_lock(ptr noundef nonnull %11) #2\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %14 = load i32, ptr %13, align 8, !tbaa !9\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %16, label %23\n\n16:                                               ; preds = %10\n  %17 = tail call i32 @context_finalize(ptr noundef nonnull %0) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %21 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %37\n\n22:                                               ; preds = %23\n  %23 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %24 = load ptr, ptr %0, align 8, !tbaa !12\n  %25 = icmp eq ptr %24, null\n  br i1 %25, label %26, label %33\n\n26:                                               ; preds = %22\n  %27 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %28 = load i32, ptr %27, align 8, !tbaa !13\n  %29 = tail call ptr @libworker_create_event(ptr noundef nonnull %0, i32 noundef %28) #2\n  store ptr %29, ptr %0, align 8, !tbaa !12\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %26\n  %32 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %37\n\n33:                                               ; preds = %26, %22\n  %34 = phi ptr [ %24, %22 ], [ %29, %26 ]\n  %35 = load i32, ptr %34, align 4, !tbaa !14\n  %36 = tail call i32 @ub_comm_base_now(i32 noundef %35) #2\n  tail call void @context_new(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef null, i32 noundef %5, ptr noundef %4) #2\n  %37 = tail call i32 @context_attach_mesh(ptr noundef nonnull %0, ptr noundef nonnull %34, ptr noundef %6) #2\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %39, label %41\n\n39:                                               ; preds = %33\n  %40 = load i32, ptr @UB_NOERROR, align 4, !tbaa !5\n  br label %41\n\n41:                                               ; preds = %33, %39\n  %42 = phi i32 [ %40, %39 ], [ %37, %33 ]\n  ret i32 %42\n}\n\ndeclare i32 @lock_basic_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @context_finalize(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @lock_basic_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @libworker_create_event(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ub_comm_base_now(i32 noundef) local_unnamed_addr #1\n\ndeclare void @context_new(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @context_attach_mesh(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"TYPE_10__\", !11, i64 0, !6, i64 8, !6, i64 12, !6, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_9__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, i32, i32, i32 }\n\n@UB_INITFAIL = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOERROR = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ub_resolve_event(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, ptr noundef %6) local_unnamed_addr #0 {\n  %8 = icmp eq ptr %6, null\n  br i1 %8, label %10, label %9\n\n9:                                                ; preds = %7\n  store i32 0, ptr %6, align 4, !tbaa !5\n  br label %10\n\n10:                                               ; preds = %9, %7\n  %11 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 3\n  %12 = tail call i32 @lock_basic_lock(ptr noundef nonnull %11) #2\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %14 = load i32, ptr %13, align 8, !tbaa !9\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %16, label %23\n\n16:                                               ; preds = %10\n  %17 = tail call i32 @context_finalize(ptr noundef nonnull %0) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %21 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %36\n\n22:                                               ; preds = %23\n  %23 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %24 = load ptr, ptr %0, align 8, !tbaa !12\n  %25 = icmp eq ptr %24, null\n  br i1 %25, label %26, label %33\n\n26:                                               ; preds = %22\n  %27 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %28 = load i32, ptr %27, align 8, !tbaa !13\n  %29 = tail call ptr @libworker_create_event(ptr noundef nonnull %0, i32 noundef %28) #2\n  store ptr %29, ptr %0, align 8, !tbaa !12\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %26\n  %32 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %36\n\n33:                                               ; preds = %26, %22\n  %34 = phi ptr [ %24, %22 ], [ %29, %26 ]\n  %35 = load i32, ptr %34, align 4, !tbaa !14\n  br label %36\n\n36:                                               ; preds = %33, %31, %19\n  %37 = phi i32 [ %21, %19 ], [ %32, %31 ], [ %35, %33 ]\n  ret i32 %37\n}\n\ndeclare i32 @lock_basic_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @context_finalize(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @lock_basic_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @libworker_create_event(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"TYPE_10__\", !11, i64 0, !6, i64 8, !6, i64 12, !6, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_9__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/unbound/libunbound/extr_libunbound.c_ub_resolve_event.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ub_ctx = type { ptr, i32, i32, i32 }\n\n@UB_INITFAIL = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@UB_NOERROR = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @ub_resolve_event(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, ptr noundef %6) local_unnamed_addr #0 {\n  %8 = icmp eq ptr %6, null\n  br i1 %8, label %10, label %9\n\n9:                                                ; preds = %7\n  store i32 0, ptr %6, align 4, !tbaa !5\n  br label %10\n\n10:                                               ; preds = %9, %7\n  %11 = getelementptr inbounds %struct.ub_ctx, ptr %0, i64 0, i32 2\n  %12 = tail call i32 @lock_basic_lock(ptr noundef nonnull %11) #2\n  %13 = getelementptr inbounds %struct.ub_ctx, ptr %0, i64 0, i32 3\n  %14 = load i32, ptr %13, align 8, !tbaa !9\n  %15 = icmp eq i32 %14, 0\n  br i1 %15, label %16, label %21\n\n16:                                               ; preds = %10\n  %17 = tail call i32 @context_finalize(ptr noundef nonnull %0) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  br label %45\n\n21:                                               ; preds = %16, %10\n  %22 = tail call i32 @lock_basic_unlock(ptr noundef nonnull %11) #2\n  %23 = load ptr, ptr %0, align 8, !tbaa !12\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %25, label %32\n\n25:                                               ; preds = %21\n  %26 = getelementptr inbounds %struct.ub_ctx, ptr %0, i64 0, i32 1\n  %27 = load i32, ptr %26, align 8, !tbaa !13\n  %28 = tail call ptr @libworker_create_event(ptr noundef nonnull %0, i32 noundef %27) #2\n  store ptr %28, ptr %0, align 8, !tbaa !12\n  %29 = icmp eq ptr %28, null\n  br i1 %29, label %30, label %32\n\n30:                                               ; preds = %25\n  %31 = load i32, ptr @UB_INITFAIL, align 4, !tbaa !5\n  br label %45\n\n32:                                               ; preds = %25, %21\n  %33 = phi ptr [ %28, %25 ], [ %23, %21 ]\n  %34 = load i32, ptr %33, align 4, !tbaa !14\n  %35 = tail call i32 @ub_comm_base_now(i32 noundef %34) #2\n  %36 = tail call ptr @context_new(ptr noundef nonnull %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef null, i32 noundef %5, ptr noundef %4) #2\n  %37 = icmp eq ptr %36, null\n  br i1 %37, label %38, label %40\n\n38:                                               ; preds = %32\n  %39 = load i32, ptr @UB_NOMEM, align 4, !tbaa !5\n  br label %45\n\n40:                                               ; preds = %32\n  %41 = tail call i32 @libworker_attach_mesh(ptr noundef nonnull %0, ptr noundef nonnull %36, ptr noundef %6) #2\n  %42 = icmp eq i32 %41, 0\n  %43 = load i32, ptr @UB_NOERROR, align 4\n  %44 = select i1 %42, i32 %43, i32 %41\n  br label %45\n\n45:                                               ; preds = %40, %38, %30, %19\n  %46 = phi i32 [ %39, %38 ], [ %31, %30 ], [ %17, %19 ], [ %44, %40 ]\n  ret i32 %46\n}\n\ndeclare i32 @lock_basic_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @context_finalize(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @lock_basic_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @libworker_create_event(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @ub_comm_base_now(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @context_new(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @libworker_attach_mesh(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 16}\n!10 = !{!\"ub_ctx\", !11, i64 0, !6, i64 8, !6, i64 12, !6, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 0}\n!13 = !{!10, !6, i64 8}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_2__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mkcasfw.c_parse_opt_image.ll\"\n\t.globl\tparse_opt_image                 # -- Begin function parse_opt_image\n\t.p2align\t4, 0x90\n\t.type\tparse_opt_image,@function\nparse_opt_image:                        # @parse_opt_image\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%rbx\n\tpushq\t%rax\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\tmovl\t%edi, %r14d\n\tmovl\tMAX_ARG_LEN(%rip), %ecx\n\tmovq\t%rsp, %rax\n\taddq\t$15, %rcx\n\tandq\t$-16, %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, %rsp\n\tmovl\tMAX_ARG_COUNT(%rip), %ecx\n\tmovq\t%rsp, %rbx\n\tleaq\t15(,%rcx,8), %rcx\n\tandq\t$-16, %rcx\n\tsubq\t%rcx, %rbx\n\tmovq\t%rbx, %rsp\n\tcmpl\t$70, %edi\n\tje\t.LBB0_7\n# %bb.1:\n\tcmpl\t$75, %r14d\n\tjne\t.LBB0_11\n# %bb.2:\n\tmovl\t$.L.str, %edi\n\tcmpq\t$0, kernel_image(%rip)\n\tjne\t.LBB0_9\n# %bb.3:\n\tmovl\t$kernel_image, %r15d\n\tjmp\t.LBB0_4\n.LBB0_7:\n\tmovl\t$.L.str.1, %edi\n\tcmpq\t$0, fs_image(%rip)\n\tje\t.LBB0_8\n.LBB0_9:\n\tcallq\tWARN@PLT\n\tjmp\t.LBB0_11\n.LBB0_8:\n\tmovl\t$fs_image, %r15d\n.LBB0_4:\n\tmovq\t%rsi, %rdi\n\tmovq\t%rax, %rsi\n\tmovq\t%rbx, %rdx\n\tcallq\tparse_arg@PLT\n\tmovq\t(%rbx), %rbx\n\tmovq\t%rbx, %rdi\n\tcallq\tis_empty_arg@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_5\n# %bb.10:\n\tmovl\t$.L.str.3, %edi\n\tmovl\t%r14d, %esi\n\txorl\t%eax, %eax\n\tcallq\tERR@PLT\n.LBB0_11:\n\tmovl\tERR_FATAL(%rip), %eax\n.LBB0_12:\n\tleaq\t-24(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.LBB0_5:\n\t.cfi_def_cfa %rbp, 16\n\tmovq\t%rbx, %rdi\n\tcallq\tstrdup@PLT\n\tmovq\t%rax, %rcx\n\tmovq\t%rax, (%r15)\n\txorl\t%eax, %eax\n\ttestq\t%rcx, %rcx\n\tjne\t.LBB0_12\n# %bb.6:\n\tmovl\t$.L.str.2, %edi\n\txorl\t%eax, %eax\n\tcallq\tERR@PLT\n\tjmp\t.LBB0_11\n.Lfunc_end0:\n\t.size\tparse_opt_image, .Lfunc_end0-parse_opt_image\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMAX_ARG_LEN,@object             # @MAX_ARG_LEN\n\t.bss\n\t.globl\tMAX_ARG_LEN\n\t.p2align\t2\nMAX_ARG_LEN:\n\t.long\t0                               # 0x0\n\t.size\tMAX_ARG_LEN, 4\n\n\t.type\tMAX_ARG_COUNT,@object           # @MAX_ARG_COUNT\n\t.globl\tMAX_ARG_COUNT\n\t.p2align\t2\nMAX_ARG_COUNT:\n\t.long\t0                               # 0x0\n\t.size\tMAX_ARG_COUNT, 4\n\n\t.type\tkernel_image,@object            # @kernel_image\n\t.globl\tkernel_image\n\t.p2align\t3\nkernel_image:\n\t.zero\t8\n\t.size\tkernel_image, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"only one kernel option allowed\"\n\t.size\t.L.str, 31\n\n\t.type\tfs_image,@object                # @fs_image\n\t.bss\n\t.globl\tfs_image\n\t.p2align\t3\nfs_image:\n\t.zero\t8\n\t.size\tfs_image, 8\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"only one fs option allowed\"\n\t.size\t.L.str.1, 27\n\n\t.type\tERR_FATAL,@object               # @ERR_FATAL\n\t.bss\n\t.globl\tERR_FATAL\n\t.p2align\t2\nERR_FATAL:\n\t.long\t0                               # 0x0\n\t.size\tERR_FATAL, 4\n\n\t.type\t.L.str.2,@object                # @.str.2\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.2:\n\t.asciz\t\"not enough memory\"\n\t.size\t.L.str.2, 18\n\n\t.type\t.L.str.3,@object                # @.str.3\n.L.str.3:\n\t.asciz\t\"no file specified for option %c\"\n\t.size\t.L.str.3, 32\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %31 [\n    i32 75, label %9\n    i32 70, label %21\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %31\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %31\n\n21:                                               ; preds = %2\n  %22 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %31\n\n26:                                               ; preds = %21\n  %27 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %28 = load ptr, ptr %8, align 16, !tbaa !12\n  %29 = tail call ptr @strdup(ptr noundef %28)\n  store ptr %29, ptr @fs_image, align 8, !tbaa !9\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %2, %26, %24, %19, %12\n  %32 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %33\n\n33:                                               ; preds = %26, %31\n  %34 = phi i32 [ %32, %31 ], [ 0, %26 ]\n  ret i32 %34\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn allockind(\"alloc,uninitialized\") allocsize(0)\ndeclare noalias noundef ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn allockind(\"alloc,uninitialized\") allocsize(0) \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %30 [\n    i32 75, label %9\n    i32 70, label %23\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %30\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %30\n\n21:                                               ; preds = %14\n  %22 = tail call ptr @strdup(ptr noundef %16)\n  store ptr %22, ptr @kernel_image, align 8, !tbaa !9\n  br label %26\n\n23:                                               ; preds = %2\n  %24 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %25 = icmp eq ptr %24, null\n  br i1 %25, label %28, label %26\n\n26:                                               ; preds = %23, %21\n  %27 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %30\n\n28:                                               ; preds = %23\n  store ptr %16, ptr @fs_image, align 8, !tbaa !9\n  br label %30\n\n29:                                               ; preds = %28\n  %30 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %32\n\n31:                                               ; preds = %29\n  %32 = phi i32 [ %30, %29 ], [ 0, %28 ]\n  ret i32 %32\n\n30:                                               ; preds = %2, %26, %28, %19, %12\n  %33 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %31\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %30 [\n    i32 75, label %9\n    i32 70, label %21\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %30\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %30\n\n21:                                               ; preds = %2\n  %22 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %30\n\n26:                                               ; preds = %21\n  %27 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %28 = load ptr, ptr %8, align 16, !tbaa !12\n  %29 = tail call ptr @strdup(ptr noundef %28)\n  store ptr %29, ptr @fs_image, align 8, !tbaa !9\n  br label %32\n\n30:                                               ; preds = %2, %19, %24, %12\n  %31 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %30, %26\n  %33 = phi i32 [ %31, %30 ], [ 0, %26 ]\n  ret i32 %33\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %30 [\n    i32 75, label %9\n    i32 70, label %21\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %30\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %30\n\n21:                                               ; preds = %2\n  %22 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %30\n\n26:                                               ; preds = %21\n  %27 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %28 = load ptr, ptr %8, align 16, !tbaa !12\n  %29 = tail call ptr @strdup(ptr noundef %28)\n  store ptr %29, ptr @fs_image, align 8, !tbaa !9\n  br label %32\n\n30:                                               ; preds = %2, %19, %24, %12\n  %31 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %30, %26\n  %33 = phi i32 [ %31, %30 ], [ 0, %26 ]\n  ret i32 %33\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/openwrt/tools/firmware-utils/src/extr_mkcasfw.c_parse_opt_image.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.image_desc = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local local_unnamed_addr global %struct.image_desc zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local local_unnamed_addr global %struct.image_desc zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i8 noundef signext %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  %9 = sext i8 %0 to i32\n  switch i32 %9, label %19 [\n    i32 75, label %10\n    i32 70, label %13\n  ]\n\n10:                                               ; preds = %2\n  %11 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %12 = icmp eq ptr %11, null\n  br i1 %12, label %21, label %16\n\n13:                                               ; preds = %2\n  %14 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %21, label %16\n\n16:                                               ; preds = %13, %10\n  %17 = phi ptr [ @.str, %10 ], [ @.str.1, %13 ]\n  %18 = tail call i32 @WARN(ptr noundef nonnull %17) #3\n  br label %19\n\n19:                                               ; preds = %16, %2\n  %20 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %36\n\n21:                                               ; preds = %10, %13\n  %22 = phi ptr [ @kernel_image, %10 ], [ @fs_image, %13 ]\n  %23 = call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #3\n  %24 = load ptr, ptr %8, align 16, !tbaa !12\n  %25 = call i32 @is_empty_arg(ptr noundef %24) #3\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %27, label %33\n\n27:                                               ; preds = %21\n  %28 = call ptr @strdup(ptr noundef %24)\n  store ptr %28, ptr %22, align 8, !tbaa !9\n  %29 = icmp eq ptr %28, null\n  br i1 %29, label %30, label %36\n\n30:                                               ; preds = %27\n  %31 = call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.2) #3\n  %32 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %36\n\n33:                                               ; preds = %21\n  %34 = call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %9) #3\n  %35 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %36\n\n36:                                               ; preds = %27, %33, %30, %19\n  %37 = phi i32 [ %35, %33 ], [ %32, %30 ], [ %20, %19 ], [ 0, %27 ]\n  ret i32 %37\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"image_desc\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sdla.c_sdla_deassoc.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function sdla_deassoc\n\t.type\tsdla_deassoc,@function\nsdla_deassoc:                           # @sdla_deassoc\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\tcallq\tnetdev_priv@PLT\n\tmovq\t%rax, %r15\n\tmovl\tCONFIG_DLCI_MAX(%rip), %eax\n\ttestl\t%eax, %eax\n\tjle\t.LBB0_1\n# %bb.6:\n\tmovq\t16(%r15), %rdx\n\txorl\t%ecx, %ecx\n\t.p2align\t4, 0x90\n.LBB0_7:                                # =>This Inner Loop Header: Depth=1\n\tcmpq\t%rbx, (%rdx,%rcx,8)\n\tje\t.LBB0_2\n# %bb.8:                                #   in Loop: Header=BB0_7 Depth=1\n\tincq\t%rcx\n\tcmpq\t%rcx, %rax\n\tjne\t.LBB0_7\n\tjmp\t.LBB0_9\n.LBB0_1:\n\txorl\t%ecx, %ecx\n.LBB0_2:\n\tcmpl\t%eax, %ecx\n\tjne\t.LBB0_3\n.LBB0_9:\n\txorl\t%ebp, %ebp\n\tsubl\tENODEV(%rip), %ebp\n.LBB0_11:\n\tmovl\t%ebp, %eax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_3:\n\t.cfi_def_cfa_offset 64\n\tmovq\t16(%r15), %rax\n\tmovl\t%ecx, %ecx\n\tmovq\t$0, (%rax,%rcx,8)\n\tmovq\t8(%r15), %rax\n\tmovq\t$0, (%rax,%rcx,8)\n\tmovq\t%r14, %rdi\n\tcallq\tnetif_running@PLT\n\txorl\t%ebp, %ebp\n\ttestq\t%rax, %rax\n\tje\t.LBB0_11\n# %bb.4:\n\tmovq\t(%r15), %rax\n\tcmpq\tFRAD_STATION_CPE(%rip), %rax\n\tjne\t.LBB0_10\n# %bb.5:\n\tmovq\t%r14, %rdi\n\tcallq\tsdla_reconfig@PLT\n\tjmp\t.LBB0_11\n.LBB0_10:\n\tmovl\tSDLA_DELETE_DLCI(%rip), %esi\n\tmovl\t(%rbx), %r8d\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, (%rsp)\n\txorl\t%ebp, %ebp\n\tmovq\t%r14, %rdi\n\txorl\t%edx, %edx\n\txorl\t%ecx, %ecx\n\tmovl\t$2, %r9d\n\tcallq\tsdla_cmd@PLT\n\tjmp\t.LBB0_11\n.Lfunc_end0:\n\t.size\tsdla_deassoc, .Lfunc_end0-sdla_deassoc\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCONFIG_DLCI_MAX,@object         # @CONFIG_DLCI_MAX\n\t.bss\n\t.globl\tCONFIG_DLCI_MAX\n\t.p2align\t2\nCONFIG_DLCI_MAX:\n\t.long\t0                               # 0x0\n\t.size\tCONFIG_DLCI_MAX, 4\n\n\t.type\tENODEV,@object                  # @ENODEV\n\t.globl\tENODEV\n\t.p2align\t2\nENODEV:\n\t.long\t0                               # 0x0\n\t.size\tENODEV, 4\n\n\t.type\tFRAD_STATION_CPE,@object        # @FRAD_STATION_CPE\n\t.globl\tFRAD_STATION_CPE\n\t.p2align\t3\nFRAD_STATION_CPE:\n\t.quad\t0                               # 0x0\n\t.size\tFRAD_STATION_CPE, 8\n\n\t.type\tSDLA_DELETE_DLCI,@object        # @SDLA_DELETE_DLCI\n\t.globl\tSDLA_DELETE_DLCI\n\t.p2align\t2\nSDLA_DELETE_DLCI:\n\t.long\t0                               # 0x0\n\t.size\tSDLA_DELETE_DLCI, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %18\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %10\n\n10:                                               ; preds = %6, %15\n  %11 = phi i64 [ 0, %6 ], [ %16, %15 ]\n  %12 = getelementptr inbounds ptr, ptr %8, i64 %11\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %18, label %15\n\n15:                                               ; preds = %10\n  %16 = add nuw nsw i64 %11, 1\n  %17 = icmp eq i64 %16, %9\n  br i1 %17, label %29, label %10, !llvm.loop !14\n\n18:                                               ; preds = %10, %2\n  %19 = phi i32 [ 0, %2 ], [ %11, %10 ]\n  %20 = icmp eq i32 %19, %4\n  br i1 %20, label %21, label %24\n\n21:                                               ; preds = %18\n  %22 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %23 = sub nsw i32 0, %22\n  br label %38\n\n24:                                               ; preds = %18\n  %25 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %26 = load ptr, ptr %25, align 8, !tbaa !9\n  %27 = zext i32 %19 to i64\n  %28 = getelementptr inbounds ptr, ptr %26, i64 %27\n  store ptr null, ptr %28, align 8, !tbaa !13\n  br label %32\n\n29:                                               ; preds = %15\n  %30 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %31 = sub nsw i32 0, %30\n  br label %38\n\n32:                                               ; preds = %24, %35\n  %33 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %34 = load ptr, ptr %33, align 8, !tbaa !16\n  %35 = getelementptr inbounds ptr, ptr %34, i64 %27\n  store ptr null, ptr %35, align 8, !tbaa !13\n  %36 = tail call i64 @netif_running(ptr noundef %0) #3\n  %37 = icmp eq i64 %36, 0\n  br i1 %37, label %38, label %40\n\n38:                                               ; preds = %32, %29, %21\n  %39 = phi i32 [ %23, %21 ], [ %31, %29 ], [ 0, %32 ]\n  ret i32 %39\n\n40:                                               ; preds = %32\n  %41 = load i64, ptr %3, align 8, !tbaa !17\n  %42 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !18\n  %43 = icmp eq i64 %41, %42\n  br i1 %43, label %44, label %46\n\n44:                                               ; preds = %40\n  %45 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %38\n\n46:                                               ; preds = %40\n  %47 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %48 = load i32, ptr %1, align 4, !tbaa !19\n  %49 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %47, ptr noundef null, ptr noundef null, i32 noundef %48, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %38\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @netif_running(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_reconfig(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_cmd(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !12, i64 16}\n!10 = !{!\"sdla_t\", !11, i64 0, !12, i64 8, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = distinct !{!14, !15}\n!15 = !{!\"llvm.loop.mustprogress\"}\n!16 = !{!10, !12, i64 8}\n!17 = !{!10, !11, i64 0}\n!18 = !{!11, !11, i64 0}\n!19 = !{!20, !6, i64 0}\n!20 = !{!\"dlci\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %19\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %13\n\n10:                                               ; preds = %13\n  %11 = add nuw nsw i64 %14, 1\n  %12 = icmp eq i64 %11, %9\n  br i1 %12, label %19, label %13, !llvm.loop !12\n\n13:                                               ; preds = %6, %10\n  %14 = phi i64 [ 0, %6 ], [ %11, %10 ]\n  %15 = getelementptr inbounds ptr, ptr %8, i64 %14\n  %16 = load ptr, ptr %15, align 8, !tbaa !14\n  %17 = icmp eq ptr %16, %1\n  br i1 %17, label %18, label %10\n\n18:                                               ; preds = %13\n  br label %19\n\n19:                                               ; preds = %10, %18, %2\n  %20 = phi i32 [ 0, %18 ], [ 0, %2 ], [ %4, %10 ]\n  %21 = phi i64 [ 0, %18 ], [ %14, %10 ], [ 0, %2 ]\n  %22 = icmp eq i32 %20, %4\n  br i1 %22, label %23, label %26\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %25 = sub nsw i32 0, %24\n  br label %39\n\n26:                                               ; preds = %19\n  %27 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = getelementptr inbounds ptr, ptr %28, i64 %21\n  store ptr null, ptr %29, align 8, !tbaa !14\n  %30 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %31 = load ptr, ptr %30, align 8, !tbaa !15\n  %32 = getelementptr inbounds ptr, ptr %31, i64 %21\n  store ptr null, ptr %32, align 8, !tbaa !14\n  %33 = tail call i64 @netif_running(ptr noundef %0) #3\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %39, label %35\n\n35:                                               ; preds = %26\n  %36 = load i64, ptr %3, align 8, !tbaa !16\n  %37 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !17\n  %38 = icmp eq i64 %36, %37\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %26, %35, %23\n  %40 = phi i32 [ %25, %23 ], [ 0, %35 ], [ 0, %26 ]\n  ret i32 %40\n\n41:                                               ; preds = %42\n  %42 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %39\n\n43:                                               ; preds = %41\n  %44 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %45 = sub nsw i32 0, %44\n  br label %39\n\n46:                                               ; preds = %41\n  %47 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %48 = load i32, ptr %1, align 4, !tbaa !18\n  %49 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %47, ptr noundef null, ptr noundef null, i32 noundef %48, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %39\n\n50:                                               ; preds = %46\n  %51 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %52 = sub nsw i32 0, %51\n  br label %39\n\n53:                                               ; preds = %46\n  %54 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %55 = sub nsw i32 0, %54\n  br label %39\n\n56:                                               ; preds = %46\n  %57 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %58 = sub nsw i32 0, %57\n  br label %39\n\n59:                                               ; preds = %46\n  %60 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %61 = sub nsw i32 0, %60\n  br label %39\n\n62:                                               ; preds = %46\n  %63 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %64 = sub nsw i32 0, %63\n  br label %39\n\n65:                                               ; preds = %46\n  %66 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %67 = sub nsw i32 0, %66\n  br label %39\n\n68:                                               ; preds = %46\n  %69 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %70 = sub nsw i32 0, %69\n  br label %39\n\n61:                                               ; preds = %46\n  %71 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %72 = sub nsw i32 0, %71\n  br label %39\n\n73:                                               ; preds = %46\n  %74 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %75 = sub nsw i32 0, %74\n  br label %39\n\n76:                                               ; preds = %46\n  %77 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %78 = sub nsw i32 0, %77\n  br label %39\n\n79:                                               ; preds = %46\n  %80 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %81 = sub nsw i32 0, %80\n  br label %39\n\n82:                                               ; preds = %46\n  %83 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %84 = sub nsw i32 0, %83\n  br label %39\n\n85:                                               ; preds = %46\n  %86 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %87 = sub nsw i32 0, %86\n  br label %39\n\n88:                                               ; preds = %46\n  %89 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %90 = sub nsw i32 0, %89\n  br label %39\n\n91:                                               ; preds = %46\n  %92 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %93 = sub nsw i32 0, %92\n  br label %39\n\n94:                                               ; preds = %46\n  %95 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %96 = sub nsw i32 0, %95\n  br label %39\n\n97:                                               ; preds = %46\n  %98 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %99 = sub nsw i32 0, %98\n  br label %39\n\n100:                                              ; preds = %46\n  %101 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %102 = sub nsw i32 0, %101\n  br label %39\n\n103:                                              ; preds = %46\n  %104 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %105 = sub nsw i32 0, %104\n  br label %39\n\n106:                                              ; preds = %46\n  %107 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %108 = sub nsw i32 0, %107\n  br label %39\n\n109:                                              ; preds = %46\n  %110 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %18\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %10\n\n10:                                               ; preds = %6, %15\n  %11 = phi i64 [ 0, %6 ], [ %16, %15 ]\n  %12 = getelementptr inbounds ptr, ptr %8, i64 %11\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %18, label %15\n\n15:                                               ; preds = %10\n  %16 = add nuw nsw i64 %11, 1\n  %17 = icmp eq i64 %16, %9\n  br i1 %17, label %27, label %10, !llvm.loop !14\n\n18:                                               ; preds = %10, %2\n  %19 = phi i32 [ 0, %2 ], [ %11, %10 ]\n  %20 = icmp eq i32 %19, %4\n  br i1 %20, label %27, label %21\n\n21:                                               ; preds = %18\n  %22 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %23 = load ptr, ptr %22, align 8, !tbaa !9\n  %24 = zext i32 %19 to i64\n  %25 = getelementptr inbounds ptr, ptr %23, i64 %24\n  store ptr null, ptr %25, align 8, !tbaa !13\n  %26 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %27 = load ptr, ptr %26, align 8, !tbaa !16\n  %28 = getelementptr inbounds ptr, ptr %27, i64 %24\n  store ptr null, ptr %28, align 8, !tbaa !13\n  br label %31\n\n31:                                               ; preds = %21, %36\n  %32 = phi i32 [ %37, %36 ], [ 0, %21 ]\n  %33 = tail call i64 @netif_running(ptr noundef %0) #3\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %43, label %35\n\n35:                                               ; preds = %31\n  %36 = load i64, ptr %3, align 8, !tbaa !17\n  %37 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !18\n  %38 = icmp eq i64 %36, %37\n  br i1 %38, label %39, label %41\n\n39:                                               ; preds = %35\n  %40 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %43\n\n41:                                               ; preds = %35\n  %42 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %1, i8 0, i64 16, i1 false)\n  %43 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %42, ptr noundef null, ptr noundef null, i32 noundef 0, i32 noundef 2, ptr noundef null, ptr noundef null, ptr noundef null) #3\n  br label %45\n\n44:                                               ; preds = %41\n  %45 = phi i32 [ %42, %41 ], [ %32, %36 ]\n  br label %46\n\n46:                                               ; preds = %44, %43\n  %47 = phi i32 [ %45, %44 ], [ %32, %43 ]\n  ret i32 %47\n\n48:                                               ; preds = %41\n  %49 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %50 = sub nsw i32 0, %49\n  br label %46\n\n41:                                               ; preds = %35\n  %51 = load i32, ptr %1, align 4, !tbaa !19\n  %52 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %53 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %52, ptr noundef null, ptr noundef null, i32 noundef %51, i32 noundef 2, ptr noundef null, ptr noundef null, ptr noundef null) #3\n  br label %45\n\n45:                                               ; preds = %41, %44\n  %54 = phi i32 [ %42, %41 ], [ %45, %44 ]\n  %55 = phi i32 [ %49, %41 ], [ %32, %44 ]\n  br label %46\n\n43:                                               ; preds = %31, %39\n  %56 = phi i32 [ %40, %39 ], [ %32, %31 ]\n  br label %46\n\n57:                                               ; preds = %54\n  %58 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %59 = sub nsw i32 0, %58\n  br label %46\n\n60:                                               ; preds = %54\n  %61 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %62 = sub nsw i32 0, %61\n  br label %46\n\n63:                                               ; preds = %54\n  %64 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %65 = sub nsw i32 0, %64\n  br label %46\n\n66:                                               ; preds = %54\n  %67 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %68 = sub nsw i32 0, %67\n  br label %46\n\n69:                                               ; preds = %54\n  %70 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %71 = sub nsw i32 0, %70\n  br label %46\n\n72:                                               ; preds = %54\n  %73 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %74 = sub nsw i32 0, %73\n  br label %46\n\n75:                                               ; preds = %54\n  %76 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %77 = sub nsw i32 0, %76\n  br label %46\n\n78:                                               ; preds = %54\n  %79 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %80 = sub nsw i32 0, %79\n  br label %46\n\n81:                                               ; preds = %54\n  %82 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %83 = sub nsw i32 0, %82\n  br label %46\n\n84:                                               ; preds = %54\n  %85 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %86 = sub nsw i32 0, %85\n  br label %46\n\n87:                                               ; preds = %54\n  %88 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %89 = sub nsw i32 0, %88\n  br label %46\n\n90:                                               ; preds = %54\n  %91 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %92 = sub nsw i32 0, %91\n  br label %46\n\n93:                                               ; preds = %54\n  %94 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %95 = sub nsw i32 0, %94\n  br label %46\n\n96:                                               ; preds = %54\n  %97 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %98 = sub nsw i32 0, %97\n  br label %46\n\n99:                                               ; preds = %54\n  %100 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %101 = sub nsw i32 0, %100\n  br label %46\n\n102:                                              ; preds = %54\n  %103 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %104 = sub nsw i32 0, %103\n  br label %46\n\n105:                                              ; preds", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %18\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %10\n\n10:                                               ; preds = %6, %15\n  %11 = phi i64 [ 0, %6 ], [ %16, %15 ]\n  %12 = getelementptr inbounds ptr, ptr %8, i64 %11\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %18, label %15\n\n15:                                               ; preds = %10\n  %16 = add nuw nsw i64 %11, 1\n  %17 = icmp eq i64 %16, %9\n  br i1 %17, label %28, label %10, !llvm.loop !14\n\n18:                                               ; preds = %10, %2\n  %19 = phi i32 [ 0, %2 ], [ %11, %10 ]\n  %20 = icmp eq i32 %19, %4\n  br i1 %20, label %21, label %24\n\n21:                                               ; preds = %18\n  %22 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %23 = sub nsw i32 0, %22\n  br label %38\n\n24:                                               ; preds = %18\n  %25 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %26 = load ptr, ptr %25, align 8, !tbaa !9\n  %27 = zext i32 %19 to i64\n  store ptr null, ptr %26, i64 %27, align 8, !tbaa !13\n  br label %30\n\n28:                                               ; preds = %15\n  %29 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  br label %38\n\n30:                                               ; preds = %24, %35\n  %31 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !16\n  %33 = zext i32 %19 to i64\n  %34 = getelementptr inbounds i64, ptr %32, i64 %33\n  store i64 0, ptr %34, align 8, !tbaa !17\n  %35 = tail call i64 @netif_running(ptr noundef %0) #3\n  %36 = icmp eq i64 %35, 0\n  br i1 %36, label %38, label %37\n\n37:                                               ; preds = %30\n  %38 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  br label %38\n\n39:                                               ; preds = %30\n  %40 = load i64, ptr %3, align 8, !tbaa !18\n  %41 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !17\n  %42 = icmp eq i64 %40, %41\n  br i1 %42, label %43, label %45\n\n43:                                               ; preds = %39\n  %44 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %38\n\n45:                                               ; preds = %39\n  %46 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %47 = load i32, ptr %1, align 4, !tbaa !19\n  %48 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %46, ptr noundef null, ptr noundef null, i32 noundef %47, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %38\n\n49:                                               ; preds = %30\n  %50 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %51 = sub nsw i32 0, %50\n  br label %38\n\n52:                                               ; preds = %30\n  %53 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %54 = sub nsw i32 0, %53\n  br label %38\n\n55:                                               ; preds = %30\n  %56 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %57 = sub nsw i32 0, %56\n  br label %38\n\n58:                                               ; preds = %30\n  %59 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %60 = sub nsw i32 0, %59\n  br label %38\n\n61:                                               ; preds = %30\n  %62 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %63 = sub nsw i32 0, %62\n  br label %38\n\n64:                                               ; preds = %30\n  %65 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %66 = sub nsw i32 0, %65\n  br label %38\n\n67:                                               ; preds = %30\n  %68 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %69 = sub nsw i32 0, %68\n  br label %38\n\n70:                                               ; preds = %30\n  %71 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %72 = sub nsw i32 0, %71\n  br label %38\n\n73:                                               ; preds = %30\n  %74 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %75 = sub nsw i32 0, %74\n  br label %38\n\n76:                                               ; preds = %30\n  %77 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %78 = sub nsw i32 0, %77\n  br label %38\n\n79:                                               ; preds = %30\n  %80 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %81 = sub nsw i32 0, %80\n  br label %38\n\n82:                                               ; preds = %30\n  %83 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %84 = sub nsw i32 0, %83\n  br label %38\n\n85:                                               ; preds = %30\n  %86 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %87 = sub nsw i32 0, %86\n  br label %38\n\n88:                                               ; preds = %30\n  %89 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %90 = sub nsw i32 0, %89\n  br label %38\n\n81:                                               ; preds = %30\n  %91 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %92 = sub nsw i32 0, %91\n  br label %38\n\n93:                                               ; preds = %30\n  %94 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %95 = sub nsw i32 0, %94\n  br label %38\n\n96:                                               ; preds = %30\n  %97 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %98 = sub nsw i32 0, %97\n  br label %38\n\n99:                                               ; preds = %30\n  %100 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %101 = sub nsw i32 0, %100\n  br label %38\n\n102:                                              ; preds = %30\n  %103 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %104 = sub nsw i32 0, %103\n  br label %38\n\n105:                                              ; preds = %30\n  %106 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %107 = sub nsw i32 0, %106\n  br label %38\n\n108:                                              ; preds = %30\n  %109 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %110 = sub nsw i32 0, %109\n  br label %38\n\n111:                                              ; preds = %30\n  %112 = load i32, ptr @EN"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/drivers/net/wan/extr_sdla.c_sdla_deassoc.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.frad_local = type { %struct.TYPE_2__, ptr, ptr }\n%struct.TYPE_2__ = type { i64 }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef readonly %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.frad_local, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %10\n\n10:                                               ; preds = %6, %15\n  %11 = phi i64 [ 0, %6 ], [ %16, %15 ]\n  %12 = getelementptr inbounds ptr, ptr %8, i64 %11\n  %13 = load ptr, ptr %12, align 8, !tbaa !14\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %18, label %15\n\n15:                                               ; preds = %10\n  %16 = add nuw nsw i64 %11, 1\n  %17 = icmp eq i64 %16, %9\n  br i1 %17, label %23, label %10, !llvm.loop !15\n\n18:                                               ; preds = %10\n  %19 = trunc i64 %11 to i32\n  br label %20\n\n20:                                               ; preds = %18, %2\n  %21 = phi i32 [ 0, %2 ], [ %19, %18 ]\n  %22 = icmp eq i32 %21, %4\n  br i1 %22, label %23, label %26\n\n23:                                               ; preds = %15, %20\n  %24 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %25 = sub nsw i32 0, %24\n  br label %46\n\n26:                                               ; preds = %20\n  %27 = getelementptr inbounds %struct.frad_local, ptr %3, i64 0, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = zext i32 %21 to i64\n  %30 = getelementptr inbounds ptr, ptr %28, i64 %29\n  store ptr null, ptr %30, align 8, !tbaa !14\n  %31 = getelementptr inbounds %struct.frad_local, ptr %3, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !17\n  %33 = getelementptr inbounds i64, ptr %32, i64 %29\n  store i64 0, ptr %33, align 8, !tbaa !18\n  %34 = tail call i64 @netif_running(ptr noundef %0) #2\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %46, label %36\n\n36:                                               ; preds = %26\n  %37 = load i64, ptr %3, align 8, !tbaa !19\n  %38 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !18\n  %39 = icmp eq i64 %37, %38\n  br i1 %39, label %40, label %42\n\n40:                                               ; preds = %36\n  %41 = tail call i32 @sdla_reconfig(ptr noundef %0) #2\n  br label %46\n\n42:                                               ; preds = %36\n  %43 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %44 = load i32, ptr %1, align 4, !tbaa !20\n  %45 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %43, i32 noundef 0, i32 noundef 0, i32 noundef %44, i32 noundef 2, ptr noundef null, ptr noundef null) #2\n  br label %46\n\n46:                                               ; preds = %26, %42, %40, %23\n  %47 = phi i32 [ %25, %23 ], [ 0, %40 ], [ 0, %42 ], [ 0, %26 ]\n  ret i32 %47\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @netif_running(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_reconfig(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_cmd(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !13, i64 16}\n!10 = !{!\"frad_local\", !11, i64 0, !13, i64 8, !13, i64 16}\n!11 = !{!\"TYPE_2__\", !12, i64 0}\n!12 = !{!\"long\", !7, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n!14 = !{!13, !13, i64 0}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n!17 = !{!10, !13, i64 8}\n!18 = !{!12, !12, i64 0}\n!19 = !{!10, !12, i64 0}\n!20 = !{!21, !6, i64 0}\n!21 = !{!\"net_device\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_cgraphunit.c_cgraph_varpool_remove_unreferenced_decls.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function cgraph_varpool_remove_unreferenced_decls\n\t.type\tcgraph_varpool_remove_unreferenced_decls,@function\ncgraph_varpool_remove_unreferenced_decls: # @cgraph_varpool_remove_unreferenced_decls\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\tcgraph_varpool_nodes_queue(%rip), %r14\n\txorl\t%eax, %eax\n\tcallq\tcgraph_varpool_reset_queue@PLT\n\tmovq\terrorcount(%rip), %rax\n\torq\tsorrycount(%rip), %rax\n\tje\t.LBB0_1\n# %bb.10:\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   in Loop: Header=BB0_1 Depth=1\n\t.cfi_def_cfa_offset 32\n\tcmpq\t$0, (%rbx)\n\tje\t.LBB0_6\n.LBB0_8:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovq\t%rbx, %rdi\n\tcallq\tcgraph_varpool_mark_needed_node@PLT\n.LBB0_1:                                # =>This Inner Loop Header: Depth=1\n\ttestq\t%r14, %r14\n\tje\t.LBB0_9\n# %bb.2:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovq\t%r14, %rbx\n\tmovl\t32(%r14), %ebp\n\tmovq\t24(%r14), %r14\n\tmovq\t$0, 16(%rbx)\n\tcmpq\t$0, 8(%rbx)\n\tje\t.LBB0_1\n# %bb.3:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovl\t%ebp, %edi\n\tcallq\tDECL_ASSEMBLER_NAME_SET_P@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.4:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovl\t%ebp, %edi\n\tcallq\tDECL_ASSEMBLER_NAME@PLT\n\tmovl\t%eax, %edi\n\tcallq\tTREE_SYMBOL_REFERENCED@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_8\n\tjmp\t.LBB0_5\n.LBB0_6:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovq\t%rbx, %rdi\n\tmovl\t%ebp, %esi\n\tcallq\tdecide_is_variable_needed@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_8\n# %bb.7:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovl\t%ebp, %edi\n\tcallq\tDECL_RTL_SET_P@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_8\n\tjmp\t.LBB0_1\n.LBB0_9:\n\txorl\t%eax, %eax\n\tcallq\tfinish_aliases_1@PLT\n\txorl\t%eax, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tcgraph_varpool_analyze_pending_decls@PLT # TAILCALL\n.Lfunc_end0:\n\t.size\tcgraph_varpool_remove_unreferenced_decls, .Lfunc_end0-cgraph_varpool_remove_unreferenced_decls\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tcgraph_varpool_nodes_queue,@object # @cgraph_varpool_nodes_queue\n\t.bss\n\t.globl\tcgraph_varpool_nodes_queue\n\t.p2align\t3\ncgraph_varpool_nodes_queue:\n\t.quad\t0\n\t.size\tcgraph_varpool_nodes_queue, 8\n\n\t.type\terrorcount,@object              # @errorcount\n\t.globl\terrorcount\n\t.p2align\t3\nerrorcount:\n\t.quad\t0                               # 0x0\n\t.size\terrorcount, 8\n\n\t.type\tsorrycount,@object              # @sorrycount\n\t.globl\tsorrycount\n\t.p2align\t3\nsorrycount:\n\t.quad\t0                               # 0x0\n\t.size\tsorrycount, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cgraph_varpool_node = type { i64, i64, i64, ptr, i32 }\n\n@cgraph_varpool_nodes_queue = dso_local local_unnamed_addr global ptr null, align 8\n@errorcount = dso_local local_unnamed_addr global i64 0, align 8\n@sorrycount = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cgraph_varpool_remove_unreferenced_decls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cgraph_varpool_remove_unreferenced_decls() #0 {\n  %1 = load ptr, ptr @cgraph_varpool_nodes_queue, align 8, !tbaa !5\n  %2 = tail call i32 (...) @cgraph_varpool_reset_queue() #2\n  %3 = load i64, ptr @errorcount, align 8, !tbaa !9\n  %4 = icmp ne i64 %3, 0\n  %5 = load i64, ptr @sorrycount, align 8\n  %6 = icmp ne i64 %5, 0\n  %7 = select i1 %4, i1 true, i1 %6\n  br i1 %7, label %34, label %35\n\n8:                                                ; preds = %27, %23\n  %9 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %10, i64 0, i32 3\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %10, i64 0, i32 1\n  %12 = load i64, ptr %11, align 8, !tbaa !14\n  store i64 0, ptr %1, align 8, !tbaa !15\n  %13 = icmp eq i64 %12, 0\n  br i1 %13, label %14, label %23\n\n14:                                               ; preds = %8\n  %15 = tail call i64 @decide_is_variable_needed(ptr noundef nonnull %10, i32 noundef %16) #2\n  %16 = trunc i64 %15 to i32\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %23, label %18\n\n18:                                               ; preds = %14\n  %19 = tail call i64 @DECL_RTL_SET_P(i32 noundef %16) #2\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %27, label %21\n\n21:                                               ; preds = %18\n  %22 = tail call i32 @cgraph_varpool_mark_needed_node(ptr noundef nonnull %10) #2\n  br label %27\n\n23:                                               ; preds = %14, %8\n  %24 = tail call i64 @DECL_ASSEMBLER_NAME_SET_P(i32 noundef %16) #2\n  %25 = icmp eq i64 %24, 0\n  br i1 %25, label %27, label %26\n\n26:                                               ; preds = %23\n  tail call void @llvm.assume(i1 %25)\n  br label %8\n\n27:                                               ; preds = %23, %26, %18, %21\n  %28 = phi ptr [ %10, %21 ], [ %10, %18 ], [ %10, %26 ], [ %10, %23 ]\n  %29 = tail call i32 @cgraph_varpool_mark_needed_node(ptr noundef nonnull %28) #2\n  %30 = load i32, ptr %28, align 8, !tbaa !15\n  %31 = tail call i64 @DECL_ASSEMBLER_NAME(i32 noundef %30) #2\n  %32 = tail call i64 @TREE_SYMBOL_REFERENCED(i64 noundef %31) #2\n  %33 = icmp eq i64 %32, 0\n  br i1 %33, label %8, label %35\n\n34:                                               ; preds = %27, %3\n  %35 = tail call i32 (...) @finish_aliases_1() #2\n  %36 = tail call i32 (...) @cgraph_varpool_analyze_pending_decls() #2\n  ret void\n}\n\ndeclare i32 @cgraph_varpool_reset_queue(...) local_unnamed_addr #1\n\ndeclare i64 @decide_is_variable_needed(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_RTL_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_mark_needed_node(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_ASSEMBLER_NAME_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @TREE_SYMBOL_REFERENCED(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_ASSEMBLER_NAME(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @finish_aliases_1(...) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_analyze_pending_decls(...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.assume(i1 noundef) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { inaccessiblememonly nocallback nofree nosync nounwind willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !6, i64 24}\n!12 = !{!\"cgraph_varpool_node\", !10, i64 0, !10, i64 8, !10, i64 16, !6, i64 24, !13, i64 32}\n!13 = !{!\"int\", !7, i64 0}\n!14 = !{!12, !10, i64 8}\n!15 = !{!12, !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cgraph_varpool_node = type { i64, i64, i64, ptr, i32 }\n\n@cgraph_varpool_nodes_queue = dso_local local_unnamed_addr global ptr null, align 8\n@errorcount = dso_local local_unnamed_addr global i64 0, align 8\n@sorrycount = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cgraph_varpool_remove_unreferenced_decls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cgraph_varpool_remove_unreferenced_decls() #0 {\n  %1 = load ptr, ptr @cgraph_varpool_nodes_queue, align 8, !tbaa !5\n  %2 = tail call i32 (...) @cgraph_varpool_reset_queue() #2\n  %3 = load i64, ptr @errorcount, align 8, !tbaa !9\n  %4 = icmp ne i64 %3, 0\n  %5 = load i64, ptr @sorrycount, align 8\n  %6 = icmp ne i64 %5, 0\n  %7 = select i1 %4, i1 true, i1 %6\n  br i1 %7, label %34, label %35\n\n8:                                                ; preds = %26\n  %9 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %10, i64 0, i32 1\n  %10 = load i64, ptr %9, align 8, !tbaa !11\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %12, label %26\n\n12:                                               ; preds = %26\n  %13 = tail call i64 @decide_is_variable_needed(ptr noundef nonnull %10, i32 noundef %14) #2\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %26\n\n15:                                               ; preds = %12\n  %16 = tail call i64 @DECL_RTL_SET_P(i32 noundef %14) #2\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %26, label %18\n\n18:                                               ; preds = %15\n  %19 = tail call i32 @decide_is_variable_needed(ptr noundef nonnull %10, i32 noundef %14) #2\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %21, label %26\n\n21:                                               ; preds = %18\n  %22 = tail call i64 @DECL_RTL_SET_P(i32 noundef %14) #2\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @cgraph_varpool_mark_needed_node(ptr noundef nonnull %10) #2\n  br label %26\n\n26:                                               ; preds = %12, %15, %18, %21, %8, %24\n  %27 = phi ptr [ %10, %24 ], [ %10, %8 ], [ %10, %21 ], [ %10, %18 ], [ %10, %15 ], [ %10, %12 ]\n  %28 = icmp eq ptr %27, null\n  br i1 %28, label %29, label %32\n\n29:                                               ; preds = %26\n  %30 = tail call i32 (...) @finish_aliases_1() #2\n  %31 = tail call i32 (...) @cgraph_varpool_analyze_pending_decls() #2\n  br label %34\n\n32:                                               ; preds = %26\n  %33 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %27, i64 0, i32 4\n  br label %3\n\n34:                                               ; preds = %29, %0\n  ret void\n\n35:                                               ; preds = %0\n  ret void\n}\n\ndeclare i32 @cgraph_varpool_reset_queue(...) local_unnamed_addr #1\n\ndeclare i64 @decide_is_variable_needed(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_RTL_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_mark_needed_node(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @finish_aliases_1(...) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_analyze_pending_decls(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !10, i64 8}\n!12 = !{!\"cgraph_varpool_node\", !10, i64 0, !10, i64 8, !10, i64 16, !6, i64 24, !13, i64 32}\n!13 = !{!\"int\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cgraph_varpool_node = type { i64, i64, i64, ptr, i32 }\n\n@cgraph_varpool_nodes_queue = dso_local local_unnamed_addr global ptr null, align 8\n@errorcount = dso_local local_unnamed_addr global i64 0, align 8\n@sorrycount = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cgraph_varpool_remove_unreferenced_decls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cgraph_varpool_remove_unreferenced_decls() #0 {\n  %1 = load ptr, ptr @cgraph_varpool_nodes_queue, align 8, !tbaa !5\n  %2 = tail call i32 (...) @cgraph_varpool_reset_queue() #2\n  %3 = load i64, ptr @errorcount, align 8, !tbaa !9\n  %4 = icmp ne i64 %3, 0\n  %5 = load i64, ptr @sorrycount, align 8\n  %6 = icmp ne i64 %5, 0\n  %7 = select i1 %4, i1 true, i1 %6\n  br i1 %7, label %34, label %35\n\n8:                                                ; preds = %26\n  %9 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %10, i64 0, i32 1\n  %10 = load i64, ptr %9, align 8, !tbaa !11\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %12, label %26\n\n12:                                               ; preds = %26\n  %13 = tail call i64 @decide_is_variable_needed(ptr noundef nonnull %10, i32 noundef %14) #2\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %26\n\n15:                                               ; preds = %12\n  %16 = tail call i64 @DECL_RTL_SET_P(i32 noundef %14) #2\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %26, label %18\n\n18:                                               ; preds = %15\n  %19 = tail call i32 @decide_is_variable_needed(ptr noundef nonnull %10, i32 noundef %14) #2\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %21, label %26\n\n21:                                               ; preds = %18\n  %22 = tail call i64 @DECL_RTL_SET_P(i32 noundef %14) #2\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @cgraph_varpool_mark_needed_node(ptr noundef nonnull %10) #2\n  br label %26\n\n26:                                               ; preds = %12, %15, %18, %21, %8, %24\n  %27 = phi ptr [ %10, %24 ], [ %10, %8 ], [ %10, %21 ], [ %10, %18 ], [ %10, %15 ], [ %10, %12 ]\n  %28 = icmp eq ptr %27, null\n  br i1 %28, label %29, label %32\n\n29:                                               ; preds = %26\n  %30 = tail call i32 (...) @finish_aliases_1() #2\n  %31 = tail call i32 (...) @cgraph_varpool_analyze_pending_decls() #2\n  br label %34\n\n32:                                               ; preds = %26\n  %33 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %27, i64 0, i32 4\n  br label %3\n\n34:                                               ; preds = %29, %0\n  ret void\n\n35:                                               ; preds = %0\n  ret void\n}\n\ndeclare i32 @cgraph_varpool_reset_queue(...) local_unnamed_addr #1\n\ndeclare i64 @decide_is_variable_needed(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_RTL_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_mark_needed_node(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @finish_aliases_1(...) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_analyze_pending_decls(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !10, i64 8}\n!12 = !{!\"cgraph_varpool_node\", !10, i64 0, !10, i64 8, !10, i64 16, !6, i64 24, !13, i64 32}\n!13 = !{!\"int\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cgraph_varpool_node = type { i64, i64, i64, ptr, i32 }\n\n@cgraph_varpool_nodes_queue = dso_local local_unnamed_addr global ptr null, align 8\n@errorcount = dso_local local_unnamed_addr global i64 0, align 8\n@sorrycount = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cgraph_varpool_remove_unreferenced_decls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cgraph_varpool_remove_unreferenced_decls() #0 {\n  %1 = load ptr, ptr @cgraph_varpool_nodes_queue, align 8, !tbaa !5\n  %2 = tail call i32 (...) @cgraph_varpool_reset_queue() #2\n  %3 = load i64, ptr @errorcount, align 8, !tbaa !9\n  %4 = icmp ne i64 %3, 0\n  %5 = load i64, ptr @sorrycount, align 8\n  %6 = icmp ne i64 %5, 0\n  %7 = select i1 %4, i1 true, i1 %6\n  br i1 %7, label %34, label %35\n\n8:                                                ; preds = %29\n  %9 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %10, i64 0, i32 1\n  %10 = load i64, ptr %9, align 8, !tbaa !11\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %12, label %29\n\n12:                                               ; preds = %8\n  %13 = tail call i64 @decide_is_variable_needed(ptr noundef nonnull %1, i32 noundef %14) #2\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %29\n\n15:                                               ; preds = %12\n  %16 = tail call i64 @DECL_RTL_SET_P(i32 noundef %14) #2\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %29, label %18\n\n18:                                               ; preds = %15\n  %19 = tail call i64 @DECL_ASSEMBLER_NAME_SET_P(i32 noundef %14) #2\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %23, label %21\n\n21:                                               ; preds = %18\n  %22 = tail call i32 @DECL_ASSEMBLER_NAME(i32 noundef %14) #2\n  br label %25\n\n23:                                               ; preds = %18\n  %24 = load i64, ptr %1, align 8, !tbaa !14\n  br label %25\n\n25:                                               ; preds = %23, %21\n  %26 = phi i64 [ %24, %23 ], [ %22, %21 ]\n  %27 = tail call i64 @TREE_SYMBOL_REFERENCED(i32 noundef %26) #2\n  %28 = icmp eq i64 %27, 0\n  br i1 %28, label %29, label %32\n\n29:                                               ; preds = %12, %15, %25, %8\n  %30 = phi ptr [ %1, %8 ], [ %1, %25 ], [ %1, %15 ], [ %1, %12 ]\n  %31 = tail call i32 @cgraph_varpool_mark_needed_node(ptr noundef nonnull %30) #2\n  br label %3\n\n32:                                               ; preds = %25\n  %33 = tail call i32 @cgraph_varpool_mark_needed_node(ptr noundef nonnull %30) #2\n  br label %35\n\n34:                                               ; preds = %3\n  %35 = tail call i32 (...) @finish_aliases_1() #2\n  %36 = tail call i32 (...) @cgraph_varpool_analyze_pending_decls() #2\n  ret void\n}\n\ndeclare i32 @cgraph_varpool_reset_queue(...) local_unnamed_addr #1\n\ndeclare i64 @decide_is_variable_needed(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_RTL_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_ASSEMBLER_NAME_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @DECL_ASSEMBLER_NAME(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @TREE_SYMBOL_REFERENCED(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_mark_needed_node(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @finish_aliases_1(...) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_analyze_pending_decls(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !10, i64 8}\n!12 = !{!\"cgraph_varpool_node\", !10, i64 0, !10, i64 8, !10, i64 16, !6, i64 24, !13, i64 32}\n!13 = !{!\"int\", !7, i64 0}\n!14 = !{!12, !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/gcc/extr_cgraphunit.c_cgraph_varpool_remove_unreferenced_decls.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.cgraph_varpool_node = type { i64, i64, i64, ptr, i32 }\n\n@cgraph_varpool_nodes_queue = dso_local local_unnamed_addr global ptr null, align 8\n@errorcount = dso_local local_unnamed_addr global i64 0, align 8\n@sorrycount = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cgraph_varpool_remove_unreferenced_decls], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cgraph_varpool_remove_unreferenced_decls() #0 {\n  %1 = load ptr, ptr @cgraph_varpool_nodes_queue, align 8, !tbaa !5\n  %2 = tail call i32 (...) @cgraph_varpool_reset_queue() #2\n  %3 = load i64, ptr @errorcount, align 8, !tbaa !9\n  %4 = icmp ne i64 %3, 0\n  %5 = load i64, ptr @sorrycount, align 8\n  %6 = icmp ne i64 %5, 0\n  %7 = select i1 %4, i1 true, i1 %6\n  br i1 %7, label %43, label %8\n\n8:                                                ; preds = %0\n  %9 = icmp eq ptr %1, null\n  br i1 %9, label %40, label %10\n\n10:                                               ; preds = %8, %38\n  %11 = phi ptr [ %15, %38 ], [ %1, %8 ]\n  %12 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %11, i64 0, i32 4\n  %13 = load i32, ptr %12, align 8, !tbaa !11\n  %14 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %11, i64 0, i32 3\n  %15 = load ptr, ptr %14, align 8, !tbaa !14\n  %16 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %11, i64 0, i32 2\n  store i64 0, ptr %16, align 8, !tbaa !15\n  %17 = getelementptr inbounds %struct.cgraph_varpool_node, ptr %11, i64 0, i32 1\n  %18 = load i64, ptr %17, align 8, !tbaa !16\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %38, label %20\n\n20:                                               ; preds = %10\n  %21 = tail call i64 @DECL_ASSEMBLER_NAME_SET_P(i32 noundef %13) #2\n  %22 = icmp eq i64 %21, 0\n  br i1 %22, label %27, label %23\n\n23:                                               ; preds = %20\n  %24 = tail call i32 @DECL_ASSEMBLER_NAME(i32 noundef %13) #2\n  %25 = tail call i64 @TREE_SYMBOL_REFERENCED(i32 noundef %24) #2\n  %26 = icmp eq i64 %25, 0\n  br i1 %26, label %27, label %36\n\n27:                                               ; preds = %23, %20\n  %28 = load i64, ptr %11, align 8, !tbaa !17\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %30, label %36\n\n30:                                               ; preds = %27\n  %31 = tail call i64 @decide_is_variable_needed(ptr noundef nonnull %11, i32 noundef %13) #2\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %30\n  %34 = tail call i64 @DECL_RTL_SET_P(i32 noundef %13) #2\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %38, label %36\n\n36:                                               ; preds = %33, %30, %27, %23\n  %37 = tail call i32 @cgraph_varpool_mark_needed_node(ptr noundef nonnull %11) #2\n  br label %38\n\n38:                                               ; preds = %36, %33, %10\n  %39 = icmp eq ptr %15, null\n  br i1 %39, label %40, label %10, !llvm.loop !18\n\n40:                                               ; preds = %38, %8\n  %41 = tail call i32 (...) @finish_aliases_1() #2\n  %42 = tail call i32 (...) @cgraph_varpool_analyze_pending_decls() #2\n  br label %43\n\n43:                                               ; preds = %0, %40\n  ret void\n}\n\ndeclare i32 @cgraph_varpool_reset_queue(...) local_unnamed_addr #1\n\ndeclare i64 @DECL_ASSEMBLER_NAME_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @TREE_SYMBOL_REFERENCED(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @DECL_ASSEMBLER_NAME(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @decide_is_variable_needed(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @DECL_RTL_SET_P(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_mark_needed_node(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @finish_aliases_1(...) local_unnamed_addr #1\n\ndeclare i32 @cgraph_varpool_analyze_pending_decls(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !13, i64 32}\n!12 = !{!\"cgraph_varpool_node\", !10, i64 0, !10, i64 8, !10, i64 16, !6, i64 24, !13, i64 32}\n!13 = !{!\"int\", !7, i64 0}\n!14 = !{!12, !6, i64 24}\n!15 = !{!12, !10, i64 16}\n!16 = !{!12, !10, i64 8}\n!17 = !{!12, !10, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_coalition.c_i_coal_jetsam_remove_task.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function i_coal_jetsam_remove_task\n\t.type\ti_coal_jetsam_remove_task,@function\ni_coal_jetsam_remove_task:              # @i_coal_jetsam_remove_task\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t(%rbx), %rax\n\txorl\t%edi, %edi\n\tcmpq\tCOALITION_TYPE_JETSAM(%rip), %rax\n\tsete\t%dil\n\tjmp\t.LBB0_3\n.LBB0_1:\n\txorl\t%edi, %edi\n.LBB0_3:\n\tcallq\tassert@PLT\n\tmovq\t8(%r14), %rax\n\tmovq\tCOALITION_TYPE_JETSAM(%rip), %rcx\n\txorl\t%edi, %edi\n\tcmpq\t%rbx, (%rax,%rcx,8)\n\tsete\t%dil\n\tcallq\tassert@PLT\n\tmovq\t%r14, %rdi\n\tcallq\ttask_pid@PLT\n\tmovl\t16(%rbx), %edx\n\tmovl\t$.L.str, %edi\n\tmovl\t%eax, %esi\n\txorl\t%eax, %eax\n\tcallq\tcoal_dbg@PLT\n\tcmpq\t%r14, 8(%rbx)\n\tje\t.LBB0_4\n# %bb.5:\n\tmovq\tCOALITION_TYPE_JETSAM(%rip), %rdi\n\tshlq\t$2, %rdi\n\taddq\t(%r14), %rdi\n\tcallq\tqueue_empty@PLT\n\txorl\t%edi, %edi\n\ttestl\t%eax, %eax\n\tsete\t%dil\n\tcallq\tassert@PLT\n\tjmp\t.LBB0_6\n.LBB0_4:\n\tmovq\t$0, 8(%rbx)\n\tmovq\t%r14, %rdi\n\tcallq\ttask_pid@PLT\n\tmovl\t$.L.str.1, %edi\n\tmovl\t%eax, %esi\n\txorl\t%eax, %eax\n\tcallq\tcoal_dbg@PLT\n.LBB0_6:\n\tmovq\tCOALITION_TYPE_JETSAM(%rip), %rdi\n\tshlq\t$2, %rdi\n\taddq\t(%r14), %rdi\n\tcallq\tremqueue@PLT\n\tmovq\t(%r14), %rax\n\tmovq\tCOALITION_TYPE_RESOURCE(%rip), %rcx\n\tmovl\t(%rax,%rcx,4), %edi\n\tcallq\tqueue_chain_init@PLT\n\tmovl\tKERN_SUCCESS(%rip), %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\ti_coal_jetsam_remove_task, .Lfunc_end0-i_coal_jetsam_remove_task\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCOALITION_TYPE_JETSAM,@object   # @COALITION_TYPE_JETSAM\n\t.bss\n\t.globl\tCOALITION_TYPE_JETSAM\n\t.p2align\t3\nCOALITION_TYPE_JETSAM:\n\t.quad\t0                               # 0x0\n\t.size\tCOALITION_TYPE_JETSAM, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"removing PID:%d from coalition id:%lld\"\n\t.size\t.L.str, 39\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"    PID:%d was the leader!\"\n\t.size\t.L.str.1, 27\n\n\t.type\tCOALITION_TYPE_RESOURCE,@object # @COALITION_TYPE_RESOURCE\n\t.bss\n\t.globl\tCOALITION_TYPE_RESOURCE\n\t.p2align\t3\nCOALITION_TYPE_RESOURCE:\n\t.quad\t0                               # 0x0\n\t.size\tCOALITION_TYPE_RESOURCE, 8\n\n\t.type\tKERN_SUCCESS,@object            # @KERN_SUCCESS\n\t.globl\tKERN_SUCCESS\n\t.p2align\t2\nKERN_SUCCESS:\n\t.long\t0                               # 0x0\n\t.size\tKERN_SUCCESS, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_9__ = type { i64, ptr, i32 }\n\n@COALITION_TYPE_JETSAM = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [39 x i8] c\"removing PID:%d from coalition id:%lld\\00\", align 1\n@.str.1 = private unnamed_addr constant [27 x i8] c\"    PID:%d was the leader!\\00\", align 1\n@COALITION_TYPE_RESOURCE = dso_local local_unnamed_addr global i64 0, align 8\n@KERN_SUCCESS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @i_coal_jetsam_remove_task], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @i_coal_jetsam_remove_task(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %8, label %4\n\n4:                                                ; preds = %2\n  %5 = load i64, ptr %0, align 8, !tbaa !5\n  %6 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %7 = icmp eq i64 %5, %6\n  br label %10\n\n8:                                                ; preds = %2\n  %9 = icmp eq ptr %1, null\n  br label %10\n\n10:                                               ; preds = %8, %4\n  %11 = phi i1 [ %9, %8 ], [ %7, %4 ]\n  %12 = zext i1 %11 to i32\n  %13 = tail call i32 @assert(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !12\n  %16 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %17 = getelementptr inbounds ptr, ptr %15, i64 %16\n  %18 = load ptr, ptr %17, align 8, !tbaa !14\n  %19 = icmp eq ptr %18, %0\n  %20 = zext i1 %19 to i32\n  %21 = tail call i32 @assert(i32 noundef %20) #2\n  %22 = tail call i32 @task_pid(ptr noundef %1) #2\n  %23 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 2\n  %24 = load i32, ptr %23, align 8, !tbaa !15\n  %25 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str, i32 noundef %22, i32 noundef %24) #2\n  %26 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 1\n  %27 = load ptr, ptr %26, align 8, !tbaa !16\n  %28 = icmp eq ptr %27, %1\n  br i1 %28, label %29, label %33\n\n29:                                               ; preds = %10\n  store ptr null, ptr %26, align 8, !tbaa !16\n  %30 = tail call i32 @task_pid(ptr noundef nonnull %1) #2\n  %31 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str.1, i32 noundef %30) #2\n  %32 = load ptr, ptr %1, align 8, !tbaa !17\n  br label %39\n\n33:                                               ; preds = %10\n  %34 = load ptr, ptr %1, align 8, !tbaa !17\n  %35 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %36 = getelementptr inbounds i32, ptr %34, i64 %35\n  %37 = tail call i32 @queue_empty(ptr noundef %36) #2\n  %38 = icmp eq i32 %37, 0\n  br label %42\n\n39:                                               ; preds = %29\n  %40 = load ptr, ptr %32, align 8, !tbaa !17\n  %41 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  br label %42\n\n42:                                               ; preds = %39, %33\n  %43 = phi ptr [ %40, %39 ], [ %32, %33 ]\n  %44 = phi i64 [ %41, %39 ], [ %35, %33 ]\n  %45 = getelementptr inbounds i32, ptr %43, i64 %44\n  %46 = tail call i32 @remqueue(ptr noundef %45) #2\n  %47 = load ptr, ptr %1, align 8, !tbaa !17\n  %48 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  %49 = getelementptr inbounds i32, ptr %47, i64 %48\n  %50 = load i32, ptr %49, align 4, !tbaa !18\n  %51 = tail call i32 @queue_chain_init(i32 noundef %50) #2\n  %52 = load i32, ptr @KERN_SUCCESS, align 4, !tbaa !18\n  ret i32 %52\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @coal_dbg(ptr noundef, i32 noundef, ...) local_unnamed_addr #1\n\ndeclare i32 @task_pid(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @remqueue(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_chain_init(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_9__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!\"long long\", !8, i64 0}\n!12 = !{!13, !10, i64 8}\n!13 = !{!\"TYPE_10__\", !10, i64 0, !10, i64 8}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !11, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!13, !10, i64 0}\n!18 = !{!19, !19, i64 0}\n!19 = !{!\"int\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_9__ = type { i64, ptr, i32 }\n\n@COALITION_TYPE_JETSAM = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [39 x i8] c\"removing PID:%d from coalition id:%lld\\00\", align 1\n@.str.1 = private unnamed_addr constant [27 x i8] c\"    PID:%d was the leader!\\00\", align 1\n@COALITION_TYPE_RESOURCE = dso_local local_unnamed_addr global i64 0, align 8\n@KERN_SUCCESS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @i_coal_jetsam_remove_task], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @i_coal_jetsam_remove_task(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %8, label %4\n\n4:                                                ; preds = %2\n  %5 = load i64, ptr %0, align 8, !tbaa !5\n  %6 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %7 = icmp eq i64 %5, %6\n  br label %10\n\n8:                                                ; preds = %2\n  %9 = icmp eq ptr %1, null\n  br label %10\n\n10:                                               ; preds = %8, %4\n  %11 = phi i1 [ %9, %8 ], [ %7, %4 ]\n  %12 = zext i1 %11 to i32\n  %13 = tail call i32 @assert(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !12\n  %16 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %17 = getelementptr inbounds ptr, ptr %15, i64 %16\n  %18 = load ptr, ptr %17, align 8, !tbaa !14\n  %19 = icmp eq ptr %18, %0\n  %20 = zext i1 %19 to i32\n  %21 = tail call i32 @assert(i32 noundef %20) #2\n  %22 = tail call i32 @task_pid(ptr noundef %1) #2\n  %23 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 2\n  %24 = load i32, ptr %23, align 8, !tbaa !15\n  %25 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str, i32 noundef %22, i32 noundef %24) #2\n  %26 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 1\n  %27 = load ptr, ptr %26, align 8, !tbaa !16\n  %28 = icmp eq ptr %27, %1\n  br i1 %28, label %29, label %33\n\n29:                                               ; preds = %10\n  store ptr null, ptr %26, align 8, !tbaa !16\n  %30 = tail call i32 @task_pid(ptr noundef nonnull %1) #2\n  %31 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str.1, i32 noundef %30) #2\n  %32 = load ptr, ptr %1, align 8, !tbaa !17\n  br label %38\n\n33:                                               ; preds = %10\n  %34 = load ptr, ptr %1, align 8, !tbaa !17\n  %35 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %36 = getelementptr inbounds i32, ptr %34, i64 %35\n  %37 = tail call i32 @queue_empty(ptr noundef %36) #2\n  br label %41\n\n38:                                               ; preds = %29\n  %39 = load ptr, ptr %1, align 8, !tbaa !17\n  %40 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  br label %41\n\n41:                                               ; preds = %38, %33\n  %42 = phi ptr [ %39, %38 ], [ %32, %33 ]\n  %43 = phi i64 [ %40, %38 ], [ %35, %33 ]\n  %44 = getelementptr inbounds i32, ptr %42, i64 %43\n  %45 = tail call i32 @remqueue(ptr noundef %44) #2\n  %46 = load ptr, ptr %1, align 8, !tbaa !17\n  %47 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  %48 = getelementptr inbounds i32, ptr %46, i64 %47\n  %49 = load i32, ptr %48, align 4, !tbaa !18\n  %50 = tail call i32 @queue_chain_init(i32 noundef %49) #2\n  %51 = load i32, ptr @KERN_SUCCESS, align 4, !tbaa !18\n  ret i32 %51\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @coal_dbg(ptr noundef, i32 noundef, ...) local_unnamed_addr #1\n\ndeclare i32 @task_pid(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @remqueue(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_chain_init(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_9__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!\"long long\", !8, i64 0}\n!12 = !{!13, !10, i64 8}\n!13 = !{!\"TYPE_10__\", !10, i64 0, !10, i64 8}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !11, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!13, !10, i64 0}\n!18 = !{!19, !19, i64 0}\n!19 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_11__ = type { i64, ptr, i32 }\n\n@COALITION_TYPE_JETSAM = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [39 x i8] c\"removing PID:%d from coalition id:%lld\\00\", align 1\n@.str.1 = private unnamed_addr constant [27 x i8] c\"    PID:%d was the leader!\\00\", align 1\n@COALITION_TYPE_RESOURCE = dso_local local_unnamed_addr global i64 0, align 8\n@KERN_SUCCESS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @i_coal_jetsam_remove_task], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @i_coal_jetsam_remove_task(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %8, label %4\n\n4:                                                ; preds = %2\n  %5 = load i64, ptr %0, align 8, !tbaa !5\n  %6 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %7 = icmp eq i64 %5, %6\n  br label %10\n\n8:                                                ; preds = %2\n  %9 = icmp eq ptr %1, null\n  br label %10\n\n10:                                               ; preds = %8, %4\n  %11 = phi i1 [ %9, %8 ], [ %7, %4 ]\n  %12 = zext i1 %11 to i32\n  %13 = tail call i32 @assert(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !12\n  %16 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %17 = getelementptr inbounds ptr, ptr %15, i64 %16\n  %18 = load ptr, ptr %17, align 8, !tbaa !14\n  %19 = icmp eq ptr %18, %0\n  %20 = zext i1 %19 to i32\n  %21 = tail call i32 @assert(i32 noundef %20) #2\n  %22 = tail call i32 @task_pid(ptr noundef %1) #2\n  %23 = getelementptr inbounds %struct.TYPE_11__, ptr %0, i64 0, i32 2\n  %24 = load i32, ptr %23, align 8, !tbaa !15\n  %25 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str, i32 noundef %22, i32 noundef %24) #2\n  %26 = getelementptr inbounds %struct.TYPE_11__, ptr %0, i64 0, i32 1\n  %27 = load ptr, ptr %26, align 8, !tbaa !16\n  %28 = icmp eq ptr %27, %1\n  br i1 %28, label %29, label %33\n\n29:                                               ; preds = %10\n  store ptr null, ptr %26, align 8, !tbaa !16\n  %30 = tail call i32 @task_pid(ptr noundef nonnull %1) #2\n  %31 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str.1, i32 noundef %30) #2\n  %32 = load ptr, ptr %1, align 8, !tbaa !17\n  br label %38\n\n33:                                               ; preds = %10\n  %34 = load ptr, ptr %1, align 8, !tbaa !17\n  %35 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %36 = getelementptr inbounds i32, ptr %34, i64 %35\n  %37 = tail call i32 @queue_empty(ptr noundef %36) #2\n  br label %41\n\n38:                                               ; preds = %29\n  %39 = load ptr, ptr %1, align 8, !tbaa !17\n  %40 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  br label %41\n\n41:                                               ; preds = %38, %33\n  %42 = phi ptr [ %39, %38 ], [ %32, %33 ]\n  %43 = phi i64 [ %40, %38 ], [ %35, %33 ]\n  %44 = getelementptr inbounds i32, ptr %42, i64 %43\n  %45 = tail call i32 @remqueue(ptr noundef %44) #2\n  %46 = load ptr, ptr %1, align 8, !tbaa !17\n  %47 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  %48 = getelementptr inbounds i32, ptr %46, i64 %47\n  %49 = load i32, ptr %48, align 4, !tbaa !18\n  %50 = tail call i32 @queue_chain_init(i32 noundef %49) #2\n  %51 = load i32, ptr @KERN_SUCCESS, align 4, !tbaa !18\n  ret i32 %51\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @coal_dbg(ptr noundef, i32 noundef, ...) local_unnamed_addr #1\n\ndeclare i32 @task_pid(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @remqueue(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_chain_init(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_11__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !10, i64 8}\n!13 = !{!\"TYPE_10__\", !10, i64 0, !10, i64 8}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !11, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!13, !10, i64 0}\n!18 = !{!19, !19, i64 0}\n!19 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr }\n%struct.TYPE_9__ = type { i64, ptr, i32 }\n\n@COALITION_TYPE_JETSAM = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [39 x i8] c\"removing PID:%d from coalition id:%lld\\00\", align 1\n@.str.1 = private unnamed_addr constant [27 x i8] c\"    PID:%d was the leader!\\00\", align 1\n@COALITION_TYPE_RESOURCE = dso_local local_unnamed_addr global i64 0, align 8\n@KERN_SUCCESS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @i_coal_jetsam_remove_task], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @i_coal_jetsam_remove_task(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %8, label %4\n\n4:                                                ; preds = %2\n  %5 = load i64, ptr %0, align 8, !tbaa !5\n  %6 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %7 = icmp eq i64 %5, %6\n  br label %10\n\n8:                                                ; preds = %2\n  %9 = icmp eq ptr %1, null\n  br label %10\n\n10:                                               ; preds = %8, %4\n  %11 = phi i1 [ %9, %8 ], [ %7, %4 ]\n  %12 = zext i1 %11 to i32\n  %13 = tail call i32 @assert(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !12\n  %16 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %17 = getelementptr inbounds ptr, ptr %15, i64 %16\n  %18 = load ptr, ptr %17, align 8, !tbaa !14\n  %19 = icmp eq ptr %18, %0\n  %20 = zext i1 %19 to i32\n  %21 = tail call i32 @assert(i32 noundef %20) #2\n  %22 = tail call i32 @task_pid(ptr noundef %1) #2\n  %23 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 2\n  %24 = load i32, ptr %23, align 8, !tbaa !15\n  %25 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str, i32 noundef %22, i32 noundef %24) #2\n  %26 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 1\n  %27 = load ptr, ptr %26, align 8, !tbaa !16\n  %28 = icmp eq ptr %27, %1\n  br i1 %28, label %29, label %33\n\n29:                                               ; preds = %10\n  store ptr null, ptr %26, align 8, !tbaa !16\n  %30 = tail call i32 @task_pid(ptr noundef nonnull %1) #2\n  %31 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str.1, i32 noundef %30) #2\n  %32 = load ptr, ptr %1, align 8, !tbaa !17\n  br label %39\n\n33:                                               ; preds = %10\n  %34 = load ptr, ptr %1, align 8, !tbaa !17\n  %35 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !11\n  %36 = getelementptr inbounds i32, ptr %34, i64 %35\n  %37 = tail call i32 @queue_empty(ptr noundef %36) #2\n  %38 = icmp eq i32 %37, 0\n  br label %42\n\n39:                                               ; preds = %29\n  %40 = load ptr, ptr %32, align 8, !tbaa !17\n  %41 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  br label %42\n\n42:                                               ; preds = %39, %33\n  %43 = phi ptr [ %40, %39 ], [ %32, %33 ]\n  %44 = phi i64 [ %41, %39 ], [ %35, %33 ]\n  %45 = getelementptr inbounds i32, ptr %43, i64 %44\n  %46 = tail call i32 @remqueue(ptr noundef %45) #2\n  %47 = load ptr, ptr %1, align 8, !tbaa !17\n  %48 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !11\n  %49 = getelementptr inbounds i32, ptr %47, i64 %48\n  %50 = load i32, ptr %49, align 4, !tbaa !18\n  %51 = tail call i32 @queue_chain_init(i32 noundef %50) #2\n  %52 = load i32, ptr @KERN_SUCCESS, align 4, !tbaa !18\n  ret i32 %52\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @coal_dbg(ptr noundef, i32 noundef, ...) local_unnamed_addr #1\n\ndeclare i32 @task_pid(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @remqueue(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_chain_init(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_9__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!\"long long\", !8, i64 0}\n!12 = !{!13, !10, i64 8}\n!13 = !{!\"TYPE_10__\", !10, i64 0, !10, i64 8}\n!14 = !{!10, !10, i64 0}\n!15 = !{!6, !11, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!13, !10, i64 0}\n!18 = !{!19, !19, i64 0}\n!19 = !{!\"int\", !8, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/darwin-xnu/osfmk/kern/extr_coalition.c_i_coal_jetsam_remove_task.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_8__ = type { ptr, ptr }\n%struct.TYPE_9__ = type { i64, %struct.TYPE_7__, i32 }\n%struct.TYPE_7__ = type { ptr }\n\n@COALITION_TYPE_JETSAM = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [39 x i8] c\"removing PID:%d from coalition id:%lld\\00\", align 1\n@.str.1 = private unnamed_addr constant [27 x i8] c\"    PID:%d was the leader!\\00\", align 1\n@COALITION_TYPE_RESOURCE = dso_local local_unnamed_addr global i64 0, align 8\n@KERN_SUCCESS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @i_coal_jetsam_remove_task], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @i_coal_jetsam_remove_task(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = icmp eq ptr %0, null\n  br i1 %3, label %9, label %4\n\n4:                                                ; preds = %2\n  %5 = load i64, ptr %0, align 8, !tbaa !5\n  %6 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !13\n  %7 = icmp eq i64 %5, %6\n  %8 = zext i1 %7 to i32\n  br label %9\n\n9:                                                ; preds = %4, %2\n  %10 = phi i32 [ 0, %2 ], [ %8, %4 ]\n  %11 = tail call i32 @assert(i32 noundef %10) #2\n  %12 = getelementptr inbounds %struct.TYPE_8__, ptr %1, i64 0, i32 1\n  %13 = load ptr, ptr %12, align 8, !tbaa !14\n  %14 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !13\n  %15 = getelementptr inbounds ptr, ptr %13, i64 %14\n  %16 = load ptr, ptr %15, align 8, !tbaa !16\n  %17 = icmp eq ptr %16, %0\n  %18 = zext i1 %17 to i32\n  %19 = tail call i32 @assert(i32 noundef %18) #2\n  %20 = tail call i32 @task_pid(ptr noundef %1) #2\n  %21 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 2\n  %22 = load i32, ptr %21, align 8, !tbaa !17\n  %23 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str, i32 noundef %20, i32 noundef %22) #2\n  %24 = getelementptr inbounds %struct.TYPE_9__, ptr %0, i64 0, i32 1\n  %25 = load ptr, ptr %24, align 8, !tbaa !18\n  %26 = icmp eq ptr %25, %1\n  br i1 %26, label %27, label %30\n\n27:                                               ; preds = %9\n  store ptr null, ptr %24, align 8, !tbaa !18\n  %28 = tail call i32 @task_pid(ptr noundef nonnull %1) #2\n  %29 = tail call i32 (ptr, i32, ...) @coal_dbg(ptr noundef nonnull @.str.1, i32 noundef %28) #2\n  br label %38\n\n30:                                               ; preds = %9\n  %31 = load ptr, ptr %1, align 8, !tbaa !19\n  %32 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !13\n  %33 = getelementptr inbounds i32, ptr %31, i64 %32\n  %34 = tail call i32 @queue_empty(ptr noundef %33) #2\n  %35 = icmp eq i32 %34, 0\n  %36 = zext i1 %35 to i32\n  %37 = tail call i32 @assert(i32 noundef %36) #2\n  br label %38\n\n38:                                               ; preds = %30, %27\n  %39 = load ptr, ptr %1, align 8, !tbaa !19\n  %40 = load i64, ptr @COALITION_TYPE_JETSAM, align 8, !tbaa !13\n  %41 = getelementptr inbounds i32, ptr %39, i64 %40\n  %42 = tail call i32 @remqueue(ptr noundef %41) #2\n  %43 = load ptr, ptr %1, align 8, !tbaa !19\n  %44 = load i64, ptr @COALITION_TYPE_RESOURCE, align 8, !tbaa !13\n  %45 = getelementptr inbounds i32, ptr %43, i64 %44\n  %46 = load i32, ptr %45, align 4, !tbaa !20\n  %47 = tail call i32 @queue_chain_init(i32 noundef %46) #2\n  %48 = load i32, ptr @KERN_SUCCESS, align 4, !tbaa !20\n  ret i32 %48\n}\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @coal_dbg(ptr noundef, i32 noundef, ...) local_unnamed_addr #1\n\ndeclare i32 @task_pid(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @remqueue(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @queue_chain_init(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_9__\", !7, i64 0, !10, i64 8, !12, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_7__\", !11, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!7, !7, i64 0}\n!14 = !{!15, !11, i64 8}\n!15 = !{!\"TYPE_8__\", !11, i64 0, !11, i64 8}\n!16 = !{!11, !11, i64 0}\n!17 = !{!6, !12, i64 16}\n!18 = !{!6, !11, i64 8}\n!19 = !{!15, !11, i64 0}\n!20 = !{!12, !12, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_super.c_ext4_alloc_inode.ll\"\n\t.section\t.rodata.cst16,\"aM\",@progbits,16\n\t.p2align\t4                               # -- Begin function ext4_alloc_inode\n.LCPI0_0:\n\t.zero\t16\n\t.text\n\t.p2align\t4, 0x90\n\t.type\text4_alloc_inode,@function\next4_alloc_inode:                       # @ext4_alloc_inode\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovl\text4_inode_cachep(%rip), %edi\n\tmovl\tGFP_NOFS(%rip), %esi\n\tcallq\tkmem_cache_alloc@PLT\n\tmovq\t%rax, %rbx\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tmovl\t$1, %esi\n\tcallq\tinode_set_iversion@PLT\n\tleaq\t140(%rbx), %rdi\n\tcallq\tspin_lock_init@PLT\n\tleaq\t136(%rbx), %rdi\n\tcallq\tINIT_LIST_HEAD@PLT\n\tleaq\t132(%rbx), %rdi\n\tcallq\tspin_lock_init@PLT\n\tleaq\t128(%rbx), %rdi\n\tcallq\text4_es_init_tree@PLT\n\tleaq\t124(%rbx), %rdi\n\tcallq\trwlock_init@PLT\n\tleaq\t120(%rbx), %rdi\n\tcallq\tINIT_LIST_HEAD@PLT\n\tleaq\t68(%rbx), %rdi\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, 72(%rbx)\n\tmovups\t%xmm0, 88(%rbx)\n\tmovups\t%xmm0, 104(%rbx)\n\tcallq\tspin_lock_init@PLT\n\tleaq\t64(%rbx), %rdi\n\tcallq\text4_init_pending_tree@PLT\n\tmovq\t$0, 40(%rbx)\n\tleaq\t36(%rbx), %rdi\n\tcallq\tINIT_LIST_HEAD@PLT\n\tleaq\t32(%rbx), %rdi\n\tcallq\tspin_lock_init@PLT\n\tleaq\t8(%rbx), %rdi\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, 16(%rbx)\n\txorl\t%esi, %esi\n\tcallq\tatomic_set@PLT\n\tmovq\t%rbx, %rdi\n\taddq\t$4, %rdi\n\tmovl\text4_end_io_rsv_work(%rip), %esi\n\tcallq\tINIT_WORK@PLT\n.LBB0_2:\n\tmovq\t%rbx, %rax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\text4_alloc_inode, .Lfunc_end0-ext4_alloc_inode\n\t.cfi_endproc\n                                        # -- End function\n\t.type\text4_inode_cachep,@object       # @ext4_inode_cachep\n\t.bss\n\t.globl\text4_inode_cachep\n\t.p2align\t2\next4_inode_cachep:\n\t.long\t0                               # 0x0\n\t.size\text4_inode_cachep, 4\n\n\t.type\tGFP_NOFS,@object                # @GFP_NOFS\n\t.globl\tGFP_NOFS\n\t.p2align\t2\nGFP_NOFS:\n\t.long\t0                               # 0x0\n\t.size\tGFP_NOFS, 4\n\n\t.type\text4_end_io_rsv_work,@object    # @ext4_end_io_rsv_work\n\t.globl\text4_end_io_rsv_work\n\t.p2align\t2\next4_end_io_rsv_work:\n\t.long\t0                               # 0x0\n\t.size\text4_end_io_rsv_work, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.inode = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.inode = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.inode = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.inode = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/fs/ext4/extr_super.c_ext4_alloc_inode.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.ext4_inode_info = type { %struct.inode, i32, i32, i64, i64, i32, i32, ptr, i32, i64, i32, i32, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32 }\n%struct.inode = type { i32 }\n\n@ext4_inode_cachep = dso_local local_unnamed_addr global i32 0, align 4\n@GFP_NOFS = dso_local local_unnamed_addr global i32 0, align 4\n@ext4_end_io_rsv_work = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ext4_alloc_inode], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @ext4_alloc_inode(ptr nocapture readnone %0) #0 {\n  %2 = load i32, ptr @ext4_inode_cachep, align 4, !tbaa !5\n  %3 = load i32, ptr @GFP_NOFS, align 4, !tbaa !5\n  %4 = tail call ptr @kmem_cache_alloc(i32 noundef %2, i32 noundef %3) #3\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %36, label %6\n\n6:                                                ; preds = %1\n  %7 = tail call i32 @inode_set_iversion(ptr noundef nonnull %4, i32 noundef 1) #3\n  %8 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 23\n  %9 = tail call i32 @spin_lock_init(ptr noundef nonnull %8) #3\n  %10 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 22\n  %11 = tail call i32 @INIT_LIST_HEAD(ptr noundef nonnull %10) #3\n  %12 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 21\n  %13 = tail call i32 @spin_lock_init(ptr noundef nonnull %12) #3\n  %14 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 20\n  %15 = tail call i32 @ext4_es_init_tree(ptr noundef nonnull %14) #3\n  %16 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 19\n  %17 = tail call i32 @rwlock_init(ptr noundef nonnull %16) #3\n  %18 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 18\n  %19 = tail call i32 @INIT_LIST_HEAD(ptr noundef nonnull %18) #3\n  %20 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 12\n  %21 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 11\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %20, i8 0, i64 48, i1 false)\n  %22 = tail call i32 @spin_lock_init(ptr noundef nonnull %21) #3\n  %23 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 10\n  %24 = tail call i32 @ext4_init_pending_tree(ptr noundef nonnull %23) #3\n  %25 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 7\n  store ptr null, ptr %25, align 8, !tbaa !9\n  %26 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 6\n  %27 = tail call i32 @INIT_LIST_HEAD(ptr noundef nonnull %26) #3\n  %28 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 5\n  %29 = tail call i32 @spin_lock_init(ptr noundef nonnull %28) #3\n  %30 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 3\n  %31 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 2\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, i8 0, i64 16, i1 false)\n  %32 = tail call i32 @atomic_set(ptr noundef nonnull %31, i32 noundef 0) #3\n  %33 = getelementptr inbounds %struct.ext4_inode_info, ptr %4, i64 0, i32 1\n  %34 = load i32, ptr @ext4_end_io_rsv_work, align 4, !tbaa !5\n  %35 = tail call i32 @INIT_WORK(ptr noundef nonnull %33, i32 noundef %34) #3\n  br label %36\n\n36:                                               ; preds = %1, %6\n  ret ptr %4\n}\n\ndeclare ptr @kmem_cache_alloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @inode_set_iversion(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock_init(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @INIT_LIST_HEAD(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ext4_es_init_tree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @rwlock_init(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ext4_init_pending_tree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_set(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @INIT_WORK(ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !13, i64 40}\n!10 = !{!\"ext4_inode_info\", !11, i64 0, !6, i64 4, !6, i64 8, !12, i64 16, !12, i64 24, !6, i64 32, !6, i64 36, !13, i64 40, !6, i64 48, !12, i64 56, !6, i64 64, !6, i64 68, !12, i64 72, !12, i64 80, !12, i64 88, !12, i64 96, !12, i64 104, !12, i64 112, !6, i64 120, !6, i64 124, !6, i64 128, !6, i64 132, !6, i64 136, !6, i64 140}\n!11 = !{!\"inode\", !6, i64 0}\n!12 = !{!\"long\", !7, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_delayed-ref.c_btrfs_migrate_to_delayed_refs_rsv.ll\"\n\t.globl\tbtrfs_migrate_to_delayed_refs_rsv # -- Begin function btrfs_migrate_to_delayed_refs_rsv\n\t.p2align\t4, 0x90\n\t.type\tbtrfs_migrate_to_delayed_refs_rsv,@function\nbtrfs_migrate_to_delayed_refs_rsv:      # @btrfs_migrate_to_delayed_refs_rsv\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r13, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdx, %r14\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r13\n\tleaq\t24(%rsi), %r15\n\tmovq\t%r15, %rdi\n\tcallq\tspin_lock@PLT\n\tmovdqu\t(%rbx), %xmm0\n\tmovq\t%r14, %xmm1\n\tpshufd\t$68, %xmm1, %xmm1               # xmm1 = xmm1[0,1,0,1]\n\tpsubq\t%xmm1, %xmm0\n\tmovdqu\t%xmm0, (%rbx)\n\tmovq\t%r15, %rdi\n\tcallq\tspin_unlock@PLT\n\tleaq\t24(%r13), %r15\n\tmovq\t%r15, %rdi\n\tcallq\tspin_lock@PLT\n\tmovq\t(%r13), %rax\n\tmovq\t8(%r13), %rcx\n\tmovb\t$1, %bl\n\tmovq\t%rcx, %rdx\n\tsubq\t%rax, %rdx\n\tjle\t.LBB0_3\n# %bb.1:\n\tmovq\t%rdx, %rsi\n\tsubq\t%r14, %rsi\n\tmovq\t%r14, %r12\n\tcmovlq\t%rdx, %r12\n\tnegq\t%rsi\n\txorl\t%edi, %edi\n\tcmpq\t%rdx, %r14\n\tmovq\t%rsi, %r14\n\tcmovleq\t%rdi, %r14\n\ttestq\t%r12, %r12\n\tje\t.LBB0_3\n# %bb.2:\n\taddq\t%r12, %rax\n\tmovq\t%rax, (%r13)\n\txorl\t%ebx, %ebx\n\tcmpq\t%rcx, %rax\n\tjge\t.LBB0_4\n\tjmp\t.LBB0_5\n.LBB0_3:\n\txorl\t%r12d, %r12d\n\tcmpq\t%rcx, %rax\n\tjl\t.LBB0_5\n.LBB0_4:\n\tmovl\t$1, 16(%r13)\n.LBB0_5:\n\tmovq\t%r15, %rdi\n\tcallq\tspin_unlock@PLT\n\ttestb\t%bl, %bl\n\tjne\t.LBB0_7\n# %bb.6:\n\tmovl\t$.L.str, %esi\n\tmovq\t%r13, %rdi\n\txorl\t%edx, %edx\n\tmovq\t%r12, %rcx\n\tmovl\t$1, %r8d\n\tcallq\ttrace_btrfs_space_reservation@PLT\n.LBB0_7:\n\ttestq\t%r14, %r14\n\tje\t.LBB0_9\n# %bb.8:\n\tmovl\t20(%r13), %esi\n\tmovq\t%r13, %rdi\n\tmovq\t%r14, %rdx\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\tbtrfs_space_info_free_bytes_may_use@PLT # TAILCALL\n.LBB0_9:\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tbtrfs_migrate_to_delayed_refs_rsv, .Lfunc_end0-btrfs_migrate_to_delayed_refs_rsv\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"delayed_refs_rsv\"\n\t.size\t.L.str, 17\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.btrfs_space_info = type { i64, i64, i32, i32 }\n%struct.btrfs_fs_info = type { i64, i64, i32, i32 }\n\n@.str = private unnamed_addr constant [17 x i8] c\"delayed_refs_rsv\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @btrfs_migrate_to_delayed_refs_rsv(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 3\n  %5 = tail call i32 @spin_lock(ptr noundef nonnull %4) #2\n  %6 = load i64, ptr %1, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = sub nsw i64 %8, %6\n  %10 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 2\n  %11 = load <2 x i64>, ptr %1, align 8, !tbaa !12\n  %12 = insertelement <2 x i64> poison, i64 %2, i64 0\n  %13 = shufflevector <2 x i64> %12, <2 x i64> poison, <2 x i32> zeroinitializer\n  %14 = sub nsw <2 x i64> %11, %13\n  store <2 x i64> %14, ptr %1, align 8, !tbaa !12\n  %15 = tail call i32 @spin_unlock(ptr noundef nonnull %4) #2\n  %16 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 3\n  %17 = tail call i32 @spin_lock(ptr noundef nonnull %16) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !13\n  %19 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 1\n  %20 = load i64, ptr %19, align 8, !tbaa !15\n  %21 = icmp sgt i64 %18, %20\n  br i1 %21, label %22, label %30\n\n22:                                               ; preds = %3\n  %23 = icmp sgt i64 %2, %18\n  %24 = sub nsw i64 %20, %2\n  %25 = sub nsw i64 %24, %2\n  %26 = select i1 %23, i64 %25, i64 0\n  %27 = sub nsw i64 %24, %2\n  %28 = select i1 %23, i64 %27, i64 0\n  %29 = add nsw i64 %26, %18\n  store i64 %29, ptr %0, align 8, !tbaa !13\n  br label %30\n\n30:                                               ; preds = %22, %3\n  %31 = phi i64 [ %28, %22 ], [ 0, %3 ]\n  %32 = phi i64 [ %27, %22 ], [ %9, %3 ]\n  %33 = icmp slt i64 %32, %20\n  br i1 %33, label %36, label %34\n\n34:                                               ; preds = %30\n  %35 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  store i32 1, ptr %35, align 8, !tbaa !16\n  br label %36\n\n36:                                               ; preds = %34, %30\n  %37 = tail call i32 @spin_unlock(ptr noundef nonnull %16) #2\n  %38 = icmp eq i64 %31, 0\n  br i1 %38, label %41, label %39\n\n39:                                               ; preds = %36\n  %40 = tail call i32 @trace_btrfs_space_reservation(ptr noundef nonnull %0, ptr noundef nonnull @.str, i64 noundef %31, i64 noundef %31, i32 noundef 1) #2\n  br label %41\n\n41:                                               ; preds = %39, %36\n  %42 = icmp eq i64 %32, 0\n  br i1 %42, label %46, label %43\n\n43:                                               ; preds = %41\n  %44 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  %45 = load i32, ptr %44, align 8, !tbaa !16\n  tail call void @btrfs_space_info_free_bytes_may_use(ptr noundef nonnull %0, i32 noundef %45, i64 noundef %32) #2\n  br label %46\n\n46:                                               ; preds = %43, %41\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @trace_btrfs_space_reservation(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare void @btrfs_space_info_free_bytes_may_use(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"btrfs_space_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!14, !7, i64 0}\n!14 = !{!\"btrfs_fs_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!15 = !{!14, !7, i64 8}\n!16 = !{!14, !10, i64 16}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.btrfs_space_info = type { i64, i64, i32, i32 }\n%struct.btrfs_fs_info = type { i64, i64, i32, i32 }\n\n@.str = private unnamed_addr constant [17 x i8] c\"delayed_refs_rsv\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @btrfs_migrate_to_delayed_refs_rsv(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 3\n  %5 = tail call i32 @spin_lock(ptr noundef nonnull %4) #2\n  %6 = load i64, ptr %1, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = sub nsw i64 %8, %6\n  %10 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 2\n  %11 = load <2 x i64>, ptr %1, align 8, !tbaa !12\n  %12 = insertelement <2 x i64> poison, i64 %2, i64 0\n  %13 = shufflevector <2 x i64> %12, <2 x i64> poison, <2 x i32> zeroinitializer\n  %14 = sub nsw <2 x i64> %11, %13\n  store <2 x i64> %14, ptr %1, align 8, !tbaa !12\n  %15 = tail call i32 @spin_unlock(ptr noundef nonnull %4) #2\n  %16 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 3\n  %17 = tail call i32 @spin_lock(ptr noundef nonnull %16) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !13\n  %19 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 1\n  %20 = load i64, ptr %19, align 8, !tbaa !15\n  %21 = icmp sgt i64 %18, %20\n  br i1 %21, label %22, label %30\n\n22:                                               ; preds = %3\n  %23 = icmp sgt i64 %2, %18\n  %24 = sub nsw i64 %20, %2\n  %25 = sub nsw i64 %24, %2\n  %26 = select i1 %23, i64 %25, i64 0\n  %27 = sub nsw i64 %2, %25\n  %28 = select i1 %23, i64 %27, i64 0\n  %29 = add nsw i64 %26, %18\n  store i64 %29, ptr %0, align 8, !tbaa !13\n  br label %30\n\n30:                                               ; preds = %22, %3\n  %31 = phi i64 [ %28, %22 ], [ 0, %3 ]\n  %32 = phi i64 [ %27, %22 ], [ %2, %3 ]\n  %33 = icmp slt i64 %29, %20\n  br i1 %33, label %36, label %34\n\n34:                                               ; preds = %30\n  %35 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  store i32 1, ptr %35, align 8, !tbaa !16\n  br label %36\n\n36:                                               ; preds = %34, %30\n  %37 = tail call i32 @spin_unlock(ptr noundef nonnull %16) #2\n  %38 = icmp eq i64 %31, 0\n  br i1 %38, label %39, label %42\n\n39:                                               ; preds = %36\n  %40 = tail call i32 @trace_btrfs_space_reservation(ptr noundef nonnull %0, ptr noundef nonnull @.str, i64 noundef 0, i64 noundef %31, i32 noundef 1) #2\n  %41 = icmp eq i64 %32, 0\n  br i1 %41, label %45, label %43\n\n42:                                               ; preds = %36\n  br label %43\n\n43:                                               ; preds = %39, %42\n  %44 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  tail call void @btrfs_space_info_free_bytes_may_use(ptr noundef nonnull %0, i32 noundef %4, i64 noundef %32) #2\n  br label %45\n\n45:                                               ; preds = %43, %39\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @trace_btrfs_space_reservation(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare void @btrfs_space_info_free_bytes_may_use(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"btrfs_space_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!14, !7, i64 0}\n!14 = !{!\"btrfs_fs_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!15 = !{!14, !7, i64 8}\n!16 = !{!14, !10, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.btrfs_space_info = type { i64, i64, i32, i32 }\n%struct.btrfs_fs_info = type { i64, i64, i32, i32 }\n\n@.str = private unnamed_addr constant [17 x i8] c\"delayed_refs_rsv\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @btrfs_migrate_to_delayed_refs_rsv(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 3\n  %5 = tail call i32 @spin_lock(ptr noundef nonnull %4) #2\n  %6 = load i64, ptr %1, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = sub nsw i64 %8, %6\n  %10 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 2\n  %11 = load <2 x i64>, ptr %1, align 8, !tbaa !12\n  %12 = insertelement <2 x i64> poison, i64 %2, i64 0\n  %13 = shufflevector <2 x i64> %12, <2 x i64> poison, <2 x i32> zeroinitializer\n  %14 = sub nsw <2 x i64> %11, %13\n  store <2 x i64> %14, ptr %1, align 8, !tbaa !12\n  %15 = tail call i32 @spin_unlock(ptr noundef nonnull %4) #2\n  %16 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 3\n  %17 = tail call i32 @spin_lock(ptr noundef nonnull %16) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !13\n  %19 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 1\n  %20 = load i64, ptr %19, align 8, !tbaa !15\n  %21 = icmp sgt i64 %18, %20\n  br i1 %21, label %22, label %30\n\n22:                                               ; preds = %3\n  %23 = icmp slt i64 %2, %18\n  %24 = sub nsw i64 %20, %2\n  %25 = sub nsw i64 %24, %2\n  %26 = select i1 %23, i64 %25, i64 0\n  %27 = select i1 %23, i64 %2, i64 %24\n  %28 = icmp eq i64 %26, 0\n  br i1 %28, label %30, label %29\n\n29:                                               ; preds = %22\n  %30 = add nsw i64 %26, %18\n  store i64 %30, ptr %0, align 8, !tbaa !13\n  %31 = icmp slt i64 %30, %20\n  br i1 %31, label %34, label %32\n\n32:                                               ; preds = %29\n  %33 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  store i32 1, ptr %33, align 8, !tbaa !16\n  br label %34\n\n34:                                               ; preds = %32, %29\n  %35 = tail call i32 @spin_unlock(ptr noundef nonnull %16) #2\n  br i1 %27, label %36, label %38\n\n36:                                               ; preds = %34\n  %37 = tail call i32 @trace_btrfs_space_reservation(ptr noundef nonnull %0, ptr noundef nonnull @.str, i64 noundef 0, i64 noundef %26, i32 noundef 1) #2\n  br label %38\n\n38:                                               ; preds = %36, %34\n  %39 = icmp eq i64 %27, 0\n  br i1 %39, label %43, label %40\n\n40:                                               ; preds = %38\n  %41 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  %42 = load i32, ptr %41, align 8, !tbaa !16\n  tail call void @btrfs_space_info_free_bytes_may_use(ptr noundef nonnull %0, i32 noundef %42, i64 noundef %27) #2\n  br label %43\n\n43:                                               ; preds = %40, %38\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @trace_btrfs_space_reservation(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare void @btrfs_space_info_free_bytes_may_use(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"btrfs_space_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!14, !7, i64 0}\n!14 = !{!\"btrfs_fs_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!15 = !{!14, !7, i64 8}\n!16 = !{!14, !10, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.btrfs_space_info = type { i64, i64, i32, i32 }\n%struct.btrfs_fs_info = type { i64, i64, i32, i32 }\n\n@.str = private unnamed_addr constant [17 x i8] c\"delayed_refs_rsv\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @btrfs_migrate_to_delayed_refs_rsv(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 3\n  %5 = tail call i32 @spin_lock(ptr noundef nonnull %4) #2\n  %6 = load i64, ptr %1, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = sub nsw i64 %8, %6\n  %10 = getelementptr inbounds %struct.btrfs_space_info, ptr %1, i64 0, i32 2\n  %11 = load <2 x i64>, ptr %1, align 8, !tbaa !12\n  %12 = insertelement <2 x i64> poison, i64 %2, i64 0\n  %13 = shufflevector <2 x i64> %12, <2 x i64> poison, <2 x i32> zeroinitializer\n  %14 = sub nsw <2 x i64> %11, %13\n  store <2 x i64> %14, ptr %1, align 8, !tbaa !12\n  %15 = tail call i32 @spin_unlock(ptr noundef nonnull %4) #2\n  %16 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 3\n  %17 = tail call i32 @spin_lock(ptr noundef nonnull %16) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !13\n  %19 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 1\n  %20 = load i64, ptr %19, align 8, !tbaa !15\n  %21 = icmp sgt i64 %18, %20\n  br i1 %21, label %22, label %30\n\n22:                                               ; preds = %3\n  %23 = icmp slt i64 %2, %18\n  %24 = sub nsw i64 %20, %2\n  %25 = sub nsw i64 %24, %2\n  %26 = select i1 %23, i64 %25, i64 0\n  %27 = select i1 %23, i64 %2, i64 %24\n  %28 = icmp eq i64 %26, 0\n  br i1 %28, label %30, label %29\n\n29:                                               ; preds = %22\n  %30 = add nsw i64 %26, %18\n  store i64 %30, ptr %0, align 8, !tbaa !13\n  %31 = icmp slt i64 %30, %20\n  br i1 %31, label %34, label %32\n\n32:                                               ; preds = %29\n  %33 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  store i32 1, ptr %33, align 8, !tbaa !16\n  br label %34\n\n34:                                               ; preds = %32, %29\n  %35 = tail call i32 @spin_unlock(ptr noundef nonnull %16) #2\n  br i1 %27, label %38, label %36\n\n36:                                               ; preds = %34\n  %37 = tail call i32 @trace_btrfs_space_reservation(ptr noundef nonnull %0, ptr noundef nonnull @.str, i64 noundef 0, i64 noundef %27, i32 noundef 1) #2\n  br label %38\n\n38:                                               ; preds = %36, %34\n  %39 = icmp eq i64 %27, 0\n  br i1 %39, label %43, label %40\n\n40:                                               ; preds = %38\n  %41 = getelementptr inbounds %struct.btrfs_fs_info, ptr %0, i64 0, i32 2\n  %42 = load i32, ptr %41, align 8, !tbaa !16\n  tail call void @btrfs_space_info_free_bytes_may_use(ptr noundef nonnull %0, i32 noundef %42, i64 noundef %27) #2\n  br label %43\n\n43:                                               ; preds = %40, %38\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @trace_btrfs_space_reservation(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare void @btrfs_space_info_free_bytes_may_use(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"btrfs_space_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!14, !7, i64 0}\n!14 = !{!\"btrfs_fs_info\", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20}\n!15 = !{!14, !7, i64 8}\n!16 = !{!14, !10, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/fs/btrfs/extr_delayed-ref.c_btrfs_migrate_to_delayed_refs_rsv.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.btrfs_block_rsv = type { i64, i64, i32, i32, i32 }\n\n@.str = private unnamed_addr constant [17 x i8] c\"delayed_refs_rsv\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @btrfs_migrate_to_delayed_refs_rsv(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #0 {\n  %4 = getelementptr inbounds %struct.btrfs_block_rsv, ptr %1, i64 0, i32 4\n  %5 = tail call i32 @spin_lock(ptr noundef nonnull %4) #3\n  %6 = load <2 x i64>, ptr %1, align 8, !tbaa !5\n  %7 = insertelement <2 x i64> poison, i64 %2, i64 0\n  %8 = shufflevector <2 x i64> %7, <2 x i64> poison, <2 x i32> zeroinitializer\n  %9 = sub nsw <2 x i64> %6, %8\n  store <2 x i64> %9, ptr %1, align 8, !tbaa !5\n  %10 = tail call i32 @spin_unlock(ptr noundef nonnull %4) #3\n  %11 = getelementptr inbounds %struct.btrfs_block_rsv, ptr %0, i64 0, i32 4\n  %12 = tail call i32 @spin_lock(ptr noundef nonnull %11) #3\n  %13 = getelementptr inbounds %struct.btrfs_block_rsv, ptr %0, i64 0, i32 1\n  %14 = load i64, ptr %13, align 8, !tbaa !9\n  %15 = load i64, ptr %0, align 8, !tbaa !12\n  %16 = icmp sgt i64 %14, %15\n  br i1 %16, label %17, label %26\n\n17:                                               ; preds = %3\n  %18 = sub nsw i64 %14, %15\n  %19 = icmp slt i64 %18, %2\n  %20 = sub nsw i64 %2, %18\n  %21 = select i1 %19, i64 %20, i64 0\n  %22 = tail call i64 @llvm.smin.i64(i64 %18, i64 %2)\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %17\n  %25 = add nsw i64 %22, %15\n  store i64 %25, ptr %0, align 8, !tbaa !12\n  br label %26\n\n26:                                               ; preds = %3, %24, %17\n  %27 = phi i64 [ %25, %24 ], [ %15, %17 ], [ %15, %3 ]\n  %28 = phi i1 [ false, %24 ], [ true, %17 ], [ true, %3 ]\n  %29 = phi i64 [ %22, %24 ], [ 0, %17 ], [ 0, %3 ]\n  %30 = phi i64 [ %21, %24 ], [ %21, %17 ], [ %2, %3 ]\n  %31 = icmp slt i64 %27, %14\n  br i1 %31, label %34, label %32\n\n32:                                               ; preds = %26\n  %33 = getelementptr inbounds %struct.btrfs_block_rsv, ptr %0, i64 0, i32 2\n  store i32 1, ptr %33, align 8, !tbaa !13\n  br label %34\n\n34:                                               ; preds = %32, %26\n  %35 = tail call i32 @spin_unlock(ptr noundef nonnull %11) #3\n  br i1 %28, label %38, label %36\n\n36:                                               ; preds = %34\n  %37 = tail call i32 @trace_btrfs_space_reservation(ptr noundef nonnull %0, ptr noundef nonnull @.str, i32 noundef 0, i64 noundef %29, i32 noundef 1) #3\n  br label %38\n\n38:                                               ; preds = %36, %34\n  %39 = icmp eq i64 %30, 0\n  br i1 %39, label %44, label %40\n\n40:                                               ; preds = %38\n  %41 = getelementptr inbounds %struct.btrfs_block_rsv, ptr %0, i64 0, i32 3\n  %42 = load i32, ptr %41, align 4, !tbaa !14\n  %43 = tail call i32 @btrfs_space_info_free_bytes_may_use(ptr noundef nonnull %0, i32 noundef %42, i64 noundef %30) #3\n  br label %44\n\n44:                                               ; preds = %40, %38\n  ret void\n}\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @trace_btrfs_space_reservation(ptr noundef, ptr noundef, i32 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @btrfs_space_info_free_bytes_may_use(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i64 @llvm.smin.i64(i64, i64) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 8}\n!10 = !{!\"btrfs_block_rsv\", !6, i64 0, !6, i64 8, !11, i64 16, !11, i64 20, !11, i64 24}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!10, !6, i64 0}\n!13 = !{!10, !11, i64 16}\n!14 = !{!10, !11, i64 20}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_variable.c_assign_class_name.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function assign_class_name\n\t.type\tassign_class_name,@function\nassign_class_name:                      # @assign_class_name\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, %ebx\n\tmovl\t%edx, %r14d\n\tmovq\t%rsi, %rbp\n\tmovq\t%rdi, %r13\n\tmovl\t(%rsi), %edi\n\tcallq\tnamespace_p@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_10\n# %bb.1:\n\tmovl\t%ebx, %edi\n\tcallq\tmrb_type@PLT\n\tmovl\t%eax, %edi\n\tcallq\tnamespace_p@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_10\n# %bb.2:\n\tmovl\t%ebx, %edi\n\tcallq\tmrb_obj_ptr@PLT\n\tcmpq\t%rbp, %rax\n\tje\t.LBB0_10\n# %bb.3:\n\tmovq\t%rax, %r15\n\tmovq\t%r13, %rdi\n\tmovl\t%r14d, %esi\n\txorl\t%edx, %edx\n\tcallq\tmrb_sym_name_len@PLT\n\tmovl\t(%rax), %edi\n\tcallq\tISUPPER@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_10\n# %bb.4:\n\tmovl\t$.L.str, %esi\n\tmovq\t%r13, %rdi\n\tcallq\tmrb_intern_lit@PLT\n\tmovl\t%eax, %r12d\n\tmovq\t%r13, %rdi\n\tmovq\t%r15, %rsi\n\tmovl\t%eax, %edx\n\tcallq\tmrb_obj_iv_get@PLT\n\tmovl\t%eax, %edi\n\tcallq\tmrb_nil_p@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_10\n# %bb.5:\n\tmovl\t$.L.str.1, %esi\n\tmovq\t%r13, %rdi\n\tcallq\tmrb_intern_lit@PLT\n\tmovl\t%eax, %ebx\n\tmovq\t%r13, %rdi\n\tmovq\t%r15, %rsi\n\tmovl\t%eax, %edx\n\tcallq\tmrb_obj_iv_get@PLT\n\tmovl\t%eax, %edi\n\tcallq\tmrb_nil_p@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_10\n# %bb.6:\n\tcmpq\t%rbp, (%r13)\n\tje\t.LBB0_7\n# %bb.9:\n\tmovq\t%rbp, %rdi\n\tcallq\tmrb_obj_value@PLT\n\tmovq\t%r13, %rdi\n\tmovq\t%r15, %rsi\n\tmovl\t%ebx, %edx\n\tjmp\t.LBB0_8\n.LBB0_10:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_7:\n\t.cfi_def_cfa_offset 64\n\tmovl\t%r14d, %edi\n\tcallq\tmrb_symbol_value@PLT\n\tmovq\t%r13, %rdi\n\tmovq\t%r15, %rsi\n\tmovl\t%r12d, %edx\n.LBB0_8:\n\tmovl\t%eax, %ecx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tmrb_obj_iv_set_force@PLT        # TAILCALL\n.Lfunc_end0:\n\t.size\tassign_class_name, .Lfunc_end0-assign_class_name\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"__classname__\"\n\t.size\t.L.str, 14\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"__outer__\"\n\t.size\t.L.str.1, 10\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [14 x i8] c\"__classname__\\00\", align 1\n@.str.1 = private unnamed_addr constant [10 x i8] c\"__outer__\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @assign_class_name], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @assign_class_name(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr %1, align 4, !tbaa !5\n  %6 = tail call i64 @namespace_p(i32 noundef %5) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %34, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 @mrb_type(i32 noundef %3) #2\n  %10 = tail call i64 @namespace_p(i32 noundef %9) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %34, label %12\n\n12:                                               ; preds = %8\n  %13 = tail call ptr @mrb_obj_ptr(i32 noundef %3) #2\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %34, label %15\n\n15:                                               ; preds = %12\n  %16 = tail call ptr @mrb_sym_name_len(ptr noundef %0, i32 noundef %2, i32 noundef 0) #2\n  %17 = load i32, ptr %16, align 4, !tbaa !10\n  %18 = tail call i64 @ISUPPER(i32 noundef %17) #2\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %34, label %20\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str) #2\n  %22 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %21) #2\n  %23 = tail call i64 @mrb_nil_p(i32 noundef %22) #2\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %34, label %25\n\n25:                                               ; preds = %20\n  %26 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str.1) #2\n  %27 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %26) #2\n  %28 = tail call i64 @mrb_nil_p(i32 noundef %27) #2\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %25\n  %31 = load ptr, ptr %0, align 8, !tbaa !12\n  %32 = icmp eq ptr %31, %1\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %30\n  %34 = tail call i32 @mrb_symbol_value(i32 noundef %2) #2\n  tail call void @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef nonnull %13, i32 noundef %21, i32 noundef %34) #2\n  br label %34\n\n34:                                               ; preds = %33, %30, %25, %15, %20, %12, %8, %4\n  ret void\n\n35:                                               ; preds = %36\n  unreachable\n\n36:                                               ; preds = %30\n  %37 = tail call i32 @mrb_obj_value(ptr noundef nonnull %1) #2\n  %38 = tail call i32 @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef nonnull %13, i32 noundef %21, i32 noundef %37) #2\n  br label %34\n}\n\ndeclare i64 @namespace_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_type(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_obj_ptr(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_sym_name_len(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ISUPPER(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_intern_lit(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mrb_nil_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_symbol_value(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_set_force(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_value(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_9__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_11__\", !14, i64 0}\n!14 = !{!\"any pointer\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [14 x i8] c\"__classname__\\00\", align 1\n@.str.1 = private unnamed_addr constant [10 x i8] c\"__outer__\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @assign_class_name], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @assign_class_name(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr %1, align 4, !tbaa !5\n  %6 = tail call i64 @namespace_p(i32 noundef %5) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %33, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 @mrb_type(i32 noundef %3) #2\n  %10 = tail call i64 @namespace_p(i32 noundef %9) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %33, label %12\n\n12:                                               ; preds = %8\n  %13 = tail call ptr @mrb_obj_ptr(i32 noundef %3) #2\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %33, label %15\n\n15:                                               ; preds = %12\n  %16 = tail call ptr @mrb_sym_name_len(ptr noundef %0, i32 noundef %2, i32 noundef 0) #2\n  %17 = load i32, ptr %16, align 4, !tbaa !10\n  %18 = tail call i64 @ISUPPER(i32 noundef %17) #2\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %33, label %20\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str) #2\n  %22 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %21) #2\n  %23 = tail call i64 @mrb_nil_p(i32 noundef %22) #2\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %33, label %25\n\n25:                                               ; preds = %20\n  %26 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str.1) #2\n  %27 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %26) #2\n  %28 = tail call i64 @mrb_nil_p(i32 noundef %27) #2\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %25\n  %31 = load ptr, ptr %0, align 8, !tbaa !12\n  %32 = icmp eq ptr %31, %1\n  br i1 %32, label %36, label %33\n\n33:                                               ; preds = %30, %25, %20, %15, %12, %8, %4\n  ret void\n\n34:                                               ; preds = %30\n  %35 = tail call i32 @mrb_symbol_value(i32 noundef %2) #2\n  br label %36\n\n36:                                               ; preds = %34, %30\n  %37 = phi i32 [ %35, %34 ], [ %21, %30 ]\n  %38 = tail call i32 @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef %13, i32 noundef %37, i32 noundef %2) #2\n  ret void\n}\n\ndeclare i64 @namespace_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_type(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_obj_ptr(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_sym_name_len(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ISUPPER(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_intern_lit(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @mrb_nil_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_symbol_value(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_set_force(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_9__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_11__\", !14, i64 0}\n!14 = !{!\"any pointer\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [14 x i8] c\"__classname__\\00\", align 1\n@.str.1 = private unnamed_addr constant [10 x i8] c\"__outer__\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @assign_class_name], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @assign_class_name(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr %1, align 4, !tbaa !5\n  %6 = tail call i64 @namespace_p(i32 noundef %5) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %34, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 @mrb_type(i32 noundef %3) #2\n  %10 = tail call i64 @namespace_p(i32 noundef %9) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %34, label %12\n\n12:                                               ; preds = %8\n  %13 = tail call ptr @mrb_obj_ptr(i32 noundef %3) #2\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %34, label %15\n\n15:                                               ; preds = %12\n  %16 = tail call ptr @mrb_sym_name_len(ptr noundef %0, i32 noundef %2, i32 noundef 0) #2\n  %17 = load i32, ptr %16, align 4, !tbaa !10\n  %18 = tail call i64 @ISUPPER(i32 noundef %17) #2\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %34, label %20\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str) #2\n  %22 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %21) #2\n  %23 = tail call i64 @mrb_nil_p(i32 noundef %22) #2\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %34, label %25\n\n25:                                               ; preds = %20\n  %26 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str.1) #2\n  %27 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %26) #2\n  %28 = tail call i64 @mrb_nil_p(i32 noundef %27) #2\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %25\n  %31 = load ptr, ptr %0, align 8, !tbaa !12\n  %32 = icmp eq ptr %31, %1\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %30\n  %34 = tail call i32 @mrb_symbol_value(i32 noundef %2) #2\n  tail call void @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef nonnull %13, i32 noundef %21, i32 noundef %34) #2\n  br label %34\n\n34:                                               ; preds = %33, %30, %25, %15, %20, %12, %8, %4\n  ret void\n\n35:                                               ; preds = %36\n  unreachable\n\n36:                                               ; preds = %30\n  %37 = tail call i32 @mrb_obj_value(ptr noundef nonnull %1) #2\n  %38 = tail call i32 @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef nonnull %13, i32 noundef %21, i32 noundef %37) #2\n  br label %34\n}\n\ndeclare i64 @namespace_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_type(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_obj_ptr(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_sym_name_len(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ISUPPER(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_intern_lit(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mrb_nil_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_symbol_value(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_set_force(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_value(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_9__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_11__\", !14, i64 0}\n!14 = !{!\"any pointer\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [14 x i8] c\"__classname__\\00\", align 1\n@.str.1 = private unnamed_addr constant [10 x i8] c\"__outer__\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @assign_class_name], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @assign_class_name(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr %1, align 4, !tbaa !5\n  %6 = tail call i64 @namespace_p(i32 noundef %5) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %34, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 @mrb_type(i32 noundef %3) #2\n  %10 = tail call i64 @namespace_p(i32 noundef %9) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %34, label %12\n\n12:                                               ; preds = %8\n  %13 = tail call ptr @mrb_obj_ptr(i32 noundef %3) #2\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %34, label %15\n\n15:                                               ; preds = %12\n  %16 = tail call ptr @mrb_sym_name_len(ptr noundef %0, i32 noundef %2, i32 noundef 0) #2\n  %17 = load i32, ptr %16, align 4, !tbaa !10\n  %18 = tail call i64 @ISUPPER(i32 noundef %17) #2\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %34, label %20\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str) #2\n  %22 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %21) #2\n  %23 = tail call i64 @mrb_nil_p(i32 noundef %22) #2\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %34, label %25\n\n25:                                               ; preds = %20\n  %26 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str.1) #2\n  %27 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %26) #2\n  %28 = tail call i64 @mrb_nil_p(i32 noundef %27) #2\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %25\n  %31 = load ptr, ptr %0, align 8, !tbaa !12\n  %32 = icmp eq ptr %31, %1\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %30\n  %34 = tail call i32 @mrb_symbol_value(i32 noundef %2) #2\n  tail call void @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef nonnull %13, i32 noundef %21, i32 noundef %34) #2\n  br label %34\n\n34:                                               ; preds = %33, %30, %25, %15, %20, %12, %8, %4\n  ret void\n\n35:                                               ; preds = %36\n  unreachable\n\n36:                                               ; preds = %30\n  %37 = tail call i32 @mrb_obj_value(ptr noundef nonnull %1) #2\n  %38 = tail call i32 @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef nonnull %13, i32 noundef %21, i32 noundef %37) #2\n  br label %34\n}\n\ndeclare i64 @namespace_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_type(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_obj_ptr(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_sym_name_len(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ISUPPER(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_intern_lit(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mrb_nil_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_symbol_value(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_set_force(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_value(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_9__\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_11__\", !14, i64 0}\n!14 = !{!\"any pointer\", !8, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/mruby/src/extr_variable.c_assign_class_name.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@.str = private unnamed_addr constant [14 x i8] c\"__classname__\\00\", align 1\n@.str.1 = private unnamed_addr constant [10 x i8] c\"__outer__\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @assign_class_name], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal void @assign_class_name(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr %1, align 4, !tbaa !5\n  %6 = tail call i64 @namespace_p(i32 noundef %5) #2\n  %7 = icmp eq i64 %6, 0\n  br i1 %7, label %39, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 @mrb_type(i32 noundef %3) #2\n  %10 = tail call i64 @namespace_p(i32 noundef %9) #2\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %39, label %12\n\n12:                                               ; preds = %8\n  %13 = tail call ptr @mrb_obj_ptr(i32 noundef %3) #2\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %39, label %15\n\n15:                                               ; preds = %12\n  %16 = tail call ptr @mrb_sym_name_len(ptr noundef %0, i32 noundef %2, ptr noundef null) #2\n  %17 = load i32, ptr %16, align 4, !tbaa !10\n  %18 = tail call i64 @ISUPPER(i32 noundef %17) #2\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %39, label %20\n\n20:                                               ; preds = %15\n  %21 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str) #2\n  %22 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %21) #2\n  %23 = tail call i64 @mrb_nil_p(i32 noundef %22) #2\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %39, label %25\n\n25:                                               ; preds = %20\n  %26 = tail call i32 @mrb_intern_lit(ptr noundef %0, ptr noundef nonnull @.str.1) #2\n  %27 = tail call i32 @mrb_obj_iv_get(ptr noundef %0, ptr noundef %13, i32 noundef %26) #2\n  %28 = tail call i64 @mrb_nil_p(i32 noundef %27) #2\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %39, label %30\n\n30:                                               ; preds = %25\n  %31 = load ptr, ptr %0, align 8, !tbaa !11\n  %32 = icmp eq ptr %31, %1\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %30\n  %34 = tail call i32 @mrb_symbol_value(i32 noundef %2) #2\n  %35 = tail call i32 @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef %13, i32 noundef %21, i32 noundef %34) #2\n  br label %39\n\n36:                                               ; preds = %30\n  %37 = tail call i32 @mrb_obj_value(ptr noundef nonnull %1) #2\n  %38 = tail call i32 @mrb_obj_iv_set_force(ptr noundef nonnull %0, ptr noundef %13, i32 noundef %26, i32 noundef %37) #2\n  br label %39\n\n39:                                               ; preds = %12, %15, %25, %36, %33, %20, %8, %4\n  ret void\n}\n\ndeclare i64 @namespace_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_type(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_obj_ptr(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ISUPPER(i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @mrb_sym_name_len(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_intern_lit(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @mrb_nil_p(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_iv_set_force(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_symbol_value(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mrb_obj_value(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"RObject\", !7, i64 0}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !13, i64 0}\n!12 = !{!\"TYPE_7__\", !13, i64 0}\n!13 = !{!\"any pointer\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_blacklistd.c_rules_flush.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function rules_flush\n\t.type\trules_flush,@function\nrules_flush:                            # @rules_flush\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tsubq\t$32, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r13, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t$0, 16(%rsp)\n\tmovq\t$0, 8(%rsp)\n\tmovq\t$0, 24(%rsp)\n\tcmpq\t$0, rconf(%rip)\n\tje\t.LBB0_3\n# %bb.1:                                # %.preheader3\n\txorl\t%r13d, %r13d\n\tleaq\t16(%rsp), %r14\n\tleaq\t8(%rsp), %r15\n\tleaq\t24(%rsp), %r12\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\trconf+8(%rip), %rcx\n\taddq\t%r13, %rcx\n\tmovq\t%r14, %rdi\n\tmovq\t%r15, %rsi\n\tmovq\t%r12, %rdx\n\tcallq\tuniqueadd@PLT\n\tincq\t%rbx\n\taddq\t$4, %r13\n\tcmpq\trconf(%rip), %rbx\n\tjb\t.LBB0_2\n.LBB0_3:\n\tcmpq\t$0, lconf(%rip)\n\tje\t.LBB0_6\n# %bb.4:                                # %.preheader1\n\txorl\t%r13d, %r13d\n\tleaq\t16(%rsp), %r14\n\tleaq\t8(%rsp), %r15\n\tleaq\t24(%rsp), %r12\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_5:                                # =>This Inner Loop Header: Depth=1\n\tmovq\tlconf+8(%rip), %rcx\n\taddq\t%r13, %rcx\n\tmovq\t%r14, %rdi\n\tmovq\t%r15, %rsi\n\tmovq\t%r12, %rdx\n\tcallq\tuniqueadd@PLT\n\tincq\t%rbx\n\taddq\t$4, %r13\n\tcmpq\tlconf(%rip), %rbx\n\tjb\t.LBB0_5\n.LBB0_6:\n\tcmpq\t$0, 8(%rsp)\n\tje\t.LBB0_9\n# %bb.7:                                # %.preheader\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_8:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t16(%rsp), %rax\n\tmovq\t(%rax,%rbx,8), %rdi\n\tcallq\trun_flush@PLT\n\tincq\t%rbx\n\tcmpq\t8(%rsp), %rbx\n\tjb\t.LBB0_8\n.LBB0_9:\n\tmovq\t16(%rsp), %rdi\n\tcallq\tfree@PLT\n\taddq\t$32, %rsp\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\trules_flush, .Lfunc_end0-rules_flush\n\t.cfi_endproc\n                                        # -- End function\n\t.type\trconf,@object                   # @rconf\n\t.bss\n\t.globl\trconf\n\t.p2align\t3\nrconf:\n\t.zero\t16\n\t.size\trconf, 16\n\n\t.type\tlconf,@object                   # @lconf\n\t.globl\tlconf\n\t.p2align\t3\nlconf:\n\t.zero\t16\n\t.size\tlconf, 16\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n%struct.TYPE_3__ = type { i64, ptr }\n\n@rconf = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n@lconf = dso_local local_unnamed_addr global %struct.TYPE_3__ zeroinitializer, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rules_flush], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @rules_flush() #0 {\n  %1 = alloca ptr, align 8\n  %2 = alloca i64, align 8\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #4\n  store ptr null, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #4\n  store i64 0, ptr %2, align 8, !tbaa !9\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  store i64 0, ptr %3, align 8, !tbaa !9\n  %4 = load i64, ptr @rconf, align 8, !tbaa !11\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %15, label %6\n\n6:                                                ; preds = %0, %6\n  %7 = phi i64 [ %11, %6 ], [ 0, %0 ]\n  %8 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @rconf, i64 0, i32 1), align 8, !tbaa !13\n  %9 = getelementptr inbounds i32, ptr %8, i64 %7\n  %10 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %9) #4\n  %11 = add nuw i64 %7, 1\n  %12 = load i64, ptr @rconf, align 8, !tbaa !11\n  %13 = icmp ult i64 %11, %12\n  br i1 %13, label %6, label %15, !llvm.loop !14\n\n14:                                               ; preds = %6\n  br label %15\n\n15:                                               ; preds = %6, %14\n  %16 = load i64, ptr @lconf, align 8, !tbaa !16\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %25, label %18\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %23, %18 ], [ 0, %15 ]\n  %20 = load ptr, ptr getelementptr inbounds (%struct.TYPE_3__, ptr @lconf, i64 0, i32 1), align 8, !tbaa !18\n  %21 = getelementptr inbounds i32, ptr %20, i64 %19\n  %22 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %21) #4\n  %23 = add nuw i64 %19, 1\n  %24 = load i64, ptr @lconf, align 8, !tbaa !16\n  br i1 %25, label %25, label %18, !llvm.loop !19\n\n25:                                               ; preds = %18, %15\n  %26 = load i64, ptr %2, align 8, !tbaa !9\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %35, label %28\n\n28:                                               ; preds = %25, %28\n  %29 = phi i64 [ %32, %28 ], [ 0, %25 ]\n  %30 = load ptr, ptr %1, align 8, !tbaa !5\n  %31 = getelementptr inbounds ptr, ptr %30, i64 %29\n  %32 = add nuw i64 %29, 1\n  %33 = load ptr, ptr %31, align 8, !tbaa !5\n  %34 = call i32 @run_flush(ptr noundef %33) #4\n  br label %28\n\n35:                                               ; preds = %25\n  %36 = load ptr, ptr %1, align 8, !tbaa !5\n  %37 = call i32 @free(ptr noundef %36)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #4\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @uniqueadd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @run_flush(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_4__\", !10, i64 0, !6, i64 8}\n!13 = !{!12, !6, i64 8}\n!14 = distinct !{!14, !15}\n!15 = !{!\"llvm.loop.mustprogress\"}\n!16 = !{!17, !10, i64 0}\n!17 = !{!\"TYPE_3__\", !10, i64 0, !6, i64 8}\n!18 = !{!17, !6, i64 8}\n!19 = distinct !{!19, !15}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n%struct.TYPE_3__ = type { i64, ptr }\n\n@rconf = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n@lconf = dso_local local_unnamed_addr global %struct.TYPE_3__ zeroinitializer, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rules_flush], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @rules_flush() #0 {\n  %1 = alloca i64, align 8\n  %2 = alloca i64, align 8\n  %3 = alloca ptr, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #4\n  store i64 0, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #4\n  store i64 0, ptr %2, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  store ptr null, ptr %3, align 8, !tbaa !9\n  %4 = load i64, ptr @rconf, align 8, !tbaa !11\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %15, label %6\n\n6:                                                ; preds = %0, %6\n  %7 = phi i64 [ %11, %6 ], [ 0, %0 ]\n  %8 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @rconf, i64 0, i32 1), align 8, !tbaa !13\n  %9 = getelementptr inbounds i32, ptr %8, i64 %7\n  %10 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %9) #4\n  %11 = add nuw i64 %7, 1\n  %12 = load i64, ptr @rconf, align 8, !tbaa !11\n  %13 = icmp ult i64 %11, %12\n  br i1 %13, label %6, label %15, !llvm.loop !14\n\n14:                                               ; preds = %6\n  store ptr null, ptr %3, align 8, !tbaa !9\n  br label %23\n\n15:                                               ; preds = %6, %0\n  %16 = load i64, ptr @lconf, align 8, !tbaa !16\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %23, label %18\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %21, %18 ], [ 0, %15 ]\n  %20 = load ptr, ptr getelementptr inbounds (%struct.TYPE_3__, ptr @lconf, i64 0, i32 1), align 8, !tbaa !18\n  %21 = add nuw i64 %19, 1\n  %22 = getelementptr inbounds i32, ptr %20, i64 %19\n  call void @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %22) #4\n  %23 = load i64, ptr %2, align 8, !tbaa !5\n  %24 = icmp eq i64 %21, %23\n  br i1 %24, label %14, label %18, !llvm.loop !19\n\n25:                                               ; preds = %25\n  %26 = add nuw i64 %27, 1\n  %27 = load i64, ptr %1, align 8, !tbaa !5\n  %28 = getelementptr inbounds ptr, ptr %3, i64 %26\n  %29 = load ptr, ptr %28, align 8, !tbaa !9\n  %30 = call i32 @run_flush(ptr noundef %29) #4\n  %31 = load i64, ptr %2, align 8, !tbaa !5\n  %32 = icmp ult i64 %26, %31\n  br i1 %32, label %25, label %33, !llvm.loop !20\n\n33:                                               ; preds = %25\n  %34 = load ptr, ptr %3, align 8, !tbaa !9\n  %35 = call i32 @free(ptr noundef %34)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #4\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @uniqueadd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @run_flush(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = !{!12, !6, i64 0}\n!12 = !{!\"TYPE_4__\", !6, i64 0, !10, i64 8}\n!13 = !{!12, !10, i64 8}\n!14 = distinct !{!14, !15}\n!15 = !{!\"llvm.loop.mustprogress\"}\n!16 = !{!17, !6, i64 0}\n!17 = !{!\"TYPE_3__\", !6, i64 0, !10, i64 8}\n!18 = !{!17, !10, i64 8}\n!19 = distinct !{!19, !15}\n!20 = distinct !{!20, !15}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n%struct.TYPE_3__ = type { i64, ptr }\n\n@rconf = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n@lconf = dso_local local_unnamed_addr global %struct.TYPE_3__ zeroinitializer, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rules_flush], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @rules_flush() #0 {\n  %1 = alloca i64, align 8\n  %2 = alloca i64, align 8\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #4\n  store i64 0, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #4\n  store i64 0, ptr %2, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  store i64 0, ptr %3, align 8, !tbaa !5\n  %4 = load i64, ptr @rconf, align 8, !tbaa !9\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %15, label %6\n\n6:                                                ; preds = %0, %6\n  %7 = phi i64 [ %11, %6 ], [ 0, %0 ]\n  %8 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @rconf, i64 0, i32 1), align 8, !tbaa !12\n  %9 = getelementptr inbounds i32, ptr %8, i64 %7\n  %10 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %9) #4\n  %11 = add nuw i64 %7, 1\n  %12 = load i64, ptr @rconf, align 8, !tbaa !9\n  %13 = icmp ult i64 %11, %12\n  br i1 %13, label %6, label %15, !llvm.loop !13\n\n14:                                               ; preds = %6\n  store i64 0, ptr %1, align 8, !tbaa !5\n  br label %15\n\n15:                                               ; preds = %6, %14\n  %16 = load i64, ptr @lconf, align 8, !tbaa !15\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %25, label %18\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %23, %18 ], [ 0, %15 ]\n  %20 = load ptr, ptr getelementptr inbounds (%struct.TYPE_3__, ptr @lconf, i64 0, i32 1), align 8, !tbaa !17\n  %21 = getelementptr inbounds i32, ptr %20, i64 %19\n  %22 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %21) #4\n  %23 = add nuw i64 %19, 1\n  %24 = load i64, ptr @lconf, align 8, !tbaa !15\n  br i1 %25, label %25, label %18, !llvm.loop !18\n\n25:                                               ; preds = %18, %15\n  %26 = load i64, ptr %2, align 8, !tbaa !5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %35, label %28\n\n28:                                               ; preds = %25, %28\n  %29 = phi i64 [ %32, %28 ], [ 0, %25 ]\n  %30 = load i64, ptr %1, align 8, !tbaa !5\n  %31 = getelementptr inbounds i64, ptr %30, i64 %29\n  %32 = add nuw i64 %29, 1\n  %33 = load i64, ptr %31, align 8, !tbaa !5\n  %34 = call i32 @run_flush(i64 noundef %33) #4\n  br label %28\n\n35:                                               ; preds = %25\n  %36 = load i64, ptr %1, align 8, !tbaa !5\n  %37 = call i32 @free(i64 noundef %36)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #4\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @uniqueadd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @run_flush(i64 noundef) local_unnamed_addr #2\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(i64 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_4__\", !6, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n!15 = !{!16, !6, i64 0}\n!16 = !{!\"TYPE_3__\", !6, i64 0, !11, i64 8}\n!17 = !{!16, !11, i64 8}\n!18 = distinct !{!18, !14}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n%struct.TYPE_5__ = type { i64, ptr }\n\n@rconf = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n@lconf = dso_local local_unnamed_addr global %struct.TYPE_5__ zeroinitializer, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rules_flush], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @rules_flush() #0 {\n  %1 = alloca i64, align 8\n  %2 = alloca i64, align 8\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #4\n  store i64 0, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #4\n  store i64 0, ptr %2, align 8, !tbaa !5\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  store i64 0, ptr %3, align 8, !tbaa !5\n  %4 = load i64, ptr @rconf, align 8, !tbaa !9\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %15, label %6\n\n6:                                                ; preds = %0, %6\n  %7 = phi i64 [ %11, %6 ], [ 0, %0 ]\n  %8 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @rconf, i64 0, i32 1), align 8, !tbaa !12\n  %9 = getelementptr inbounds i32, ptr %8, i64 %7\n  %10 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %9) #4\n  %11 = add nuw i64 %7, 1\n  %12 = load i64, ptr @rconf, align 8, !tbaa !9\n  %13 = icmp ult i64 %11, %12\n  br i1 %13, label %6, label %15, !llvm.loop !13\n\n14:                                               ; preds = %6\n  br label %15\n\n15:                                               ; preds = %6, %14\n  %16 = load i64, ptr @lconf, align 8, !tbaa !15\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %25, label %18\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %23, %18 ], [ 0, %15 ]\n  %20 = load ptr, ptr getelementptr inbounds (%struct.TYPE_5__, ptr @lconf, i64 0, i32 1), align 8, !tbaa !17\n  %21 = getelementptr inbounds i32, ptr %20, i64 %19\n  %22 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %21) #4\n  %23 = add nuw i64 %19, 1\n  %24 = load i64, ptr @lconf, align 8, !tbaa !15\n  br i1 %25, label %25, label %18, !llvm.loop !18\n\n25:                                               ; preds = %18, %15\n  %26 = load i64, ptr %2, align 8, !tbaa !5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %35, label %28\n\n28:                                               ; preds = %25, %28\n  %29 = phi i64 [ %32, %28 ], [ 0, %25 ]\n  %30 = load i64, ptr %1, align 8, !tbaa !5\n  %31 = getelementptr inbounds i64, ptr %30, i64 %29\n  %32 = add nuw i64 %29, 1\n  %33 = load i64, ptr %31, align 8, !tbaa !5\n  %34 = call i32 @run_flush(i64 noundef %33) #4\n  br label %28\n\n35:                                               ; preds = %25\n  %36 = load i64, ptr %1, align 8, !tbaa !5\n  %37 = call i32 @free(i64 noundef %36)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #4\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @uniqueadd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @run_flush(i64 noundef) local_unnamed_addr #2\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(i64 noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_4__\", !6, i64 0, !11, i64 8}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n!15 = !{!16, !6, i64 0}\n!16 = !{!\"TYPE_5__\", !6, i64 0, !11, i64 8}\n!17 = !{!16, !11, i64 8}\n!18 = distinct !{!18, !14}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/blacklist/bin/extr_blacklistd.c_rules_flush.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i64, ptr }\n%struct.TYPE_4__ = type { i64, ptr }\n\n@rconf = dso_local local_unnamed_addr global %struct.TYPE_3__ zeroinitializer, align 8\n@lconf = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rules_flush], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @rules_flush() #0 {\n  %1 = alloca ptr, align 8\n  %2 = alloca i64, align 8\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #4\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #4\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  store ptr null, ptr %1, align 8, !tbaa !5\n  store i64 0, ptr %2, align 8, !tbaa !9\n  store i64 0, ptr %3, align 8, !tbaa !9\n  %4 = load i64, ptr @rconf, align 8, !tbaa !11\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %6, label %9\n\n6:                                                ; preds = %9, %0\n  %7 = load i64, ptr @lconf, align 8, !tbaa !13\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %17, label %20\n\n9:                                                ; preds = %0, %9\n  %10 = phi i64 [ %14, %9 ], [ 0, %0 ]\n  %11 = load ptr, ptr getelementptr inbounds (%struct.TYPE_3__, ptr @rconf, i64 0, i32 1), align 8, !tbaa !15\n  %12 = getelementptr inbounds i32, ptr %11, i64 %10\n  %13 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %12) #4\n  %14 = add nuw i64 %10, 1\n  %15 = load i64, ptr @rconf, align 8, !tbaa !11\n  %16 = icmp ult i64 %14, %15\n  br i1 %16, label %9, label %6, !llvm.loop !16\n\n17:                                               ; preds = %20, %6\n  %18 = load i64, ptr %2, align 8, !tbaa !9\n  %19 = icmp eq i64 %18, 0\n  br i1 %19, label %28, label %31\n\n20:                                               ; preds = %6, %20\n  %21 = phi i64 [ %25, %20 ], [ 0, %6 ]\n  %22 = load ptr, ptr getelementptr inbounds (%struct.TYPE_4__, ptr @lconf, i64 0, i32 1), align 8, !tbaa !18\n  %23 = getelementptr inbounds i32, ptr %22, i64 %21\n  %24 = call i32 @uniqueadd(ptr noundef nonnull %1, ptr noundef nonnull %2, ptr noundef nonnull %3, ptr noundef %23) #4\n  %25 = add nuw i64 %21, 1\n  %26 = load i64, ptr @lconf, align 8, !tbaa !13\n  %27 = icmp ult i64 %25, %26\n  br i1 %27, label %20, label %17, !llvm.loop !19\n\n28:                                               ; preds = %31, %17\n  %29 = load ptr, ptr %1, align 8, !tbaa !5\n  %30 = call i32 @free(ptr noundef %29)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #4\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #4\n  ret void\n\n31:                                               ; preds = %17, %31\n  %32 = phi i64 [ %37, %31 ], [ 0, %17 ]\n  %33 = load ptr, ptr %1, align 8, !tbaa !5\n  %34 = getelementptr inbounds ptr, ptr %33, i64 %32\n  %35 = load ptr, ptr %34, align 8, !tbaa !5\n  %36 = call i32 @run_flush(ptr noundef %35) #4\n  %37 = add nuw i64 %32, 1\n  %38 = load i64, ptr %2, align 8, !tbaa !9\n  %39 = icmp ult i64 %37, %38\n  br i1 %39, label %31, label %28, !llvm.loop !20\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @uniqueadd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @run_flush(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_3__\", !10, i64 0, !6, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_4__\", !10, i64 0, !6, i64 8}\n!15 = !{!12, !6, i64 8}\n!16 = distinct !{!16, !17}\n!17 = !{!\"llvm.loop.mustprogress\"}\n!18 = !{!14, !6, i64 8}\n!19 = distinct !{!19, !17}\n!20 = distinct !{!20, !17}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_en_main.c_mlx5e_free_rq.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function mlx5e_free_rq\n\t.type\tmlx5e_free_rq,@function\nmlx5e_free_rq:                          # @mlx5e_free_rq\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %r14\n\tmovq\t48(%rdi), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_2\n# %bb.1:\n\tcallq\tbpf_prog_put@PLT\n.LBB0_2:\n\tcmpl\t$128, (%r14)\n\tjne\t.LBB0_4\n# %bb.3:\n\tmovl\t44(%r14), %edi\n\tcallq\tkvfree@PLT\n\tmovl\t40(%r14), %edi\n\tleaq\t36(%r14), %rsi\n\tcallq\tmlx5_core_destroy_mkey@PLT\n\tmovl\t16(%r14), %eax\n\tjmp\t.LBB0_7\n.LBB0_4:\n\tmovl\t32(%r14), %edi\n\tcallq\tkvfree@PLT\n\tmovq\t%r14, %rdi\n\tcallq\tmlx5e_free_di_list@PLT\n\tmovl\t16(%r14), %eax\n\tjmp\t.LBB0_7\n\t.p2align\t4, 0x90\n.LBB0_6:                                #   in Loop: Header=BB0_7 Depth=1\n\tmovslq\t%eax, %rbx\n\tleaq\t(,%rbx,4), %rsi\n\taddq\t24(%r14), %rsi\n\tmovq\t%r14, %rdi\n\txorl\t%edx, %edx\n\tcallq\tmlx5e_page_release_dynamic@PLT\n\tincl\t%ebx\n\tmovl\tMLX5E_CACHE_SIZE(%rip), %eax\n\tdecl\t%eax\n\tandl\t%ebx, %eax\n.LBB0_7:                                # =>This Inner Loop Header: Depth=1\n\tcmpl\t20(%r14), %eax\n\tjne\t.LBB0_6\n# %bb.8:\n\tleaq\t12(%r14), %rdi\n\tcallq\txdp_rxq_info_unreg@PLT\n\tmovl\t8(%r14), %edi\n\tcallq\tpage_pool_destroy@PLT\n\taddq\t$4, %r14\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tmlx5_wq_destroy@PLT             # TAILCALL\n.Lfunc_end0:\n\t.size\tmlx5e_free_rq, .Lfunc_end0-mlx5e_free_rq\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMLX5E_CACHE_SIZE,@object        # @MLX5E_CACHE_SIZE\n\t.bss\n\t.globl\tMLX5E_CACHE_SIZE\n\t.p2align\t2\nMLX5E_CACHE_SIZE:\n\t.long\t0                               # 0x0\n\t.size\tMLX5E_CACHE_SIZE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlx5e_rq = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }\n\n@MLX5E_CACHE_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlx5e_free_rq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mlx5e_free_rq(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 9\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @bpf_prog_put(ptr noundef nonnull %3) #2\n  br label %7\n\n7:                                                ; preds = %5, %1\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = icmp eq i32 %8, 128\n  br i1 %9, label %10, label %19\n\n10:                                               ; preds = %7\n  %11 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 8\n  %12 = load i32, ptr %11, align 8, !tbaa !12\n  %13 = tail call i32 @kvfree(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 6\n  %17 = tail call i32 @mlx5_core_destroy_mkey(i32 noundef %15, ptr noundef nonnull %16) #2\n  %18 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  br label %28\n\n19:                                               ; preds = %7\n  %20 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %21 = load i32, ptr %20, align 4, !tbaa !13\n  %22 = tail call i32 @kvfree(i32 noundef %21) #2\n  %23 = tail call i32 @mlx5e_free_di_list(ptr noundef nonnull %0) #2\n  %24 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  %25 = load i32, ptr %24, align 8, !tbaa !14\n  br label %28\n\n26:                                               ; preds = %28\n  %27 = add nsw i32 %29, 1\n  br label %28\n\n28:                                               ; preds = %19, %10, %26\n  %29 = phi i32 [ %25, %19 ], [ %18, %10 ], [ %27, %26 ]\n  %30 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 3\n  %31 = load i32, ptr %30, align 4, !tbaa !15\n  %32 = icmp eq i32 %29, %31\n  br i1 %32, label %33, label %26\n\n33:                                               ; preds = %28\n  %34 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 2\n  %35 = tail call i32 @xdp_rxq_info_unreg(ptr noundef nonnull %34) #2\n  %36 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 1\n  %37 = load i32, ptr %36, align 4, !tbaa !16\n  %38 = tail call i32 @page_pool_destroy(i32 noundef %37) #2\n  %39 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 5\n  %40 = tail call i32 @mlx5_wq_destroy(ptr noundef nonnull %39) #2\n  ret void\n}\n\ndeclare i32 @bpf_prog_put(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kvfree(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_core_destroy_mkey(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5e_free_di_list(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @page_pool_destroy(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_wq_destroy(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 48}\n!6 = !{!\"mlx5e_rq\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 40, !10, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !7, i64 44}\n!13 = !{!6, !7, i64 40}\n!14 = !{!6, !7, i64 16}\n!15 = !{!6, !7, i64 12}\n!16 = !{!6, !7, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlx5e_rq = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }\n\n@MLX5E_CACHE_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlx5e_free_rq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mlx5e_free_rq(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 9\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @bpf_prog_put(ptr noundef nonnull %3) #2\n  br label %7\n\n7:                                                ; preds = %5, %1\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = icmp eq i32 %8, 128\n  br i1 %9, label %10, label %19\n\n10:                                               ; preds = %7\n  %11 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 8\n  %12 = load i32, ptr %11, align 8, !tbaa !12\n  %13 = tail call i32 @kvfree(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 6\n  %17 = tail call i32 @mlx5_core_destroy_mkey(i32 noundef %15, ptr noundef nonnull %16) #2\n  %18 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  br label %29\n\n19:                                               ; preds = %7\n  %20 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %21 = load i32, ptr %20, align 4, !tbaa !13\n  %22 = tail call i32 @kvfree(i32 noundef %21) #2\n  %23 = tail call i32 @mlx5e_free_di_list(ptr noundef nonnull %0) #2\n  %24 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  %25 = load i32, ptr %24, align 8, !tbaa !14\n  br label %29\n\n26:                                               ; preds = %29\n  %27 = add nsw i32 %30, 1\n  %28 = load i32, ptr @MLX5E_CACHE_SIZE, align 4, !tbaa !15\n  %29 = add nsw i32 %28, -1\n  %30 = and i32 %29, %27\n  br i1 %31, label %32, label %26, !llvm.loop !16\n\n31:                                               ; preds = %26\n  br label %32\n\n32:                                               ; preds = %26, %31\n  %33 = phi i32 [ %25, %31 ], [ %20, %26 ]\n  %34 = phi i32 [ %27, %31 ], [ %30, %26 ]\n  %35 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 3\n  %36 = load i32, ptr %35, align 4, !tbaa !18\n  %37 = icmp eq i32 %34, %36\n  br i1 %37, label %38, label %26\n\n38:                                               ; preds = %32\n  %39 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 2\n  %40 = tail call i32 @xdp_rxq_info_unreg(ptr noundef nonnull %39) #2\n  %41 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 1\n  %42 = load i32, ptr %41, align 4, !tbaa !19\n  %43 = tail call i32 @page_pool_destroy(i32 noundef %42) #2\n  %44 = tail call i32 @mlx5_wq_destroy(ptr noundef nonnull %0) #2\n  ret void\n\n}\n\ndeclare i32 @bpf_prog_put(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kvfree(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_core_destroy_mkey(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5e_free_di_list(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @page_pool_destroy(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_wq_destroy(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 48}\n!6 = !{!\"mlx5e_rq\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 40, !10, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !7, i64 40}\n!13 = !{!6, !7, i64 36}\n!14 = !{!6, !7, i64 24}\n!15 = !{!7, !7, i64 0}\n!16 = distinct !{!16, !17}\n!17 = !{!\"llvm.loop.mustprogress\"}\n!18 = !{!6, !7, i64 16}\n!19 = !{!6, !7, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlx5e_rq = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }\n\n@MLX5E_CACHE_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlx5e_free_rq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mlx5e_free_rq(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 12\n  %3 = load i32, ptr %2, align 4, !tbaa !5\n  %4 = tail call i32 @kvfree(i32 noundef %3) #2\n  %5 = load i32, ptr %0, align 4, !tbaa !10\n  %6 = icmp eq i32 %5, 128\n  br i1 %6, label %7, label %15\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 11\n  %9 = load i32, ptr %8, align 4, !tbaa !11\n  %10 = tail call i32 @kvfree(i32 noundef %9) #2\n  %11 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 10\n  %12 = load i32, ptr %11, align 4, !tbaa !12\n  %13 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 9\n  %14 = tail call i32 @mlx5_core_destroy_mkey(i32 noundef %12, ptr noundef nonnull %13) #2\n  br label %21\n\n15:                                               ; preds = %1\n  %16 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 10\n  %17 = load i32, ptr %16, align 4, !tbaa !12\n  %18 = tail call i32 @kvfree(i32 noundef %17) #2\n  %19 = tail call i32 @mlx5e_free_di_list(ptr noundef nonnull %0) #2\n  %20 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  br label %21\n\n21:                                               ; preds = %15, %7\n  %22 = phi i32 [ %14, %7 ], [ %20, %15 ]\n  %23 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 3\n  %24 = load i32, ptr %23, align 4, !tbaa !13\n  %25 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 2\n  %26 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 8\n  %27 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %28 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 6\n  br label %29\n\n29:                                               ; preds = %21, %29\n  %30 = phi i32 [ %24, %21 ], [ %35, %29 ]\n  %31 = load i32, ptr %28, align 4, !tbaa !14\n  %32 = icmp eq i32 %30, %31\n  br i1 %32, label %33, label %39\n\n33:                                               ; preds = %29\n  %34 = load i32, ptr %25, align 4, !tbaa !15\n  %35 = add nsw i32 %30, 1\n  %36 = load i32, ptr %26, align 4, !tbaa !16\n  %37 = sext i32 %36 to i64\n  %38 = getelementptr inbounds i32, ptr %32, i64 %37\n  tail call void @mlx5e_page_release_dynamic(ptr noundef nonnull %0, ptr noundef %38, i32 noundef 0) #2\n  br label %39\n\n39:                                               ; preds = %33, %29\n  %40 = phi i32 [ %35, %33 ], [ %30, %29 ]\n  %41 = load i32, ptr %27, align 4, !tbaa !17\n  %42 = icmp eq i32 %40, %41\n  br i1 %42, label %43, label %29, !llvm.loop !18\n\n43:                                               ; preds = %39\n  %44 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 5\n  %45 = tail call i32 @xdp_rxq_info_unreg(ptr noundef nonnull %44) #2\n  %46 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 1\n  %47 = load i32, ptr %46, align 4, !tbaa !20\n  %48 = tail call i32 @page_pool_destroy(i32 noundef %47) #2\n  %49 = tail call i32 @mlx5_wq_destroy(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @kvfree(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_core_destroy_mkey(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5e_free_di_list(ptr noundef) local_unnamed_addr #1\n\ndeclare void @mlx5e_page_release_dynamic(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @page_pool_destroy(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_wq_destroy(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 44}\n!6 = !{!\"mlx5e_rq\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 0}\n!11 = !{!6, !7, i64 48}\n!12 = !{!6, !7, i64 40}\n!13 = !{!6, !7, i64 32}\n!14 = !{!6, !7, i64 28}\n!15 = !{!6, !7, i64 16}\n!16 = !{!6, !7, i64 24}\n!17 = !{!6, !7, i64 20}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n!20 = !{!6, !7, i64 8}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlx5e_rq = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr }\n\n@MLX5E_CACHE_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlx5e_free_rq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mlx5e_free_rq(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 9\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = icmp eq ptr %3, null\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @bpf_prog_put(ptr noundef nonnull %3) #2\n  br label %7\n\n7:                                                ; preds = %5, %1\n  %8 = load i32, ptr %0, align 8, !tbaa !11\n  %9 = icmp eq i32 %8, 128\n  br i1 %9, label %10, label %19\n\n10:                                               ; preds = %7\n  %11 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 8\n  %12 = load i32, ptr %11, align 8, !tbaa !12\n  %13 = tail call i32 @kvfree(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 6\n  %17 = tail call i32 @mlx5_core_destroy_mkey(i32 noundef %15, ptr noundef nonnull %16) #2\n  %18 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  br label %28\n\n19:                                               ; preds = %7\n  %20 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %21 = load i32, ptr %20, align 4, !tbaa !13\n  %22 = tail call i32 @kvfree(i32 noundef %21) #2\n  %23 = tail call i32 @mlx5e_free_di_list(ptr noundef nonnull %0) #2\n  %24 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  %25 = load i32, ptr %24, align 8, !tbaa !14\n  br label %28\n\n26:                                               ; preds = %28\n  %27 = add nsw i32 %29, 1\n  br label %28\n\n28:                                               ; preds = %19, %10, %26\n  %29 = phi i32 [ %25, %19 ], [ %18, %10 ], [ %27, %26 ]\n  %30 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 3\n  %31 = load i32, ptr %30, align 4, !tbaa !15\n  %32 = icmp eq i32 %29, %31\n  br i1 %32, label %33, label %26\n\n33:                                               ; preds = %28\n  %34 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 2\n  %35 = tail call i32 @xdp_rxq_info_unreg(ptr noundef nonnull %34) #2\n  %36 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 1\n  %37 = load i32, ptr %36, align 4, !tbaa !16\n  %38 = tail call i32 @page_pool_destroy(i32 noundef %37) #2\n  %39 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 2\n  %40 = tail call i32 @mlx5_wq_destroy(ptr noundef nonnull %0) #2\n  ret void\n}\n\ndeclare i32 @bpf_prog_put(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @kvfree(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_core_destroy_mkey(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5e_free_di_list(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @page_pool_destroy(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_wq_destroy(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 48}\n!6 = !{!\"mlx5e_rq\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 40, !10, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!6, !7, i64 40}\n!13 = !{!6, !7, i64 36}\n!14 = !{!6, !7, i64 24}\n!15 = !{!6, !7, i64 16}\n!16 = !{!6, !7, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/ethernet/mellanox/mlx5/core/extr_en_main.c_mlx5e_free_rq.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.mlx5e_rq = type { i32, i32, i32, i32, %struct.TYPE_6__, %struct.TYPE_5__, i32, i32, %struct.TYPE_4__, i64 }\n%struct.TYPE_6__ = type { i32, i32, ptr }\n%struct.TYPE_5__ = type { i32 }\n%struct.TYPE_4__ = type { i32 }\n%struct.mlx5e_dma_info = type { i32 }\n\n@MLX5E_CACHE_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @mlx5e_free_rq], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @mlx5e_free_rq(ptr noundef %0) #0 {\n  %2 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 9\n  %3 = load i64, ptr %2, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, 0\n  br i1 %4, label %7, label %5\n\n5:                                                ; preds = %1\n  %6 = tail call i32 @bpf_prog_put(i64 noundef %3) #2\n  br label %7\n\n7:                                                ; preds = %5, %1\n  %8 = load i32, ptr %0, align 8, !tbaa !15\n  %9 = icmp eq i32 %8, 128\n  br i1 %9, label %10, label %18\n\n10:                                               ; preds = %7\n  %11 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 8\n  %12 = load i32, ptr %11, align 4, !tbaa !16\n  %13 = tail call i32 @kvfree(i32 noundef %12) #2\n  %14 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 7\n  %15 = load i32, ptr %14, align 8, !tbaa !17\n  %16 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 6\n  %17 = tail call i32 @mlx5_core_destroy_mkey(i32 noundef %15, ptr noundef nonnull %16) #2\n  br label %23\n\n18:                                               ; preds = %7\n  %19 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 5\n  %20 = load i32, ptr %19, align 8, !tbaa !18\n  %21 = tail call i32 @kvfree(i32 noundef %20) #2\n  %22 = tail call i32 @mlx5e_free_di_list(ptr noundef nonnull %0) #2\n  br label %23\n\n23:                                               ; preds = %18, %10\n  %24 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4\n  %25 = load i32, ptr %24, align 8, !tbaa !19\n  %26 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4, i32 1\n  %27 = load i32, ptr %26, align 4, !tbaa !20\n  %28 = icmp eq i32 %25, %27\n  br i1 %28, label %43, label %29\n\n29:                                               ; preds = %23\n  %30 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 4, i32 2\n  br label %31\n\n31:                                               ; preds = %29, %31\n  %32 = phi i32 [ %25, %29 ], [ %40, %31 ]\n  %33 = load ptr, ptr %30, align 8, !tbaa !21\n  %34 = sext i32 %32 to i64\n  %35 = getelementptr inbounds %struct.mlx5e_dma_info, ptr %33, i64 %34\n  %36 = tail call i32 @mlx5e_page_release_dynamic(ptr noundef nonnull %0, ptr noundef %35, i32 noundef 0) #2\n  %37 = add nsw i32 %32, 1\n  %38 = load i32, ptr @MLX5E_CACHE_SIZE, align 4, !tbaa !22\n  %39 = add nsw i32 %38, -1\n  %40 = and i32 %39, %37\n  %41 = load i32, ptr %26, align 4, !tbaa !20\n  %42 = icmp eq i32 %40, %41\n  br i1 %42, label %43, label %31, !llvm.loop !23\n\n43:                                               ; preds = %31, %23\n  %44 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 3\n  %45 = tail call i32 @xdp_rxq_info_unreg(ptr noundef nonnull %44) #2\n  %46 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 2\n  %47 = load i32, ptr %46, align 8, !tbaa !25\n  %48 = tail call i32 @page_pool_destroy(i32 noundef %47) #2\n  %49 = getelementptr inbounds %struct.mlx5e_rq, ptr %0, i64 0, i32 1\n  %50 = tail call i32 @mlx5_wq_destroy(ptr noundef nonnull %49) #2\n  ret void\n}\n\ndeclare i32 @bpf_prog_put(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @kvfree(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_core_destroy_mkey(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5e_free_di_list(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5e_page_release_dynamic(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @page_pool_destroy(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @mlx5_wq_destroy(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !14, i64 48}\n!6 = !{!\"mlx5e_rq\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !10, i64 16, !12, i64 32, !7, i64 36, !7, i64 40, !13, i64 44, !14, i64 48}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !11, i64 8}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!\"TYPE_5__\", !7, i64 0}\n!13 = !{!\"TYPE_4__\", !7, i64 0}\n!14 = !{!\"long\", !8, i64 0}\n!15 = !{!6, !7, i64 0}\n!16 = !{!6, !7, i64 44}\n!17 = !{!6, !7, i64 40}\n!18 = !{!6, !7, i64 32}\n!19 = !{!6, !7, i64 16}\n!20 = !{!6, !7, i64 20}\n!21 = !{!6, !11, i64 24}\n!22 = !{!7, !7, i64 0}\n!23 = distinct !{!23, !24}\n!24 = !{!\"llvm.loop.mustprogress\"}\n!25 = !{!6, !7, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_qemu_fw_cfg.c_fw_cfg_read_blob.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function fw_cfg_read_blob\n\t.type\tfw_cfg_read_blob,@function\nfw_cfg_read_blob:                       # @fw_cfg_read_blob\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rcx, %r12\n\tmovl\t%edx, %ebp\n\tmovq\t%rsi, %r14\n\tmovl\t%edi, %r15d\n\tmovl\t$-1, 12(%rsp)\n\tmovl\tACPI_WAIT_FOREVER(%rip), %edi\n\tleaq\t12(%rsp), %rsi\n\tcallq\tacpi_acquire_global_lock@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\tcallq\tACPI_FAILURE@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n# %bb.1:\n\tcmpq\tAE_NOT_CONFIGURED(%rip), %rbx\n\tje\t.LBB0_3\n# %bb.2:\n\tmovl\t$.L.str, %esi\n\tmovl\t$1, %edi\n\tcallq\tWARN@PLT\n\txorl\t%ebx, %ebx\n\tmovq\t%r14, %rdi\n\txorl\t%esi, %esi\n\tmovq\t%r12, %rdx\n\tcallq\tmemset@PLT\n\tsubq\tEINVAL(%rip), %rbx\n\tmovq\t%rbx, %r12\n\tjmp\t.LBB0_7\n.LBB0_3:\n\tmovl\t$fw_cfg_dev_lock, %edi\n\tcallq\tmutex_lock@PLT\n\tmovl\t%r15d, %edi\n\tcallq\tfw_cfg_sel_endianness@PLT\n\ttestl\t%ebp, %ebp\n\tjle\t.LBB0_6\n# %bb.4:                                # %.preheader\n\tincl\t%ebp\n\t.p2align\t4, 0x90\n.LBB0_5:                                # =>This Inner Loop Header: Depth=1\n\tmovl\tfw_cfg_reg_data(%rip), %edi\n\tcallq\tioread8@PLT\n\tdecl\t%ebp\n\tcmpl\t$1, %ebp\n\tja\t.LBB0_5\n.LBB0_6:\n\tmovl\tfw_cfg_reg_data(%rip), %edi\n\tmovq\t%r14, %rsi\n\tmovq\t%r12, %rdx\n\tcallq\tioread8_rep@PLT\n\tmovl\t$fw_cfg_dev_lock, %edi\n\tcallq\tmutex_unlock@PLT\n\tmovl\t12(%rsp), %edi\n\tcallq\tacpi_release_global_lock@PLT\n.LBB0_7:\n\tmovq\t%r12, %rax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tfw_cfg_read_blob, .Lfunc_end0-fw_cfg_read_blob\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tACPI_WAIT_FOREVER,@object       # @ACPI_WAIT_FOREVER\n\t.bss\n\t.globl\tACPI_WAIT_FOREVER\n\t.p2align\t2\nACPI_WAIT_FOREVER:\n\t.long\t0                               # 0x0\n\t.size\tACPI_WAIT_FOREVER, 4\n\n\t.type\tAE_NOT_CONFIGURED,@object       # @AE_NOT_CONFIGURED\n\t.globl\tAE_NOT_CONFIGURED\n\t.p2align\t3\nAE_NOT_CONFIGURED:\n\t.quad\t0                               # 0x0\n\t.size\tAE_NOT_CONFIGURED, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"fw_cfg_read_blob: Failed to lock ACPI!\\n\"\n\t.size\t.L.str, 40\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.bss\n\t.globl\tEINVAL\n\t.p2align\t3\nEINVAL:\n\t.quad\t0                               # 0x0\n\t.size\tEINVAL, 8\n\n\t.type\tfw_cfg_dev_lock,@object         # @fw_cfg_dev_lock\n\t.globl\tfw_cfg_dev_lock\n\t.p2align\t2\nfw_cfg_dev_lock:\n\t.long\t0                               # 0x0\n\t.size\tfw_cfg_dev_lock, 4\n\n\t.type\tfw_cfg_reg_data,@object         # @fw_cfg_reg_data\n\t.globl\tfw_cfg_reg_data\n\t.p2align\t2\nfw_cfg_reg_data:\n\t.long\t0                               # 0x0\n\t.size\tfw_cfg_reg_data, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_WAIT_FOREVER = dso_local local_unnamed_addr global i32 0, align 4\n@AE_NOT_CONFIGURED = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [40 x i8] c\"fw_cfg_read_blob: Failed to lock ACPI!\\0A\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i64 0, align 8\n@fw_cfg_dev_lock = dso_local global i32 0, align 4\n@fw_cfg_reg_data = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @fw_cfg_read_blob], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @fw_cfg_read_blob(i32 noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {\n  %5 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  store i32 -1, ptr %5, align 4, !tbaa !5\n  %6 = load i32, ptr @ACPI_WAIT_FOREVER, align 4, !tbaa !5\n  %7 = call i64 @acpi_acquire_global_lock(i32 noundef %6, ptr noundef nonnull %5) #3\n  %8 = call i64 @ACPI_FAILURE(i64 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  %10 = load i64, ptr @AE_NOT_CONFIGURED, align 8\n  %11 = icmp eq i64 %7, %10\n  %12 = select i1 %9, i1 true, i1 %11\n  br i1 %12, label %17, label %13\n\n13:                                               ; preds = %4\n  %14 = call i32 @WARN(i32 noundef 1, ptr noundef nonnull @.str) #3\n  %15 = call i32 @memset(ptr noundef %1, i32 noundef 0, i64 noundef %3) #3\n  %16 = load i64, ptr @EINVAL, align 8, !tbaa !9\n  br label %30\n\n17:                                               ; preds = %4\n  %18 = call i32 @mutex_lock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %19 = call i32 @fw_cfg_sel_endianness(i32 noundef %0) #3\n  %20 = icmp sgt i32 %2, 0\n  br i1 %20, label %21, label %26\n\n21:                                               ; preds = %17, %21\n  %22 = phi i32 [ %24, %21 ], [ %2, %17 ]\n  %23 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %24 = add nsw i32 %22, -1\n  %25 = call i32 @ioread8(i32 noundef %23) #3\n  br i1 %20, label %21, label %26, !llvm.loop !11\n\n26:                                               ; preds = %21, %17\n  %27 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %28 = call i32 @ioread8_rep(i32 noundef %27, ptr noundef %1, i64 noundef %3) #3\n  %29 = call i32 @mutex_unlock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  br label %30\n\n30:                                               ; preds = %26, %13\n  %31 = phi i64 [ %16, %13 ], [ %3, %26 ]\n  ret i64 %31\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @acpi_acquire_global_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ACPI_FAILURE(i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @WARN(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @fw_cfg_sel_endianness(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8_rep(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_WAIT_FOREVER = dso_local local_unnamed_addr global i32 0, align 4\n@AE_NOT_CONFIGURED = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [40 x i8] c\"fw_cfg_read_blob: Failed to lock ACPI!\\0A\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i64 0, align 8\n@fw_cfg_dev_lock = dso_local global i32 0, align 4\n@fw_cfg_reg_data = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @fw_cfg_read_blob], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @fw_cfg_read_blob(i32 noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {\n  %5 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  store i32 -1, ptr %5, align 4, !tbaa !5\n  %6 = load i32, ptr @ACPI_WAIT_FOREVER, align 4, !tbaa !5\n  %7 = call i64 @acpi_acquire_global_lock(i32 noundef %6, ptr noundef nonnull %5) #3\n  %8 = call i64 @ACPI_FAILURE(i64 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  %10 = load i64, ptr @AE_NOT_CONFIGURED, align 8\n  %11 = icmp eq i64 %7, %10\n  %12 = select i1 %9, i1 true, i1 %11\n  br i1 %12, label %17, label %13\n\n13:                                               ; preds = %4\n  %14 = call i32 @WARN(i32 noundef 1, ptr noundef nonnull @.str) #3\n  %15 = call i32 @memset(ptr noundef %1, i32 noundef 0, i64 noundef %3) #3\n  %16 = load i64, ptr @EINVAL, align 8, !tbaa !9\n  br label %31\n\n17:                                               ; preds = %4\n  %18 = call i32 @mutex_lock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %19 = call i32 @fw_cfg_sel_endianness(i32 noundef %0) #3\n  %20 = icmp sgt i32 %2, 0\n  br i1 %20, label %21, label %26\n\n21:                                               ; preds = %17, %21\n  %22 = phi i32 [ %24, %21 ], [ %2, %17 ]\n  %23 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %24 = add nsw i32 %22, -1\n  %25 = call i32 @ioread8(i32 noundef %23) #3\n  br i1 %20, label %21, label %26, !llvm.loop !11\n\n26:                                               ; preds = %21, %17\n  %27 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %28 = call i32 @ioread8_rep(i32 noundef %27, ptr noundef %1, i64 noundef %3) #3\n  %29 = call i32 @mutex_unlock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %30 = load i32, ptr %5, align 4, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  br label %31\n\n31:                                               ; preds = %26, %13\n  %32 = phi i64 [ %16, %13 ], [ %3, %26 ]\n  ret i64 %32\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @acpi_acquire_global_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ACPI_FAILURE(i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @WARN(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @fw_cfg_sel_endianness(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8_rep(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_WAIT_FOREVER = dso_local local_unnamed_addr global i32 0, align 4\n@AE_NOT_CONFIGURED = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [40 x i8] c\"fw_cfg_read_blob: Failed to lock ACPI!\\0A\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i64 0, align 8\n@fw_cfg_dev_lock = dso_local global i32 0, align 4\n@fw_cfg_reg_data = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @fw_cfg_read_blob], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @fw_cfg_read_blob(i32 noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {\n  %5 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  store i32 -1, ptr %5, align 4, !tbaa !5\n  %6 = load i32, ptr @ACPI_WAIT_FOREVER, align 4, !tbaa !5\n  %7 = call i64 @acpi_acquire_global_lock(i32 noundef %6, ptr noundef nonnull %5) #3\n  %8 = call i64 @ACPI_FAILURE(i64 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  %10 = load i64, ptr @AE_NOT_CONFIGURED, align 8\n  %11 = icmp eq i64 %7, %10\n  %12 = select i1 %9, i1 true, i1 %11\n  br i1 %12, label %17, label %13\n\n13:                                               ; preds = %4\n  %14 = call i32 @WARN(i32 noundef 1, ptr noundef nonnull @.str) #3\n  %15 = call i32 @memset(ptr noundef %1, i32 noundef 0, i64 noundef %3) #3\n  %16 = load i64, ptr @EINVAL, align 8, !tbaa !9\n  br label %30\n\n17:                                               ; preds = %4\n  %18 = call i32 @mutex_lock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %19 = call i32 @fw_cfg_sel_endianness(i32 noundef %0) #3\n  %20 = icmp sgt i32 %2, 0\n  br i1 %20, label %21, label %26\n\n21:                                               ; preds = %17, %21\n  %22 = phi i32 [ %24, %21 ], [ %2, %17 ]\n  %23 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %24 = add nsw i32 %22, -1\n  %25 = call i32 @ioread8(i32 noundef %23) #3\n  br i1 %20, label %21, label %26, !llvm.loop !11\n\n26:                                               ; preds = %21, %17\n  %27 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %28 = call i32 @ioread8_rep(i32 noundef %27, ptr noundef %1, i64 noundef %3) #3\n  %29 = call i32 @mutex_unlock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  br label %30\n\n30:                                               ; preds = %26, %13\n  %31 = phi i64 [ %16, %13 ], [ %3, %26 ]\n  ret i64 %31\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @acpi_acquire_global_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ACPI_FAILURE(i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @WARN(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @fw_cfg_sel_endianness(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8_rep(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_WAIT_FOREVER = dso_local local_unnamed_addr global i32 0, align 4\n@AE_NOT_CONFIGURED = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [40 x i8] c\"fw_cfg_read_blob: Failed to lock ACPI!\\0A\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i64 0, align 8\n@fw_cfg_dev_lock = dso_local global i32 0, align 4\n@fw_cfg_reg_data = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @fw_cfg_read_blob], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @fw_cfg_read_blob(i32 noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {\n  %5 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  store i32 -1, ptr %5, align 4, !tbaa !5\n  %6 = load i32, ptr @ACPI_WAIT_FOREVER, align 4, !tbaa !5\n  %7 = call i64 @acpi_acquire_global_lock(i32 noundef %6, ptr noundef nonnull %5) #3\n  %8 = call i64 @ACPI_FAILURE(i64 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  %10 = load i64, ptr @AE_NOT_CONFIGURED, align 8\n  %11 = icmp eq i64 %7, %10\n  %12 = select i1 %9, i1 true, i1 %11\n  br i1 %12, label %17, label %13\n\n13:                                               ; preds = %4\n  %14 = call i32 @WARN(i32 noundef 1, ptr noundef nonnull @.str) #3\n  %15 = call i32 @memset(ptr noundef %1, i32 noundef 0, i64 noundef %3) #3\n  %16 = load i64, ptr @EINVAL, align 8, !tbaa !9\n  br label %31\n\n17:                                               ; preds = %4\n  %18 = call i32 @mutex_lock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %19 = call i32 @fw_cfg_sel_endianness(i32 noundef %0) #3\n  %20 = icmp sgt i32 %2, 0\n  br i1 %20, label %21, label %26\n\n21:                                               ; preds = %17, %21\n  %22 = phi i32 [ %24, %21 ], [ %2, %17 ]\n  %23 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %24 = add nsw i32 %22, -1\n  %25 = call i32 @ioread8(i32 noundef %23) #3\n  br i1 %20, label %21, label %26, !llvm.loop !11\n\n26:                                               ; preds = %21, %17\n  %27 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %28 = call i32 @ioread8_rep(i32 noundef %27, ptr noundef %1, i64 noundef %3) #3\n  %29 = call i32 @mutex_unlock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %30 = load i32, ptr %5, align 4, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  br label %31\n\n31:                                               ; preds = %26, %13\n  %32 = phi i64 [ %16, %13 ], [ %3, %26 ]\n  ret i64 %32\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @acpi_acquire_global_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ACPI_FAILURE(i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @WARN(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @fw_cfg_sel_endianness(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8_rep(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/firmware/extr_qemu_fw_cfg.c_fw_cfg_read_blob.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@ACPI_WAIT_FOREVER = dso_local local_unnamed_addr global i32 0, align 4\n@AE_NOT_CONFIGURED = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [40 x i8] c\"fw_cfg_read_blob: Failed to lock ACPI!\\0A\\00\", align 1\n@EINVAL = dso_local local_unnamed_addr global i64 0, align 8\n@fw_cfg_dev_lock = dso_local global i32 0, align 4\n@fw_cfg_reg_data = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @fw_cfg_read_blob], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @fw_cfg_read_blob(i32 noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {\n  %5 = alloca i32, align 4\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  store i32 -1, ptr %5, align 4, !tbaa !5\n  %6 = load i32, ptr @ACPI_WAIT_FOREVER, align 4, !tbaa !5\n  %7 = call i64 @acpi_acquire_global_lock(i32 noundef %6, ptr noundef nonnull %5) #3\n  %8 = call i64 @ACPI_FAILURE(i64 noundef %7) #3\n  %9 = icmp eq i64 %8, 0\n  %10 = load i64, ptr @AE_NOT_CONFIGURED, align 8\n  %11 = icmp eq i64 %7, %10\n  %12 = select i1 %9, i1 true, i1 %11\n  br i1 %12, label %18, label %13\n\n13:                                               ; preds = %4\n  %14 = call i32 @WARN(i32 noundef 1, ptr noundef nonnull @.str) #3\n  %15 = call i32 @memset(ptr noundef %1, i32 noundef 0, i64 noundef %3) #3\n  %16 = load i64, ptr @EINVAL, align 8, !tbaa !9\n  %17 = sub i64 0, %16\n  br label %34\n\n18:                                               ; preds = %4\n  %19 = call i32 @mutex_lock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %20 = call i32 @fw_cfg_sel_endianness(i32 noundef %0) #3\n  %21 = icmp sgt i32 %2, 0\n  br i1 %21, label %22, label %28\n\n22:                                               ; preds = %18, %22\n  %23 = phi i32 [ %24, %22 ], [ %2, %18 ]\n  %24 = add nsw i32 %23, -1\n  %25 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %26 = call i32 @ioread8(i32 noundef %25) #3\n  %27 = icmp ugt i32 %23, 1\n  br i1 %27, label %22, label %28, !llvm.loop !11\n\n28:                                               ; preds = %22, %18\n  %29 = load i32, ptr @fw_cfg_reg_data, align 4, !tbaa !5\n  %30 = call i32 @ioread8_rep(i32 noundef %29, ptr noundef %1, i64 noundef %3) #3\n  %31 = call i32 @mutex_unlock(ptr noundef nonnull @fw_cfg_dev_lock) #3\n  %32 = load i32, ptr %5, align 4, !tbaa !5\n  %33 = call i32 @acpi_release_global_lock(i32 noundef %32) #3\n  br label %34\n\n34:                                               ; preds = %28, %13\n  %35 = phi i64 [ %17, %13 ], [ %3, %28 ]\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret i64 %35\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @acpi_acquire_global_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ACPI_FAILURE(i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @WARN(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_lock(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @fw_cfg_sel_endianness(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ioread8_rep(i32 noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\ndeclare i32 @mutex_unlock(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @acpi_release_global_lock(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tcp_input.c_tcp_urg.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function tcp_urg\n\t.type\ttcp_urg,@function\ntcp_urg:                                # @tcp_urg\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r13, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdx, %rbx\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %r14\n\tcallq\ttcp_sk@PLT\n\tmovq\t%rax, %r12\n\tcmpq\t$0, 24(%rbx)\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\ttcp_check_urg@PLT\n.LBB0_2:\n\tmovq\t(%r12), %rax\n\tcmpq\tTCP_URG_NOTYET(%rip), %rax\n\tjne\t.LBB0_8\n# %bb.3:\n\tmovq\t8(%r12), %r13\n\tmovl\t16(%rbx), %edi\n\tcallq\tntohl@PLT\n\tmovslq\t(%rbx), %rcx\n\taddq\t8(%rbx), %rax\n\tsubq\t%rax, %r13\n\tleaq\t(,%rcx,4), %rsi\n\taddq\t%r13, %rsi\n\tcmpq\t(%r15), %rsi\n\tjge\t.LBB0_8\n# %bb.4:\n\tleaq\t12(%rsp), %rdx\n\tmovq\t%r15, %rdi\n\tmovl\t$1, %ecx\n\tcallq\tskb_copy_bits@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.5:\n\txorl\t%eax, %eax\n\tcallq\tBUG@PLT\n.LBB0_6:\n\tmovl\t12(%rsp), %eax\n\torl\tTCP_URG_VALID(%rip), %eax\n\tcltq\n\tmovq\t%rax, (%r12)\n\tmovl\tSOCK_DEAD(%rip), %esi\n\tmovq\t%r14, %rdi\n\tcallq\tsock_flag@PLT\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_8\n# %bb.7:\n\tmovq\t%r14, %rdi\n\txorl\t%esi, %esi\n\tcallq\t*(%r14)\n.LBB0_8:\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\ttcp_urg, .Lfunc_end0-tcp_urg\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tTCP_URG_NOTYET,@object          # @TCP_URG_NOTYET\n\t.bss\n\t.globl\tTCP_URG_NOTYET\n\t.p2align\t3\nTCP_URG_NOTYET:\n\t.quad\t0                               # 0x0\n\t.size\tTCP_URG_NOTYET, 8\n\n\t.type\tTCP_URG_VALID,@object           # @TCP_URG_VALID\n\t.globl\tTCP_URG_VALID\n\t.p2align\t2\nTCP_URG_VALID:\n\t.long\t0                               # 0x0\n\t.size\tTCP_URG_VALID, 4\n\n\t.type\tSOCK_DEAD,@object               # @SOCK_DEAD\n\t.globl\tSOCK_DEAD\n\t.p2align\t2\nSOCK_DEAD:\n\t.long\t0                               # 0x0\n\t.size\tSOCK_DEAD, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.tcphdr = type { i32, i64, i32, i64 }\n%struct.tcp_sock = type { i64, i64 }\n\n@TCP_URG_NOTYET = dso_local local_unnamed_addr global i64 0, align 8\n@TCP_URG_VALID = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_DEAD = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @tcp_urg], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @tcp_urg(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {\n  %4 = alloca i32, align 4\n  %5 = tail call ptr @tcp_sk(ptr noundef %0) #3\n  %6 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 3\n  %7 = load i64, ptr %6, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @tcp_check_urg(ptr noundef %0, ptr noundef nonnull %2) #3\n  br label %11\n\n11:                                               ; preds = %9, %3\n  %12 = load i64, ptr %5, align 8, !tbaa !11\n  %13 = load i64, ptr @TCP_URG_NOTYET, align 8, !tbaa !13\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.tcp_sock, ptr %5, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 2\n  %19 = load i32, ptr %18, align 8, !tbaa !15\n  %20 = tail call i64 @ntohl(i32 noundef %19) #3\n  %21 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 1\n  %22 = load i64, ptr %21, align 8, !tbaa !16\n  %23 = add nsw i64 %22, %20\n  %24 = load i32, ptr %2, align 8, !tbaa !17\n  %25 = sext i32 %24 to i64\n  %26 = shl nsw i64 %25, 2\n  %27 = add nsw i64 %23, %26\n  %28 = load i64, ptr %1, align 8, !tbaa !18\n  %29 = icmp slt i64 %27, %28\n  br i1 %29, label %30, label %37\n\n30:                                               ; preds = %15\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  %31 = call i64 @skb_copy_bits(ptr noundef nonnull %1, i64 noundef %27, ptr noundef nonnull %4, i32 noundef 1) #3\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %35, label %33\n\n33:                                               ; preds = %30\n  %34 = call i32 (...) @BUG() #3\n  br label %35\n\n35:                                               ; preds = %33, %30\n  %36 = load i32, ptr @TCP_URG_VALID, align 4, !tbaa !20\n  %37 = load i64, ptr %5, align 8, !tbaa !11\n  %38 = sext i32 %36 to i64\n  %39 = add nsw i64 %37, %38\n  store i64 %39, ptr %5, align 8, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  %40 = load i32, ptr @SOCK_DEAD, align 4, !tbaa !20\n  %41 = call i32 @sock_flag(ptr noundef %0, i32 noundef %40) #3\n  %42 = icmp eq i32 %41, 0\n  br i1 %42, label %43, label %37\n\n43:                                               ; preds = %35\n  %44 = load ptr, ptr %0, align 8, !tbaa !21\n  %45 = call i32 %44(ptr noundef nonnull %0, i32 noundef 0) #3\n  br label %37\n\n46:                                               ; preds = %43\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @tcp_sk(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tcp_check_urg(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ntohl(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @skb_copy_bits(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @BUG(...) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sock_flag(ptr noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"tcphdr\", !7, i64 0, !10, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"tcp_sock\", !10, i64 0, !10, i64 8}\n!13 = !{!10, !10, i64 0}\n!14 = !{!12, !10, i64 8}\n!15 = !{!6, !7, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!6, !7, i64 0}\n!18 = !{!19, !10, i64 0}\n!19 = !{!\"sk_buff\", !10, i64 0}\n!20 = !{!7, !7, i64 0}\n!21 = !{!22, !23, i64 0}\n!22 = !{!\"sock\", !23, i64 0}\n!23 = !{!\"any pointer\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.tcphdr = type { i32, i64, i32, i64 }\n%struct.tcp_sock = type { i64, i64 }\n\n@TCP_URG_NOTYET = dso_local local_unnamed_addr global i64 0, align 8\n@TCP_URG_VALID = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_DEAD = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @tcp_urg], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @tcp_urg(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {\n  %4 = alloca i32, align 4\n  %5 = tail call ptr @tcp_sk(ptr noundef %0) #3\n  %6 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 3\n  %7 = load i64, ptr %6, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @tcp_check_urg(ptr noundef %0, ptr noundef nonnull %2) #3\n  br label %11\n\n11:                                               ; preds = %9, %3\n  %12 = load i64, ptr %5, align 8, !tbaa !11\n  %13 = load i64, ptr @TCP_URG_NOTYET, align 8, !tbaa !13\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %38\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.tcp_sock, ptr %5, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 2\n  %19 = load i32, ptr %18, align 8, !tbaa !15\n  %20 = tail call i64 @ntohl(i32 noundef %19) #3\n  %21 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 1\n  %22 = load i64, ptr %21, align 8, !tbaa !16\n  %23 = add nsw i64 %22, %20\n  %24 = load i32, ptr %2, align 8, !tbaa !17\n  %25 = sext i32 %24 to i64\n  %26 = shl nsw i64 %25, 2\n  %27 = add nsw i64 %23, %26\n  %28 = load i64, ptr %1, align 8, !tbaa !18\n  %29 = icmp slt i64 %27, %28\n  br i1 %29, label %30, label %38\n\n30:                                               ; preds = %15\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  %31 = call i64 @skb_copy_bits(ptr noundef nonnull %1, i64 noundef %27, ptr noundef nonnull %4, i32 noundef 1) #3\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %35, label %33\n\n33:                                               ; preds = %30\n  %34 = call i32 (...) @BUG() #3\n  br label %35\n\n35:                                               ; preds = %33, %30\n  %36 = load i32, ptr @TCP_URG_VALID, align 4, !tbaa !20\n  %37 = or i32 %36, %24\n  store i32 %37, ptr %5, align 8, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  br label %38\n\n38:                                               ; preds = %35, %15, %11\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @tcp_sk(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tcp_check_urg(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ntohl(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @skb_copy_bits(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @BUG(...) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"tcphdr\", !7, i64 0, !10, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"tcp_sock\", !10, i64 0, !10, i64 8}\n!13 = !{!10, !10, i64 0}\n!14 = !{!12, !10, i64 8}\n!15 = !{!6, !7, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!6, !7, i64 0}\n!18 = !{!19, !10, i64 0}\n!19 = !{!\"sk_buff\", !10, i64 0}\n!20 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.tcphdr = type { i32, i64, i32, i64 }\n%struct.tcp_sock = type { i64, i64 }\n\n@TCP_URG_NOTYET = dso_local local_unnamed_addr global i64 0, align 8\n@TCP_URG_VALID = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_DEAD = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @tcp_urg], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @tcp_urg(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {\n  %4 = alloca i32, align 4\n  %5 = tail call ptr @tcp_sk(ptr noundef %0) #3\n  %6 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 3\n  %7 = load i64, ptr %6, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @tcp_check_urg(ptr noundef %0, ptr noundef nonnull %2) #3\n  br label %11\n\n11:                                               ; preds = %9, %3\n  %12 = load i64, ptr %5, align 8, !tbaa !11\n  %13 = load i64, ptr @TCP_URG_NOTYET, align 8, !tbaa !13\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.tcp_sock, ptr %5, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 2\n  %19 = load i32, ptr %18, align 8, !tbaa !15\n  %20 = tail call i64 @ntohl(i32 noundef %19) #3\n  %21 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 1\n  %22 = load i64, ptr %21, align 8, !tbaa !16\n  %23 = add nsw i64 %22, %20\n  %24 = load i32, ptr %2, align 8, !tbaa !17\n  %25 = sext i32 %24 to i64\n  %26 = shl nsw i64 %25, 2\n  %27 = add nsw i64 %23, %26\n  %28 = load i64, ptr %1, align 8, !tbaa !18\n  %29 = icmp slt i64 %27, %28\n  br i1 %29, label %30, label %37\n\n30:                                               ; preds = %15\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  %31 = call i64 @skb_copy_bits(ptr noundef nonnull %1, i64 noundef %27, ptr noundef nonnull %4, i32 noundef 1) #3\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %35, label %33\n\n33:                                               ; preds = %30\n  %34 = call i32 (...) @BUG() #3\n  br label %35\n\n35:                                               ; preds = %33, %30\n  %36 = load i32, ptr @TCP_URG_VALID, align 4, !tbaa !20\n  %37 = load i64, ptr %5, align 8, !tbaa !11\n  %38 = sext i32 %36 to i64\n  %39 = add nsw i64 %37, %38\n  store i64 %39, ptr %5, align 8, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  %40 = load i32, ptr @SOCK_DEAD, align 4, !tbaa !20\n  %41 = call i32 @sock_flag(ptr noundef %0, i32 noundef %40) #3\n  %42 = icmp eq i32 %41, 0\n  br i1 %42, label %43, label %37\n\n43:                                               ; preds = %35\n  %44 = load ptr, ptr %0, align 8, !tbaa !21\n  %45 = call i32 %44(ptr noundef nonnull %0, i32 noundef 0) #3\n  br label %37\n\n46:                                               ; preds = %43\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @tcp_sk(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tcp_check_urg(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ntohl(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @skb_copy_bits(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @BUG(...) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sock_flag(ptr noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"tcphdr\", !7, i64 0, !10, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"tcp_sock\", !10, i64 0, !10, i64 8}\n!13 = !{!10, !10, i64 0}\n!14 = !{!12, !10, i64 8}\n!15 = !{!6, !7, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!6, !7, i64 0}\n!18 = !{!19, !10, i64 0}\n!19 = !{!\"sk_buff\", !10, i64 0}\n!20 = !{!7, !7, i64 0}\n!21 = !{!22, !23, i64 0}\n!22 = !{!\"sock\", !23, i64 0}\n!23 = !{!\"any pointer\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.tcphdr = type { i32, i64, i32, i64 }\n%struct.tcp_sock = type { i64, i64 }\n\n@TCP_URG_NOTYET = dso_local local_unnamed_addr global i64 0, align 8\n@TCP_URG_VALID = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_DEAD = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @tcp_urg], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @tcp_urg(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {\n  %4 = alloca i32, align 4\n  %5 = tail call ptr @tcp_sk(ptr noundef %0) #3\n  %6 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 3\n  %7 = load i64, ptr %6, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @tcp_check_urg(ptr noundef %0, ptr noundef nonnull %2) #3\n  br label %11\n\n11:                                               ; preds = %9, %3\n  %12 = load i64, ptr %5, align 8, !tbaa !11\n  %13 = load i64, ptr @TCP_URG_NOTYET, align 8, !tbaa !13\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.tcp_sock, ptr %5, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 2\n  %19 = load i32, ptr %18, align 8, !tbaa !15\n  %20 = tail call i64 @ntohl(i32 noundef %19) #3\n  %21 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 1\n  %22 = load i64, ptr %21, align 8, !tbaa !16\n  %23 = add nsw i64 %22, %20\n  %24 = load i32, ptr %2, align 8, !tbaa !17\n  %25 = sext i32 %24 to i64\n  %26 = shl nsw i64 %25, 2\n  %27 = add nsw i64 %23, %26\n  %28 = load i64, ptr %1, align 8, !tbaa !18\n  %29 = icmp slt i64 %27, %28\n  br i1 %29, label %30, label %37\n\n30:                                               ; preds = %15\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  %31 = call i64 @skb_copy_bits(ptr noundef nonnull %1, i64 noundef %27, ptr noundef nonnull %4, i32 noundef 1) #3\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %35, label %33\n\n33:                                               ; preds = %30\n  %34 = call i32 (...) @BUG() #3\n  br label %35\n\n35:                                               ; preds = %33, %30\n  %36 = load i32, ptr @TCP_URG_VALID, align 4, !tbaa !20\n  %37 = load i64, ptr %5, align 8, !tbaa !11\n  %38 = sext i32 %36 to i64\n  %39 = add nsw i64 %37, %38\n  store i64 %39, ptr %5, align 8, !tbaa !11\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  %40 = load i32, ptr @SOCK_DEAD, align 4, !tbaa !20\n  %41 = call i32 @sock_flag(ptr noundef %0, i32 noundef %40) #3\n  %42 = icmp eq i32 %41, 0\n  br i1 %42, label %43, label %37\n\n43:                                               ; preds = %35\n  %44 = load ptr, ptr %0, align 8, !tbaa !21\n  %45 = call i32 %44(ptr noundef nonnull %0, i32 noundef 0) #3\n  br label %37\n\n46:                                               ; preds = %43\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @tcp_sk(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tcp_check_urg(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ntohl(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @skb_copy_bits(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @BUG(...) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @sock_flag(ptr noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"tcphdr\", !7, i64 0, !10, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"tcp_sock\", !10, i64 0, !10, i64 8}\n!13 = !{!10, !10, i64 0}\n!14 = !{!12, !10, i64 8}\n!15 = !{!6, !7, i64 16}\n!16 = !{!6, !10, i64 8}\n!17 = !{!6, !7, i64 0}\n!18 = !{!19, !10, i64 0}\n!19 = !{!\"sk_buff\", !10, i64 0}\n!20 = !{!7, !7, i64 0}\n!21 = !{!22, !23, i64 0}\n!22 = !{!\"sock\", !23, i64 0}\n!23 = !{!\"any pointer\", !8, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/net/ipv4/extr_tcp_input.c_tcp_urg.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.tcphdr = type { i32, i64, i32, i64 }\n%struct.tcp_sock = type { i64, i64 }\n\n@TCP_URG_NOTYET = dso_local local_unnamed_addr global i64 0, align 8\n@TCP_URG_VALID = dso_local local_unnamed_addr global i32 0, align 4\n@SOCK_DEAD = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @tcp_urg], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @tcp_urg(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {\n  %4 = alloca i32, align 4\n  %5 = tail call ptr @tcp_sk(ptr noundef %0) #3\n  %6 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 3\n  %7 = load i64, ptr %6, align 8, !tbaa !5\n  %8 = icmp eq i64 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = tail call i32 @tcp_check_urg(ptr noundef %0, ptr noundef nonnull %2) #3\n  br label %11\n\n11:                                               ; preds = %9, %3\n  %12 = load i64, ptr %5, align 8, !tbaa !11\n  %13 = load i64, ptr @TCP_URG_NOTYET, align 8, !tbaa !13\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %48\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.tcp_sock, ptr %5, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !14\n  %18 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 2\n  %19 = load i32, ptr %18, align 8, !tbaa !15\n  %20 = tail call i64 @ntohl(i32 noundef %19) #3\n  %21 = load i32, ptr %2, align 8, !tbaa !16\n  %22 = shl nsw i32 %21, 2\n  %23 = sext i32 %22 to i64\n  %24 = getelementptr inbounds %struct.tcphdr, ptr %2, i64 0, i32 1\n  %25 = load i64, ptr %24, align 8, !tbaa !17\n  %26 = add i64 %20, %25\n  %27 = sub i64 %17, %26\n  %28 = add i64 %27, %23\n  %29 = load i64, ptr %1, align 8, !tbaa !18\n  %30 = icmp slt i64 %28, %29\n  br i1 %30, label %31, label %48\n\n31:                                               ; preds = %15\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  %32 = call i64 @skb_copy_bits(ptr noundef nonnull %1, i64 noundef %28, ptr noundef nonnull %4, i32 noundef 1) #3\n  %33 = icmp eq i64 %32, 0\n  br i1 %33, label %36, label %34\n\n34:                                               ; preds = %31\n  %35 = call i32 (...) @BUG() #3\n  br label %36\n\n36:                                               ; preds = %34, %31\n  %37 = load i32, ptr @TCP_URG_VALID, align 4, !tbaa !20\n  %38 = load i32, ptr %4, align 4, !tbaa !20\n  %39 = or i32 %38, %37\n  %40 = sext i32 %39 to i64\n  store i64 %40, ptr %5, align 8, !tbaa !11\n  %41 = load i32, ptr @SOCK_DEAD, align 4, !tbaa !20\n  %42 = call i32 @sock_flag(ptr noundef %0, i32 noundef %41) #3\n  %43 = icmp eq i32 %42, 0\n  br i1 %43, label %44, label %47\n\n44:                                               ; preds = %36\n  %45 = load ptr, ptr %0, align 8, !tbaa !21\n  %46 = call i32 %45(ptr noundef nonnull %0, i32 noundef 0) #3\n  br label %47\n\n47:                                               ; preds = %44, %36\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  br label %48\n\n48:                                               ; preds = %15, %47, %11\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @tcp_sk(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tcp_check_urg(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @ntohl(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @skb_copy_bits(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @BUG(...) local_unnamed_addr #2\n\ndeclare i32 @sock_flag(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"tcphdr\", !7, i64 0, !10, i64 8, !7, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"tcp_sock\", !10, i64 0, !10, i64 8}\n!13 = !{!10, !10, i64 0}\n!14 = !{!12, !10, i64 8}\n!15 = !{!6, !7, i64 16}\n!16 = !{!6, !7, i64 0}\n!17 = !{!6, !10, i64 8}\n!18 = !{!19, !10, i64 0}\n!19 = !{!\"sk_buff\", !10, i64 0}\n!20 = !{!7, !7, i64 0}\n!21 = !{!22, !23, i64 0}\n!22 = !{!\"sock\", !23, i64 0}\n!23 = !{!\"any pointer\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_phase.c_wm_mute_put.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function wm_mute_put\n\t.type\twm_mute_put,@function\nwm_mute_put:                            # @wm_mute_put\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %rbp\n\tcallq\tsnd_kcontrol_chip@PLT\n\tmovq\t(%rax), %rbx\n\tmovl\t(%rbp), %ebp\n\tmovq\t%rax, 8(%rsp)                   # 8-byte Spill\n\tmovq\t%rax, %rdi\n\tcallq\tsnd_ice1712_save_gpio_status@PLT\n\txorl\t%r12d, %r12d\n\tcmpl\t$256, %ebp                      # imm = 0x100\n\tjl\t.LBB0_7\n# %bb.1:\n\tmovzbl\t%bpl, %ecx\n\tshrl\t$8, %ebp\n\tmovl\tWM_VOL_MUTE(%rip), %eax\n\tmovq\t%rcx, 16(%rsp)                  # 8-byte Spill\n\tleaq\t(,%rcx,4), %r13\n\txorl\t%r14d, %r14d\n\txorl\t%r12d, %r12d\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   in Loop: Header=BB0_2 Depth=1\n\torl\t%esi, %edx\n\tmovl\t%edx, (%rcx,%r14,4)\n\tmovq\t8(%rbx), %rax\n\tmovl\t(%rax,%r14,4), %ecx\n\tmovq\t16(%rsp), %rax                  # 8-byte Reload\n\tleal\t(%rax,%r14), %esi\n\tmovq\t8(%rsp), %rdi                   # 8-byte Reload\n\tcallq\twm_set_vol@PLT\n\tmovl\t$1, %r12d\n\tmovl\tWM_VOL_MUTE(%rip), %eax\n.LBB0_6:                                #   in Loop: Header=BB0_2 Depth=1\n\tincq\t%r14\n\tcmpq\t%r14, %rbp\n\tje\t.LBB0_7\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t(%rbx), %rcx\n\taddq\t%r13, %rcx\n\tmovl\t(%rcx,%r14,4), %esi\n\txorl\t%edx, %edx\n\ttestl\t%esi, %eax\n\tsete\t%dl\n\tmovq\t(%r15), %rdi\n\tcmpl\t%edx, (%rdi,%r14,4)\n\tje\t.LBB0_6\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tnotl\t%eax\n\tandl\t%eax, %esi\n\tmovl\t%esi, (%rcx,%r14,4)\n\txorl\t%edx, %edx\n\tcmpl\t$0, (%rdi,%r14,4)\n\tjne\t.LBB0_5\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\tWM_VOL_MUTE(%rip), %edx\n\tjmp\t.LBB0_5\n.LBB0_7:\n\tmovq\t8(%rsp), %rdi                   # 8-byte Reload\n\tcallq\tsnd_ice1712_restore_gpio_status@PLT\n\tmovl\t%r12d, %eax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\twm_mute_put, .Lfunc_end0-wm_mute_put\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tWM_VOL_MUTE,@object             # @WM_VOL_MUTE\n\t.bss\n\t.globl\tWM_VOL_MUTE\n\t.p2align\t2\nWM_VOL_MUTE:\n\t.long\t0                               # 0x0\n\t.size\tWM_VOL_MUTE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wm_ad1814a_spec = type { ptr, ptr }\n\n@WM_VOL_MUTE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wm_mute_put], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wm_mute_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = tail call ptr @snd_kcontrol_chip(ptr noundef %0) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %0, align 4, !tbaa !10\n  %6 = tail call i32 @snd_ice1712_save_gpio_status(ptr noundef nonnull %3) #2\n  %7 = icmp sgt i32 %5, 255\n  br i1 %7, label %8, label %38\n\n8:                                                ; preds = %2\n  %9 = and i32 %5, 255\n  %10 = lshr i32 %5, 8\n  %11 = zext i32 %9 to i64\n  %12 = getelementptr inbounds i32, ptr %4, i64 %11\n  %13 = load i32, ptr @WM_VOL_MUTE, align 4, !tbaa !13\n  %14 = getelementptr inbounds %struct.wm_ad1814a_spec, ptr %4, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !14\n  br label %16\n\n16:                                               ; preds = %8, %33\n  %17 = phi i64 [ 0, %8 ], [ %34, %33 ]\n  %18 = phi i32 [ %13, %8 ], [ %35, %33 ]\n  %19 = phi i32 [ 0, %8 ], [ %36, %33 ]\n  %20 = load ptr, ptr %1, align 8, !tbaa !15\n  %21 = getelementptr inbounds i32, ptr %20, i64 %17\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %18, %22\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %33, label %25\n\n25:                                               ; preds = %16\n  %26 = getelementptr inbounds i32, ptr %15, i64 %17\n  %27 = load i32, ptr %26, align 4, !tbaa !13\n  %28 = xor i32 %18, -1\n  %29 = and i32 %27, %28\n  store i32 %29, ptr %26, align 4, !tbaa !13\n  %30 = load i32, ptr %21, align 4, !tbaa !13\n  %31 = icmp eq i32 %30, 0\n  %32 = load i32, ptr @WM_VOL_MUTE, align 4\n  br i1 %31, label %33, label %35\n\n33:                                               ; preds = %25, %16\n  %34 = add nuw nsw i64 %17, 1\n  %35 = phi i32 [ %32, %25 ], [ %18, %16 ]\n  %36 = phi i32 [ %19, %25 ], [ %19, %16 ]\n  %37 = icmp eq i64 %34, %10\n  br i1 %37, label %38, label %16, !llvm.loop !17\n\n38:                                               ; preds = %33, %2\n  %39 = phi i32 [ 0, %2 ], [ %36, %33 ]\n  %40 = tail call i32 @snd_ice1712_restore_gpio_status(ptr noundef nonnull %3) #2\n  ret i32 %39\n}\n\ndeclare ptr @snd_kcontrol_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_save_gpio_status(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_restore_gpio_status(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_ice1712\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"snd_kcontrol\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!16, !7, i64 8}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"snd_ctl_elem_value\", !17, i64 0}\n!17 = !{!\"TYPE_4__\", !18, i64 0}\n!18 = !{!\"TYPE_3__\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wm_ad1980_spec = type { ptr, ptr }\n\n@WM_VOL_MUTE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wm_mute_put], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wm_mute_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = tail call ptr @snd_kcontrol_chip(ptr noundef %0) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %0, align 4, !tbaa !10\n  %6 = tail call i32 @snd_ice1712_save_gpio_status(ptr noundef nonnull %3) #2\n  %7 = icmp sgt i32 %5, 255\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %2\n  %9 = and i32 %5, 255\n  %10 = lshr i32 %5, 8\n  %11 = zext i32 %9 to i64\n  %12 = getelementptr inbounds i32, ptr %4, i64 %11\n  %13 = load i32, ptr @WM_VOL_MUTE, align 4, !tbaa !13\n  %14 = getelementptr inbounds %struct.wm_ad1980_spec, ptr %4, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !14\n  br label %16\n\n16:                                               ; preds = %8, %32\n  %17 = phi i64 [ 0, %8 ], [ %33, %32 ]\n  %18 = phi i32 [ %13, %8 ], [ %34, %32 ]\n  %19 = phi i32 [ 0, %8 ], [ %35, %32 ]\n  %20 = load ptr, ptr %1, align 8, !tbaa !15\n  %21 = getelementptr inbounds i32, ptr %20, i64 %17\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %18, %22\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %32, label %25\n\n25:                                               ; preds = %16\n  %26 = getelementptr inbounds i32, ptr %15, i64 %17\n  %27 = load i32, ptr %26, align 4, !tbaa !13\n  %28 = xor i32 %18, -1\n  %29 = and i32 %27, %28\n  store i32 %29, ptr %26, align 4, !tbaa !13\n  %30 = load i32, ptr %21, align 4, !tbaa !13\n  %31 = icmp eq i32 %30, 0\n  br i1 %31, label %32, label %35\n\n32:                                               ; preds = %25, %16\n  %33 = add nuw nsw i64 %17, 1\n  %34 = load i32, ptr @WM_VOL_MUTE, align 4, !tbaa !13\n  %35 = or i32 %34, %19\n  br label %16, !llvm.loop !17\n\n36:                                               ; preds = %32\n  br label %37\n\n37:                                               ; preds = %36, %2\n  %38 = phi i32 [ 0, %2 ], [ 1, %36 ]\n  %39 = tail call i32 @snd_ice1712_restore_gpio_status(ptr noundef nonnull %3) #2\n  ret i32 %38\n}\n\ndeclare ptr @snd_kcontrol_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_save_gpio_status(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_restore_gpio_status(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_ice1712\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"snd_kcontrol\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!16, !7, i64 8}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"snd_ctl_elem_value\", !17, i64 0}\n!17 = !{!\"TYPE_4__\", !18, i64 0}\n!18 = !{!\"TYPE_3__\", !7, i64 0}\n!19 = !{!20, !20, i64 0}\n!20 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wm_ad1814a_spec = type { ptr, ptr }\n\n@WM_VOL_MUTE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wm_mute_put], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wm_mute_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = tail call ptr @snd_kcontrol_chip(ptr noundef %0) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %0, align 4, !tbaa !10\n  %6 = tail call i32 @snd_ice1712_save_gpio_status(ptr noundef nonnull %3) #2\n  %7 = icmp sgt i32 %5, 255\n  br i1 %7, label %8, label %38\n\n8:                                                ; preds = %2\n  %9 = and i32 %5, 255\n  %10 = lshr i32 %5, 8\n  %11 = zext i32 %9 to i64\n  %12 = getelementptr inbounds i32, ptr %4, i64 %11\n  %13 = load i32, ptr @WM_VOL_MUTE, align 4, !tbaa !13\n  %14 = getelementptr inbounds %struct.wm_ad1814a_spec, ptr %4, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !14\n  br label %16\n\n16:                                               ; preds = %8, %33\n  %17 = phi i64 [ 0, %8 ], [ %34, %33 ]\n  %18 = phi i32 [ %13, %8 ], [ %35, %33 ]\n  %19 = phi i32 [ 0, %8 ], [ %36, %33 ]\n  %20 = load ptr, ptr %1, align 8, !tbaa !15\n  %21 = getelementptr inbounds i32, ptr %20, i64 %17\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %18, %22\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %33, label %25\n\n25:                                               ; preds = %16\n  %26 = getelementptr inbounds i32, ptr %15, i64 %17\n  %27 = load i32, ptr %26, align 4, !tbaa !13\n  %28 = xor i32 %18, -1\n  %29 = and i32 %27, %28\n  store i32 %29, ptr %26, align 4, !tbaa !13\n  %30 = load i32, ptr %21, align 4, !tbaa !13\n  %31 = icmp eq i32 %30, 0\n  %32 = load i32, ptr @WM_VOL_MUTE, align 4\n  br i1 %31, label %33, label %35\n\n33:                                               ; preds = %25, %16\n  %34 = add nuw nsw i64 %17, 1\n  %35 = phi i32 [ %32, %25 ], [ %18, %16 ]\n  %36 = phi i32 [ %19, %25 ], [ %19, %16 ]\n  %37 = icmp eq i64 %34, %10\n  br i1 %37, label %38, label %16, !llvm.loop !17\n\n38:                                               ; preds = %33, %2\n  %39 = phi i32 [ 0, %2 ], [ %36, %33 ]\n  %40 = tail call i32 @snd_ice1712_restore_gpio_status(ptr noundef nonnull %3) #2\n  ret i32 %39\n}\n\ndeclare ptr @snd_kcontrol_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_save_gpio_status(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_restore_gpio_status(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_ice1712\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"snd_kcontrol\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!16, !7, i64 8}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"snd_ctl_elem_value\", !17, i64 0}\n!17 = !{!\"TYPE_4__\", !18, i64 0}\n!18 = !{!\"TYPE_3__\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wm_ad1980_spec = type { ptr, ptr }\n\n@WM_VOL_MUTE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wm_mute_put], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wm_mute_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = tail call ptr @snd_kcontrol_chip(ptr noundef %0) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %0, align 4, !tbaa !10\n  %6 = tail call i32 @snd_ice1712_save_gpio_status(ptr noundef nonnull %3) #2\n  %7 = icmp sgt i32 %5, 255\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %2\n  %9 = and i32 %5, 255\n  %10 = lshr i32 %5, 8\n  %11 = zext i32 %9 to i64\n  %12 = getelementptr inbounds i32, ptr %4, i64 %11\n  %13 = load i32, ptr @WM_VOL_MUTE, align 4, !tbaa !13\n  %14 = getelementptr inbounds %struct.wm_ad1980_spec, ptr %4, i64 0, i32 1\n  %15 = load ptr, ptr %14, align 8, !tbaa !14\n  br label %16\n\n16:                                               ; preds = %8, %32\n  %17 = phi i64 [ 0, %8 ], [ %34, %32 ]\n  %18 = phi i32 [ %13, %8 ], [ %33, %32 ]\n  %19 = phi i32 [ 0, %8 ], [ %35, %32 ]\n  %20 = load ptr, ptr %1, align 8, !tbaa !15\n  %21 = getelementptr inbounds i32, ptr %20, i64 %17\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %18, %22\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %32, label %25\n\n25:                                               ; preds = %16\n  %26 = getelementptr inbounds i32, ptr %12, i64 %17\n  %27 = load i32, ptr %26, align 4, !tbaa !13\n  %28 = xor i32 %18, -1\n  %29 = and i32 %27, %28\n  store i32 %29, ptr %26, align 4, !tbaa !13\n  %30 = load i32, ptr %21, align 4, !tbaa !13\n  %31 = icmp eq i32 %30, 0\n  br i1 %31, label %32, label %35\n\n32:                                               ; preds = %25, %16\n  %33 = phi i32 [ %18, %16 ], [ %18, %25 ]\n  %34 = add nuw nsw i64 %17, 1\n  %35 = phi i32 [ %19, %16 ], [ 1, %25 ]\n  %36 = icmp eq i64 %34, %10\n  br i1 %36, label %37, label %16, !llvm.loop !17\n\n37:                                               ; preds = %32, %2\n  %38 = phi i32 [ 0, %2 ], [ %35, %32 ]\n  %39 = tail call i32 @snd_ice1712_restore_gpio_status(ptr noundef nonnull %3) #2\n  ret i32 %38\n}\n\ndeclare ptr @snd_kcontrol_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_save_gpio_status(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_restore_gpio_status(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_ice1712\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"snd_kcontrol\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!15, !7, i64 8}\n!15 = !{!\"snd_ctl_elem_value\", !16, i64 0}\n!16 = !{!\"TYPE_4__\", !14, i64 0}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/sound/pci/ice1712/extr_phase.c_wm_mute_put.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.phase28_spec = type { ptr, ptr }\n\n@WM_VOL_MUTE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wm_mute_put], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wm_mute_put(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {\n  %3 = tail call ptr @snd_kcontrol_chip(ptr noundef %0) #2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i32, ptr %0, align 4, !tbaa !10\n  %6 = tail call i32 @snd_ice1712_save_gpio_status(ptr noundef nonnull %3) #2\n  %7 = icmp sgt i32 %5, 255\n  br i1 %7, label %8, label %49\n\n8:                                                ; preds = %2\n  %9 = and i32 %5, 255\n  %10 = lshr i32 %5, 8\n  %11 = getelementptr inbounds %struct.phase28_spec, ptr %4, i64 0, i32 1\n  %12 = zext i32 %9 to i64\n  %13 = zext i32 %10 to i64\n  %14 = load i32, ptr @WM_VOL_MUTE, align 4, !tbaa !13\n  br label %15\n\n15:                                               ; preds = %8, %44\n  %16 = phi i32 [ %14, %8 ], [ %45, %44 ]\n  %17 = phi i64 [ 0, %8 ], [ %47, %44 ]\n  %18 = phi i32 [ 0, %8 ], [ %46, %44 ]\n  %19 = load ptr, ptr %4, align 8, !tbaa !14\n  %20 = add nuw nsw i64 %17, %12\n  %21 = getelementptr inbounds i32, ptr %19, i64 %20\n  %22 = load i32, ptr %21, align 4, !tbaa !13\n  %23 = and i32 %16, %22\n  %24 = icmp eq i32 %23, 0\n  %25 = zext i1 %24 to i32\n  %26 = load ptr, ptr %1, align 8, !tbaa !16\n  %27 = getelementptr inbounds i32, ptr %26, i64 %17\n  %28 = load i32, ptr %27, align 4, !tbaa !13\n  %29 = icmp eq i32 %28, %25\n  br i1 %29, label %44, label %30\n\n30:                                               ; preds = %15\n  %31 = xor i32 %16, -1\n  %32 = and i32 %22, %31\n  store i32 %32, ptr %21, align 4, !tbaa !13\n  %33 = load i32, ptr %27, align 4, !tbaa !13\n  %34 = icmp eq i32 %33, 0\n  %35 = load i32, ptr @WM_VOL_MUTE, align 4\n  %36 = select i1 %34, i32 %35, i32 0\n  %37 = or i32 %36, %32\n  store i32 %37, ptr %21, align 4, !tbaa !13\n  %38 = load ptr, ptr %11, align 8, !tbaa !20\n  %39 = getelementptr inbounds i32, ptr %38, i64 %17\n  %40 = load i32, ptr %39, align 4, !tbaa !13\n  %41 = trunc i64 %20 to i32\n  %42 = tail call i32 @wm_set_vol(ptr noundef nonnull %3, i32 noundef %41, i32 noundef %37, i32 noundef %40) #2\n  %43 = load i32, ptr @WM_VOL_MUTE, align 4, !tbaa !13\n  br label %44\n\n44:                                               ; preds = %30, %15\n  %45 = phi i32 [ %43, %30 ], [ %16, %15 ]\n  %46 = phi i32 [ 1, %30 ], [ %18, %15 ]\n  %47 = add nuw nsw i64 %17, 1\n  %48 = icmp eq i64 %47, %13\n  br i1 %48, label %49, label %15, !llvm.loop !21\n\n49:                                               ; preds = %44, %2\n  %50 = phi i32 [ 0, %2 ], [ %46, %44 ]\n  %51 = tail call i32 @snd_ice1712_restore_gpio_status(ptr noundef nonnull %3) #2\n  ret i32 %50\n}\n\ndeclare ptr @snd_kcontrol_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_save_gpio_status(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @wm_set_vol(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @snd_ice1712_restore_gpio_status(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"snd_ice1712\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"snd_kcontrol\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!15, !7, i64 0}\n!15 = !{!\"phase28_spec\", !7, i64 0, !7, i64 8}\n!16 = !{!17, !7, i64 0}\n!17 = !{!\"snd_ctl_elem_value\", !18, i64 0}\n!18 = !{!\"TYPE_4__\", !19, i64 0}\n!19 = !{!\"TYPE_3__\", !7, i64 0}\n!20 = !{!15, !7, i64 8}\n!21 = distinct !{!21, !22}\n!22 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_be_main.c_be_set_vf_tx_rate.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function be_set_vf_tx_rate\n\t.type\tbe_set_vf_tx_rate,@function\nbe_set_vf_tx_rate:                      # @be_set_vf_tx_rate\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r14d\n\tmovl\t%esi, %r15d\n\tcallq\tnetdev_priv@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t%rax, %rdi\n\tcallq\tsriov_enabled@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_1\n# %bb.2:\n\tcmpl\t%r15d, (%rbx)\n\tjle\t.LBB0_3\n# %bb.4:\n\tleal\t-10001(%r14), %eax\n\tcmpl\t$-9902, %eax                    # imm = 0xD952\n\tja\t.LBB0_6\n# %bb.5:\n\tmovq\t16(%rbx), %rdi\n\txorl\t%ebp, %ebp\n\tmovl\t$.L.str, %esi\n\txorl\t%eax, %eax\n\tcallq\tdev_err@PLT\n\tsubl\tEINVAL(%rip), %ebp\n\tjmp\t.LBB0_12\n.LBB0_1:\n\txorl\t%ebp, %ebp\n\tsubl\tEPERM(%rip), %ebp\n\tjmp\t.LBB0_12\n.LBB0_3:\n\txorl\t%ebp, %ebp\n\tsubl\tEINVAL(%rip), %ebp\n\tjmp\t.LBB0_12\n.LBB0_6:\n\tmovq\t%rbx, %rdi\n\tcallq\tlancer_chip@PLT\n\tmovzwl\t%r14w, %ecx\n\timull\t$52429, %ecx, %esi              # imm = 0xCCCD\n\tshrl\t$19, %esi\n\tleal\t1(%r15), %edx\n\tmovq\t%rbx, %rdi\n\ttestq\t%rax, %rax\n\tje\t.LBB0_8\n# %bb.7:\n\tcallq\tbe_cmd_set_profile_config@PLT\n\tjmp\t.LBB0_9\n.LBB0_8:\n\tcallq\tbe_cmd_set_qos@PLT\n.LBB0_9:\n\tmovl\t%eax, %ebp\n\ttestl\t%eax, %eax\n\tje\t.LBB0_11\n# %bb.10:\n\tmovq\t16(%rbx), %rdi\n\tmovl\t$.L.str.1, %esi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%eax, %eax\n\tcallq\tdev_err@PLT\n\tjmp\t.LBB0_12\n.LBB0_11:\n\tmovq\t8(%rbx), %rax\n\tmovslq\t%r15d, %rcx\n\tmovl\t%r14d, (%rax,%rcx,4)\n\txorl\t%ebp, %ebp\n.LBB0_12:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tbe_set_vf_tx_rate, .Lfunc_end0-be_set_vf_tx_rate\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tEPERM,@object                   # @EPERM\n\t.bss\n\t.globl\tEPERM\n\t.p2align\t2\nEPERM:\n\t.long\t0                               # 0x0\n\t.size\tEPERM, 4\n\n\t.type\tEINVAL,@object                  # @EINVAL\n\t.globl\tEINVAL\n\t.p2align\t2\nEINVAL:\n\t.long\t0                               # 0x0\n\t.size\tEINVAL, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"tx rate must be between 100 and 10000 Mbps\\n\"\n\t.size\t.L.str, 44\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"tx rate %d on VF %d failed\\n\"\n\t.size\t.L.str.1, 28\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.be_adapter = type { i32, ptr, ptr }\n\n@EPERM = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [44 x i8] c\"tx rate must be between 100 and 10000 Mbps\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [28 x i8] c\"tx rate %d on VF %d failed\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @be_set_vf_tx_rate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @be_set_vf_tx_rate(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %5 = tail call i32 @sriov_enabled(ptr noundef %4) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @EPERM, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  br label %37\n\n10:                                               ; preds = %3\n  %11 = load i32, ptr %4, align 8, !tbaa !9\n  %12 = icmp sgt i32 %11, %1\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %15 = sub nsw i32 0, %14\n  br label %37\n\n16:                                               ; preds = %10\n  %17 = add i32 %2, -10001\n  %18 = icmp ult i32 %17, -9901\n  br i1 %18, label %19, label %23\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  %21 = load ptr, ptr %20, align 8, !tbaa !12\n  %22 = tail call i32 (ptr, ptr, ...) @dev_err(ptr noundef %21, ptr noundef nonnull @.str) #2\n  br label %37\n\n23:                                               ; preds = %16\n  %24 = tail call i64 @lancer_chip(ptr noundef nonnull %4) #2\n  %25 = icmp eq i64 %24, 0\n  %26 = udiv i32 %2, 52429\n  %27 = add nuw nsw i32 %1, 1\n  br i1 %25, label %30, label %28\n\n28:                                               ; preds = %23\n  %29 = tail call i32 @be_cmd_set_profile_config(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %32\n\n30:                                               ; preds = %23\n  %31 = tail call i32 @be_cmd_set_qos(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %32\n\n32:                                               ; preds = %30, %28\n  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]\n  %34 = icmp eq i32 %33, 0\n  br i1 %34, label %38, label %35\n\n35:                                               ; preds = %32\n  %36 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(8) %36, ptr noundef nonnull align 4 dereferenceable(8) %4, i64 8, i1 false), !tbaa.struct !13\n  br label %37\n\n37:                                               ; preds = %35, %19, %13, %7\n  %38 = phi i32 [ %15, %13 ], [ %9, %7 ], [ %33, %19 ], [ 0, %35 ]\n  ret i32 %38\n\n39:                                               ; preds = %40\n  %41 = add nuw nsw i32 %42, 1\n  %42 = and i32 %41, 7\n  %43 = icmp eq i32 %42, 0\n  br i1 %43, label %44, label %40, !llvm.loop !15\n\n44:                                               ; preds = %39\n  %45 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 1\n  %46 = load ptr, ptr %45, align 8, !tbaa !17\n  %47 = sext i32 %41 to i64\n  %48 = getelementptr inbounds i32, ptr %46, i64 %47\n  store i32 %49, ptr %48, align 4, !tbaa !5\n  %49 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %50 = sub nsw i32 0, %49\n  br label %51\n\n51:                                               ; preds = %44, %39\n  %52 = phi i32 [ %50, %44 ], [ 0, %39 ]\n  ret i32 %52\n\n53:                                               ; preds = %54\n  %55 = add nuw nsw i32 %56, 1\n  %56 = and i32 %55, 7\n  %57 = icmp eq i32 %56, 0\n  br i1 %57, label %58, label %54, !llvm.loop !18\n\n58:                                               ; preds = %53\n  %59 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 1\n  %60 = load ptr, ptr %59, align 8, !tbaa !17\n  %61 = sext i32 %56 to i64\n  %62 = getelementptr inbounds i32, ptr %60, i64 %61\n  store i32 %63, ptr %62, align 4, !tbaa !5\n  %63 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %64 = sub nsw i32 0, %63\n  br label %65\n\n65:                                               ; preds = %58, %53\n  %66 = phi i32 [ %64, %58 ], [ 0, %53 ]\n  ret i32 %66\n\n67:                                               ; preds = %68\n  %69 = add nuw nsw i32 %70, 1\n  %70 = and i32 %69, 7\n  %71 = icmp eq i32 %70, 0\n  br i1 %71, label %72, label %68, !llvm.loop !19\n\n72:                                               ; preds = %67\n  %73 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 1\n  %74 = load ptr, ptr %73, align 8, !tbaa !17\n  %75 = sext i32 %70 to i64\n  %76 = getelementptr inbounds i32, ptr %74, i64 %75\n  store i32 %77, ptr %76, align 4, !tbaa !5\n  %77 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %78 = sub nsw i32 0, %77\n  br label %79\n\n79:                                               ; preds = %72, %67\n  %80 = phi i32 [ %78, %72 ], [ 0, %67 ]\n  ret i32 %80\n\n81:                                               ; preds = %82\n  %83 = add nuw nsw i32 %84, 1\n  %84 = and i32 %83, 7\n  %85 = icmp eq i32 %84, 0\n  br i1 %85, label %86, label %82, !llvm.loop !20\n\n86:                                               ; preds = %81\n  %87 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 1\n  %88 = load ptr, ptr %87, align 8, !tbaa !17\n  %89 = sext i32 %84 to i64\n  %90 = getelementptr inbounds i32, ptr %88, i64 %89\n  store i32 %91, ptr %90, align 4, !tbaa !5\n  %91 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %92 = sub nsw i32 0, %91\n  br label %93\n\n93:                                               ; preds = %86, %81\n  %94 = phi i32 [ %92, %86 ], [ 0, %81 ]\n  ret i32 %94\n\n95:                                               ; preds = %96\n  %97 = add nuw nsw i32 %98, 1\n  %98 = and i32 %97, 7\n  %99 = icmp eq i32 %98, 0\n  br i1 %99, label %100, label %96, !llvm.loop !21\n\n100:                                              ; preds = %95\n  %101 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 1\n  %102 = load ptr, ptr %101, align 8, !tbaa !17\n  %103 = sext i32 %98 to i64\n  %104 = getelementptr inbounds i32, ptr %102, i64 %103\n  store i32 %105, ptr %104, align 4, !tbaa !5\n  %105 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %106 = sub nsw", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.be_adapter = type { i32, ptr, ptr }\n\n@EPERM = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [44 x i8] c\"tx rate must be between 100 and 10000 Mbps\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [28 x i8] c\"tx rate %d on VF %d failed\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @be_set_vf_tx_rate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @be_set_vf_tx_rate(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %5 = tail call i32 @sriov_enabled(ptr noundef %4) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @EPERM, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  br label %35\n\n10:                                               ; preds = %3\n  %11 = load i32, ptr %4, align 8, !tbaa !9\n  %12 = icmp sgt i32 %11, %1\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %15 = sub nsw i32 0, %14\n  br label %35\n\n16:                                               ; preds = %10\n  %17 = add i32 %2, -10001\n  %18 = icmp ult i32 %17, -9901\n  br i1 %18, label %19, label %23\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  %21 = load ptr, ptr %20, align 8, !tbaa !12\n  %22 = tail call i32 (ptr, ptr, ...) @dev_err(ptr noundef %21, ptr noundef nonnull @.str) #2\n  br label %35\n\n23:                                               ; preds = %16\n  %24 = tail call i64 @lancer_chip(ptr noundef nonnull %4) #2\n  %25 = icmp eq i64 %24, 0\n  %26 = udiv i32 %2, 52429\n  %27 = add nuw nsw i32 %1, 1\n  br i1 %25, label %29, label %28\n\n28:                                               ; preds = %23\n  tail call void @be_cmd_set_profile_config(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %31\n\n29:                                               ; preds = %23\n  %30 = tail call i32 @be_cmd_set_qos(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %31\n\n31:                                               ; preds = %29, %28\n  %32 = phi i32 [ %30, %29 ], [ %26, %28 ]\n  %33 = icmp eq i32 %32, 0\n  br i1 %33, label %37, label %34\n\n34:                                               ; preds = %31\n  br label %35\n\n35:                                               ; preds = %34, %19, %13, %7\n  %36 = phi i32 [ %15, %13 ], [ %9, %7 ], [ %32, %34 ], [ 0, %19 ]\n  br label %37\n\n37:                                               ; preds = %35, %31\n  %38 = phi i32 [ %36, %35 ], [ 0, %31 ]\n  ret i32 %38\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sriov_enabled(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @lancer_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare void @be_cmd_set_profile_config(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @be_cmd_set_qos(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"be_adapter\", !6, i64 0, !11, i64 8, !11, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.be_adapter = type { i32, ptr, ptr }\n\n@EPERM = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [44 x i8] c\"tx rate must be between 100 and 10000 Mbps\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [28 x i8] c\"tx rate %d on VF %d failed\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @be_set_vf_tx_rate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @be_set_vf_tx_rate(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %5 = tail call i32 @sriov_enabled(ptr noundef %4) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @EPERM, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  br label %35\n\n10:                                               ; preds = %3\n  %11 = load i32, ptr %4, align 8, !tbaa !9\n  %12 = icmp sgt i32 %11, %1\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %15 = sub nsw i32 0, %14\n  br label %35\n\n16:                                               ; preds = %10\n  %17 = add i32 %2, -10001\n  %18 = icmp ult i32 %17, -9901\n  br i1 %18, label %19, label %23\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  %21 = load ptr, ptr %20, align 8, !tbaa !12\n  %22 = tail call i32 (ptr, ptr, ...) @dev_err(ptr noundef %21, ptr noundef nonnull @.str) #2\n  br label %35\n\n23:                                               ; preds = %16\n  %24 = tail call i64 @lancer_chip(ptr noundef nonnull %4) #2\n  %25 = icmp eq i64 %24, 0\n  %26 = udiv i32 %2, 52429\n  %27 = add nuw nsw i32 %1, 1\n  br i1 %25, label %29, label %28\n\n28:                                               ; preds = %23\n  tail call void @be_cmd_set_profile_config(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %31\n\n29:                                               ; preds = %23\n  %30 = tail call i32 @be_cmd_set_qos(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %31\n\n31:                                               ; preds = %29, %28\n  %32 = phi i32 [ %30, %29 ], [ %26, %28 ]\n  %33 = icmp eq i32 %32, 0\n  br i1 %33, label %37, label %34\n\n34:                                               ; preds = %31\n  br label %35\n\n35:                                               ; preds = %19, %34, %13, %7\n  %36 = phi i32 [ %15, %13 ], [ %9, %7 ], [ %32, %34 ], [ %22, %19 ]\n  br label %37\n\n37:                                               ; preds = %35, %31\n  %38 = phi i32 [ 0, %31 ], [ %36, %35 ]\n  ret i32 %38\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sriov_enabled(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @lancer_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare void @be_cmd_set_profile_config(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @be_cmd_set_qos(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"be_adapter\", !6, i64 0, !11, i64 8, !11, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.be_adapter = type { i32, ptr, ptr }\n\n@EPERM = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [44 x i8] c\"tx rate must be between 100 and 10000 Mbps\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [28 x i8] c\"tx rate %d on VF %d failed\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @be_set_vf_tx_rate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @be_set_vf_tx_rate(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %5 = tail call i32 @sriov_enabled(ptr noundef %4) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @EPERM, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  br label %36\n\n10:                                               ; preds = %3\n  %11 = load i32, ptr %4, align 8, !tbaa !9\n  %12 = icmp sgt i32 %11, %1\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %15 = sub nsw i32 0, %14\n  br label %36\n\n16:                                               ; preds = %10\n  %17 = add i32 %2, -10001\n  %18 = icmp ult i32 %17, -9901\n  br i1 %18, label %19, label %23\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  %21 = load ptr, ptr %20, align 8, !tbaa !12\n  %22 = tail call i32 (ptr, ptr, ...) @dev_err(ptr noundef %21, ptr noundef nonnull @.str) #2\n  br label %36\n\n23:                                               ; preds = %16\n  %24 = tail call i64 @lancer_chip(ptr noundef nonnull %4) #2\n  %25 = icmp eq i64 %24, 0\n  %26 = udiv i32 %2, 52429\n  %27 = add nuw nsw i32 %1, 1\n  br i1 %25, label %29, label %28\n\n28:                                               ; preds = %23\n  tail call void @be_cmd_set_profile_config(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %31\n\n29:                                               ; preds = %23\n  %30 = tail call i32 @be_cmd_set_qos(ptr noundef nonnull %4, i32 noundef %26, i32 noundef %27) #2\n  br label %31\n\n31:                                               ; preds = %29, %28\n  %32 = phi i32 [ %30, %29 ], [ %26, %28 ]\n  %33 = icmp eq i32 %32, 0\n  br i1 %33, label %37, label %34\n\n34:                                               ; preds = %31\n  %35 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  tail call void @dev_err(ptr noundef nonnull %35, ptr noundef nonnull @.str.1, i32 noundef %2, i32 noundef %1) #2\n  br label %36\n\n36:                                               ; preds = %34, %19, %13, %7\n  %37 = phi i32 [ %32, %34 ], [ %15, %13 ], [ %9, %19 ], [ %32, %7 ]\n  ret i32 %37\n\n38:                                               ; preds = %31\n  %39 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 1\n  %40 = load ptr, ptr %39, align 8, !tbaa !13\n  %41 = sext i32 %1 to i64\n  %42 = getelementptr inbounds i32, ptr %40, i64 %41\n  store i32 %2, ptr %42, align 4, !tbaa !5\n  br label %36\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sriov_enabled(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @lancer_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare void @be_cmd_set_profile_config(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @be_cmd_set_qos(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"be_adapter\", !6, i64 0, !11, i64 8, !11, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 16}\n!13 = !{!10, !11, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/drivers/net/benet/extr_be_main.c_be_set_vf_tx_rate.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.be_adapter = type { i32, ptr, ptr }\n%struct.TYPE_4__ = type { i32 }\n\n@EPERM = dso_local local_unnamed_addr global i32 0, align 4\n@EINVAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [44 x i8] c\"tx rate must be between 100 and 10000 Mbps\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [28 x i8] c\"tx rate %d on VF %d failed\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @be_set_vf_tx_rate], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @be_set_vf_tx_rate(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %5 = tail call i32 @sriov_enabled(ptr noundef %4) #2\n  %6 = icmp eq i32 %5, 0\n  br i1 %6, label %7, label %10\n\n7:                                                ; preds = %3\n  %8 = load i32, ptr @EPERM, align 4, !tbaa !5\n  %9 = sub nsw i32 0, %8\n  br label %48\n\n10:                                               ; preds = %3\n  %11 = load i32, ptr %4, align 8, !tbaa !9\n  %12 = icmp sgt i32 %11, %1\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %15 = sub nsw i32 0, %14\n  br label %48\n\n16:                                               ; preds = %10\n  %17 = add i32 %2, -10001\n  %18 = icmp ult i32 %17, -9901\n  br i1 %18, label %19, label %25\n\n19:                                               ; preds = %16\n  %20 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  %21 = load ptr, ptr %20, align 8, !tbaa !12\n  %22 = tail call i32 (ptr, ptr, ...) @dev_err(ptr noundef %21, ptr noundef nonnull @.str) #2\n  %23 = load i32, ptr @EINVAL, align 4, !tbaa !5\n  %24 = sub nsw i32 0, %23\n  br label %48\n\n25:                                               ; preds = %16\n  %26 = tail call i64 @lancer_chip(ptr noundef nonnull %4) #2\n  %27 = icmp eq i64 %26, 0\n  %28 = trunc i32 %2 to i16\n  %29 = udiv i16 %28, 10\n  %30 = zext i16 %29 to i32\n  %31 = add nsw i32 %1, 1\n  br i1 %27, label %34, label %32\n\n32:                                               ; preds = %25\n  %33 = tail call i32 @be_cmd_set_profile_config(ptr noundef nonnull %4, i32 noundef %30, i32 noundef %31) #2\n  br label %36\n\n34:                                               ; preds = %25\n  %35 = tail call i32 @be_cmd_set_qos(ptr noundef nonnull %4, i32 noundef %30, i32 noundef %31) #2\n  br label %36\n\n36:                                               ; preds = %34, %32\n  %37 = phi i32 [ %33, %32 ], [ %35, %34 ]\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %43, label %39\n\n39:                                               ; preds = %36\n  %40 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 2\n  %41 = load ptr, ptr %40, align 8, !tbaa !12\n  %42 = tail call i32 (ptr, ptr, ...) @dev_err(ptr noundef %41, ptr noundef nonnull @.str.1, i32 noundef %2, i32 noundef %1) #2\n  br label %48\n\n43:                                               ; preds = %36\n  %44 = getelementptr inbounds %struct.be_adapter, ptr %4, i64 0, i32 1\n  %45 = load ptr, ptr %44, align 8, !tbaa !13\n  %46 = sext i32 %1 to i64\n  %47 = getelementptr inbounds %struct.TYPE_4__, ptr %45, i64 %46\n  store i32 %2, ptr %47, align 4, !tbaa !14\n  br label %48\n\n48:                                               ; preds = %39, %43, %19, %13, %7\n  %49 = phi i32 [ %15, %13 ], [ %24, %19 ], [ %9, %7 ], [ 0, %43 ], [ %37, %39 ]\n  ret i32 %49\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sriov_enabled(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #1\n\ndeclare i64 @lancer_chip(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @be_cmd_set_profile_config(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @be_cmd_set_qos(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"be_adapter\", !6, i64 0, !11, i64 8, !11, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 16}\n!13 = !{!10, !11, i64 8}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_4__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_nl80211.c_cfg80211_del_sta_sinfo.ll\"\n\t.globl\tcfg80211_del_sta_sinfo          # -- Begin function cfg80211_del_sta_sinfo\n\t.p2align\t4, 0x90\n\t.type\tcfg80211_del_sta_sinfo,@function\ncfg80211_del_sta_sinfo:                 # @cfg80211_del_sta_sinfo\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, %r13d\n\tmovq\t%rdx, %rbp\n\tmovq\t%rsi, %r12\n\tmovq\t%rdi, %r14\n\tmovq\t(%rdi), %rax\n\tmovq\t(%rax), %rdi\n\tcallq\twiphy_to_rdev@PLT\n\tmovq\t%rax, %r15\n\tmovl\t$0, (%rsp)\n\ttestq\t%rbp, %rbp\n\tmovq\t%rsp, %rbx\n\tcmovneq\t%rbp, %rbx\n\tmovl\t%r13d, %ebp\n\tmovq\t%r14, %rdi\n\tmovq\t%r12, %rsi\n\tcallq\ttrace_cfg80211_del_sta@PLT\n\tmovl\tNLMSG_DEFAULT_SIZE(%rip), %edi\n\tmovl\t%r13d, %esi\n\tcallq\tnlmsg_new@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t%rax, %r13\n\tmovl\tNL80211_CMD_DEL_STATION(%rip), %esi\n\tsubq\t$8, %rsp\n\t.cfi_adjust_cfa_offset 8\n\tmovq\t%rax, %rdi\n\txorl\t%edx, %edx\n\txorl\t%ecx, %ecx\n\txorl\t%r8d, %r8d\n\tmovq\t%r15, %r9\n\tpushq\t%rbx\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r12\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r14\n\t.cfi_adjust_cfa_offset 8\n\tcallq\tnl80211_send_station@PLT\n\taddq\t$32, %rsp\n\t.cfi_adjust_cfa_offset -32\n\ttestq\t%rax, %rax\n\tjs\t.LBB0_3\n# %bb.4:\n\tmovq\t%r15, %rdi\n\tcallq\twiphy_net@PLT\n\tmovl\tNL80211_MCGRP_MLME(%rip), %r8d\n\tmovl\t$nl80211_fam, %edi\n\tmovl\t%eax, %esi\n\tmovq\t%r13, %rdx\n\txorl\t%ecx, %ecx\n\tmovl\t%ebp, %r9d\n\tcallq\tgenlmsg_multicast_netns@PLT\n\tjmp\t.LBB0_5\n.LBB0_1:\n\tmovq\t%rbx, %rdi\n\tcallq\tcfg80211_sinfo_release_content@PLT\n\tjmp\t.LBB0_5\n.LBB0_3:\n\tmovq\t%r13, %rdi\n\tcallq\tnlmsg_free@PLT\n.LBB0_5:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcfg80211_del_sta_sinfo, .Lfunc_end0-cfg80211_del_sta_sinfo\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNLMSG_DEFAULT_SIZE,@object      # @NLMSG_DEFAULT_SIZE\n\t.bss\n\t.globl\tNLMSG_DEFAULT_SIZE\n\t.p2align\t2\nNLMSG_DEFAULT_SIZE:\n\t.long\t0                               # 0x0\n\t.size\tNLMSG_DEFAULT_SIZE, 4\n\n\t.type\tNL80211_CMD_DEL_STATION,@object # @NL80211_CMD_DEL_STATION\n\t.globl\tNL80211_CMD_DEL_STATION\n\t.p2align\t2\nNL80211_CMD_DEL_STATION:\n\t.long\t0                               # 0x0\n\t.size\tNL80211_CMD_DEL_STATION, 4\n\n\t.type\tnl80211_fam,@object             # @nl80211_fam\n\t.globl\tnl80211_fam\n\t.p2align\t2\nnl80211_fam:\n\t.long\t0                               # 0x0\n\t.size\tnl80211_fam, 4\n\n\t.type\tNL80211_MCGRP_MLME,@object      # @NL80211_MCGRP_MLME\n\t.globl\tNL80211_MCGRP_MLME\n\t.p2align\t2\nNL80211_MCGRP_MLME:\n\t.long\t0                               # 0x0\n\t.size\tNL80211_MCGRP_MLME, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NLMSG_DEFAULT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@NL80211_CMD_DEL_STATION = dso_local local_unnamed_addr global i32 0, align 4\n@nl80211_fam = dso_local global i32 0, align 4\n@NL80211_MCGRP_MLME = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @cfg80211_del_sta_sinfo(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = load ptr, ptr %6, align 8, !tbaa !10\n  %8 = tail call ptr @wiphy_to_rdev(ptr noundef %7) #2\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #2\n  %9 = icmp eq ptr %2, null\n  %10 = select i1 %9, ptr %5, ptr %2\n  %11 = tail call i32 @trace_cfg80211_del_sta(ptr noundef nonnull %0, ptr noundef %1) #2\n  %12 = load i32, ptr @NLMSG_DEFAULT_SIZE, align 4, !tbaa !12\n  %13 = tail call ptr @nlmsg_new(i32 noundef %12, i32 noundef %3) #2\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %4\n  %16 = tail call i32 @cfg80211_sinfo_release_content(ptr noundef %10) #2\n  br label %25\n\n17:                                               ; preds = %4\n  %18 = load i32, ptr @NL80211_CMD_DEL_STATION, align 4, !tbaa !12\n  %19 = tail call i64 @nl80211_send_station(ptr noundef nonnull %13, i32 noundef %18, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef %8, ptr noundef nonnull %1, ptr noundef nonnull %0) #2\n  %20 = icmp slt i64 %19, 0\n  br i1 %20, label %21, label %23\n\n21:                                               ; preds = %17\n  %22 = tail call i32 @nlmsg_free(ptr noundef nonnull %13) #2\n  br label %25\n\n23:                                               ; preds = %17\n  %24 = tail call i32 @wiphy_net(ptr noundef %8) #2\n  br label %27\n\n25:                                               ; preds = %21, %15\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #2\n  ret void\n\n27:                                               ; preds = %23\n  %28 = load i32, ptr @NL80211_MCGRP_MLME, align 4, !tbaa !12\n  %29 = tail call i32 @genlmsg_multicast_netns(ptr noundef nonnull @nl80211_fam, i32 noundef %24, ptr noundef nonnull %13, i32 noundef 0, i32 noundef %28, i32 noundef %3) #2\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @wiphy_to_rdev(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @trace_cfg80211_del_sta(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare ptr @nlmsg_new(i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @cfg80211_sinfo_release_content(ptr noundef) local_unnamed_addr #3\n\ndeclare i64 @nl80211_send_station(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @nlmsg_free(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @genlmsg_multicast_netns(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @wiphy_net(ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"net_device\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NLMSG_DEFAULT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@NL80211_CMD_DEL_STATION = dso_local local_unnamed_addr global i32 0, align 4\n@nl80211_fam = dso_local global i32 0, align 4\n@NL80211_MCGRP_MLME = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @cfg80211_del_sta_sinfo(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = load ptr, ptr %6, align 8, !tbaa !10\n  %8 = tail call ptr @wiphy_to_rdev(ptr noundef %7) #2\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #2\n  %9 = icmp eq ptr %2, null\n  %10 = select i1 %9, ptr %5, ptr %2\n  %11 = tail call i32 @trace_cfg80211_del_sta(ptr noundef nonnull %0, ptr noundef %1) #2\n  %12 = load i32, ptr @NLMSG_DEFAULT_SIZE, align 4, !tbaa !12\n  %13 = tail call ptr @nlmsg_new(i32 noundef %12, i32 noundef %3) #2\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %4\n  %16 = tail call i32 @cfg80211_sinfo_release_content(ptr noundef %10) #2\n  br label %26\n\n17:                                               ; preds = %4\n  %18 = load i32, ptr @NL80211_CMD_DEL_STATION, align 4, !tbaa !12\n  %19 = tail call i64 @nl80211_send_station(ptr noundef nonnull %13, i32 noundef %18, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef %8, ptr noundef %1, ptr noundef nonnull %0, ptr noundef %10) #2\n  %20 = icmp slt i64 %19, 0\n  br i1 %20, label %21, label %23\n\n21:                                               ; preds = %17\n  %22 = tail call i32 @nlmsg_free(ptr noundef nonnull %13) #2\n  br label %26\n\n23:                                               ; preds = %17\n  %24 = tail call i32 @wiphy_net(ptr noundef %8) #2\n  %25 = load i32, ptr @NL80211_MCGRP_MLME, align 4, !tbaa !12\n  tail call void @genlmsg_multicast_netns(ptr noundef nonnull @nl80211_fam, i32 noundef %24, ptr noundef nonnull %13, i32 noundef 0, i32 noundef %25, i32 noundef %3) #2\n  br label %26\n\n26:                                               ; preds = %23, %21, %15\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @wiphy_to_rdev(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @trace_cfg80211_del_sta(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare ptr @nlmsg_new(i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @cfg80211_sinfo_release_content(ptr noundef) local_unnamed_addr #3\n\ndeclare i64 @nl80211_send_station(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @nlmsg_free(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @genlmsg_multicast_netns(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @wiphy_net(ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"net_device\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NLMSG_DEFAULT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@NL80211_CMD_DEL_STATION = dso_local local_unnamed_addr global i32 0, align 4\n@nl80211_fam = dso_local global i32 0, align 4\n@NL80211_MCGRP_MLME = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @cfg80211_del_sta_sinfo(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = load ptr, ptr %6, align 8, !tbaa !10\n  %8 = tail call ptr @wiphy_to_rdev(ptr noundef %7) #2\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #2\n  %9 = icmp eq ptr %2, null\n  %10 = select i1 %9, ptr %5, ptr %2\n  %11 = tail call i32 @trace_cfg80211_del_sta(ptr noundef nonnull %0, ptr noundef %1) #2\n  %12 = load i32, ptr @NLMSG_DEFAULT_SIZE, align 4, !tbaa !12\n  %13 = tail call ptr @nlmsg_new(i32 noundef %12, i32 noundef %3) #2\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %4\n  %16 = tail call i32 @cfg80211_sinfo_release_content(ptr noundef %10) #2\n  br label %25\n\n17:                                               ; preds = %4\n  %18 = load i32, ptr @NL80211_CMD_DEL_STATION, align 4, !tbaa !12\n  %19 = tail call i64 @nl80211_send_station(ptr noundef nonnull %13, i32 noundef %18, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef %8, ptr noundef %1, ptr noundef nonnull %0, ptr noundef %10) #2\n  %20 = icmp slt i64 %19, 0\n  br i1 %20, label %21, label %23\n\n21:                                               ; preds = %17\n  %22 = tail call i32 @nlmsg_free(ptr noundef nonnull %13) #2\n  br label %25\n\n23:                                               ; preds = %17\n  %24 = tail call i32 @wiphy_net(ptr noundef %8) #2\n  br label %27\n\n25:                                               ; preds = %21, %15\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #2\n  ret void\n\n27:                                               ; preds = %23\n  %28 = load i32, ptr @NL80211_MCGRP_MLME, align 4, !tbaa !12\n  %29 = tail call i32 @genlmsg_multicast_netns(ptr noundef nonnull @nl80211_fam, i32 noundef %24, ptr noundef nonnull %13, i32 noundef 0, i32 noundef %28, i32 noundef %3) #2\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @wiphy_to_rdev(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @trace_cfg80211_del_sta(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare ptr @nlmsg_new(i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @cfg80211_sinfo_release_content(ptr noundef) local_unnamed_addr #3\n\ndeclare i64 @nl80211_send_station(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @nlmsg_free(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @genlmsg_multicast_netns(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @wiphy_net(ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"net_device\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NLMSG_DEFAULT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@NL80211_CMD_DEL_STATION = dso_local local_unnamed_addr global i32 0, align 4\n@nl80211_fam = dso_local global i32 0, align 4\n@NL80211_MCGRP_MLME = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @cfg80211_del_sta_sinfo(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #0 {\n  %5 = alloca i32, align 4\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = load ptr, ptr %6, align 8, !tbaa !10\n  %8 = tail call ptr @wiphy_to_rdev(ptr noundef %7) #2\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #2\n  %9 = icmp eq ptr %2, null\n  %10 = select i1 %9, ptr %5, ptr %2\n  %11 = tail call i32 @trace_cfg80211_del_sta(ptr noundef nonnull %0, ptr noundef %1) #2\n  %12 = load i32, ptr @NLMSG_DEFAULT_SIZE, align 4, !tbaa !12\n  %13 = tail call ptr @nlmsg_new(i32 noundef %12, i32 noundef %3) #2\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %4\n  %16 = tail call i32 @cfg80211_sinfo_release_content(ptr noundef %10) #2\n  br label %26\n\n17:                                               ; preds = %4\n  %18 = load i32, ptr @NL80211_CMD_DEL_STATION, align 4, !tbaa !12\n  %19 = tail call i64 @nl80211_send_station(ptr noundef nonnull %13, i32 noundef %18, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef %8, ptr noundef %1, ptr noundef nonnull %0, ptr noundef %10) #2\n  %20 = icmp slt i64 %19, 0\n  br i1 %20, label %21, label %23\n\n21:                                               ; preds = %17\n  %22 = tail call i32 @nlmsg_free(ptr noundef nonnull %13) #2\n  br label %26\n\n23:                                               ; preds = %17\n  %24 = tail call i32 @wiphy_net(ptr noundef %8) #2\n  %25 = load i32, ptr @NL80211_MCGRP_MLME, align 4, !tbaa !12\n  tail call void @genlmsg_multicast_netns(ptr noundef nonnull @nl80211_fam, i32 noundef %24, ptr noundef nonnull %13, i32 noundef 0, i32 noundef %25, i32 noundef %3) #2\n  br label %26\n\n26:                                               ; preds = %23, %21, %15\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @wiphy_to_rdev(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @trace_cfg80211_del_sta(ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare ptr @nlmsg_new(i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @cfg80211_sinfo_release_content(ptr noundef) local_unnamed_addr #3\n\ndeclare i64 @nl80211_send_station(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @nlmsg_free(ptr noundef) local_unnamed_addr #3\n\ndeclare i32 @genlmsg_multicast_netns(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3\n\ndeclare i32 @wiphy_net(ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"net_device\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/net/wireless/extr_nl80211.c_cfg80211_del_sta_sinfo.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.station_info = type { i32 }\n\n@NLMSG_DEFAULT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@NL80211_CMD_DEL_STATION = dso_local local_unnamed_addr global i32 0, align 4\n@nl80211_fam = dso_local global i32 0, align 4\n@NL80211_MCGRP_MLME = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @cfg80211_del_sta_sinfo(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #0 {\n  %5 = alloca %struct.station_info, align 4\n  %6 = load ptr, ptr %0, align 8, !tbaa !5\n  %7 = load ptr, ptr %6, align 8, !tbaa !10\n  %8 = tail call ptr @wiphy_to_rdev(ptr noundef %7) #3\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #3\n  store i32 0, ptr %5, align 4\n  %9 = icmp eq ptr %2, null\n  %10 = select i1 %9, ptr %5, ptr %2\n  %11 = tail call i32 @trace_cfg80211_del_sta(ptr noundef nonnull %0, ptr noundef %1) #3\n  %12 = load i32, ptr @NLMSG_DEFAULT_SIZE, align 4, !tbaa !12\n  %13 = tail call ptr @nlmsg_new(i32 noundef %12, i32 noundef %3) #3\n  %14 = icmp eq ptr %13, null\n  br i1 %14, label %15, label %17\n\n15:                                               ; preds = %4\n  %16 = call i32 @cfg80211_sinfo_release_content(ptr noundef nonnull %10) #3\n  br label %27\n\n17:                                               ; preds = %4\n  %18 = load i32, ptr @NL80211_CMD_DEL_STATION, align 4, !tbaa !12\n  %19 = call i64 @nl80211_send_station(ptr noundef nonnull %13, i32 noundef %18, i32 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef %8, ptr noundef nonnull %0, ptr noundef %1, ptr noundef nonnull %10) #3\n  %20 = icmp slt i64 %19, 0\n  br i1 %20, label %21, label %23\n\n21:                                               ; preds = %17\n  %22 = call i32 @nlmsg_free(ptr noundef nonnull %13) #3\n  br label %27\n\n23:                                               ; preds = %17\n  %24 = call i32 @wiphy_net(ptr noundef %8) #3\n  %25 = load i32, ptr @NL80211_MCGRP_MLME, align 4, !tbaa !12\n  %26 = call i32 @genlmsg_multicast_netns(ptr noundef nonnull @nl80211_fam, i32 noundef %24, ptr noundef nonnull %13, i32 noundef 0, i32 noundef %25, i32 noundef %3) #3\n  br label %27\n\n27:                                               ; preds = %23, %21, %15\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare ptr @wiphy_to_rdev(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @trace_cfg80211_del_sta(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @nlmsg_new(i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @cfg80211_sinfo_release_content(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @nl80211_send_station(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @nlmsg_free(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @genlmsg_multicast_netns(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @wiphy_net(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"net_device\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_2__\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_qedf_main.c_qedf_vport_libfc_config.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function qedf_vport_libfc_config\n\t.type\tqedf_vport_libfc_config,@function\nqedf_vport_libfc_config:                # @qedf_vport_libfc_config\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rsi, %rbx\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, 72(%rsi)\n\tmovl\tQEDF_FLOGI_RETRY_CNT(%rip), %eax\n\tmovl\t%eax, 64(%rsi)\n\tmovl\tQEDF_RPORT_RETRY_CNT(%rip), %eax\n\tmovl\t%eax, 60(%rsi)\n\tmovl\tFCP_SPPF_RD_XRDY_DIS(%rip), %eax\n\torl\tFCP_SPPF_INIT_FCN(%rip), %eax\n\torl\tFCP_SPPF_RETRY(%rip), %eax\n\torl\tFCP_SPPF_CONF_COMPL(%rip), %eax\n\tmovl\t%eax, (%rsi)\n\tmovl\tjiffies(%rip), %eax\n\tmovl\t%eax, 56(%rsi)\n\tmovabsq\t$42949672962000, %rax           # imm = 0x2710000007D0\n\tmovq\t%rax, 4(%rsi)\n\tmovl\t$1, 12(%rsi)\n\tmovq\t%rsi, %rdi\n\tcallq\tfc_lport_init_stats@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\txorl\t%eax, %eax\n\tsubl\tENOMEM(%rip), %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_2:\n\t.cfi_def_cfa_offset 16\n\tmovq\t%rbx, %rdi\n\tcallq\tfc_lport_config@PLT\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, 16(%rbx)\n\tmovups\t%xmm0, 32(%rbx)\n\tmovq\t$0, 48(%rbx)\n\txorl\t%eax, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tqedf_vport_libfc_config, .Lfunc_end0-qedf_vport_libfc_config\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tQEDF_FLOGI_RETRY_CNT,@object    # @QEDF_FLOGI_RETRY_CNT\n\t.bss\n\t.globl\tQEDF_FLOGI_RETRY_CNT\n\t.p2align\t2\nQEDF_FLOGI_RETRY_CNT:\n\t.long\t0                               # 0x0\n\t.size\tQEDF_FLOGI_RETRY_CNT, 4\n\n\t.type\tQEDF_RPORT_RETRY_CNT,@object    # @QEDF_RPORT_RETRY_CNT\n\t.globl\tQEDF_RPORT_RETRY_CNT\n\t.p2align\t2\nQEDF_RPORT_RETRY_CNT:\n\t.long\t0                               # 0x0\n\t.size\tQEDF_RPORT_RETRY_CNT, 4\n\n\t.type\tFCP_SPPF_INIT_FCN,@object       # @FCP_SPPF_INIT_FCN\n\t.globl\tFCP_SPPF_INIT_FCN\n\t.p2align\t2\nFCP_SPPF_INIT_FCN:\n\t.long\t0                               # 0x0\n\t.size\tFCP_SPPF_INIT_FCN, 4\n\n\t.type\tFCP_SPPF_RD_XRDY_DIS,@object    # @FCP_SPPF_RD_XRDY_DIS\n\t.globl\tFCP_SPPF_RD_XRDY_DIS\n\t.p2align\t2\nFCP_SPPF_RD_XRDY_DIS:\n\t.long\t0                               # 0x0\n\t.size\tFCP_SPPF_RD_XRDY_DIS, 4\n\n\t.type\tFCP_SPPF_RETRY,@object          # @FCP_SPPF_RETRY\n\t.globl\tFCP_SPPF_RETRY\n\t.p2align\t2\nFCP_SPPF_RETRY:\n\t.long\t0                               # 0x0\n\t.size\tFCP_SPPF_RETRY, 4\n\n\t.type\tFCP_SPPF_CONF_COMPL,@object     # @FCP_SPPF_CONF_COMPL\n\t.globl\tFCP_SPPF_CONF_COMPL\n\t.p2align\t2\nFCP_SPPF_CONF_COMPL:\n\t.long\t0                               # 0x0\n\t.size\tFCP_SPPF_CONF_COMPL, 4\n\n\t.type\tjiffies,@object                 # @jiffies\n\t.globl\tjiffies\n\t.p2align\t2\njiffies:\n\t.long\t0                               # 0x0\n\t.size\tjiffies, 4\n\n\t.type\tENOMEM,@object                  # @ENOMEM\n\t.globl\tENOMEM\n\t.p2align\t2\nENOMEM:\n\t.long\t0                               # 0x0\n\t.size\tENOMEM, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fc_lport = type { i32, i32, i32, i32, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i64 }\n\n@QEDF_FLOGI_RETRY_CNT = dso_local local_unnamed_addr global i32 0, align 4\n@QEDF_RPORT_RETRY_CNT = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_INIT_FCN = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_RD_XRDY_DIS = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_RETRY = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_CONF_COMPL = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qedf_vport_libfc_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qedf_vport_libfc_config(ptr nocapture readnone %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 12\n  %4 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 11\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)\n  %5 = load i32, ptr @QEDF_FLOGI_RETRY_CNT, align 4, !tbaa !5\n  store i32 %5, ptr %4, align 8, !tbaa !9\n  %6 = load i32, ptr @QEDF_RPORT_RETRY_CNT, align 4, !tbaa !5\n  %7 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 10\n  store i32 %6, ptr %7, align 4, !tbaa !12\n  %8 = load i32, ptr @FCP_SPPF_INIT_FCN, align 4, !tbaa !5\n  %9 = load i32, ptr @FCP_SPPF_RD_XRDY_DIS, align 4, !tbaa !5\n  %10 = or i32 %9, %8\n  %11 = load i32, ptr @FCP_SPPF_RETRY, align 4, !tbaa !5\n  %12 = or i32 %10, %11\n  %13 = load i32, ptr @FCP_SPPF_CONF_COMPL, align 4, !tbaa !5\n  %14 = or i32 %12, %13\n  store i32 %14, ptr %1, align 8, !tbaa !13\n  %15 = load i32, ptr @jiffies, align 4, !tbaa !5\n  %16 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 9\n  store i32 %15, ptr %16, align 8, !tbaa !14\n  %17 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 1\n  store <2 x i32> <i32 737869762, i32 1000000000>, ptr %17, align 4, !tbaa !5\n  %18 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 3\n  store i32 1, ptr %18, align 4, !tbaa !15\n  %19 = tail call i64 @fc_lport_init_stats(ptr noundef nonnull %1) #3\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %24, label %21\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %23 = sub nsw i32 0, %22\n  br label %26\n\n24:                                               ; preds = %2\n  %25 = tail call i32 @fc_lport_config(ptr noundef nonnull %1) #3\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %1, i8 0, i64 48, i1 false)\n  br label %26\n\n26:                                               ; preds = %24, %21\n  %27 = phi i32 [ %23, %21 ], [ 0, %24 ]\n  ret i32 %27\n}\n\ndeclare i64 @fc_lport_init_stats(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @fc_lport_config(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 64}\n!10 = !{!\"fc_lport\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !6, i64 48, !6, i64 52, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !6, i64 60}\n!13 = !{!10, !6, i64 0}\n!14 = !{!10, !6, i64 56}\n!15 = !{!10, !6, i64 12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fc_lport = type { i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fc_lport = type { i32, i32, i32, i32, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fc_lport = type { i32, i32, i32, i32, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i64 }\n\n@QEDF_FLOGI_RETRY_CNT = dso_local local_unnamed_addr global i32 0, align 4\n@QEDF_RPORT_RETRY_CNT = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_INIT_FCN = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_RD_XRDY_DIS = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_RETRY = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_CONF_COMPL = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qedf_vport_libfc_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qedf_vport_libfc_config(ptr nocapture readnone %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 12\n  %4 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 11\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)\n  %5 = load i32, ptr @QEDF_FLOGI_RETRY_CNT, align 4, !tbaa !5\n  store i32 %5, ptr %4, align 8, !tbaa !9\n  %6 = load i32, ptr @QEDF_RPORT_RETRY_CNT, align 4, !tbaa !5\n  %7 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 10\n  store i32 %6, ptr %7, align 4, !tbaa !12\n  %8 = load i32, ptr @FCP_SPPF_INIT_FCN, align 4, !tbaa !5\n  %9 = load i32, ptr @FCP_SPPF_RD_XRDY_DIS, align 4, !tbaa !5\n  %10 = or i32 %9, %8\n  %11 = load i32, ptr @FCP_SPPF_RETRY, align 4, !tbaa !5\n  %12 = or i32 %10, %11\n  %13 = load i32, ptr @FCP_SPPF_CONF_COMPL, align 4, !tbaa !5\n  %14 = or i32 %12, %13\n  store i32 %14, ptr %1, align 8, !tbaa !13\n  %15 = load i32, ptr @jiffies, align 4, !tbaa !5\n  %16 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 9\n  store i32 %15, ptr %16, align 8, !tbaa !14\n  %17 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 1\n  store <2 x i32> <i32 737869762, i32 1000000000>, ptr %17, align 8, !tbaa !5\n  %18 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 3\n  store i32 1, ptr %18, align 8, !tbaa !15\n  %19 = tail call i64 @fc_lport_init_stats(ptr noundef nonnull %1) #3\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %24, label %21\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %23 = sub nsw i32 0, %22\n  br label %26\n\n24:                                               ; preds = %2\n  %25 = tail call i32 @fc_lport_config(ptr noundef nonnull %1) #3\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %1, i8 0, i64 48, i1 false)\n  br label %26\n\n26:                                               ; preds = %24, %21\n  %27 = phi i32 [ %23, %21 ], [ 0, %24 ]\n  ret i32 %27\n}\n\ndeclare i64 @fc_lport_init_stats(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @fc_lport_config(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 64}\n!10 = !{!\"fc_lport\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !6, i64 48, !6, i64 52, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !6, i64 60}\n!13 = !{!10, !6, i64 0}\n!14 = !{!10, !6, i64 56}\n!15 = !{!10, !6, i64 12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/scsi/qedf/extr_qedf_main.c_qedf_vport_libfc_config.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fc_lport = type { i32, i32, i32, i32, i64, i64, i64, i64, i64, i32, i32, i32, i64, i64 }\n\n@QEDF_FLOGI_RETRY_CNT = dso_local local_unnamed_addr global i32 0, align 4\n@QEDF_RPORT_RETRY_CNT = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_INIT_FCN = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_RD_XRDY_DIS = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_RETRY = dso_local local_unnamed_addr global i32 0, align 4\n@FCP_SPPF_CONF_COMPL = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i32 0, align 4\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qedf_vport_libfc_config], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qedf_vport_libfc_config(ptr nocapture readnone %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 12\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)\n  %4 = load i32, ptr @QEDF_FLOGI_RETRY_CNT, align 4, !tbaa !5\n  %5 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 11\n  store i32 %4, ptr %5, align 8, !tbaa !9\n  %6 = load i32, ptr @QEDF_RPORT_RETRY_CNT, align 4, !tbaa !5\n  %7 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 10\n  store i32 %6, ptr %7, align 4, !tbaa !12\n  %8 = load i32, ptr @FCP_SPPF_INIT_FCN, align 4, !tbaa !5\n  %9 = load i32, ptr @FCP_SPPF_RD_XRDY_DIS, align 4, !tbaa !5\n  %10 = or i32 %9, %8\n  %11 = load i32, ptr @FCP_SPPF_RETRY, align 4, !tbaa !5\n  %12 = or i32 %10, %11\n  %13 = load i32, ptr @FCP_SPPF_CONF_COMPL, align 4, !tbaa !5\n  %14 = or i32 %12, %13\n  store i32 %14, ptr %1, align 8, !tbaa !13\n  %15 = load i32, ptr @jiffies, align 4, !tbaa !5\n  %16 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 9\n  store i32 %15, ptr %16, align 8, !tbaa !14\n  %17 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 1\n  store <2 x i32> <i32 2000, i32 10000>, ptr %17, align 4, !tbaa !5\n  %18 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 3\n  store i32 1, ptr %18, align 4, !tbaa !15\n  %19 = tail call i64 @fc_lport_init_stats(ptr noundef nonnull %1) #3\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %24, label %21\n\n21:                                               ; preds = %2\n  %22 = load i32, ptr @ENOMEM, align 4, !tbaa !5\n  %23 = sub nsw i32 0, %22\n  br label %27\n\n24:                                               ; preds = %2\n  %25 = tail call i32 @fc_lport_config(ptr noundef nonnull %1) #3\n  %26 = getelementptr inbounds %struct.fc_lport, ptr %1, i64 0, i32 4\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %26, i8 0, i64 40, i1 false)\n  br label %27\n\n27:                                               ; preds = %24, %21\n  %28 = phi i32 [ %23, %21 ], [ 0, %24 ]\n  ret i32 %28\n}\n\ndeclare i64 @fc_lport_init_stats(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @fc_lport_config(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { argmemonly nocallback nofree nounwind willreturn writeonly }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 64}\n!10 = !{!\"fc_lport\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !11, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !6, i64 56, !6, i64 60, !6, i64 64, !11, i64 72, !11, i64 80}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !6, i64 60}\n!13 = !{!10, !6, i64 0}\n!14 = !{!10, !6, i64 56}\n!15 = !{!10, !6, i64 12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_prism2mgmt.c_prism2mgmt_ramdl_state.ll\"\n\t.globl\tprism2mgmt_ramdl_state          # -- Begin function prism2mgmt_ramdl_state\n\t.p2align\t4, 0x90\n\t.type\tprism2mgmt_ramdl_state,@function\nprism2mgmt_ramdl_state:                 # @prism2mgmt_ramdl_state\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t(%rdi), %rax\n\tcmpq\tWLAN_MSD_FWLOAD(%rip), %rax\n\tjne\t.LBB0_1\n# %bb.2:\n\tmovq\t16(%rdi), %rdi\n\tmovq\tP80211ENUM_msgitem_status_data_ok(%rip), %rax\n\tmovq\t%rax, 8(%rbx)\n\tmovq\t24(%rbx), %rax\n\tcmpq\tP80211ENUM_truth_true(%rip), %rax\n\tjne\t.LBB0_5\n# %bb.3:\n\tmovl\t16(%rbx), %esi\n\tcallq\thfa384x_drvr_ramdl_enable@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.4:\n\tmovq\tP80211ENUM_resultcode_implementation_failure(%rip), %rax\n\tjmp\t.LBB0_7\n.LBB0_1:\n\tmovl\t8(%rdi), %edi\n\tmovl\t$.L.str, %esi\n\tcallq\tnetdev_err@PLT\n\tmovq\tP80211ENUM_resultcode_implementation_failure(%rip), %rax\n\tmovq\t%rax, (%rbx)\n\tmovq\tP80211ENUM_msgitem_status_data_ok(%rip), %rax\n\tmovq\t%rax, 8(%rbx)\n\tjmp\t.LBB0_8\n.LBB0_5:\n\tcallq\thfa384x_drvr_ramdl_disable@PLT\n.LBB0_6:\n\tmovq\tP80211ENUM_resultcode_success(%rip), %rax\n.LBB0_7:\n\tmovq\t%rax, (%rbx)\n.LBB0_8:\n\txorl\t%eax, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tprism2mgmt_ramdl_state, .Lfunc_end0-prism2mgmt_ramdl_state\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tWLAN_MSD_FWLOAD,@object         # @WLAN_MSD_FWLOAD\n\t.bss\n\t.globl\tWLAN_MSD_FWLOAD\n\t.p2align\t3\nWLAN_MSD_FWLOAD:\n\t.quad\t0                               # 0x0\n\t.size\tWLAN_MSD_FWLOAD, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"ramdl_state(): may only be called in the fwload state.\\n\"\n\t.size\t.L.str, 56\n\n\t.type\tP80211ENUM_resultcode_implementation_failure,@object # @P80211ENUM_resultcode_implementation_failure\n\t.bss\n\t.globl\tP80211ENUM_resultcode_implementation_failure\n\t.p2align\t3\nP80211ENUM_resultcode_implementation_failure:\n\t.quad\t0\n\t.size\tP80211ENUM_resultcode_implementation_failure, 8\n\n\t.type\tP80211ENUM_msgitem_status_data_ok,@object # @P80211ENUM_msgitem_status_data_ok\n\t.globl\tP80211ENUM_msgitem_status_data_ok\n\t.p2align\t3\nP80211ENUM_msgitem_status_data_ok:\n\t.quad\t0\n\t.size\tP80211ENUM_msgitem_status_data_ok, 8\n\n\t.type\tP80211ENUM_truth_true,@object   # @P80211ENUM_truth_true\n\t.globl\tP80211ENUM_truth_true\n\t.p2align\t3\nP80211ENUM_truth_true:\n\t.quad\t0                               # 0x0\n\t.size\tP80211ENUM_truth_true, 8\n\n\t.type\tP80211ENUM_resultcode_success,@object # @P80211ENUM_resultcode_success\n\t.globl\tP80211ENUM_resultcode_success\n\t.p2align\t3\nP80211ENUM_resultcode_success:\n\t.quad\t0\n\t.size\tP80211ENUM_resultcode_success, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i32, ptr }\n%struct.TYPE_5__ = type { ptr, i32, i32, i64 }\n\n@WLAN_MSD_FWLOAD = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [56 x i8] c\"ramdl_state(): may only be called in the fwload state.\\0A\\00\", align 1\n@P80211ENUM_resultcode_implementation_failure = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_msgitem_status_data_ok = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_truth_true = dso_local local_unnamed_addr global i64 0, align 8\n@P80211ENUM_resultcode_success = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prism2mgmt_ramdl_state(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @WLAN_MSD_FWLOAD, align 8, !tbaa !12\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %13, label %6\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 8, !tbaa !13\n  %9 = tail call i32 @netdev_err(i32 noundef %8, ptr noundef nonnull @.str) #2\n  %10 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !14\n  store ptr %10, ptr %1, align 8, !tbaa !15\n  %11 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !14\n  %12 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 1\n  store ptr %11, ptr %12, align 8, !tbaa !17\n  br label %31\n\n13:                                               ; preds = %2\n  %14 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %15 = load ptr, ptr %14, align 8, !tbaa !18\n  %16 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !14\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 2\n  store ptr %16, ptr %17, align 8, !tbaa !19\n  %18 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 3\n  %19 = load i64, ptr %18, align 8, !tbaa !20\n  %20 = load i64, ptr @P80211ENUM_truth_true, align 8, !tbaa !12\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %22, label %28\n\n22:                                               ; preds = %13\n  %23 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 1\n  %24 = load i32, ptr %23, align 8, !tbaa !21\n  %25 = tail call i64 @hfa384x_drvr_ramdl_enable(ptr noundef %15, i32 noundef %24) #2\n  %26 = icmp eq i64 %25, 0\n  %27 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !14\n  br i1 %26, label %30, label %29\n\n28:                                               ; preds = %13\n  %29 = tail call i32 @hfa384x_drvr_ramdl_disable(ptr noundef %15) #2\n  br label %30\n\n30:                                               ; preds = %22, %28\n  %31 = phi ptr [ %27, %22 ], [ @P80211ENUM_resultcode_success, %28 ]\n  store ptr %31, ptr %1, align 8, !tbaa !15\n  br label %31\n\n31:                                               ; preds = %30, %6\n  ret i32 0\n}\n\ndeclare i32 @netdev_err(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @hfa384x_drvr_ramdl_enable(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @hfa384x_drvr_ramdl_disable(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!11, !11, i64 0}\n!15 = !{!16, !11, i64 0}\n!16 = !{!\"TYPE_5__\", !11, i64 0, !10, i64 8, !10, i64 12, !7, i64 16}\n!17 = !{!16, !11, i64 8}\n!18 = !{!6, !11, i64 16}\n!19 = !{!16, !11, i64 12}\n!20 = !{!16, !7, i64 16}\n!21 = !{!16, !10, i64 8}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i32, ptr }\n%struct.TYPE_5__ = type { ptr, i32, i32, i64 }\n\n@WLAN_MSD_FWLOAD = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [56 x i8] c\"ramdl_state(): may only be called in the fwload state.\\0A\\00\", align 1\n@P80211ENUM_resultcode_implementation_failure = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_msgitem_status_data_ok = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_truth_true = dso_local local_unnamed_addr global i64 0, align 8\n@P80211ENUM_resultcode_success = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prism2mgmt_ramdl_state(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @WLAN_MSD_FWLOAD, align 8, !tbaa !12\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %13, label %6\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 8, !tbaa !13\n  %9 = tail call i32 @netdev_err(i32 noundef %8, ptr noundef nonnull @.str) #2\n  %10 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !14\n  store ptr %10, ptr %1, align 8, !tbaa !15\n  %11 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !14\n  %12 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 1\n  store ptr %11, ptr %12, align 8, !tbaa !17\n  br label %31\n\n13:                                               ; preds = %2\n  %14 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %15 = load ptr, ptr %14, align 8, !tbaa !18\n  %16 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !14\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 2\n  store ptr %16, ptr %17, align 8, !tbaa !19\n  %18 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 3\n  %19 = load i64, ptr %18, align 8, !tbaa !20\n  %20 = load i64, ptr @P80211ENUM_truth_true, align 8, !tbaa !12\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %22, label %28\n\n22:                                               ; preds = %13\n  %23 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 1\n  %24 = load i32, ptr %23, align 8, !tbaa !21\n  %25 = tail call i64 @hfa384x_drvr_ramdl_enable(ptr noundef %15, i32 noundef %24) #2\n  %26 = icmp eq i64 %25, 0\n  %27 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !14\n  br i1 %26, label %30, label %29\n\n28:                                               ; preds = %13\n  %29 = tail call i32 @hfa384x_drvr_ramdl_disable(ptr noundef %15) #2\n  br label %30\n\n30:                                               ; preds = %22, %28\n  %31 = phi ptr [ %27, %22 ], [ @P80211ENUM_resultcode_success, %28 ]\n  store ptr %31, ptr %1, align 8, !tbaa !15\n  br label %31\n\n31:                                               ; preds = %30, %6\n  ret i32 0\n}\n\ndeclare i32 @netdev_err(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @hfa384x_drvr_ramdl_enable(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @hfa384x_drvr_ramdl_disable(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!11, !11, i64 0}\n!15 = !{!16, !11, i64 0}\n!16 = !{!\"TYPE_5__\", !11, i64 0, !10, i64 8, !10, i64 12, !7, i64 16}\n!17 = !{!16, !11, i64 8}\n!18 = !{!6, !11, i64 16}\n!19 = !{!16, !11, i64 12}\n!20 = !{!16, !7, i64 16}\n!21 = !{!16, !10, i64 8}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i32, ptr }\n%struct.TYPE_5__ = type { ptr, i32, i32, i64 }\n\n@WLAN_MSD_FWLOAD = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [56 x i8] c\"ramdl_state(): may only be called in the fwload state.\\0A\\00\", align 1\n@P80211ENUM_resultcode_implementation_failure = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_msgitem_status_data_ok = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_truth_true = dso_local local_unnamed_addr global i64 0, align 8\n@P80211ENUM_resultcode_success = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prism2mgmt_ramdl_state(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @WLAN_MSD_FWLOAD, align 8, !tbaa !12\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %13, label %6\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 8, !tbaa !13\n  %9 = tail call i32 @netdev_err(i32 noundef %8, ptr noundef nonnull @.str) #2\n  %10 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !14\n  store ptr %10, ptr %1, align 8, !tbaa !15\n  %11 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !14\n  %12 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 1\n  store ptr %11, ptr %12, align 8, !tbaa !17\n  br label %30\n\n13:                                               ; preds = %2\n  %14 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 2\n  %15 = load ptr, ptr %14, align 8, !tbaa !18\n  %16 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !14\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 2\n  store ptr %16, ptr %17, align 8, !tbaa !19\n  %18 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 3\n  %19 = load i64, ptr %18, align 8, !tbaa !20\n  %20 = load i64, ptr @P80211ENUM_truth_true, align 8, !tbaa !12\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %22, label %28\n\n22:                                               ; preds = %13\n  %23 = getelementptr inbounds %struct.TYPE_5__, ptr %1, i64 0, i32 1\n  %24 = load i32, ptr %23, align 8, !tbaa !21\n  %25 = tail call i64 @hfa384x_drvr_ramdl_enable(ptr noundef %15, i32 noundef %24) #2\n  %26 = icmp eq i64 %25, 0\n  %27 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !14\n  br i1 %26, label %30, label %29\n\n28:                                               ; preds = %13\n  %29 = tail call i32 @hfa384x_drvr_ramdl_disable(ptr noundef %15) #2\n  br label %30\n\n30:                                               ; preds = %22, %28, %6\n  %31 = phi ptr [ %27, %22 ], [ %27, %28 ], [ null, %6 ]\n  store ptr %31, ptr %1, align 8, !tbaa !15\n  ret i32 0\n}\n\ndeclare i32 @netdev_err(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @hfa384x_drvr_ramdl_enable(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @hfa384x_drvr_ramdl_disable(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!11, !11, i64 0}\n!15 = !{!16, !11, i64 0}\n!16 = !{!\"TYPE_5__\", !11, i64 0, !10, i64 8, !10, i64 12, !7, i64 16}\n!17 = !{!16, !11, i64 8}\n!18 = !{!6, !11, i64 16}\n!19 = !{!16, !11, i64 12}\n!20 = !{!16, !7, i64 16}\n!21 = !{!16, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i64, i32, ptr }\n%struct.TYPE_7__ = type { ptr, ptr }\n\n@WLAN_MSD_FWLOAD = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [56 x i8] c\"ramdl_state(): may only be called in the fwload state.\\0A\\00\", align 1\n@P80211ENUM_resultcode_implementation_failure = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_msgitem_status_data_ok = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_truth_true = dso_local local_unnamed_addr global i64 0, align 8\n@P80211ENUM_resultcode_success = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prism2mgmt_ramdl_state(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @WLAN_MSD_FWLOAD, align 8, !tbaa !11\n  %5 = icmp eq i64 %3, %4\n  br i1 %5, label %13, label %6\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 8, !tbaa !12\n  %9 = tail call i32 @netdev_err(i32 noundef %8, ptr noundef nonnull @.str) #2\n  %10 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !13\n  store ptr %10, ptr %1, align 8, !tbaa !14\n  %11 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !13\n  %12 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  store ptr %11, ptr %12, align 8, !tbaa !16\n  br label %31\n\n13:                                               ; preds = %2\n  %14 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %15 = load ptr, ptr %14, align 8, !tbaa !17\n  %16 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !13\n  %17 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  store ptr %16, ptr %17, align 8, !tbaa !16\n  %18 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  %19 = load i64, ptr %1, align 8, !tbaa !14\n  %20 = load i64, ptr @P80211ENUM_truth_true, align 8, !tbaa !11\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %22, label %28\n\n22:                                               ; preds = %13\n  %23 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  %24 = load i32, ptr %23, align 8, !tbaa !16\n  %25 = tail call i64 @hfa384x_drvr_ramdl_enable(ptr noundef %15, i32 noundef %24) #2\n  %26 = icmp eq i64 %25, 0\n  %27 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !13\n  br i1 %26, label %30, label %29\n\n28:                                               ; preds = %13\n  %29 = tail call i32 @hfa384x_drvr_ramdl_disable(ptr noundef %15) #2\n  br label %30\n\n30:                                               ; preds = %22, %28\n  %31 = phi ptr [ %27, %22 ], [ @P80211ENUM_resultcode_success, %28 ]\n  store ptr %31, ptr %1, align 8, !tbaa !14\n  br label %31\n\n31:                                               ; preds = %30, %6\n  ret i32 0\n}\n\ndeclare i32 @netdev_err(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @hfa384x_drvr_ramdl_enable(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @hfa384x_drvr_ramdl_disable(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!6, !10, i64 8}\n!13 = !{!11, !11, i64 0}\n!14 = !{!15, !11, i64 0}\n!15 = !{!\"TYPE_7__\", !11, i64 0, !11, i64 8}\n!16 = !{!15, !11, i64 8}\n!17 = !{!6, !11, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/staging/wlan-ng/extr_prism2mgmt.c_prism2mgmt_ramdl_state.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wlandevice = type { i64, i32, ptr }\n%struct.TYPE_6__ = type { ptr, ptr }\n%struct.p80211msg_p2req_ramdl_state = type { %struct.TYPE_6__, %struct.TYPE_5__, %struct.TYPE_4__ }\n%struct.TYPE_5__ = type { i32 }\n%struct.TYPE_4__ = type { i64 }\n\n@WLAN_MSD_FWLOAD = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [56 x i8] c\"ramdl_state(): may only be called in the fwload state.\\0A\\00\", align 1\n@P80211ENUM_resultcode_implementation_failure = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_msgitem_status_data_ok = dso_local local_unnamed_addr global ptr null, align 8\n@P80211ENUM_truth_true = dso_local local_unnamed_addr global i64 0, align 8\n@P80211ENUM_resultcode_success = dso_local local_unnamed_addr global ptr null, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prism2mgmt_ramdl_state(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #0 {\n  %3 = getelementptr inbounds %struct.wlandevice, ptr %0, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !5\n  %5 = load i64, ptr %0, align 8, !tbaa !12\n  %6 = load i64, ptr @WLAN_MSD_FWLOAD, align 8, !tbaa !13\n  %7 = icmp eq i64 %5, %6\n  br i1 %7, label %15, label %8\n\n8:                                                ; preds = %2\n  %9 = getelementptr inbounds %struct.wlandevice, ptr %0, i64 0, i32 1\n  %10 = load i32, ptr %9, align 8, !tbaa !14\n  %11 = tail call i32 @netdev_err(i32 noundef %10, ptr noundef nonnull @.str) #2\n  %12 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !15\n  store ptr %12, ptr %1, align 8, !tbaa !16\n  %13 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !15\n  %14 = getelementptr inbounds %struct.TYPE_6__, ptr %1, i64 0, i32 1\n  store ptr %13, ptr %14, align 8, !tbaa !21\n  br label %34\n\n15:                                               ; preds = %2\n  %16 = load ptr, ptr @P80211ENUM_msgitem_status_data_ok, align 8, !tbaa !15\n  %17 = getelementptr inbounds %struct.TYPE_6__, ptr %1, i64 0, i32 1\n  store ptr %16, ptr %17, align 8, !tbaa !21\n  %18 = getelementptr inbounds %struct.p80211msg_p2req_ramdl_state, ptr %1, i64 0, i32 2\n  %19 = load i64, ptr %18, align 8, !tbaa !22\n  %20 = load i64, ptr @P80211ENUM_truth_true, align 8, !tbaa !13\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %22, label %31\n\n22:                                               ; preds = %15\n  %23 = getelementptr inbounds %struct.p80211msg_p2req_ramdl_state, ptr %1, i64 0, i32 1\n  %24 = load i32, ptr %23, align 8, !tbaa !23\n  %25 = tail call i64 @hfa384x_drvr_ramdl_enable(ptr noundef %4, i32 noundef %24) #2\n  %26 = icmp eq i64 %25, 0\n  br i1 %26, label %29, label %27\n\n27:                                               ; preds = %22\n  %28 = load ptr, ptr @P80211ENUM_resultcode_implementation_failure, align 8, !tbaa !15\n  store ptr %28, ptr %1, align 8, !tbaa !16\n  br label %34\n\n29:                                               ; preds = %22\n  %30 = load ptr, ptr @P80211ENUM_resultcode_success, align 8, !tbaa !15\n  store ptr %30, ptr %1, align 8, !tbaa !16\n  br label %34\n\n31:                                               ; preds = %15\n  %32 = tail call i32 @hfa384x_drvr_ramdl_disable(ptr noundef %4) #2\n  %33 = load ptr, ptr @P80211ENUM_resultcode_success, align 8, !tbaa !15\n  store ptr %33, ptr %1, align 8, !tbaa !16\n  br label %34\n\n34:                                               ; preds = %31, %29, %27, %8\n  ret i32 0\n}\n\ndeclare i32 @netdev_err(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @hfa384x_drvr_ramdl_enable(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @hfa384x_drvr_ramdl_disable(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 16}\n!6 = !{!\"wlandevice\", !7, i64 0, !10, i64 8, !11, i64 16}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!6, !7, i64 0}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n!15 = !{!11, !11, i64 0}\n!16 = !{!17, !11, i64 0}\n!17 = !{!\"p80211msg_p2req_ramdl_state\", !18, i64 0, !19, i64 16, !20, i64 24}\n!18 = !{!\"TYPE_6__\", !11, i64 0, !11, i64 8}\n!19 = !{!\"TYPE_5__\", !10, i64 0}\n!20 = !{!\"TYPE_4__\", !7, i64 0}\n!21 = !{!17, !11, i64 8}\n!22 = !{!17, !7, i64 24}\n!23 = !{!17, !10, i64 16}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_prof.c_prof_mdump.ll\"\n\t.globl\tprof_mdump                      # -- Begin function prof_mdump\n\t.p2align\t4, 0x90\n\t.type\tprof_mdump,@function\nprof_mdump:                             # @prof_mdump\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%r12\n\tpushq\t%rbx\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %r14\n\tmovl\tconfig_prof(%rip), %edi\n\tcallq\tcassert@PLT\n\tmovq\t%r14, %rdi\n\tcallq\ttsd_reentrancy_level_get@PLT\n\txorl\t%edi, %edi\n\ttestq\t%rax, %rax\n\tsete\t%dil\n\tcallq\tassert@PLT\n\tcmpl\t$0, opt_prof(%rip)\n\tmovl\t$1, %eax\n\tje\t.LBB0_8\n# %bb.1:\n\tcmpl\t$0, prof_booted(%rip)\n\tje\t.LBB0_8\n# %bb.2:\n\tmovq\t%rsp, %r12\n\tmovl\tDUMP_FILENAME_BUFSIZE(%rip), %eax\n\tmovq\t%rsp, %rbx\n\taddq\t$15, %rax\n\tandq\t$-16, %rax\n\tsubq\t%rax, %rbx\n\tmovq\t%rbx, %rsp\n\ttestq\t%r15, %r15\n\tjne\t.LBB0_6\n# %bb.3:\n\tmovq\t%r14, %rdi\n\tcallq\ttsd_tsdn@PLT\n\tmovl\t$prof_dump_filename_mtx, %esi\n\tmovl\t%eax, %edi\n\tcallq\tmalloc_mutex_lock@PLT\n\tmovq\t%r14, %rdi\n\tcallq\ttsd_tsdn@PLT\n\tmovl\t%eax, %edi\n\tcallq\tprof_dump_prefix_get@PLT\n\tcmpb\t$0, (%rax)\n\tje\t.LBB0_4\n# %bb.5:\n\tmovl\tprof_dump_mseq(%rip), %ecx\n\tmovq\t%r14, %rdi\n\tmovq\t%rbx, %rsi\n\tmovl\t$109, %edx\n\tcallq\tprof_dump_filename@PLT\n\tincl\tprof_dump_mseq(%rip)\n\tmovq\t%r14, %rdi\n\tcallq\ttsd_tsdn@PLT\n\tmovl\t$prof_dump_filename_mtx, %esi\n\tmovl\t%eax, %edi\n\tcallq\tmalloc_mutex_unlock@PLT\n\tmovq\t%rbx, %r15\n.LBB0_6:\n\tmovq\t%r14, %rdi\n\tmovl\t$1, %esi\n\tmovq\t%r15, %rdx\n\txorl\t%ecx, %ecx\n\tcallq\tprof_dump@PLT\n.LBB0_7:\n\tmovq\t%r12, %rsp\n.LBB0_8:\n\tleaq\t-32(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r12\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.LBB0_4:\n\t.cfi_def_cfa %rbp, 16\n\tmovq\t%r14, %rdi\n\tcallq\ttsd_tsdn@PLT\n\tmovl\t$prof_dump_filename_mtx, %esi\n\tmovl\t%eax, %edi\n\tcallq\tmalloc_mutex_unlock@PLT\n\tmovl\t$1, %eax\n\tjmp\t.LBB0_7\n.Lfunc_end0:\n\t.size\tprof_mdump, .Lfunc_end0-prof_mdump\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tconfig_prof,@object             # @config_prof\n\t.bss\n\t.globl\tconfig_prof\n\t.p2align\t2\nconfig_prof:\n\t.long\t0                               # 0x0\n\t.size\tconfig_prof, 4\n\n\t.type\topt_prof,@object                # @opt_prof\n\t.globl\topt_prof\n\t.p2align\t2\nopt_prof:\n\t.long\t0                               # 0x0\n\t.size\topt_prof, 4\n\n\t.type\tprof_booted,@object             # @prof_booted\n\t.globl\tprof_booted\n\t.p2align\t2\nprof_booted:\n\t.long\t0                               # 0x0\n\t.size\tprof_booted, 4\n\n\t.type\tDUMP_FILENAME_BUFSIZE,@object   # @DUMP_FILENAME_BUFSIZE\n\t.globl\tDUMP_FILENAME_BUFSIZE\n\t.p2align\t2\nDUMP_FILENAME_BUFSIZE:\n\t.long\t0                               # 0x0\n\t.size\tDUMP_FILENAME_BUFSIZE, 4\n\n\t.type\tprof_dump_filename_mtx,@object  # @prof_dump_filename_mtx\n\t.globl\tprof_dump_filename_mtx\n\t.p2align\t2\nprof_dump_filename_mtx:\n\t.long\t0                               # 0x0\n\t.size\tprof_dump_filename_mtx, 4\n\n\t.type\tprof_dump_mseq,@object          # @prof_dump_mseq\n\t.globl\tprof_dump_mseq\n\t.p2align\t2\nprof_dump_mseq:\n\t.long\t0                               # 0x0\n\t.size\tprof_dump_mseq, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@config_prof = dso_local local_unnamed_addr global i32 0, align 4\n@opt_prof = dso_local local_unnamed_addr global i32 0, align 4\n@prof_booted = dso_local local_unnamed_addr global i32 0, align 4\n@DUMP_FILENAME_BUFSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@prof_dump_filename_mtx = dso_local global i32 0, align 4\n@prof_dump_mseq = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prof_mdump(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  %4 = load i32, ptr @config_prof, align 4, !tbaa !5\n  %5 = tail call i32 @cassert(i32 noundef %4) #4\n  %6 = tail call i64 @tsd_reentrancy_level_get(ptr noundef %0) #4\n  %7 = icmp eq i64 %6, 0\n  %8 = zext i1 %7 to i32\n  %9 = tail call i32 @assert(i32 noundef %8) #4\n  %10 = load i32, ptr @opt_prof, align 4, !tbaa !5\n  %11 = icmp ne i32 %10, 0\n  %12 = load i32, ptr @prof_booted, align 4\n  %13 = icmp ne i32 %12, 0\n  %14 = select i1 %11, i1 %13, i1 false\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @DUMP_FILENAME_BUFSIZE, align 4, !tbaa !5\n  %17 = zext i32 %16 to i64\n  %18 = tail call ptr @llvm.stacksave()\n  %19 = alloca i8, i64 %17, align 16\n  %20 = icmp eq ptr %1, null\n  br i1 %20, label %21, label %33\n\n21:                                               ; preds = %15\n  %22 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %23 = tail call i32 @malloc_mutex_lock(i32 noundef %22, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %24 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %25 = tail call ptr @prof_dump_prefix_get(i32 noundef %24) #4\n  %26 = load i8, ptr %25, align 1, !tbaa !9\n  %27 = icmp eq i8 %26, 0\n  br i1 %27, label %28, label %30\n\n28:                                               ; preds = %21\n  %29 = tail call i32 @malloc_mutex_unlock(i32 noundef %24, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  br label %37\n\n30:                                               ; preds = %21\n  %31 = load i32, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %32 = call i32 @prof_dump_filename(ptr noundef %0, ptr noundef nonnull %19, i8 noundef signext 109, i32 noundef %31) #4\n  store i32 %31, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %33 = call i32 @tsd_tsdn(ptr noundef %0) #4\n  %34 = call i32 @malloc_mutex_unlock(i32 noundef %33, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %35 = call i32 @prof_dump(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %19, ptr noundef null) #4\n  %36 = load ptr, ptr %19, align 16, !tbaa !10\n  br label %37\n\n37:                                               ; preds = %2, %30, %28\n  %38 = phi ptr [ %36, %30 ], [ %1, %28 ], [ 1, %2 ]\n  %39 = call i32 @llvm.stackrestore(ptr %18)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  ret i32 %38\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @cassert(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @tsd_reentrancy_level_get(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare ptr @llvm.stacksave() #3\n\ndeclare i32 @malloc_mutex_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tsd_tsdn(ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @prof_dump_prefix_get(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @malloc_mutex_unlock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump_filename(ptr noundef, ptr noundef, i8 noundef signext, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.stackrestore(ptr) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@config_prof = dso_local local_unnamed_addr global i32 0, align 4\n@opt_prof = dso_local local_unnamed_addr global i32 0, align 4\n@prof_booted = dso_local local_unnamed_addr global i32 0, align 4\n@DUMP_FILENAME_BUFSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@prof_dump_filename_mtx = dso_local global i32 0, align 4\n@prof_dump_mseq = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prof_mdump(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  %4 = load i32, ptr @config_prof, align 4, !tbaa !5\n  %5 = tail call i32 @cassert(i32 noundef %4) #4\n  %6 = tail call i64 @tsd_reentrancy_level_get(ptr noundef %0) #4\n  %7 = icmp eq i64 %6, 0\n  %8 = zext i1 %7 to i32\n  %9 = tail call i32 @assert(i32 noundef %8) #4\n  %10 = load i32, ptr @opt_prof, align 4, !tbaa !5\n  %11 = icmp ne i32 %10, 0\n  %12 = load i32, ptr @prof_booted, align 4\n  %13 = icmp ne i32 %12, 0\n  %14 = select i1 %11, i1 %13, i1 false\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @DUMP_FILENAME_BUFSIZE, align 4, !tbaa !5\n  %17 = zext i32 %16 to i64\n  %18 = tail call ptr @llvm.stacksave()\n  %19 = alloca i8, i64 %17, align 16\n  %20 = icmp eq ptr %1, null\n  br i1 %20, label %21, label %33\n\n21:                                               ; preds = %15\n  %22 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %23 = tail call i32 @malloc_mutex_lock(i32 noundef %22, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %24 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %25 = tail call ptr @prof_dump_prefix_get(i32 noundef %24) #4\n  %26 = load i8, ptr %25, align 1, !tbaa !9\n  %27 = icmp eq i8 %26, 0\n  br i1 %27, label %28, label %30\n\n28:                                               ; preds = %21\n  %29 = tail call i32 @malloc_mutex_unlock(i32 noundef %24, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  br label %37\n\n30:                                               ; preds = %21\n  %31 = load i32, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %32 = call i32 @prof_dump_filename(ptr noundef %0, ptr noundef nonnull %19, i8 noundef signext 109, i32 noundef %31) #4\n  store i32 %31, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %33 = call i32 @tsd_tsdn(ptr noundef %0) #4\n  %34 = call i32 @malloc_mutex_unlock(i32 noundef %33, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %35 = call i32 @prof_dump(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %19, ptr noundef null) #4\n  %36 = load ptr, ptr %3, align 8, !tbaa !10\n  br label %37\n\n37:                                               ; preds = %28, %30, %2\n  %38 = phi ptr [ %1, %2 ], [ %36, %30 ], [ %19, %28 ]\n  %39 = call i32 @prof_dump(ptr noundef %0, i32 noundef 1, ptr noundef %38, ptr noundef null) #4\n  call void @llvm.stackrestore(ptr %18)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  ret i32 %39\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @cassert(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @tsd_reentrancy_level_get(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare ptr @llvm.stacksave() #3\n\ndeclare i32 @malloc_mutex_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tsd_tsdn(ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @prof_dump_prefix_get(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @malloc_mutex_unlock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump_filename(ptr noundef, ptr noundef, i8 noundef signext, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.stackrestore(ptr) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@config_prof = dso_local local_unnamed_addr global i32 0, align 4\n@opt_prof = dso_local local_unnamed_addr global i32 0, align 4\n@prof_booted = dso_local local_unnamed_addr global i32 0, align 4\n@DUMP_FILENAME_BUFSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@prof_dump_filename_mtx = dso_local global i32 0, align 4\n@prof_dump_mseq = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prof_mdump(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  %4 = load i32, ptr @config_prof, align 4, !tbaa !5\n  %5 = tail call i32 @cassert(i32 noundef %4) #4\n  %6 = tail call i64 @tsd_reentrancy_level_get(ptr noundef %0) #4\n  %7 = icmp eq i64 %6, 0\n  %8 = zext i1 %7 to i32\n  %9 = tail call i32 @assert(i32 noundef %8) #4\n  %10 = load i32, ptr @opt_prof, align 4, !tbaa !5\n  %11 = icmp ne i32 %10, 0\n  %12 = load i32, ptr @prof_booted, align 4\n  %13 = icmp ne i32 %12, 0\n  %14 = select i1 %11, i1 %13, i1 false\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @DUMP_FILENAME_BUFSIZE, align 4, !tbaa !5\n  %17 = zext i32 %16 to i64\n  %18 = tail call ptr @llvm.stacksave()\n  %19 = alloca i8, i64 %17, align 16\n  %20 = icmp eq ptr %1, null\n  br i1 %20, label %21, label %33\n\n21:                                               ; preds = %15\n  %22 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %23 = tail call i32 @malloc_mutex_lock(i32 noundef %22, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %24 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %25 = tail call ptr @prof_dump_prefix_get(i32 noundef %24) #4\n  %26 = load i8, ptr %25, align 1, !tbaa !9\n  %27 = icmp eq i8 %26, 0\n  br i1 %27, label %28, label %30\n\n28:                                               ; preds = %21\n  %29 = tail call i32 @malloc_mutex_unlock(i32 noundef %24, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  br label %37\n\n30:                                               ; preds = %21\n  %31 = load i32, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %32 = call i32 @prof_dump_filename(ptr noundef %0, ptr noundef nonnull %19, i8 noundef signext 109, i32 noundef %31) #4\n  store i32 %31, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %33 = call i32 @tsd_tsdn(ptr noundef %0) #4\n  %34 = call i32 @malloc_mutex_unlock(i32 noundef %33, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %35 = call i32 @prof_dump(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %19, ptr noundef null) #4\n  %36 = load ptr, ptr %19, align 16, !tbaa !10\n  br label %37\n\n37:                                               ; preds = %2, %30, %28\n  %38 = phi ptr [ %36, %30 ], [ %1, %28 ], [ 1, %2 ]\n  %39 = call i32 @llvm.stackrestore(ptr %18)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  ret i32 %38\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @cassert(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @tsd_reentrancy_level_get(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare ptr @llvm.stacksave() #3\n\ndeclare i32 @malloc_mutex_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tsd_tsdn(ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @prof_dump_prefix_get(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @malloc_mutex_unlock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump_filename(ptr noundef, ptr noundef, i8 noundef signext, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.stackrestore(ptr) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@config_prof = dso_local local_unnamed_addr global i32 0, align 4\n@opt_prof = dso_local local_unnamed_addr global i32 0, align 4\n@prof_booted = dso_local local_unnamed_addr global i32 0, align 4\n@DUMP_FILENAME_BUFSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@prof_dump_filename_mtx = dso_local global i32 0, align 4\n@prof_dump_mseq = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prof_mdump(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #4\n  %4 = load i32, ptr @config_prof, align 4, !tbaa !5\n  %5 = tail call i32 @cassert(i32 noundef %4) #4\n  %6 = tail call i64 @tsd_reentrancy_level_get(ptr noundef %0) #4\n  %7 = icmp eq i64 %6, 0\n  %8 = zext i1 %7 to i32\n  %9 = tail call i32 @assert(i32 noundef %8) #4\n  %10 = load i32, ptr @opt_prof, align 4, !tbaa !5\n  %11 = icmp ne i32 %10, 0\n  %12 = load i32, ptr @prof_booted, align 4\n  %13 = icmp ne i32 %12, 0\n  %14 = select i1 %11, i1 %13, i1 false\n  br i1 %14, label %15, label %37\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr @DUMP_FILENAME_BUFSIZE, align 4, !tbaa !5\n  %17 = zext i32 %16 to i64\n  %18 = tail call ptr @llvm.stacksave()\n  %19 = alloca i8, i64 %17, align 16\n  %20 = icmp eq ptr %1, null\n  br i1 %20, label %21, label %33\n\n21:                                               ; preds = %15\n  %22 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %23 = tail call i32 @malloc_mutex_lock(i32 noundef %22, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %24 = tail call i32 @tsd_tsdn(ptr noundef %0) #4\n  %25 = tail call ptr @prof_dump_prefix_get(i32 noundef %24) #4\n  %26 = load i8, ptr %25, align 1, !tbaa !9\n  %27 = icmp eq i8 %26, 0\n  br i1 %27, label %28, label %30\n\n28:                                               ; preds = %21\n  %29 = tail call i32 @malloc_mutex_unlock(i32 noundef %24, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  br label %37\n\n30:                                               ; preds = %21\n  %31 = load i32, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %32 = call i32 @prof_dump_filename(ptr noundef %0, ptr noundef nonnull %19, i8 noundef signext 109, i32 noundef %31) #4\n  store i32 %31, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %33 = call i32 @tsd_tsdn(ptr noundef %0) #4\n  %34 = call i32 @malloc_mutex_unlock(i32 noundef %33, ptr noundef nonnull @prof_dump_filename_mtx) #4\n  %35 = call i32 @prof_dump(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %19, ptr noundef null) #4\n  %36 = load ptr, ptr %19, align 16, !tbaa !10\n  br label %37\n\n37:                                               ; preds = %2, %30, %28\n  %38 = phi ptr [ %36, %30 ], [ %1, %28 ], [ 1, %2 ]\n  %39 = call i32 @llvm.stackrestore(ptr %18)\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #4\n  ret i32 %38\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @cassert(i32 noundef) local_unnamed_addr #2\n\ndeclare i64 @tsd_reentrancy_level_get(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare ptr @llvm.stacksave() #3\n\ndeclare i32 @malloc_mutex_lock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @tsd_tsdn(ptr noundef) local_unnamed_addr #2\n\ndeclare ptr @prof_dump_prefix_get(i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @malloc_mutex_unlock(i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump_filename(ptr noundef, ptr noundef, i8 noundef signext, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @prof_dump(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare i32 @llvm.stackrestore(ptr) #3\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = !{!11, !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/jemalloc/src/extr_prof.c_prof_mdump.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@config_prof = dso_local local_unnamed_addr global i32 0, align 4\n@opt_prof = dso_local local_unnamed_addr global i32 0, align 4\n@prof_booted = dso_local local_unnamed_addr global i32 0, align 4\n@DUMP_FILENAME_BUFSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@prof_dump_filename_mtx = dso_local global i32 0, align 4\n@prof_dump_mseq = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @prof_mdump(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @config_prof, align 4, !tbaa !5\n  %4 = tail call i32 @cassert(i32 noundef %3) #3\n  %5 = tail call i64 @tsd_reentrancy_level_get(ptr noundef %0) #3\n  %6 = icmp eq i64 %5, 0\n  %7 = zext i1 %6 to i32\n  %8 = tail call i32 @assert(i32 noundef %7) #3\n  %9 = load i32, ptr @opt_prof, align 4, !tbaa !5\n  %10 = icmp ne i32 %9, 0\n  %11 = load i32, ptr @prof_booted, align 4\n  %12 = icmp ne i32 %11, 0\n  %13 = select i1 %10, i1 %12, i1 false\n  br i1 %13, label %14, label %42\n\n14:                                               ; preds = %2\n  %15 = load i32, ptr @DUMP_FILENAME_BUFSIZE, align 4, !tbaa !5\n  %16 = zext i32 %15 to i64\n  %17 = tail call ptr @llvm.stacksave()\n  %18 = alloca i8, i64 %16, align 16\n  %19 = icmp eq ptr %1, null\n  br i1 %19, label %20, label %37\n\n20:                                               ; preds = %14\n  %21 = tail call i32 @tsd_tsdn(ptr noundef %0) #3\n  %22 = tail call i32 @malloc_mutex_lock(i32 noundef %21, ptr noundef nonnull @prof_dump_filename_mtx) #3\n  %23 = tail call i32 @tsd_tsdn(ptr noundef %0) #3\n  %24 = tail call ptr @prof_dump_prefix_get(i32 noundef %23) #3\n  %25 = load i8, ptr %24, align 1, !tbaa !9\n  %26 = icmp eq i8 %25, 0\n  br i1 %26, label %27, label %30\n\n27:                                               ; preds = %20\n  %28 = tail call i32 @tsd_tsdn(ptr noundef %0) #3\n  %29 = tail call i32 @malloc_mutex_unlock(i32 noundef %28, ptr noundef nonnull @prof_dump_filename_mtx) #3\n  br label %40\n\n30:                                               ; preds = %20\n  %31 = load i32, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %32 = call i32 @prof_dump_filename(ptr noundef %0, ptr noundef nonnull %18, i8 noundef signext 109, i32 noundef %31) #3\n  %33 = load i32, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %34 = add nsw i32 %33, 1\n  store i32 %34, ptr @prof_dump_mseq, align 4, !tbaa !5\n  %35 = call i32 @tsd_tsdn(ptr noundef %0) #3\n  %36 = call i32 @malloc_mutex_unlock(i32 noundef %35, ptr noundef nonnull @prof_dump_filename_mtx) #3\n  br label %37\n\n37:                                               ; preds = %30, %14\n  %38 = phi ptr [ %18, %30 ], [ %1, %14 ]\n  %39 = call i32 @prof_dump(ptr noundef %0, i32 noundef 1, ptr noundef nonnull %38, i32 noundef 0) #3\n  br label %40\n\n40:                                               ; preds = %37, %27\n  %41 = phi i32 [ 1, %27 ], [ %39, %37 ]\n  call void @llvm.stackrestore(ptr %17)\n  br label %42\n\n42:                                               ; preds = %2, %40\n  %43 = phi i32 [ %41, %40 ], [ 1, %2 ]\n  ret i32 %43\n}\n\ndeclare i32 @cassert(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @assert(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @tsd_reentrancy_level_get(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare ptr @llvm.stacksave() #2\n\ndeclare i32 @malloc_mutex_lock(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @tsd_tsdn(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @prof_dump_prefix_get(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @malloc_mutex_unlock(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @prof_dump_filename(ptr noundef, ptr noundef, i8 noundef signext, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @prof_dump(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.stackrestore(ptr) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_seq_dummy.c_dummy_unuse.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function dummy_unuse\n\t.type\tdummy_unuse,@function\ndummy_unuse:                            # @dummy_unuse\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$32, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tleaq\t8(%rsp), %r14\n\txorl\t%ebp, %ebp\n\tmovq\t%r14, %rdi\n\txorl\t%esi, %esi\n\tmovl\t$20, %edx\n\tcallq\tmemset@PLT\n\txorl\t%eax, %eax\n\tcmpq\t$0, 16(%rbx)\n\tsetne\t%al\n\tmovl\t4(%rbx,%rax,4), %eax\n\tmovl\t%eax, 24(%rsp)\n\tmovl\tSNDRV_SEQ_ADDRESS_SUBSCRIBERS(%rip), %eax\n\tmovl\t%eax, 20(%rsp)\n\tmovl\tSNDRV_SEQ_EVENT_CONTROLLER(%rip), %eax\n\tmovl\t%eax, 16(%rsp)\n\t.p2align\t4, 0x90\n.LBB0_1:                                # =>This Inner Loop Header: Depth=1\n\tmovl\t%ebp, 8(%rsp)\n\tmovl\tMIDI_CTL_ALL_SOUNDS_OFF(%rip), %eax\n\tmovl\t%eax, 12(%rsp)\n\tmovl\t(%rbx), %edi\n\tmovq\t%r14, %rsi\n\txorl\t%edx, %edx\n\txorl\t%ecx, %ecx\n\tcallq\tsnd_seq_kernel_client_dispatch@PLT\n\tmovl\tMIDI_CTL_RESET_CONTROLLERS(%rip), %eax\n\tmovl\t%eax, 12(%rsp)\n\tmovl\t(%rbx), %edi\n\tmovq\t%r14, %rsi\n\txorl\t%edx, %edx\n\txorl\t%ecx, %ecx\n\tcallq\tsnd_seq_kernel_client_dispatch@PLT\n\tincl\t%ebp\n\tcmpl\t$16, %ebp\n\tjne\t.LBB0_1\n# %bb.2:\n\txorl\t%eax, %eax\n\taddq\t$32, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tdummy_unuse, .Lfunc_end0-dummy_unuse\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSNDRV_SEQ_ADDRESS_SUBSCRIBERS,@object # @SNDRV_SEQ_ADDRESS_SUBSCRIBERS\n\t.bss\n\t.globl\tSNDRV_SEQ_ADDRESS_SUBSCRIBERS\n\t.p2align\t2\nSNDRV_SEQ_ADDRESS_SUBSCRIBERS:\n\t.long\t0                               # 0x0\n\t.size\tSNDRV_SEQ_ADDRESS_SUBSCRIBERS, 4\n\n\t.type\tSNDRV_SEQ_EVENT_CONTROLLER,@object # @SNDRV_SEQ_EVENT_CONTROLLER\n\t.globl\tSNDRV_SEQ_EVENT_CONTROLLER\n\t.p2align\t2\nSNDRV_SEQ_EVENT_CONTROLLER:\n\t.long\t0                               # 0x0\n\t.size\tSNDRV_SEQ_EVENT_CONTROLLER, 4\n\n\t.type\tMIDI_CTL_ALL_SOUNDS_OFF,@object # @MIDI_CTL_ALL_SOUNDS_OFF\n\t.globl\tMIDI_CTL_ALL_SOUNDS_OFF\n\t.p2align\t2\nMIDI_CTL_ALL_SOUNDS_OFF:\n\t.long\t0                               # 0x0\n\t.size\tMIDI_CTL_ALL_SOUNDS_OFF, 4\n\n\t.type\tMIDI_CTL_RESET_CONTROLLERS,@object # @MIDI_CTL_RESET_CONTROLLERS\n\t.globl\tMIDI_CTL_RESET_CONTROLLERS\n\t.p2align\t2\nMIDI_CTL_RESET_CONTROLLERS:\n\t.long\t0                               # 0x0\n\t.size\tMIDI_CTL_RESET_CONTROLLERS, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_seq_event = type { i32, i32, i32, i32 }\n%struct.snd_seq_client = type { i32, i32, i64 }\n\n@SNDRV_SEQ_ADDRESS_SUBSCRIBERS = dso_local local_unnamed_addr global i32 0, align 4\n@SNDRV_SEQ_EVENT_CONTROLLER = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_ALL_SOUNDS_OFF = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_RESET_CONTROLLERS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dummy_unuse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dummy_unuse(ptr nocapture noundef readonly %0) #0 {\n  %2 = alloca %struct.snd_seq_event, align 4\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #3\n  %3 = call i32 @memset(ptr noundef nonnull %2, i32 noundef 0, i32 noundef 20) #3\n  %4 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 2\n  %5 = load i64, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq i64 %5, 0\n  %7 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  %9 = select i1 %6, ptr %7, ptr %8\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 3\n  store i32 %10, ptr %11, align 4, !tbaa !12\n  %12 = load i32, ptr @SNDRV_SEQ_ADDRESS_SUBSCRIBERS, align 4, !tbaa !11\n  %13 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 2\n  store i32 %12, ptr %13, align 4, !tbaa !14\n  %14 = load i32, ptr @SNDRV_SEQ_EVENT_CONTROLLER, align 4, !tbaa !11\n  store i32 %14, ptr %2, align 4, !tbaa !15\n  br label %15\n\n15:                                               ; preds = %1, %15\n  %16 = phi i32 [ 0, %1 ], [ %21, %15 ]\n  store i32 %16, ptr %8, align 4, !tbaa !16\n  %17 = load i32, ptr @MIDI_CTL_ALL_SOUNDS_OFF, align 4, !tbaa !11\n  %18 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  store i32 %17, ptr %18, align 4, !tbaa !17\n  %19 = load i32, ptr %0, align 8, !tbaa !18\n  %20 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %19, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %21 = add nuw nsw i32 %16, 1\n  %22 = load i32, ptr @MIDI_CTL_RESET_CONTROLLERS, align 4, !tbaa !11\n  store i32 %22, ptr %18, align 4, !tbaa !17\n  %23 = load i32, ptr %0, align 8, !tbaa !18\n  %24 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %23, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %25 = icmp eq i32 %21, 16\n  br i1 %25, label %26, label %15, !llvm.loop !19\n\n26:                                               ; preds = %15\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @snd_seq_kernel_client_dispatch(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"snd_seq_client\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !7, i64 12}\n!13 = !{!\"snd_seq_event\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!14 = !{!13, !7, i64 8}\n!15 = !{!13, !7, i64 0}\n!16 = !{!13, !7, i64 4}\n!17 = !{!13, !7, i64 8}\n!18 = !{!6, !7, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_seq_event = type { i32, i32, i32, i32 }\n%struct.snd_seq_client = type { i32, i32, i64 }\n\n@SNDRV_SEQ_ADDRESS_SUBSCRIBERS = dso_local local_unnamed_addr global i32 0, align 4\n@SNDRV_SEQ_EVENT_CONTROLLER = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_ALL_SOUNDS_OFF = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_RESET_CONTROLLERS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dummy_unuse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dummy_unuse(ptr nocapture noundef readonly %0) #0 {\n  %2 = alloca %struct.snd_seq_event, align 4\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #3\n  %3 = call i32 @memset(ptr noundef nonnull %2, i32 noundef 0, i32 noundef 20) #3\n  %4 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 2\n  %5 = load i64, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq i64 %5, 0\n  %7 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  %9 = select i1 %6, ptr %7, ptr %8\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 3\n  store i32 %10, ptr %11, align 4, !tbaa !12\n  %12 = load i32, ptr @SNDRV_SEQ_ADDRESS_SUBSCRIBERS, align 4, !tbaa !11\n  %13 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 2\n  store i32 %12, ptr %13, align 4, !tbaa !14\n  %14 = load i32, ptr @SNDRV_SEQ_EVENT_CONTROLLER, align 4, !tbaa !11\n  store i32 %14, ptr %2, align 4, !tbaa !15\n  br label %15\n\n15:                                               ; preds = %1, %15\n  %16 = phi i32 [ 0, %1 ], [ %21, %15 ]\n  store i32 %16, ptr %8, align 4, !tbaa !16\n  %17 = load i32, ptr @MIDI_CTL_ALL_SOUNDS_OFF, align 4, !tbaa !11\n  %18 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  store i32 %17, ptr %18, align 4, !tbaa !17\n  %19 = load i32, ptr %0, align 8, !tbaa !18\n  %20 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %19, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %21 = add nuw nsw i32 %16, 1\n  %22 = load i32, ptr @MIDI_CTL_RESET_CONTROLLERS, align 4, !tbaa !11\n  store i32 %22, ptr %18, align 4, !tbaa !17\n  %23 = load i32, ptr %0, align 8, !tbaa !18\n  %24 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %23, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %25 = icmp eq i32 %21, 16\n  br i1 %25, label %26, label %15, !llvm.loop !19\n\n26:                                               ; preds = %15\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @snd_seq_kernel_client_dispatch(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"snd_seq_client\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !7, i64 12}\n!13 = !{!\"snd_seq_event\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!14 = !{!13, !7, i64 8}\n!15 = !{!13, !7, i64 0}\n!16 = !{!13, !7, i64 4}\n!17 = !{!13, !7, i64 8}\n!18 = !{!6, !7, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_seq_event = type { i32, i32, i32, i32, i32 }\n%struct.snd_seq_client = type { i32, i32, i64 }\n\n@SNDRV_SEQ_ADDRESS_SUBSCRIBERS = dso_local local_unnamed_addr global i32 0, align 4\n@SNDRV_SEQ_EVENT_CONTROLLER = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_ALL_SOUNDS_OFF = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_RESET_CONTROLLERS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dummy_unuse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dummy_unuse(ptr nocapture noundef readonly %0) #0 {\n  %2 = alloca %struct.snd_seq_event, align 4\n  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #3\n  %3 = call i32 @memset(ptr noundef nonnull %2, i32 noundef 0, i32 noundef 20) #3\n  %4 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 2\n  %5 = load i64, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq i64 %5, 0\n  %7 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  %9 = select i1 %6, ptr %7, ptr %8\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 4\n  store i32 %10, ptr %11, align 4, !tbaa !12\n  %12 = load i32, ptr @SNDRV_SEQ_ADDRESS_SUBSCRIBERS, align 4, !tbaa !11\n  %13 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 3\n  store i32 %12, ptr %13, align 4, !tbaa !14\n  %14 = load i32, ptr @SNDRV_SEQ_EVENT_CONTROLLER, align 4, !tbaa !11\n  %15 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 2\n  store i32 %14, ptr %15, align 4, !tbaa !15\n  br label %16\n\n16:                                               ; preds = %1, %16\n  %17 = phi i32 [ 0, %1 ], [ %22, %16 ]\n  store i32 %17, ptr %2, align 4, !tbaa !16\n  %18 = load i32, ptr @MIDI_CTL_ALL_SOUNDS_OFF, align 4, !tbaa !11\n  %19 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  store i32 %18, ptr %19, align 4, !tbaa !17\n  %20 = load i32, ptr %0, align 8, !tbaa !18\n  %21 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %20, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %22 = add nuw nsw i32 %17, 1\n  %23 = load i32, ptr @MIDI_CTL_RESET_CONTROLLERS, align 4, !tbaa !11\n  store i32 %23, ptr %19, align 4, !tbaa !17\n  %24 = load i32, ptr %0, align 8, !tbaa !18\n  %25 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %24, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %26 = icmp eq i32 %22, 16\n  br i1 %26, label %27, label %16, !llvm.loop !19\n\n27:                                               ; preds = %16\n  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @snd_seq_kernel_client_dispatch(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"snd_seq_client\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !7, i64 16}\n!13 = !{!\"snd_seq_event\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16}\n!14 = !{!13, !7, i64 12}\n!15 = !{!13, !7, i64 8}\n!16 = !{!13, !7, i64 0}\n!17 = !{!13, !7, i64 4}\n!18 = !{!6, !7, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_seq_event = type { i32, i32, i32, i32, i32 }\n%struct.snd_seq_client = type { i32, i32, i64 }\n\n@SNDRV_SEQ_ADDRESS_SUBSCRIBERS = dso_local local_unnamed_addr global i32 0, align 4\n@SNDRV_SEQ_EVENT_CONTROLLER = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_ALL_SOUNDS_OFF = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_RESET_CONTROLLERS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dummy_unuse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dummy_unuse(ptr nocapture noundef readonly %0) #0 {\n  %2 = alloca %struct.snd_seq_event, align 4\n  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #3\n  %3 = call i32 @memset(ptr noundef nonnull %2, i32 noundef 0, i32 noundef 20) #3\n  %4 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 2\n  %5 = load i64, ptr %4, align 8, !tbaa !5\n  %6 = icmp eq i64 %5, 0\n  %7 = getelementptr inbounds %struct.snd_seq_client, ptr %0, i64 0, i32 1\n  %8 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  %9 = select i1 %6, ptr %7, ptr %8\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 4\n  store i32 %10, ptr %11, align 4, !tbaa !12\n  %12 = load i32, ptr @SNDRV_SEQ_ADDRESS_SUBSCRIBERS, align 4, !tbaa !11\n  %13 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 3\n  store i32 %12, ptr %13, align 4, !tbaa !14\n  %14 = load i32, ptr @SNDRV_SEQ_EVENT_CONTROLLER, align 4, !tbaa !11\n  %15 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 2\n  store i32 %14, ptr %15, align 4, !tbaa !15\n  br label %16\n\n16:                                               ; preds = %1, %16\n  %17 = phi i32 [ 0, %1 ], [ %22, %16 ]\n  store i32 %17, ptr %2, align 4, !tbaa !16\n  %18 = load i32, ptr @MIDI_CTL_ALL_SOUNDS_OFF, align 4, !tbaa !11\n  %19 = getelementptr inbounds %struct.snd_seq_event, ptr %2, i64 0, i32 1\n  store i32 %18, ptr %19, align 4, !tbaa !17\n  %20 = load i32, ptr %0, align 8, !tbaa !18\n  %21 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %20, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %22 = add nuw nsw i32 %17, 1\n  %23 = load i32, ptr @MIDI_CTL_RESET_CONTROLLERS, align 4, !tbaa !11\n  store i32 %23, ptr %19, align 4, !tbaa !17\n  %24 = load i32, ptr %0, align 8, !tbaa !18\n  %25 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %24, ptr noundef nonnull %2, ptr noundef null, ptr noundef null) #3\n  %26 = icmp eq i32 %22, 16\n  br i1 %26, label %27, label %16, !llvm.loop !19\n\n27:                                               ; preds = %16\n  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @snd_seq_kernel_client_dispatch(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"snd_seq_client\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !7, i64 16}\n!13 = !{!\"snd_seq_event\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16}\n!14 = !{!13, !7, i64 12}\n!15 = !{!13, !7, i64 8}\n!16 = !{!13, !7, i64 0}\n!17 = !{!13, !7, i64 4}\n!18 = !{!6, !7, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/sound/core/seq/extr_seq_dummy.c_dummy_unuse.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.snd_seq_event = type { %struct.TYPE_8__, i32, %struct.TYPE_6__, %struct.TYPE_5__ }\n%struct.TYPE_8__ = type { %struct.TYPE_7__ }\n%struct.TYPE_7__ = type { i32, i32 }\n%struct.TYPE_6__ = type { i32 }\n%struct.TYPE_5__ = type { i32 }\n%struct.snd_seq_dummy_port = type { i32, i32, i32, i64 }\n\n@SNDRV_SEQ_ADDRESS_SUBSCRIBERS = dso_local local_unnamed_addr global i32 0, align 4\n@SNDRV_SEQ_EVENT_CONTROLLER = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_ALL_SOUNDS_OFF = dso_local local_unnamed_addr global i32 0, align 4\n@MIDI_CTL_RESET_CONTROLLERS = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @dummy_unuse], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @dummy_unuse(ptr nocapture noundef readonly %0, ptr nocapture readnone %1) #0 {\n  %3 = alloca %struct.snd_seq_event, align 4\n  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #3\n  %4 = call i32 @memset(ptr noundef nonnull %3, i32 noundef 0, i32 noundef 20) #3\n  %5 = getelementptr inbounds %struct.snd_seq_dummy_port, ptr %0, i64 0, i32 3\n  %6 = load i64, ptr %5, align 8, !tbaa !5\n  %7 = icmp eq i64 %6, 0\n  %8 = getelementptr inbounds %struct.snd_seq_dummy_port, ptr %0, i64 0, i32 1\n  %9 = getelementptr inbounds %struct.snd_seq_dummy_port, ptr %0, i64 0, i32 2\n  %10 = select i1 %7, ptr %8, ptr %9\n  %11 = load i32, ptr %10, align 4, !tbaa !11\n  %12 = getelementptr inbounds %struct.snd_seq_event, ptr %3, i64 0, i32 3\n  store i32 %11, ptr %12, align 4\n  %13 = load i32, ptr @SNDRV_SEQ_ADDRESS_SUBSCRIBERS, align 4, !tbaa !11\n  %14 = getelementptr inbounds %struct.snd_seq_event, ptr %3, i64 0, i32 2\n  store i32 %13, ptr %14, align 4, !tbaa !12\n  %15 = load i32, ptr @SNDRV_SEQ_EVENT_CONTROLLER, align 4, !tbaa !11\n  %16 = getelementptr inbounds %struct.snd_seq_event, ptr %3, i64 0, i32 1\n  store i32 %15, ptr %16, align 4, !tbaa !18\n  %17 = getelementptr inbounds %struct.TYPE_7__, ptr %3, i64 0, i32 1\n  br label %18\n\n18:                                               ; preds = %2, %18\n  %19 = phi i32 [ 0, %2 ], [ %26, %18 ]\n  store i32 %19, ptr %3, align 4, !tbaa !19\n  %20 = load i32, ptr @MIDI_CTL_ALL_SOUNDS_OFF, align 4, !tbaa !11\n  store i32 %20, ptr %17, align 4, !tbaa !20\n  %21 = load i32, ptr %0, align 8, !tbaa !21\n  %22 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %21, ptr noundef nonnull %3, i32 noundef 0, i32 noundef 0) #3\n  %23 = load i32, ptr @MIDI_CTL_RESET_CONTROLLERS, align 4, !tbaa !11\n  store i32 %23, ptr %17, align 4, !tbaa !20\n  %24 = load i32, ptr %0, align 8, !tbaa !21\n  %25 = call i32 @snd_seq_kernel_client_dispatch(i32 noundef %24, ptr noundef nonnull %3, i32 noundef 0, i32 noundef 0) #3\n  %26 = add nuw nsw i32 %19, 1\n  %27 = icmp eq i32 %26, 16\n  br i1 %27, label %28, label %18, !llvm.loop !22\n\n28:                                               ; preds = %18\n  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @snd_seq_kernel_client_dispatch(i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"snd_seq_dummy_port\", !7, i64 0, !7, i64 4, !7, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!13, !7, i64 12}\n!13 = !{!\"snd_seq_event\", !14, i64 0, !7, i64 8, !16, i64 12, !17, i64 16}\n!14 = !{!\"TYPE_8__\", !15, i64 0}\n!15 = !{!\"TYPE_7__\", !7, i64 0, !7, i64 4}\n!16 = !{!\"TYPE_6__\", !7, i64 0}\n!17 = !{!\"TYPE_5__\", !7, i64 0}\n!18 = !{!13, !7, i64 8}\n!19 = !{!13, !7, i64 0}\n!20 = !{!13, !7, i64 4}\n!21 = !{!6, !7, i64 0}\n!22 = distinct !{!22, !23}\n!23 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pmap.c_pmap_force_invalidate_cache_range.ll\"\n\t.globl\tpmap_force_invalidate_cache_range # -- Begin function pmap_force_invalidate_cache_range\n\t.p2align\t4, 0x90\n\t.type\tpmap_force_invalidate_cache_range,@function\npmap_force_invalidate_cache_range:      # @pmap_force_invalidate_cache_range\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\txorl\t%eax, %eax\n\tsubl\tcpu_clflush_line_size(%rip), %eax\n\tcltq\n\tandq\t%rax, %rbx\n\tmovq\t%rbx, %rdi\n\tcallq\tpmap_kextract@PLT\n\tcmpq\tlapic_paddr(%rip), %rax\n\tjne\t.LBB0_1\n.LBB0_11:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_1:\n\t.cfi_def_cfa_offset 32\n\tmovl\tCPUID_STDEXT_CLFLUSHOPT(%rip), %eax\n\ttestl\t%eax, cpu_stdext_feature(%rip)\n\tje\t.LBB0_6\n# %bb.2:\n\txorl\t%eax, %eax\n\tcallq\tatomic_thread_fence_seq_cst@PLT\n\tcmpq\t%r14, %rbx\n\tjge\t.LBB0_5\n\t.p2align\t4, 0x90\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rbx, %rdi\n\tcallq\tclflushopt@PLT\n\tmovslq\tcpu_clflush_line_size(%rip), %rax\n\taddq\t%rax, %rbx\n\tcmpq\t%r14, %rbx\n\tjl\t.LBB0_3\n.LBB0_5:\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tatomic_thread_fence_seq_cst@PLT # TAILCALL\n.LBB0_6:\n\t.cfi_def_cfa_offset 32\n\tmovq\tcpu_vendor_id(%rip), %rax\n\tcmpq\tCPU_VENDOR_INTEL(%rip), %rax\n\tje\t.LBB0_9\n# %bb.7:\n\txorl\t%eax, %eax\n\tcallq\tmfence@PLT\n\tjmp\t.LBB0_9\n\t.p2align\t4, 0x90\n.LBB0_8:                                #   in Loop: Header=BB0_9 Depth=1\n\tmovq\t%rbx, %rdi\n\tcallq\tclflush@PLT\n\tmovslq\tcpu_clflush_line_size(%rip), %rax\n\taddq\t%rax, %rbx\n.LBB0_9:                                # =>This Inner Loop Header: Depth=1\n\tcmpq\t%r14, %rbx\n\tjl\t.LBB0_8\n# %bb.10:\n\tmovq\tcpu_vendor_id(%rip), %rax\n\tcmpq\tCPU_VENDOR_INTEL(%rip), %rax\n\tje\t.LBB0_11\n# %bb.12:\n\txorl\t%eax, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\tmfence@PLT                      # TAILCALL\n.Lfunc_end0:\n\t.size\tpmap_force_invalidate_cache_range, .Lfunc_end0-pmap_force_invalidate_cache_range\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tcpu_clflush_line_size,@object   # @cpu_clflush_line_size\n\t.bss\n\t.globl\tcpu_clflush_line_size\n\t.p2align\t2\ncpu_clflush_line_size:\n\t.long\t0                               # 0x0\n\t.size\tcpu_clflush_line_size, 4\n\n\t.type\tlapic_paddr,@object             # @lapic_paddr\n\t.globl\tlapic_paddr\n\t.p2align\t3\nlapic_paddr:\n\t.quad\t0                               # 0x0\n\t.size\tlapic_paddr, 8\n\n\t.type\tcpu_stdext_feature,@object      # @cpu_stdext_feature\n\t.globl\tcpu_stdext_feature\n\t.p2align\t2\ncpu_stdext_feature:\n\t.long\t0                               # 0x0\n\t.size\tcpu_stdext_feature, 4\n\n\t.type\tCPUID_STDEXT_CLFLUSHOPT,@object # @CPUID_STDEXT_CLFLUSHOPT\n\t.globl\tCPUID_STDEXT_CLFLUSHOPT\n\t.p2align\t2\nCPUID_STDEXT_CLFLUSHOPT:\n\t.long\t0                               # 0x0\n\t.size\tCPUID_STDEXT_CLFLUSHOPT, 4\n\n\t.type\tcpu_vendor_id,@object           # @cpu_vendor_id\n\t.globl\tcpu_vendor_id\n\t.p2align\t3\ncpu_vendor_id:\n\t.quad\t0                               # 0x0\n\t.size\tcpu_vendor_id, 8\n\n\t.type\tCPU_VENDOR_INTEL,@object        # @CPU_VENDOR_INTEL\n\t.globl\tCPU_VENDOR_INTEL\n\t.p2align\t3\nCPU_VENDOR_INTEL:\n\t.quad\t0                               # 0x0\n\t.size\tCPU_VENDOR_INTEL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@cpu_clflush_line_size = dso_local local_unnamed_addr global i32 0, align 4\n@lapic_paddr = dso_local local_unnamed_addr global i64 0, align 8\n@cpu_stdext_feature = dso_local local_unnamed_addr global i32 0, align 4\n@CPUID_STDEXT_CLFLUSHOPT = dso_local local_unnamed_addr global i32 0, align 4\n@cpu_vendor_id = dso_local local_unnamed_addr global i64 0, align 8\n@CPU_VENDOR_INTEL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @pmap_force_invalidate_cache_range(i64 noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %4 = sub i32 0, %3\n  %5 = sext i32 %4 to i64\n  %6 = and i64 %5, %0\n  %7 = tail call i64 @pmap_kextract(i64 noundef %6) #2\n  %8 = load i64, ptr @lapic_paddr, align 8, !tbaa !9\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %40, label %10\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr @cpu_stdext_feature, align 4, !tbaa !5\n  %12 = load i32, ptr @CPUID_STDEXT_CLFLUSHOPT, align 4, !tbaa !5\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %25, label %15\n\n15:                                               ; preds = %10\n  %16 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  %17 = icmp slt i64 %6, %1\n  br i1 %17, label %18, label %27\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %23, %18 ], [ %6, %15 ]\n  %20 = tail call i32 @clflushopt(i64 noundef %19) #2\n  %21 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %22 = sext i32 %21 to i64\n  %23 = add nsw i64 %19, %22\n  %24 = icmp slt i64 %23, %1\n  br i1 %24, label %18, label %27, !llvm.loop !11\n\n25:                                               ; preds = %10\n  %26 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  br label %31\n\n27:                                               ; preds = %18, %15\n  %28 = phi i64 [ %6, %15 ], [ %23, %18 ]\n  %29 = tail call i32 (...) @mfence() #2\n  %30 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  br label %31\n\n31:                                               ; preds = %27, %25\n  %32 = phi i64 [ %26, %25 ], [ %30, %27 ]\n  %33 = phi i64 [ %28, %25 ], [ %28, %27 ]\n  %34 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %35 = icmp eq i64 %32, %34\n  br i1 %35, label %40, label %36\n\n36:                                               ; preds = %31\n  %37 = tail call i32 (...) @clflush(i64 noundef %33) #2\n  %38 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %39 = sext i32 %38 to i64\n  br label %43\n\n40:                                               ; preds = %31, %2\n  ret void\n\n41:                                               ; preds = %43\n  %42 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  br label %47\n\n43:                                               ; preds = %36, %43\n  %44 = phi i64 [ %46, %43 ], [ %39, %36 ]\n  %45 = phi i64 [ %40, %43 ], [ %33, %36 ]\n  %46 = add nsw i64 %44, %45\n  br label %41\n\n47:                                               ; preds = %41, %47\n  %48 = phi i64 [ %50, %47 ], [ %42, %41 ]\n  %49 = phi i64 [ %51, %47 ], [ %46, %41 ]\n  %50 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %51 = icmp slt i64 %49, %1\n  br i1 %51, label %43, label %52, !llvm.loop !13\n\n52:                                               ; preds = %47\n  %53 = tail call i32 (...) @mfence() #2\n  ret void\n}\n\ndeclare i64 @pmap_kextract(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_thread_fence_seq_cst(...) local_unnamed_addr #1\n\ndeclare i32 @clflushopt(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @mfence(...) local_unnamed_addr #1\n\ndeclare i32 @clflush(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@cpu_clflush_line_size = dso_local local_unnamed_addr global i32 0, align 4\n@lapic_paddr = dso_local local_unnamed_addr global i64 0, align 8\n@cpu_stdext_feature = dso_local local_unnamed_addr global i32 0, align 4\n@CPUID_STDEXT_CLFLUSHOPT = dso_local local_unnamed_addr global i32 0, align 4\n@cpu_vendor_id = dso_local local_unnamed_addr global i64 0, align 8\n@CPU_VENDOR_INTEL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @pmap_force_invalidate_cache_range(i64 noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %4 = sub i32 0, %3\n  %5 = sext i32 %4 to i64\n  %6 = and i64 %5, %0\n  %7 = tail call i64 @pmap_kextract(i64 noundef %6) #2\n  %8 = load i64, ptr @lapic_paddr, align 8, !tbaa !9\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %40, label %10\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr @cpu_stdext_feature, align 4, !tbaa !5\n  %12 = load i32, ptr @CPUID_STDEXT_CLFLUSHOPT, align 4, !tbaa !5\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %26, label %15\n\n15:                                               ; preds = %10\n  %16 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  %17 = icmp slt i64 %6, %1\n  br i1 %17, label %18, label %24\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %20, %18 ], [ %6, %15 ]\n  %20 = tail call i32 @clflushopt(i64 noundef %19) #2\n  %21 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %22 = sext i32 %21 to i64\n  %23 = add nsw i64 %19, %22\n  br label %18, !llvm.loop !11\n\n24:                                               ; preds = %15\n  %25 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  br label %36\n\n26:                                               ; preds = %10\n  %27 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %28 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %29 = icmp eq i64 %27, %28\n  br i1 %29, label %36, label %30\n\n30:                                               ; preds = %26\n  %31 = tail call i32 (...) @mfence() #2\n  %32 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %33 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %34 = icmp eq i64 %32, %33\n  br i1 %34, label %40, label %35\n\n35:                                               ; preds = %30\n  br label %36\n\n36:                                               ; preds = %35, %26, %24\n  %37 = phi i64 [ %6, %35 ], [ %6, %26 ], [ %23, %24 ]\n  %38 = icmp slt i64 %37, %1\n  br i1 %38, label %39, label %40\n\n39:                                               ; preds = %36, %39\n  %40 = phi i64 [ %41, %39 ], [ %37, %36 ]\n  %41 = tail call i32 @clflush(i64 noundef %40) #2\n  %42 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %43 = sext i32 %42 to i64\n  %44 = add nsw i64 %40, %43\n  %45 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %46 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %47 = icmp eq i64 %45, %46\n  br i1 %47, label %48, label %49\n\n48:                                               ; preds = %39\n  br label %40\n\n49:                                               ; preds = %39\n  %50 = tail call i32 (...) @mfence() #2\n  br label %40\n\n51:                                               ; preds = %51\n  %52 = tail call i32 @clflush(i64 noundef %53) #2\n  %53 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %54 = sext i32 %53 to i64\n  %55 = add nsw i64 %53, %54\n  %56 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %57 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %58 = icmp eq i64 %56, %57\n  br i1 %58, label %40, label %51, !llvm.loop !13\n\n59:                                               ; preds = %59\n  %60 = tail call i32 @clflush(i64 noundef %61) #2\n  %61 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %62 = sext i32 %61 to i64\n  %63 = add nsw i64 %61, %62\n  %64 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %65 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %66 = icmp eq i64 %64, %65\n  br i1 %66, label %40, label %59, !llvm.loop !14\n\n67:                                               ; preds = %67\n  %68 = tail call i32 @clflush(i64 noundef %69) #2\n  %69 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %70 = sext i32 %69 to i64\n  %71 = add nsw i64 %69, %70\n  %72 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %73 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %74 = icmp eq i64 %72, %73\n  br i1 %74, label %40, label %67, !llvm.loop !15\n\n75:                                               ; preds = %75\n  %76 = tail call i32 @clflush(i64 noundef %77) #2\n  %77 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %78 = sext i32 %77 to i64\n  %79 = add nsw i64 %77, %78\n  %80 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %81 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %82 = icmp eq i64 %80, %81\n  br i1 %82, label %40, label %75, !llvm.loop !16\n\n83:                                               ; preds = %83\n  %84 = tail call i32 @clflush(i64 noundef %85) #2\n  %85 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %86 = sext i32 %85 to i64\n  %87 = add nsw i64 %85, %86\n  %88 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %89 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %90 = icmp eq i64 %88, %89\n  br i1 %90, label %40, label %83, !llvm.loop !17\n\n91:                                               ; preds = %91\n  %92 = tail call i32 @clflush(i64 noundef %93) #2\n  %93 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %94 = sext i32 %93 to i64\n  %95 = add nsw i64 %93, %94\n  %96 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %97 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %98 = icmp eq i64 %96, %97\n  br i1 %98, label %40, label %91, !llvm.loop !18\n\n99:                                               ; preds = %99\n  %100 = tail call i32 @clflush(i64 noundef %101) #2\n  %101 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %102 = sext i32 %101 to i64\n  %103 = add nsw i64 %101, %102\n  %104 = load i64, ptr @cpu_vendor_id, align 8, !", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@cpu_clflush_line_size = dso_local local_unnamed_addr global i32 0, align 4\n@lapic_paddr = dso_local local_unnamed_addr global i64 0, align 8\n@cpu_stdext_feature = dso_local local_unnamed_addr global i32 0, align 4\n@CPUID_STDEXT_CLFLUSHOPT = dso_local local_unnamed_addr global i32 0, align 4\n@cpu_vendor_id = dso_local local_unnamed_addr global i64 0, align 8\n@CPU_VENDOR_INTEL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @pmap_force_invalidate_cache_range(i64 noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %4 = sub nsw i32 0, %3\n  %5 = sext i32 %4 to i64\n  %6 = and i64 %5, %0\n  %7 = tail call i64 @pmap_kextract(i64 noundef %6) #2\n  %8 = load i64, ptr @lapic_paddr, align 8, !tbaa !9\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %41, label %10\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr @cpu_stdext_feature, align 4, !tbaa !5\n  %12 = load i32, ptr @CPUID_STDEXT_CLFLUSHOPT, align 4, !tbaa !5\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %25, label %15\n\n15:                                               ; preds = %10\n  %16 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  %17 = icmp slt i64 %6, %1\n  br i1 %17, label %18, label %23\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %20, %18 ], [ %6, %15 ]\n  %20 = tail call i32 @clflushopt(i64 noundef %19) #2\n  %21 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %22 = sext i32 %21 to i64\n  br label %18\n\n23:                                               ; preds = %15\n  %24 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  br label %37\n\n25:                                               ; preds = %10\n  %26 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %27 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %28 = icmp eq i64 %26, %27\n  br i1 %28, label %37, label %29\n\n29:                                               ; preds = %25\n  %30 = tail call i32 (...) @mfence() #2\n  %31 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %32 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %33 = icmp eq i64 %31, %32\n  br i1 %33, label %41, label %34\n\n34:                                               ; preds = %29, %34\n  %35 = phi i64 [ %36, %34 ], [ %6, %29 ]\n  %36 = tail call i32 @clflush(i64 noundef %35) #2\n  %37 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %38 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %39 = icmp eq i64 %37, %38\n  br i1 %39, label %41, label %40\n\n40:                                               ; preds = %34\n  %41 = tail call i32 (...) @mfence() #2\n  br label %41\n\n42:                                               ; preds = %40\n  ret void\n}\n\ndeclare i64 @pmap_kextract(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_thread_fence_seq_cst(...) local_unnamed_addr #1\n\ndeclare i32 @clflushopt(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @mfence(...) local_unnamed_addr #1\n\ndeclare i32 @clflush(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@cpu_clflush_line_size = dso_local local_unnamed_addr global i32 0, align 4\n@lapic_paddr = dso_local local_unnamed_addr global i64 0, align 8\n@cpu_stdext_feature = dso_local local_unnamed_addr global i32 0, align 4\n@CPUID_STDEXT_CLFLUSHOPT = dso_local local_unnamed_addr global i32 0, align 4\n@cpu_vendor_id = dso_local local_unnamed_addr global i64 0, align 8\n@CPU_VENDOR_INTEL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @pmap_force_invalidate_cache_range(i64 noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %4 = sub nsw i32 0, %3\n  %5 = sext i32 %4 to i64\n  %6 = and i64 %5, %0\n  %7 = tail call i64 @pmap_kextract(i64 noundef %6) #2\n  %8 = load i64, ptr @lapic_paddr, align 8, !tbaa !9\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %41, label %10\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr @cpu_stdext_feature, align 4, !tbaa !5\n  %12 = load i32, ptr @CPUID_STDEXT_CLFLUSHOPT, align 4, !tbaa !5\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %26, label %15\n\n15:                                               ; preds = %10\n  %16 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  %17 = icmp slt i64 %6, %1\n  br i1 %17, label %18, label %24\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %21, %18 ], [ %6, %15 ]\n  %20 = tail call i32 @clflushopt(i64 noundef %19) #2\n  %21 = add nsw i64 %19, %22\n  %22 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %23 = sext i32 %22 to i64\n  br label %18, !llvm.loop !11\n\n24:                                               ; preds = %15\n  %25 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  br label %37\n\n26:                                               ; preds = %10\n  %27 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %28 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %29 = icmp eq i64 %27, %28\n  br i1 %29, label %37, label %30\n\n30:                                               ; preds = %26\n  %31 = tail call i32 (...) @mfence() #2\n  %32 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %33 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %34 = icmp eq i64 %32, %33\n  br i1 %34, label %41, label %35\n\n35:                                               ; preds = %30, %35\n  %36 = tail call i32 @clflush(i64 noundef %36) #2\n  br label %35\n\n37:                                               ; preds = %24, %26\n  %38 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %39 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %40 = icmp eq i64 %38, %39\n  br i1 %40, label %41, label %43\n\n41:                                               ; preds = %37, %2, %30\n  ret void\n\n43:                                               ; preds = %37\n  %44 = tail call i32 (...) @mfence() #2\n  ret void\n}\n\ndeclare i64 @pmap_kextract(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_thread_fence_seq_cst(...) local_unnamed_addr #1\n\ndeclare i32 @clflushopt(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @mfence(...) local_unnamed_addr #1\n\ndeclare i32 @clflush(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/amd64/amd64/extr_pmap.c_pmap_force_invalidate_cache_range.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@cpu_clflush_line_size = dso_local local_unnamed_addr global i32 0, align 4\n@lapic_paddr = dso_local local_unnamed_addr global i64 0, align 8\n@cpu_stdext_feature = dso_local local_unnamed_addr global i32 0, align 4\n@CPUID_STDEXT_CLFLUSHOPT = dso_local local_unnamed_addr global i32 0, align 4\n@cpu_vendor_id = dso_local local_unnamed_addr global i64 0, align 8\n@CPU_VENDOR_INTEL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @pmap_force_invalidate_cache_range(i64 noundef %0, i64 noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %4 = sub i32 0, %3\n  %5 = sext i32 %4 to i64\n  %6 = and i64 %5, %0\n  %7 = tail call i64 @pmap_kextract(i64 noundef %6) #2\n  %8 = load i64, ptr @lapic_paddr, align 8, !tbaa !9\n  %9 = icmp eq i64 %7, %8\n  br i1 %9, label %48, label %10\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr @cpu_stdext_feature, align 4, !tbaa !5\n  %12 = load i32, ptr @CPUID_STDEXT_CLFLUSHOPT, align 4, !tbaa !5\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  br i1 %14, label %27, label %15\n\n15:                                               ; preds = %10\n  %16 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  %17 = icmp slt i64 %6, %1\n  br i1 %17, label %18, label %25\n\n18:                                               ; preds = %15, %18\n  %19 = phi i64 [ %23, %18 ], [ %6, %15 ]\n  %20 = tail call i32 @clflushopt(i64 noundef %19) #2\n  %21 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %22 = sext i32 %21 to i64\n  %23 = add nsw i64 %19, %22\n  %24 = icmp slt i64 %23, %1\n  br i1 %24, label %18, label %25, !llvm.loop !11\n\n25:                                               ; preds = %18, %15\n  %26 = tail call i32 (...) @atomic_thread_fence_seq_cst() #2\n  br label %48\n\n27:                                               ; preds = %10\n  %28 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %29 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %30 = icmp eq i64 %28, %29\n  br i1 %30, label %33, label %31\n\n31:                                               ; preds = %27\n  %32 = tail call i32 (...) @mfence() #2\n  br label %33\n\n33:                                               ; preds = %31, %27\n  %34 = icmp slt i64 %6, %1\n  br i1 %34, label %35, label %42\n\n35:                                               ; preds = %33, %35\n  %36 = phi i64 [ %40, %35 ], [ %6, %33 ]\n  %37 = tail call i32 @clflush(i64 noundef %36) #2\n  %38 = load i32, ptr @cpu_clflush_line_size, align 4, !tbaa !5\n  %39 = sext i32 %38 to i64\n  %40 = add nsw i64 %36, %39\n  %41 = icmp slt i64 %40, %1\n  br i1 %41, label %35, label %42, !llvm.loop !13\n\n42:                                               ; preds = %35, %33\n  %43 = load i64, ptr @cpu_vendor_id, align 8, !tbaa !9\n  %44 = load i64, ptr @CPU_VENDOR_INTEL, align 8, !tbaa !9\n  %45 = icmp eq i64 %43, %44\n  br i1 %45, label %48, label %46\n\n46:                                               ; preds = %42\n  %47 = tail call i32 (...) @mfence() #2\n  br label %48\n\n48:                                               ; preds = %42, %46, %2, %25\n  ret void\n}\n\ndeclare i64 @pmap_kextract(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @atomic_thread_fence_seq_cst(...) local_unnamed_addr #1\n\ndeclare i32 @clflushopt(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @mfence(...) local_unnamed_addr #1\n\ndeclare i32 @clflush(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_iscsi.c_iscsi_pdu_handle_task_response.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function iscsi_pdu_handle_task_response\n\t.type\tiscsi_pdu_handle_task_response,@function\niscsi_pdu_handle_task_response:         # @iscsi_pdu_handle_task_response\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdi, %r14\n\tcallq\tPDU_SESSION@PLT\n\tmovq\t%rax, %r12\n\tmovq\t(%r14), %rbx\n\tmovq\t(%rbx), %rsi\n\tmovq\t%rax, %rdi\n\tcallq\tiscsi_outstanding_find@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_8\n# %bb.1:\n\tmovq\t%rax, %r15\n\tcmpq\t$0, 8(%rax)\n\tje\t.LBB0_2\n.LBB0_8:\n\tmovq\t(%rbx), %rdx\n\tmovl\t$.L.str, %esi\n\tmovq\t%r12, %rdi\n\tcallq\tISCSI_SESSION_WARN@PLT\n\tmovq\t%r14, %rdi\n\tcallq\ticl_pdu_free@PLT\n\tmovq\t%r12, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\tiscsi_session_reconnect@PLT     # TAILCALL\n.LBB0_2:\n\t.cfi_def_cfa_offset 48\n\tmovq\t8(%rbx), %rdx\n\tcmpq\tBHSTMR_RESPONSE_FUNCTION_COMPLETE(%rip), %rdx\n\tjne\t.LBB0_3\n# %bb.4:\n\tmovq\t(%r15), %rsi\n\tmovq\t%r12, %rdi\n\tcallq\tiscsi_outstanding_find@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_7\n# %bb.5:\n\tcmpq\t$0, 8(%rax)\n\tje\t.LBB0_7\n# %bb.6:\n\tmovl\tCAM_REQ_ABORTED(%rip), %edx\n\tmovq\t%r12, %rdi\n\tmovq\t%rax, %rsi\n\tcallq\tiscsi_session_terminate_task@PLT\n\tjmp\t.LBB0_7\n.LBB0_3:\n\tmovl\t$.L.str.1, %esi\n\tmovq\t%r12, %rdi\n\tcallq\tISCSI_SESSION_WARN@PLT\n.LBB0_7:\n\tmovq\t%r12, %rdi\n\tmovq\t%r15, %rsi\n\tcallq\tiscsi_outstanding_remove@PLT\n\tmovq\t%r14, %rdi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\ticl_pdu_free@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tiscsi_pdu_handle_task_response, .Lfunc_end0-iscsi_pdu_handle_task_response\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"bad itt 0x%x\"\n\t.size\t.L.str, 13\n\n\t.type\tBHSTMR_RESPONSE_FUNCTION_COMPLETE,@object # @BHSTMR_RESPONSE_FUNCTION_COMPLETE\n\t.bss\n\t.globl\tBHSTMR_RESPONSE_FUNCTION_COMPLETE\n\t.p2align\t3\nBHSTMR_RESPONSE_FUNCTION_COMPLETE:\n\t.quad\t0                               # 0x0\n\t.size\tBHSTMR_RESPONSE_FUNCTION_COMPLETE, 8\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"task response 0x%x\"\n\t.size\t.L.str.1, 19\n\n\t.type\tCAM_REQ_ABORTED,@object         # @CAM_REQ_ABORTED\n\t.bss\n\t.globl\tCAM_REQ_ABORTED\n\t.p2align\t2\nCAM_REQ_ABORTED:\n\t.long\t0                               # 0x0\n\t.size\tCAM_REQ_ABORTED, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iscsi_task = type { i64, i64 }\n%struct.iscsi_conn = type { ptr, ptr }\n\n@.str = private unnamed_addr constant [13 x i8] c\"bad itt 0x%x\\00\", align 1\n@BHSTMR_RESPONSE_FUNCTION_COMPLETE = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [19 x i8] c\"task response 0x%x\\00\", align 1\n@CAM_REQ_ABORTED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iscsi_pdu_handle_task_response], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iscsi_pdu_handle_task_response(ptr noundef %0) #0 {\n  %2 = tail call ptr @PDU_SESSION(ptr noundef %0) #2\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr %3, align 8, !tbaa !10\n  %5 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %4) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %24, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.iscsi_task, ptr %5, i64 0, i32 1\n  %9 = load i64, ptr %8, align 8, !tbaa !13\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %24\n\n11:                                               ; preds = %7\n  %12 = getelementptr inbounds %struct.iscsi_conn, ptr %3, i64 0, i32 1\n  %13 = load ptr, ptr %12, align 8, !tbaa !15\n  %14 = load i64, ptr @BHSTMR_RESPONSE_FUNCTION_COMPLETE, align 8, !tbaa !16\n  %15 = icmp eq i64 %13, %14\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %11\n  %17 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %13) #2\n  %18 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %34\n\n19:                                               ; preds = %11\n  %20 = load i64, ptr %5, align 8, !tbaa !17\n  %21 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %20) #2\n  %22 = icmp eq ptr %21, null\n  br i1 %22, label %31, label %23\n\n23:                                               ; preds = %19\n  br label %27\n\n24:                                               ; preds = %7, %1\n  %25 = load i64, ptr %3, align 8, !tbaa !10\n  %26 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %25) #2\n  br label %34\n\n27:                                               ; preds = %23\n  %28 = load i32, ptr @CAM_REQ_ABORTED, align 4, !tbaa !18\n  %29 = tail call i32 @iscsi_session_terminate_task(ptr noundef %2, ptr noundef nonnull %21, i32 noundef %28) #2\n  %30 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %21) #2\n  br label %34\n\n31:                                               ; preds = %19\n  %32 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %5) #2\n  %33 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %34\n\n34:                                               ; preds = %27, %31, %24, %16\n  ret void\n}\n\ndeclare ptr @PDU_SESSION(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @iscsi_outstanding_find(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ISCSI_SESSION_WARN(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @icl_pdu_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_terminate_task(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_outstanding_remove(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"iscsi_pdu\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"iscsi_conn\", !7, i64 0, !7, i64 8}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !12, i64 8}\n!14 = !{!\"iscsi_task\", !12, i64 0, !12, i64 8}\n!15 = !{!11, !7, i64 8}\n!16 = !{!12, !12, i64 0}\n!17 = !{!14, !12, i64 0}\n!18 = !{!19, !19, i64 0}\n!19 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iscsi_task = type { i64, i64 }\n%struct.iscsi_conn = type { ptr, ptr }\n\n@.str = private unnamed_addr constant [13 x i8] c\"bad itt 0x%x\\00\", align 1\n@BHSTMR_RESPONSE_FUNCTION_COMPLETE = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [19 x i8] c\"task response 0x%x\\00\", align 1\n@CAM_REQ_ABORTED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iscsi_pdu_handle_task_response], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iscsi_pdu_handle_task_response(ptr noundef %0) #0 {\n  %2 = tail call ptr @PDU_SESSION(ptr noundef %0) #2\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr %3, align 8, !tbaa !10\n  %5 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %4) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %24, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.iscsi_task, ptr %5, i64 0, i32 1\n  %9 = load i64, ptr %8, align 8, !tbaa !13\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %24\n\n11:                                               ; preds = %7\n  %12 = getelementptr inbounds %struct.iscsi_conn, ptr %3, i64 0, i32 1\n  %13 = load ptr, ptr %12, align 8, !tbaa !15\n  %14 = load i64, ptr @BHSTMR_RESPONSE_FUNCTION_COMPLETE, align 8, !tbaa !16\n  %15 = icmp eq i64 %13, %14\n  br i1 %15, label %16, label %28\n\n16:                                               ; preds = %11\n  %17 = load i64, ptr %5, align 8, !tbaa !17\n  %18 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %17) #2\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %27, label %20\n\n20:                                               ; preds = %16\n  %21 = getelementptr inbounds %struct.iscsi_task, ptr %18, i64 0, i32 1\n  %22 = load i64, ptr %21, align 8, !tbaa !13\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %27, label %25\n\n24:                                               ; preds = %7, %1\n  %25 = load i64, ptr %3, align 8, !tbaa !10\n  %26 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %25) #2\n  br label %34\n\n27:                                               ; preds = %20, %16\n  br label %27\n\n28:                                               ; preds = %11\n  %29 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str.1, i64 noundef %13) #2\n  %30 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %5) #2\n  %31 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  %32 = tail call i32 @iscsi_session_reconnect(ptr noundef %2) #2\n  ret void\n\n33:                                               ; preds = %25\n  %34 = tail call i32 @iscsi_session_terminate_task(ptr noundef %2, ptr noundef nonnull %18, i32 noundef %3) #2\n  %35 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %18) #2\n  %36 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  ret void\n\n37:                                               ; preds = %27\n  %38 = tail call i32 @iscsi_session_reconnect(ptr noundef %2) #2\n  ret void\n}\n\ndeclare ptr @PDU_SESSION(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @iscsi_outstanding_find(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ISCSI_SESSION_WARN(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_outstanding_remove(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @icl_pdu_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_reconnect(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_terminate_task(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"iscsi_pdu\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"iscsi_conn\", !7, i64 0, !7, i64 8}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !12, i64 8}\n!14 = !{!\"iscsi_task\", !12, i64 0, !12, i64 8}\n!15 = !{!11, !7, i64 8}\n!16 = !{!12, !12, i64 0}\n!17 = !{!14, !12, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iscsi_task = type { i64, i64 }\n%struct.iscsi_conn = type { ptr, ptr }\n\n@.str = private unnamed_addr constant [13 x i8] c\"bad itt 0x%x\\00\", align 1\n@BHSTMR_RESPONSE_FUNCTION_COMPLETE = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [19 x i8] c\"task response 0x%x\\00\", align 1\n@CAM_REQ_ABORTED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iscsi_pdu_handle_task_response], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iscsi_pdu_handle_task_response(ptr noundef %0) #0 {\n  %2 = tail call ptr @PDU_SESSION(ptr noundef %0) #2\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr %3, align 8, !tbaa !10\n  %5 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %4) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %25, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.iscsi_task, ptr %5, i64 0, i32 1\n  %9 = load i64, ptr %8, align 8, !tbaa !13\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %25\n\n11:                                               ; preds = %7\n  %12 = getelementptr inbounds %struct.iscsi_conn, ptr %3, i64 0, i32 1\n  %13 = load ptr, ptr %12, align 8, !tbaa !15\n  %14 = load i64, ptr @BHSTMR_RESPONSE_FUNCTION_COMPLETE, align 8, !tbaa !16\n  %15 = icmp eq i64 %13, %14\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %11\n  %17 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %13) #2\n  %18 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %35\n\n19:                                               ; preds = %11\n  %20 = load i64, ptr %5, align 8, !tbaa !17\n  %21 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %20) #2\n  %22 = icmp eq ptr %21, null\n  br i1 %22, label %32, label %23\n\n23:                                               ; preds = %19\n  %24 = load i64, ptr %21, align 8, !tbaa !17\n  tail call void @iscsi_session_terminate_task(ptr noundef %2, ptr noundef nonnull %21, i32 noundef %24) #2\n  br label %32\n\n25:                                               ; preds = %7, %1\n  %26 = load i64, ptr %3, align 8, !tbaa !10\n  %27 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %26) #2\n  %28 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  %29 = tail call i32 @iscsi_session_reconnect(ptr noundef %2) #2\n  ret void\n\n30:                                               ; preds = %32\n  %31 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %5) #2\n  br label %35\n\n32:                                               ; preds = %19, %23\n  %33 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %5) #2\n  %34 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %35\n\n35:                                               ; preds = %32, %30, %16\n  ret void\n}\n\ndeclare ptr @PDU_SESSION(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @iscsi_outstanding_find(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ISCSI_SESSION_WARN(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @icl_pdu_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_terminate_task(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_reconnect(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_outstanding_remove(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"iscsi_pdu\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"iscsi_conn\", !7, i64 0, !7, i64 8}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !12, i64 8}\n!14 = !{!\"iscsi_task\", !12, i64 0, !12, i64 8}\n!15 = !{!11, !7, i64 8}\n!16 = !{!12, !12, i64 0}\n!17 = !{!14, !12, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iscsi_task = type { i64, i64 }\n%struct.iscsi_conn = type { ptr, ptr }\n\n@.str = private unnamed_addr constant [13 x i8] c\"bad itt 0x%x\\00\", align 1\n@BHSTMR_RESPONSE_FUNCTION_COMPLETE = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [19 x i8] c\"task response 0x%x\\00\", align 1\n@CAM_REQ_ABORTED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iscsi_pdu_handle_task_response], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iscsi_pdu_handle_task_response(ptr noundef %0) #0 {\n  %2 = tail call ptr @PDU_SESSION(ptr noundef %0) #2\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr %3, align 8, !tbaa !10\n  %5 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %4) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %26, label %7\n\n7:                                                ; preds = %1\n  %8 = getelementptr inbounds %struct.iscsi_task, ptr %5, i64 0, i32 1\n  %9 = load i64, ptr %8, align 8, !tbaa !13\n  %10 = icmp eq i64 %9, 0\n  br i1 %10, label %11, label %26\n\n11:                                               ; preds = %7\n  %12 = getelementptr inbounds %struct.iscsi_conn, ptr %3, i64 0, i32 1\n  %13 = load ptr, ptr %12, align 8, !tbaa !15\n  %14 = load i64, ptr @BHSTMR_RESPONSE_FUNCTION_COMPLETE, align 8, !tbaa !16\n  %15 = icmp eq i64 %13, %14\n  br i1 %15, label %19, label %16\n\n16:                                               ; preds = %11\n  %17 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %13) #2\n  %18 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %37\n\n19:                                               ; preds = %11\n  %20 = load i64, ptr %5, align 8, !tbaa !17\n  %21 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %20) #2\n  %22 = icmp eq ptr %21, null\n  br i1 %22, label %33, label %23\n\n23:                                               ; preds = %19\n  %24 = getelementptr inbounds %struct.iscsi_task, ptr %21, i64 0, i32 1\n  %25 = load i64, ptr %24, align 8, !tbaa !13\n  br i1 %25, label %33, label %30\n\n26:                                               ; preds = %7, %1\n  %27 = load i64, ptr %3, align 8, !tbaa !10\n  %28 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %27) #2\n  %29 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %37\n\n30:                                               ; preds = %23\n  %31 = load i32, ptr @CAM_REQ_ABORTED, align 4, !tbaa !18\n  %32 = tail call i32 @iscsi_session_terminate_task(ptr noundef %2, ptr noundef nonnull %21, i32 noundef %31) #2\n  br label %33\n\n33:                                               ; preds = %23, %30, %19\n  %34 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %5) #2\n  %35 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %37\n\n36:                                               ; preds = %33\n  ret void\n\n37:                                               ; preds = %26, %16, %33\n  ret void\n}\n\ndeclare ptr @PDU_SESSION(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @iscsi_outstanding_find(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ISCSI_SESSION_WARN(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @icl_pdu_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_terminate_task(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_outstanding_remove(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"iscsi_pdu\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"iscsi_conn\", !7, i64 0, !7, i64 8}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !12, i64 8}\n!14 = !{!\"iscsi_task\", !12, i64 0, !12, i64 8}\n!15 = !{!11, !7, i64 8}\n!16 = !{!12, !12, i64 0}\n!17 = !{!14, !12, i64 0}\n!18 = !{!19, !19, i64 0}\n!19 = !{!\"int\", !8, i64 0}\n</s><s><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/dev/iscsi/extr_iscsi.c_iscsi_pdu_handle_task_response.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.iscsi_outstanding = type { i64, ptr }\n%struct.iscsi_bhs_task_management_response = type { i64, i64 }\n\n@.str = private unnamed_addr constant [13 x i8] c\"bad itt 0x%x\\00\", align 1\n@BHSTMR_RESPONSE_FUNCTION_COMPLETE = dso_local local_unnamed_addr global i64 0, align 8\n@.str.1 = private unnamed_addr constant [19 x i8] c\"task response 0x%x\\00\", align 1\n@CAM_REQ_ABORTED = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @iscsi_pdu_handle_task_response], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @iscsi_pdu_handle_task_response(ptr noundef %0) #0 {\n  %2 = tail call ptr @PDU_SESSION(ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = inttoptr i64 %3 to ptr\n  %5 = load i64, ptr %4, align 8, !tbaa !10\n  %6 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %5) #2\n  %7 = icmp eq ptr %6, null\n  br i1 %7, label %12, label %8\n\n8:                                                ; preds = %1\n  %9 = getelementptr inbounds %struct.iscsi_outstanding, ptr %6, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %17, label %12\n\n12:                                               ; preds = %8, %1\n  %13 = load i64, ptr %4, align 8, !tbaa !10\n  %14 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str, i64 noundef %13) #2\n  %15 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  %16 = tail call i32 @iscsi_session_reconnect(ptr noundef %2) #2\n  br label %38\n\n17:                                               ; preds = %8\n  %18 = getelementptr inbounds %struct.iscsi_bhs_task_management_response, ptr %4, i64 0, i32 1\n  %19 = load i64, ptr %18, align 8, !tbaa !15\n  %20 = load i64, ptr @BHSTMR_RESPONSE_FUNCTION_COMPLETE, align 8, !tbaa !16\n  %21 = icmp eq i64 %19, %20\n  br i1 %21, label %24, label %22\n\n22:                                               ; preds = %17\n  %23 = tail call i32 @ISCSI_SESSION_WARN(ptr noundef %2, ptr noundef nonnull @.str.1, i64 noundef %19) #2\n  br label %35\n\n24:                                               ; preds = %17\n  %25 = load i64, ptr %6, align 8, !tbaa !17\n  %26 = tail call ptr @iscsi_outstanding_find(ptr noundef %2, i64 noundef %25) #2\n  %27 = icmp eq ptr %26, null\n  br i1 %27, label %35, label %28\n\n28:                                               ; preds = %24\n  %29 = getelementptr inbounds %struct.iscsi_outstanding, ptr %26, i64 0, i32 1\n  %30 = load ptr, ptr %29, align 8, !tbaa !12\n  %31 = icmp eq ptr %30, null\n  br i1 %31, label %35, label %32\n\n32:                                               ; preds = %28\n  %33 = load i32, ptr @CAM_REQ_ABORTED, align 4, !tbaa !18\n  %34 = tail call i32 @iscsi_session_terminate_task(ptr noundef %2, ptr noundef nonnull %26, i32 noundef %33) #2\n  br label %35\n\n35:                                               ; preds = %24, %28, %32, %22\n  %36 = tail call i32 @iscsi_outstanding_remove(ptr noundef %2, ptr noundef nonnull %6) #2\n  %37 = tail call i32 @icl_pdu_free(ptr noundef nonnull %0) #2\n  br label %38\n\n38:                                               ; preds = %35, %12\n  ret void\n}\n\ndeclare ptr @PDU_SESSION(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @iscsi_outstanding_find(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @ISCSI_SESSION_WARN(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @icl_pdu_free(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_reconnect(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_session_terminate_task(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @iscsi_outstanding_remove(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"icl_pdu\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"iscsi_bhs_task_management_response\", !7, i64 0, !7, i64 8}\n!12 = !{!13, !14, i64 8}\n!13 = !{!\"iscsi_outstanding\", !7, i64 0, !14, i64 8}\n!14 = !{!\"any pointer\", !8, i64 0}\n!15 = !{!11, !7, i64 8}\n!16 = !{!7, !7, i64 0}\n!17 = !{!13, !7, i64 0}\n!18 = !{!19, !19, i64 0}\n!19 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %37\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %2, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, %21\n  %29 = icmp slt i32 %28, %2\n  br i1 %29, label %37, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %2\n  %32 = icmp sgt i32 %25, %2\n  br i1 %32, label %37, label %35\n\n33:                                               ; preds = %19\n  %34 = icmp slt i32 %23, %1\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %33, %30\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  br label %39\n\n37:                                               ; preds = %33, %30, %27, %8, %3\n  %38 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %45\n\n39:                                               ; preds = %35\n  %40 = load i32, ptr %14, align 4, !tbaa !15\n  %41 = tail call i32 @SETARG_A(i32 noundef %40, i32 noundef %36) #2\n  %42 = load i32, ptr %14, align 4, !tbaa !15\n  %43 = sub nsw i32 %25, %36\n  %44 = tail call i32 @SETARG_B(i32 noundef %42, i32 noundef %43) #2\n  br label %47\n\n45:                                               ; preds = %37, %39\n  %46 = phi i64 [ %38, %37 ], [ %36, %39 ]\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %46, i32 noundef %1, i32 noundef %21, i32 noundef 0) #2\n  br label %49\n\n48:                                               ; preds = %45\n  ret void\n\n49:                                               ; preds = %45, %48\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %42\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %42\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %34, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %42, label %34\n\n34:                                               ; preds = %30, %27, %19\n  %35 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %36 = phi i32 [ %25, %19 ], [ %25, %27 ], [ %25, %30 ]\n  %37 = icmp slt i32 %35, %1\n  br i1 %37, label %42, label %38\n\n38:                                               ; preds = %34\n  %39 = icmp sgt i32 %35, %2\n  br i1 %39, label %42, label %40\n\n40:                                               ; preds = %38\n  %41 = add nsw i32 %35, %36\n  br label %42\n\n42:                                               ; preds = %34, %38, %40, %3, %8, %30\n  %43 = phi i32 [ %2, %30 ], [ %2, %8 ], [ %2, %3 ], [ %2, %40 ], [ %2, %38 ], [ %2, %34 ]\n  %44 = phi i32 [ %1, %34 ], [ %1, %38 ], [ %1, %40 ], [ %1, %3 ], [ %1, %8 ], [ %1, %30 ]\n  %45 = phi i32 [ %20, %34 ], [ %20, %38 ], [ %21, %40 ], [ %20, %3 ], [ %20, %8 ], [ %20, %30 ]\n  %46 = phi i32 [ %35, %34 ], [ %35, %38 ], [ %35, %40 ], [ %23, %3 ], [ %23, %8 ], [ %23, %30 ]\n  %47 = phi i32 [ %36, %34 ], [ %36, %38 ], [ %36, %40 ], [ %25, %3 ], [ %25, %8 ], [ %25, %30 ]\n  %48 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %49 = add nsw i32 %43, -1\n  %50 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %48, i32 noundef %44, i32 noundef %49, i32 noundef 0) #2\n  %51 = load i32, ptr %14, align 4, !tbaa !15\n  %52 = sub nsw i32 %46, %44\n  %53 = tail call i32 @SETARG_B(i32 noundef %51, i32 noundef %52) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %42\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %42\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %33, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %26\n  %31 = icmp sgt i32 %22, %2\n  %32 = icmp sgt i32 %24, %2\n  br i1 %31, label %33, label %35\n\n33:                                               ; preds = %30, %26, %18\n  %34 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %42\n\n35:                                               ; preds = %30\n  %36 = add nsw i32 %22, %20\n  %37 = add nsw i32 %36, -1\n  %38 = icmp slt i32 %22, %1\n  %39 = select i1 %38, i32 %22, i32 %1\n  %40 = icmp slt i32 %24, %2\n  %41 = select i1 %40, i32 %20, i32 %37\n  br label %45\n\n42:                                               ; preds = %3, %8, %33\n  %43 = phi i64 [ %34, %33 ], [ %15, %8 ], [ %16, %3 ]\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %43, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %50\n\n45:                                               ; preds = %35\n  %46 = load i32, ptr %13, align 4, !tbaa !15\n  %47 = tail call i32 @SETARG_A(i32 noundef %46, i32 noundef %39) #2\n  %48 = load i32, ptr %13, align 4, !tbaa !15\n  %49 = sub nsw i32 %48, %39\n  br label %50\n\n50:                                               ; preds = %45, %42\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %41\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %41\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %34, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  %33 = select i1 %31, i1 true, i1 %32\n  br i1 %33, label %41, label %34\n\n34:                                               ; preds = %30, %27, %19\n  %35 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %36 = phi i32 [ %20, %19 ], [ %21, %27 ], [ %21, %30 ]\n  %37 = phi i32 [ %20, %19 ], [ %20, %27 ], [ %20, %30 ]\n  %38 = phi i32 [ %25, %19 ], [ %25, %27 ], [ %25, %30 ]\n  %39 = load i32, ptr %14, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %37) #2\n  br label %46\n\n41:                                               ; preds = %30, %8, %3\n  %42 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %43 = add nsw i32 %2, -1\n  %44 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %42, i32 noundef %1, i32 noundef %43, i32 noundef 0) #2\n  ret void\n\n45:                                               ; preds = %46\n  ret void\n\n46:                                               ; preds = %34, %45\n  %47 = phi i32 [ %35, %34 ], [ %38, %45 ]\n  %48 = phi i32 [ %36, %34 ], [ %36, %45 ]\n  %49 = load i32, ptr %14, align 4, !tbaa !15\n  %50 = tail call i32 @SETARG_B(i32 noundef %49, i32 noundef %48) #2\n  %51 = load i32, ptr %14, align 4, !tbaa !15\n  %52 = sub nsw i32 %47, %37\n  %53 = tail call i32 @SETARG_B(i32 noundef %51, i32 noundef %52) #2\n  br label %45\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/skynet/3rd/lua/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_store_emem.c_emem_trunc.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function emem_trunc\n\t.type\temem_trunc,@function\nemem_trunc:                             # @emem_trunc\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %r15d\n\tmovq\t(%rdi), %rbp\n\ttestl\t%esi, %esi\n\tje\t.LBB0_1\n# %bb.2:\n\tmovslq\t%r15d, %r12\n\tmovq\t(%rbp), %r14\n\tmovq\t8(%rbp), %rax\n\tmovq\t16(%rbp), %rbx\n\tcmpq\t%r12, %rax\n\tjb\t.LBB0_5\n# %bb.3:\n\tshrq\t%rax\n\tcmpq\t%r12, %rax\n\tja\t.LBB0_5\n# %bb.4:\n\tmovq\t%r14, %r13\n\tjmp\t.LBB0_10\n.LBB0_1:\n\tmovq\t(%rbp), %rdi\n\tcallq\tfree@PLT\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, (%rbp)\n\tmovq\t$0, 16(%rbp)\n\txorl\t%r12d, %r12d\n\txorl\t%r13d, %r13d\n\txorl\t%ebx, %ebx\n\tjmp\t.LBB0_10\n.LBB0_5:\n\tmovq\t%r14, %rdi\n\tmovl\t%r15d, %esi\n\tcallq\trealloc@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.7:\n\tmovq\t%rax, %r13\n\tsubq\t%r14, %rbx\n\tmovq\t8(%rbp), %rax\n\tcmpq\t%r12, %rax\n\tjae\t.LBB0_9\n# %bb.8:\n\tleaq\t(%rax,%r13), %rdi\n\tmovl\t%r15d, %edx\n\tsubl\t%eax, %edx\n\txorl\t%esi, %esi\n\tcallq\tmemset@PLT\n.LBB0_9:\n\tmovq\t%r12, 8(%rbp)\n\tmovq\t%r13, (%rbp)\n\taddq\t%r13, %rbx\n\tmovq\t%rbx, 16(%rbp)\n.LBB0_10:\n\tmovl\t%r15d, 24(%rbp)\n\tsubq\t%r13, %rbx\n\txorl\t%eax, %eax\n\tcmpq\t%r12, %rbx\n\tjle\t.LBB0_12\n# %bb.11:\n\taddq\t%r12, %r13\n\tmovq\t%r13, 16(%rbp)\n\tjmp\t.LBB0_12\n.LBB0_6:\n\tmovl\tENOMEM(%rip), %eax\n.LBB0_12:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\temem_trunc, .Lfunc_end0-emem_trunc\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tENOMEM,@object                  # @ENOMEM\n\t.bss\n\t.globl\tENOMEM\n\t.p2align\t2\nENOMEM:\n\t.long\t0                               # 0x0\n\t.size\tENOMEM, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, i64, i64, i32 }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @emem_trunc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @emem_trunc(ptr nocapture noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i32 %1, 0\n  br i1 %4, label %5, label %10\n\n5:                                                ; preds = %2\n  %6 = load ptr, ptr %3, align 8, !tbaa !10\n  %7 = tail call i32 @free(ptr noundef %6)\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)\n  br label %37\n\n8:                                                ; preds = %25\n  %9 = icmp sgt i64 %26, %1\n  br i1 %9, label %37, label %10\n\n10:                                               ; preds = %2, %8\n  %11 = load ptr, ptr %3, align 8, !tbaa !10\n  %12 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  %13 = load i64, ptr %12, align 8, !tbaa !13\n  %14 = sext i32 %1 to i64\n  %15 = icmp ult i64 %13, %14\n  br i1 %15, label %25, label %16\n\n16:                                               ; preds = %10\n  %17 = lshr i64 %13, 1\n  %18 = icmp ult i64 %17, %14\n  br i1 %18, label %25, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call ptr @realloc(ptr noundef %11, i32 noundef %1) #3\n  %21 = icmp eq ptr %20, null\n  br i1 %21, label %22, label %24\n\n22:                                               ; preds = %19\n  %23 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  br label %37\n\n24:                                               ; preds = %19\n  br label %25\n\n25:                                               ; preds = %10, %16, %24\n  %26 = phi i64 [ %13, %24 ], [ %17, %16 ], [ %14, %10 ]\n  %27 = phi ptr [ %11, %24 ], [ %20, %16 ], [ %11, %10 ]\n  %28 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  store i64 %26, ptr %28, align 8, !tbaa !13\n  store ptr %27, ptr %3, align 8, !tbaa !10\n  %29 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  %30 = sub nsw i64 %26, %13\n  store i64 %30, ptr %29, align 8, !tbaa !15\n  %31 = sub nsw i64 %14, %26\n  %32 = icmp sgt i64 %31, 0\n  br i1 %32, label %33, label %37\n\n33:                                               ; preds = %25\n  %34 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  %35 = load i64, ptr %34, align 8, !tbaa !13\n  %36 = add nsw i64 %35, %31\n  store i64 %36, ptr %29, align 8, !tbaa !15\n  br label %37\n\n37:                                               ; preds = %25, %33, %8, %5, %22\n  %38 = phi i32 [ %23, %22 ], [ 0, %5 ], [ 0, %8 ], [ 0, %33 ], [ 0, %25 ]\n  %39 = phi ptr [ %27, %33 ], [ %11, %5 ], [ %11, %8 ], [ %27, %25 ], [ %27, %22 ]\n  %40 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 3\n  store i32 %1, ptr %40, align 8, !tbaa !16\n  %41 = ptrtoint ptr %39 to i64\n  %42 = ptrtoint ptr %14 to i64\n  %43 = sub i64 %41, %42\n  %44 = icmp sgt i64 %43, %14\n  br i1 %44, label %45, label %47\n\n45:                                               ; preds = %37\n  %46 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  store i64 %14, ptr %46, align 8, !tbaa !15\n  br label %47\n\n47:                                               ; preds = %45, %37\n  ret i32 %38\n}\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #1\n\ndeclare ptr @realloc(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { argmemonly nocallback nofree nounwind willreturn writeonly }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_3__\", !7, i64 0, !12, i64 8, !12, i64 16, !14, i64 24}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!11, !12, i64 8}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!11, !12, i64 16}\n!16 = !{!11, !14, i64 24}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, i64, i64, i32 }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @emem_trunc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @emem_trunc(ptr nocapture noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i32 %1, 0\n  br i1 %4, label %5, label %10\n\n5:                                                ; preds = %2\n  %6 = load ptr, ptr %3, align 8, !tbaa !10\n  %7 = tail call i32 @free(ptr noundef %6)\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)\n  br label %36\n\n8:                                                ; preds = %27\n  %9 = icmp sgt i64 %28, %1\n  br i1 %9, label %36, label %10\n\n10:                                               ; preds = %2, %8\n  %11 = load ptr, ptr %3, align 8, !tbaa !10\n  %12 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  %13 = load i64, ptr %12, align 8, !tbaa !13\n  %14 = sext i32 %1 to i64\n  %15 = icmp ult i64 %13, %14\n  br i1 %15, label %27, label %16\n\n16:                                               ; preds = %10\n  %17 = lshr i64 %13, 1\n  %18 = icmp ult i64 %17, %14\n  br i1 %18, label %27, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call ptr @realloc(ptr noundef %11, i32 noundef %1) #3\n  %21 = icmp eq ptr %20, null\n  br i1 %21, label %22, label %24\n\n22:                                               ; preds = %19\n  %23 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  br label %36\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %12, align 8, !tbaa !13\n  %26 = icmp ult i64 %25, %14\n  br i1 %26, label %27, label %30\n\n27:                                               ; preds = %10, %16, %24\n  %28 = phi i64 [ %13, %16 ], [ %25, %24 ], [ %14, %10 ]\n  %29 = phi ptr [ %11, %16 ], [ %20, %24 ], [ %11, %10 ]\n  br label %36\n\n30:                                               ; preds = %24\n  %31 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  %32 = load i64, ptr %31, align 8, !tbaa !15\n  %33 = sub nsw i64 %32, %25\n  %34 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  %35 = load i64, ptr %34, align 8, !tbaa !13\n  br label %36\n\n36:                                               ; preds = %27, %30, %8, %5, %22\n  %37 = phi i32 [ %23, %22 ], [ 0, %5 ], [ %1, %8 ], [ %1, %30 ], [ %1, %27 ]\n  %38 = phi ptr [ %29, %30 ], [ %11, %8 ], [ %11, %5 ], [ %29, %27 ], [ %29, %22 ]\n  %39 = phi i64 [ %33, %30 ], [ 0, %8 ], [ 0, %5 ], [ %33, %27 ], [ 0, %22 ]\n  %40 = phi i64 [ %32, %30 ], [ 0, %8 ], [ 0, %5 ], [ %32, %27 ], [ 0, %22 ]\n  %41 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 3\n  store i32 %37, ptr %41, align 8, !tbaa !16\n  %42 = icmp sgt i64 %39, %14\n  br i1 %42, label %43, label %46\n\n43:                                               ; preds = %36\n  %44 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  %45 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  store i64 %14, ptr %45, align 8, !tbaa !13\n  store ptr %38, ptr %3, align 8, !tbaa !10\n  store i64 %40, ptr %44, align 8, !tbaa !15\n  br label %46\n\n46:                                               ; preds = %43, %36\n  %47 = phi i64 [ %40, %43 ], [ %39, %36 ]\n  %48 = phi i32 [ %14, %43 ], [ 0, %36 ]\n  %49 = icmp sgt i64 %47, %14\n  br i1 %49, label %50, label %52\n\n50:                                               ; preds = %46\n  %51 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  store i64 %14, ptr %51, align 8, !tbaa !15\n  br label %52\n\n52:                                               ; preds = %50, %46\n  ret i32 0\n}\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #1\n\ndeclare ptr @realloc(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { argmemonly nocallback nofree nounwind willreturn writeonly }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_3__\", !7, i64 0, !12, i64 8, !12, i64 16, !14, i64 24}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!11, !12, i64 8}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!11, !12, i64 16}\n!16 = !{!11, !14, i64 24}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, i64, i64, i32 }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @emem_trunc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @emem_trunc(ptr nocapture noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i32 %1, 0\n  br i1 %4, label %5, label %10\n\n5:                                                ; preds = %2\n  %6 = load ptr, ptr %3, align 8, !tbaa !10\n  %7 = tail call i32 @free(ptr noundef %6)\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)\n  br label %34\n\n8:                                                ; preds = %26\n  %9 = icmp sgt i64 %27, %1\n  br i1 %9, label %34, label %10\n\n10:                                               ; preds = %2, %8\n  %11 = load ptr, ptr %3, align 8, !tbaa !10\n  %12 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  %13 = load i64, ptr %12, align 8, !tbaa !13\n  %14 = sext i32 %1 to i64\n  %15 = icmp ult i64 %13, %14\n  br i1 %15, label %26, label %16\n\n16:                                               ; preds = %10\n  %17 = lshr i64 %13, 1\n  %18 = icmp ult i64 %17, %14\n  br i1 %18, label %26, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call ptr @realloc(ptr noundef %11, i32 noundef %1) #3\n  %21 = icmp eq ptr %20, null\n  br i1 %21, label %22, label %24\n\n22:                                               ; preds = %19\n  %23 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  br label %34\n\n24:                                               ; preds = %19\n  %25 = sub nsw i64 %13, %14\n  br label %26\n\n26:                                               ; preds = %10, %16, %24\n  %27 = phi i64 [ %25, %24 ], [ %13, %16 ], [ %13, %10 ]\n  %28 = phi ptr [ %20, %24 ], [ %11, %16 ], [ %11, %10 ]\n  store i64 %14, ptr %12, align 8, !tbaa !13\n  store ptr %28, ptr %3, align 8, !tbaa !10\n  %29 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  %30 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2, i32 1\n  store i64 %27, ptr %30, align 8, !tbaa !15\n  %31 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 3\n  store i32 %1, ptr %31, align 8, !tbaa !16\n  %32 = sub nsw i64 %27, %28\n  %33 = icmp sgt i64 %32, %14\n  br i1 %33, label %34, label %37\n\n34:                                               ; preds = %8, %26, %5, %22\n  %35 = phi i32 [ %23, %22 ], [ 0, %5 ], [ 0, %8 ], [ 0, %26 ]\n  ret i32 %35\n\n36:                                               ; preds = %31\n  store i64 %32, ptr %30, align 8, !tbaa !15\n  br label %37\n\n37:                                               ; preds = %36, %26\n  ret i32 0\n}\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #1\n\ndeclare ptr @realloc(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { argmemonly nocallback nofree nounwind willreturn writeonly }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_3__\", !7, i64 0, !12, i64 8, !12, i64 16, !14, i64 24}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!11, !12, i64 8}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!11, !12, i64 16}\n!16 = !{!11, !14, i64 24}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { ptr, i64, i64, i32 }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @emem_trunc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @emem_trunc(ptr nocapture noundef %0, i32 noundef %1) #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i32 %1, 0\n  br i1 %4, label %5, label %10\n\n5:                                                ; preds = %2\n  %6 = load ptr, ptr %3, align 8, !tbaa !10\n  %7 = tail call i32 @free(ptr noundef %6)\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false)\n  br label %36\n\n8:                                                ; preds = %25\n  %9 = icmp sgt i64 %26, %1\n  br i1 %9, label %36, label %10\n\n10:                                               ; preds = %2, %8\n  %11 = load ptr, ptr %3, align 8, !tbaa !10\n  %12 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  %13 = load i64, ptr %12, align 8, !tbaa !13\n  %14 = sext i32 %1 to i64\n  %15 = icmp ult i64 %13, %14\n  br i1 %15, label %25, label %16\n\n16:                                               ; preds = %10\n  %17 = lshr i64 %13, 1\n  %18 = icmp ult i64 %17, %14\n  br i1 %18, label %25, label %19\n\n19:                                               ; preds = %16\n  %20 = tail call ptr @realloc(ptr noundef %11, i32 noundef %1) #3\n  %21 = icmp eq ptr %20, null\n  br i1 %21, label %22, label %24\n\n22:                                               ; preds = %19\n  %23 = load i32, ptr @ENOMEM, align 4, !tbaa !14\n  br label %36\n\n24:                                               ; preds = %19\n  br label %25\n\n25:                                               ; preds = %10, %16, %24\n  %26 = phi i64 [ %13, %24 ], [ %17, %16 ], [ %14, %10 ]\n  %27 = phi ptr [ %11, %24 ], [ %20, %16 ], [ %11, %10 ]\n  %28 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  store i64 %26, ptr %28, align 8, !tbaa !13\n  store ptr %27, ptr %3, align 8, !tbaa !10\n  %29 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  %30 = sub nsw i64 %14, %26\n  store i64 %30, ptr %29, align 8, !tbaa !15\n  %31 = sub nsw i64 %14, %26\n  %32 = icmp sgt i64 %31, %1\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %25\n  %34 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 1\n  %35 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  store ptr %27, ptr %35, align 8, !tbaa !15\n  store i64 %14, ptr %34, align 8, !tbaa !13\n  br label %36\n\n36:                                               ; preds = %25, %33, %8, %5, %22\n  %37 = phi i32 [ %23, %22 ], [ 0, %5 ], [ 0, %8 ], [ 0, %33 ], [ 0, %25 ]\n  %38 = phi ptr [ %27, %33 ], [ %11, %5 ], [ %11, %8 ], [ %27, %25 ], [ %27, %22 ]\n  %39 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 3\n  store i32 %1, ptr %39, align 8, !tbaa !16\n  %40 = ptrtoint ptr %38 to i64\n  %41 = ptrtoint ptr %11 to i64\n  %42 = sub i64 %40, %41\n  %43 = icmp sgt i64 %42, %1\n  br i1 %43, label %44, label %46\n\n44:                                               ; preds = %36\n  %45 = getelementptr inbounds %struct.TYPE_3__, ptr %3, i64 0, i32 2\n  store i64 %14, ptr %45, align 8, !tbaa !15\n  br label %46\n\n46:                                               ; preds = %44, %36\n  ret i32 %37\n}\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #1\n\ndeclare ptr @realloc(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\nattributes #4 = { argmemonly nocallback nofree nounwind willreturn writeonly }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_3__\", !7, i64 0, !12, i64 8, !12, i64 16, !14, i64 24}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!11, !12, i64 8}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!11, !12, i64 16}\n!16 = !{!11, !14, i64 24}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/crypto/heimdal/lib/krb5/extr_store_emem.c_emem_trunc.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { ptr, i64, ptr, i32 }\n\n@ENOMEM = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @emem_trunc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @emem_trunc(ptr nocapture noundef readonly %0, i32 noundef %1) #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = inttoptr i64 %3 to ptr\n  %5 = icmp eq i32 %1, 0\n  br i1 %5, label %6, label %9\n\n6:                                                ; preds = %2\n  %7 = load ptr, ptr %4, align 8, !tbaa !10\n  %8 = tail call i32 @free(ptr noundef %7)\n  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, i8 0, i64 24, i1 false)\n  br label %38\n\n9:                                                ; preds = %2\n  %10 = sext i32 %1 to i64\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %4, i64 0, i32 1\n  %12 = load i64, ptr %11, align 8, !tbaa !14\n  %13 = icmp ult i64 %12, %10\n  %14 = lshr i64 %12, 1\n  %15 = icmp ugt i64 %14, %10\n  %16 = or i1 %13, %15\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %4, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !15\n  %19 = load ptr, ptr %4, align 8, !tbaa !10\n  br i1 %16, label %20, label %38\n\n20:                                               ; preds = %9\n  %21 = ptrtoint ptr %18 to i64\n  %22 = ptrtoint ptr %19 to i64\n  %23 = sub i64 %21, %22\n  %24 = tail call ptr @realloc(ptr noundef %19, i32 noundef %1) #4\n  %25 = icmp eq ptr %24, null\n  br i1 %25, label %26, label %28\n\n26:                                               ; preds = %20\n  %27 = load i32, ptr @ENOMEM, align 4, !tbaa !16\n  br label %50\n\n28:                                               ; preds = %20\n  %29 = load i64, ptr %11, align 8, !tbaa !14\n  %30 = icmp ult i64 %29, %10\n  br i1 %30, label %31, label %36\n\n31:                                               ; preds = %28\n  %32 = getelementptr inbounds i8, ptr %24, i64 %29\n  %33 = trunc i64 %29 to i32\n  %34 = sub i32 %1, %33\n  %35 = tail call i32 @memset(ptr noundef nonnull %32, i32 noundef 0, i32 noundef %34) #4\n  br label %36\n\n36:                                               ; preds = %28, %31\n  store i64 %10, ptr %11, align 8, !tbaa !14\n  store ptr %24, ptr %4, align 8, !tbaa !10\n  %37 = getelementptr inbounds i8, ptr %24, i64 %23\n  store ptr %37, ptr %17, align 8, !tbaa !15\n  br label %38\n\n38:                                               ; preds = %9, %36, %6\n  %39 = phi i64 [ %10, %36 ], [ 0, %6 ], [ %10, %9 ]\n  %40 = phi ptr [ %24, %36 ], [ null, %6 ], [ %19, %9 ]\n  %41 = phi ptr [ %37, %36 ], [ null, %6 ], [ %18, %9 ]\n  %42 = getelementptr inbounds %struct.TYPE_5__, ptr %4, i64 0, i32 3\n  store i32 %1, ptr %42, align 8, !tbaa !17\n  %43 = ptrtoint ptr %41 to i64\n  %44 = ptrtoint ptr %40 to i64\n  %45 = sub i64 %43, %44\n  %46 = icmp sgt i64 %45, %39\n  br i1 %46, label %47, label %50\n\n47:                                               ; preds = %38\n  %48 = getelementptr inbounds %struct.TYPE_5__, ptr %4, i64 0, i32 2\n  %49 = getelementptr inbounds i8, ptr %40, i64 %39\n  store ptr %49, ptr %48, align 8, !tbaa !15\n  br label %50\n\n50:                                               ; preds = %26, %38, %47\n  %51 = phi i32 [ 0, %47 ], [ 0, %38 ], [ %27, %26 ]\n  ret i32 %51\n}\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #1\n\ndeclare ptr @realloc(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { argmemonly nocallback nofree nounwind willreturn writeonly }\nattributes #4 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_5__\", !12, i64 0, !7, i64 8, !12, i64 16, !13, i64 24}\n!12 = !{!\"any pointer\", !8, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!11, !7, i64 8}\n!15 = !{!11, !12, i64 16}\n!16 = !{!13, !13, i64 0}\n!17 = !{!11, !13, i64 24}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_wrstabs.c_stab_function_parameter.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function stab_function_parameter\n\t.type\tstab_function_parameter,@function\nstab_function_parameter:                # @stab_function_parameter\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, 4(%rsp)                   # 4-byte Spill\n\tmovl\t%edx, %ebp\n\tmovq\t%rsi, %r13\n\tmovq\t%rdi, %r15\n\tcallq\tstab_pop_type@PLT\n\taddl\t$-128, %ebp\n\tcmpl\t$4, %ebp\n\tjae\t.LBB0_5\n# %bb.1:\n\tmovq\t%rax, %rbx\n\tmovslq\t%ebp, %rax\n\tmovq\t.Lswitch.table.stab_function_parameter(,%rax,8), %rax\n\tshll\t$3, %ebp\n\tmovl\t$1986089072, %r14d              # imm = 0x76615070\n\tmovl\t%ebp, %ecx\n\tshrl\t%cl, %r14d\n\tmovl\t(%rax), %r12d\n\tmovq\t%r13, %rdi\n\tcallq\tstrlen@PLT\n\tmovq\t%rax, %rbp\n\tmovq\t%rbx, %rdi\n\tcallq\tstrlen@PLT\n\tleaq\t(%rax,%rbp), %rdi\n\taddq\t$3, %rdi\n\tcallq\txmalloc@PLT\n\tmovq\t%rax, %rbp\n\tmovsbl\t%r14b, %ecx\n\tmovl\t$.L.str, %esi\n\tmovq\t%rax, %rdi\n\tmovq\t%r13, %rdx\n\tmovq\t%rbx, %r8\n\tcallq\tsprintf@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tfree@PLT\n\tmovq\t%r15, %rdi\n\tmovl\t%r12d, %esi\n\txorl\t%edx, %edx\n\tmovl\t4(%rsp), %ecx                   # 4-byte Reload\n\tmovq\t%rbp, %r8\n\tcallq\tstab_write_symbol@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_2\n# %bb.3:\n\tmovq\t%rbp, %rdi\n\tcallq\tfree@PLT\n\tmovl\t$TRUE, %eax\n\tjmp\t.LBB0_4\n.LBB0_2:\n\tmovl\t$FALSE, %eax\n.LBB0_4:\n\tmovl\t(%rax), %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_5:\n\t.cfi_def_cfa_offset 64\n\txorl\t%eax, %eax\n\tcallq\tabort@PLT\n.Lfunc_end0:\n\t.size\tstab_function_parameter, .Lfunc_end0-stab_function_parameter\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tN_PSYM,@object                  # @N_PSYM\n\t.bss\n\t.globl\tN_PSYM\n\t.p2align\t2\nN_PSYM:\n\t.long\t0                               # 0x0\n\t.size\tN_PSYM, 4\n\n\t.type\tN_RSYM,@object                  # @N_RSYM\n\t.globl\tN_RSYM\n\t.p2align\t2\nN_RSYM:\n\t.long\t0                               # 0x0\n\t.size\tN_RSYM, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%s:%c%s\"\n\t.size\t.L.str, 8\n\n\t.type\tFALSE,@object                   # @FALSE\n\t.bss\n\t.globl\tFALSE\n\t.p2align\t2\nFALSE:\n\t.long\t0                               # 0x0\n\t.size\tFALSE, 4\n\n\t.type\tTRUE,@object                    # @TRUE\n\t.globl\tTRUE\n\t.p2align\t2\nTRUE:\n\t.long\t0                               # 0x0\n\t.size\tTRUE, 4\n\n\t.type\t.Lswitch.table.stab_function_parameter,@object # @switch.table.stab_function_parameter\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.Lswitch.table.stab_function_parameter:\n\t.quad\tN_PSYM\n\t.quad\tN_RSYM\n\t.quad\tN_RSYM\n\t.quad\tN_PSYM\n\t.size\t.Lswitch.table.stab_function_parameter, 32\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@N_PSYM = dso_local local_unnamed_addr global i32 0, align 4\n@N_RSYM = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"%s:%c%s\\00\", align 1\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @stab_function_parameter], section \"llvm.metadata\"\n@switch.table.stab_function_parameter = private unnamed_addr constant [4 x ptr] [ptr @N_PSYM, ptr @N_RSYM, ptr @N_RSYM, ptr @N_PSYM], align 8\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @stab_function_parameter(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = tail call ptr @stab_pop_type(ptr noundef %0) #4\n  %6 = add i32 %2, -128\n  %7 = icmp ult i32 %6, 4\n  br i1 %7, label %11, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 (...) @abort() #5\n  unreachable\n\n10:                                               ; preds = %4\n  br label %27\n\n11:                                               ; preds = %4\n  %12 = sext i32 %6 to i64\n  %13 = getelementptr inbounds [4 x ptr], ptr @switch.table.stab_function_parameter, i64 0, i64 %12\n  %14 = load ptr, ptr %13, align 8, !tbaa !5\n  %15 = shl i32 %6, 3\n  %16 = lshr i32 1986089072, %15\n  %17 = load i32, ptr %14, align 4, !tbaa !9\n  %18 = tail call i64 @strlen(ptr noundef %1) #4\n  %19 = tail call i64 @strlen(ptr noundef %5) #4\n  %20 = add i64 %19, 3\n  %21 = add i64 %20, %18\n  %22 = tail call ptr @xmalloc(i64 noundef %21) #4\n  %23 = trunc i32 %16 to i8\n  %24 = tail call i32 @sprintf(ptr noundef %22, ptr noundef nonnull @.str, ptr noundef %1, i8 noundef signext %23, ptr noundef %5)\n  %25 = tail call i32 @free(ptr noundef %5)\n  %26 = tail call i32 @stab_write_symbol(ptr noundef %0, i32 noundef %17, i32 noundef 0, i32 noundef %3, ptr noundef %22) #4\n  br label %27\n\n27:                                               ; preds = %11, %10\n  %28 = phi ptr [ @FALSE, %10 ], [ @TRUE, %11 ]\n  %29 = load i32, ptr %28, align 4, !tbaa !9\n  ret i32 %29\n}\n\ndeclare ptr @stab_pop_type(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @abort(...) local_unnamed_addr #2\n\ndeclare ptr @xmalloc(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ptr noundef, i8 noundef signext, ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #6\n\ndeclare i32 @stab_write_symbol(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\nattributes #5 = { noreturn nounwind }\nattributes #6 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@N_PSYM = dso_local local_unnamed_addr global i32 0, align 4\n@N_RSYM = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"%s:%c%s\\00\", align 1\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @stab_function_parameter], section \"llvm.metadata\"\n@switch.table.stab_function_parameter = private unnamed_addr constant [4 x ptr] [ptr @N_PSYM, ptr @N_RSYM, ptr @N_RSYM, ptr @N_PSYM], align 8\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @stab_function_parameter(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = tail call ptr @stab_pop_type(ptr noundef %0) #4\n  %6 = add i32 %2, -128\n  %7 = icmp ult i32 %6, 4\n  br i1 %7, label %11, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 (...) @abort() #5\n  unreachable\n\n10:                                               ; preds = %4\n  br label %27\n\n11:                                               ; preds = %4\n  %12 = sext i32 %6 to i64\n  %13 = getelementptr inbounds [4 x ptr], ptr @switch.table.stab_function_parameter, i64 0, i64 %12\n  %14 = load ptr, ptr %13, align 8, !tbaa !5\n  %15 = shl nuw nsw i32 %6, 3\n  %16 = lshr i32 1986089072, %15\n  %17 = load i32, ptr %14, align 4, !tbaa !9\n  %18 = tail call i64 @strlen(ptr noundef %1) #4\n  %19 = tail call i64 @strlen(ptr noundef %5) #4\n  %20 = add i64 %19, 3\n  %21 = add i64 %20, %18\n  %22 = tail call ptr @xmalloc(i64 noundef %21) #4\n  %23 = trunc i32 %16 to i8\n  %24 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull @.str, ptr noundef %1, i8 noundef signext %23, ptr noundef %5)\n  %25 = tail call i32 @free(ptr noundef %5)\n  %26 = tail call i32 @stab_write_symbol(ptr noundef %0, i32 noundef %17, i32 noundef 0, i32 noundef %3, ptr noundef %22) #4\n  br label %27\n\n27:                                               ; preds = %11, %10\n  %28 = phi ptr [ @FALSE, %10 ], [ @TRUE, %11 ]\n  %29 = load i32, ptr %28, align 4, !tbaa !9\n  ret i32 %29\n}\n\ndeclare ptr @stab_pop_type(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @abort(...) local_unnamed_addr #2\n\ndeclare ptr @xmalloc(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ptr noundef, i8 noundef signext, ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #6\n\ndeclare i32 @stab_write_symbol(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\nattributes #5 = { noreturn nounwind }\nattributes #6 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@N_PSYM = dso_local local_unnamed_addr global i32 0, align 4\n@N_RSYM = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"%s:%c%s\\00\", align 1\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @stab_function_parameter], section \"llvm.metadata\"\n@switch.table.stab_function_parameter = private unnamed_addr constant [4 x ptr] [ptr @N_PSYM, ptr @N_RSYM, ptr @N_RSYM, ptr @N_PSYM], align 8\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @stab_function_parameter(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = tail call ptr @stab_pop_type(ptr noundef %0) #4\n  %6 = add i32 %2, -128\n  %7 = icmp ult i32 %6, 4\n  br i1 %7, label %11, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 (...) @abort() #5\n  unreachable\n\n10:                                               ; preds = %4\n  br label %26\n\n11:                                               ; preds = %4\n  %12 = sext i32 %6 to i64\n  %13 = getelementptr inbounds [4 x ptr], ptr @switch.table.stab_function_parameter, i64 0, i64 %12\n  %14 = load ptr, ptr %13, align 8, !tbaa !5\n  %15 = shl i32 %6, 3\n  %16 = lshr i32 1986089072, %15\n  %17 = load i32, ptr %14, align 4, !tbaa !9\n  %18 = tail call i64 @strlen(ptr noundef %1) #4\n  %19 = tail call i64 @strlen(ptr noundef %5) #4\n  %20 = add i64 %19, 3\n  %21 = add i64 %20, %18\n  %22 = tail call ptr @xmalloc(i64 noundef %21) #4\n  %23 = trunc i32 %16 to i8\n  %24 = tail call i32 @sprintf(ptr noundef %22, ptr noundef nonnull @.str, ptr noundef %1, i8 noundef signext %23, ptr noundef %5)\n  %25 = tail call i32 @free(ptr noundef %5)\n  br label %26\n\n26:                                               ; preds = %11, %10\n  %27 = phi ptr [ @FALSE, %10 ], [ @TRUE, %11 ]\n  %28 = load i32, ptr %27, align 4, !tbaa !9\n  ret i32 %28\n}\n\ndeclare ptr @stab_pop_type(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @abort(...) local_unnamed_addr #2\n\ndeclare ptr @xmalloc(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ptr noundef, i8 noundef signext, ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #6\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\nattributes #5 = { noreturn nounwind }\nattributes #6 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@N_PSYM = dso_local local_unnamed_addr global i32 0, align 4\n@N_RSYM = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"%s:%c%s\\00\", align 1\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @stab_function_parameter], section \"llvm.metadata\"\n@switch.table.stab_function_parameter = private unnamed_addr constant [4 x ptr] [ptr @N_PSYM, ptr @N_RSYM, ptr @N_RSYM, ptr @N_PSYM], align 8\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @stab_function_parameter(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = tail call ptr @stab_pop_type(ptr noundef %0) #4\n  %6 = add i32 %2, -128\n  %7 = icmp ult i32 %6, 4\n  br i1 %7, label %11, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 (...) @abort() #5\n  unreachable\n\n10:                                               ; preds = %4\n  br label %27\n\n11:                                               ; preds = %4\n  %12 = sext i32 %6 to i64\n  %13 = getelementptr inbounds [4 x ptr], ptr @switch.table.stab_function_parameter, i64 0, i64 %12\n  %14 = load ptr, ptr %13, align 8, !tbaa !5\n  %15 = shl nuw nsw i32 %6, 3\n  %16 = lshr i32 1986089072, %15\n  %17 = load i32, ptr %14, align 4, !tbaa !9\n  %18 = tail call i64 @strlen(ptr noundef %1) #4\n  %19 = tail call i64 @strlen(ptr noundef %5) #4\n  %20 = add i64 %19, 3\n  %21 = add i64 %20, %18\n  %22 = tail call ptr @xmalloc(i64 noundef %21) #4\n  %23 = trunc i32 %16 to i8\n  %24 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %22, ptr noundef nonnull @.str, ptr noundef %1, i8 noundef signext %23, ptr noundef %5)\n  %25 = tail call i32 @free(ptr noundef %5)\n  %26 = tail call i32 @stab_write_symbol(ptr noundef %0, i32 noundef %17, i32 noundef 0, i32 noundef %3, ptr noundef %22) #4\n  br label %27\n\n27:                                               ; preds = %11, %10\n  %28 = phi ptr [ @FALSE, %10 ], [ @TRUE, %11 ]\n  %29 = load i32, ptr %28, align 4, !tbaa !9\n  ret i32 %29\n}\n\ndeclare ptr @stab_pop_type(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @abort(...) local_unnamed_addr #2\n\ndeclare ptr @xmalloc(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @strlen(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ptr noundef, i8 noundef signext, ptr noundef) local_unnamed_addr #3\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #6\n\ndeclare i32 @stab_write_symbol(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nounwind }\nattributes #5 = { noreturn nounwind }\nattributes #6 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"int\", !7, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/binutils/binutils/extr_wrstabs.c_stab_function_parameter.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@N_PSYM = dso_local local_unnamed_addr global i32 0, align 4\n@N_RSYM = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"%s:%c%s\\00\", align 1\n@FALSE = dso_local local_unnamed_addr global i32 0, align 4\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @stab_function_parameter], section \"llvm.metadata\"\n@switch.table.stab_function_parameter = private unnamed_addr constant [4 x ptr] [ptr @N_PSYM, ptr @N_RSYM, ptr @N_RSYM, ptr @N_PSYM], align 8\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @stab_function_parameter(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = tail call ptr @stab_pop_type(ptr noundef %0) #6\n  %6 = add i32 %2, -128\n  %7 = icmp ult i32 %6, 4\n  br i1 %7, label %10, label %8\n\n8:                                                ; preds = %4\n  %9 = tail call i32 (...) @abort() #7\n  unreachable\n\n10:                                               ; preds = %4\n  %11 = sext i32 %6 to i64\n  %12 = getelementptr inbounds [4 x ptr], ptr @switch.table.stab_function_parameter, i64 0, i64 %11\n  %13 = load ptr, ptr %12, align 8\n  %14 = shl i32 %6, 3\n  %15 = lshr i32 1986089072, %14\n  %16 = trunc i32 %15 to i8\n  %17 = load i32, ptr %13, align 4, !tbaa !5\n  %18 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1)\n  %19 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %5)\n  %20 = add i64 %18, 3\n  %21 = add i64 %20, %19\n  %22 = tail call i64 @xmalloc(i64 noundef %21) #6\n  %23 = inttoptr i64 %22 to ptr\n  %24 = tail call i32 @sprintf(ptr noundef nonnull dereferenceable(1) %23, ptr noundef nonnull @.str, ptr noundef %1, i8 noundef signext %16, ptr noundef %5)\n  %25 = tail call i32 @free(ptr noundef %5)\n  %26 = tail call i32 @stab_write_symbol(ptr noundef %0, i32 noundef %17, i32 noundef 0, i32 noundef %3, ptr noundef %23) #6\n  %27 = icmp eq i32 %26, 0\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %10\n  %29 = tail call i32 @free(ptr noundef %23)\n  br label %30\n\n30:                                               ; preds = %10, %28\n  %31 = phi ptr [ @TRUE, %28 ], [ @FALSE, %10 ]\n  %32 = load i32, ptr %31, align 4, !tbaa !5\n  ret i32 %32\n}\n\ndeclare ptr @stab_pop_type(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: noreturn\ndeclare i32 @abort(...) local_unnamed_addr #2\n\ndeclare i64 @xmalloc(i64 noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn\ndeclare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #3\n\n; Function Attrs: nofree nounwind\ndeclare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ptr noundef, i8 noundef signext, ptr noundef) local_unnamed_addr #4\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\")\ndeclare i32 @free(ptr allocptr nocapture noundef) local_unnamed_addr #5\n\ndeclare i32 @stab_write_symbol(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { noreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #4 = { nofree nounwind \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #5 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind(\"free\") \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #6 = { nounwind }\nattributes #7 = { noreturn nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_xgbe-drv.c_xgbe_xmit.ll\"\n\t.globl\txgbe_xmit                       # -- Begin function xgbe_xmit\n\t.p2align\t4, 0x90\n\t.type\txgbe_xmit,@function\nxgbe_xmit:                              # @xgbe_xmit\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t(%rdi), %r14\n\tmovq\t%rsi, %rdi\n\tcallq\tM_ASSERTPKTHDR@PLT\n\txorl\t%edi, %edi\n\tcmpq\t$0, (%rbx)\n\tsete\t%dil\n\tcallq\tMPASS@PLT\n\tmovl\tXGBE_DOWN(%rip), %edi\n\tleaq\t12(%r14), %rsi\n\tcallq\ttest_bit@PLT\n\tmovl\t$1, %edi\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_2\n# %bb.1:\n\txorl\t%edi, %edi\n\tcmpl\t$0, 8(%r14)\n\tsete\t%dil\n.LBB0_2:\n\tcallq\t__predict_false@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.3:\n\tmovq\t%rbx, %rdi\n\tcallq\tm_freem@PLT\n\tmovl\tENETDOWN(%rip), %r12d\n\tjmp\t.LBB0_8\n.LBB0_4:\n\tmovq\t(%r14), %r15\n\tmovq\t(%r15), %rbp\n\txorl\t%r12d, %r12d\n\tmovq\t%rbp, %rdi\n\txorl\t%esi, %esi\n\tmovl\t$4, %edx\n\tcallq\tmemset@PLT\n\tmovq\t%r14, %rdi\n\tmovq\t%rbp, %rsi\n\tmovq\t%rbx, %rdx\n\tmovq\t%rbp, %rcx\n\tcallq\txgbe_packet_info@PLT\n\tmovl\t(%rbp), %edx\n\tmovq\t%r15, %rdi\n\tmovq\t%rbp, %rsi\n\tcallq\txgbe_maybe_stop_tx_queue@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_5\n.LBB0_7:\n\tmovq\t%rbx, %rdi\n\tcallq\tm_free@PLT\n\tjmp\t.LBB0_8\n.LBB0_5:\n\tmovq\t%r15, %rdi\n\tmovq\t%rbx, %rsi\n\tcallq\t*16(%r14)\n\ttestl\t%eax, %eax\n\tje\t.LBB0_7\n# %bb.6:\n\tmovq\t%r15, %rdi\n\tcallq\t*24(%r14)\n.LBB0_8:\n\tmovl\t%r12d, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\txgbe_xmit, .Lfunc_end0-xgbe_xmit\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tXGBE_DOWN,@object               # @XGBE_DOWN\n\t.bss\n\t.globl\tXGBE_DOWN\n\t.p2align\t2\nXGBE_DOWN:\n\t.long\t0                               # 0x0\n\t.size\tXGBE_DOWN, 4\n\n\t.type\tENETDOWN,@object                # @ENETDOWN\n\t.globl\tENETDOWN\n\t.p2align\t2\nENETDOWN:\n\t.long\t0                               # 0x0\n\t.size\tENETDOWN, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xgbe_prv_data = type { ptr, i32, i32 }\n\n@XGBE_DOWN = dso_local local_unnamed_addr global i32 0, align 4\n@ENETDOWN = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xgbe_xmit(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = tail call i32 @M_ASSERTPKTHDR(ptr noundef %1) #2\n  %5 = load i64, ptr %1, align 8, !tbaa !10\n  %6 = icmp eq i64 %5, 0\n  %7 = zext i1 %6 to i32\n  %8 = tail call i32 @MPASS(i32 noundef %7) #2\n  %9 = load i32, ptr @XGBE_DOWN, align 4, !tbaa !13\n  %10 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %11 = tail call i64 @test_bit(i32 noundef %9, ptr noundef nonnull %10) #2\n  %12 = icmp eq i64 %11, 0\n  %13 = zext i1 %12 to i32\n  %14 = tail call i64 @__predict_false(i32 noundef %13) #2\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %2\n  %17 = tail call i32 @m_freem(ptr noundef nonnull %1) #2\n  br label %33\n\n18:                                               ; preds = %2\n  %19 = load ptr, ptr %3, align 8, !tbaa !15\n  %20 = load ptr, ptr %19, align 8, !tbaa !16\n  %21 = tail call i32 @memset(ptr noundef %20, i32 noundef 0, i32 noundef 4) #2\n  %22 = tail call i32 @xgbe_packet_info(ptr noundef nonnull %3, ptr noundef %20, ptr noundef nonnull %1, ptr noundef %20) #2\n  %23 = load i32, ptr %20, align 4, !tbaa !18\n  %24 = tail call i32 @xgbe_maybe_stop_tx_queue(ptr noundef nonnull %19, ptr noundef nonnull %20, i32 noundef %23) #2\n  %25 = icmp eq i32 %24, 0\n  br i1 %25, label %28, label %26\n\n26:                                               ; preds = %18\n  %27 = tail call i32 @m_free(ptr noundef nonnull %1) #2\n  br label %33\n\n28:                                               ; preds = %18\n  %29 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 1\n  %30 = load ptr, ptr %29, align 8, !tbaa !20\n  %31 = tail call i32 %30(ptr noundef nonnull %19, ptr noundef nonnull %1) #2\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %35, label %33\n\n33:                                               ; preds = %28, %26, %16\n  %34 = phi i32 [ 0, %16 ], [ ENETDOWN, %26 ], [ 0, %28 ]\n  ret i32 %34\n\n35:                                               ; preds = %28\n  %36 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %37 = load ptr, ptr %36, align 8, !tbaa !21\n  %38 = tail call i32 %37(ptr noundef nonnull %19) #2\n  %39 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 3\n  %40 = load ptr, ptr %39, align 8, !tbaa !22\n  %41 = tail call i32 %40(ptr noundef nonnull %19) #2\n  br label %33\n}\n\ndeclare i32 @M_ASSERTPKTHDR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @MPASS(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @__predict_false(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @m_freem(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_packet_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_maybe_stop_tx_queue(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @m_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"netif_tx_sring\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"mbuf\", !12, i64 0}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"TYPE_4__\", !7, i64 0}\n!17 = !{!17, !14, i64 0}\n!17 = !{!\"TYPE_3__\", !14, i64 0}\n!18 = !{!19, !14, i64 0}\n!19 = !{!\"xgbe_packet_info\", !17, i64 0}\n!20 = !{!21, !7, i64 8}\n!21 = !{!\"xgbe_prv_data\", !7, i64 0, !14, i64 8, !14, i64 12}\n!22 = !{!21, !7, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xgbe_prv_data = type { ptr, i32, i32 }\n\n@XGBE_DOWN = dso_local local_unnamed_addr global i32 0, align 4\n@ENETDOWN = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xgbe_xmit(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = tail call i32 @M_ASSERTPKTHDR(ptr noundef %1) #2\n  %5 = load i64, ptr %1, align 8, !tbaa !10\n  %6 = icmp eq i64 %5, 0\n  %7 = zext i1 %6 to i32\n  %8 = tail call i32 @MPASS(i32 noundef %7) #2\n  %9 = load i32, ptr @XGBE_DOWN, align 4, !tbaa !13\n  %10 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %11 = tail call i64 @test_bit(i32 noundef %9, ptr noundef nonnull %10) #2\n  %12 = icmp eq i64 %11, 0\n  %13 = zext i1 %12 to i32\n  %14 = tail call i64 @__predict_false(i32 noundef %13) #2\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %2\n  %17 = tail call i32 @m_freem(ptr noundef nonnull %1) #2\n  br label %34\n\n18:                                               ; preds = %2\n  %19 = load ptr, ptr %3, align 8, !tbaa !15\n  %20 = load ptr, ptr %19, align 8, !tbaa !16\n  %21 = tail call i32 @memset(ptr noundef %20, i32 noundef 0, i32 noundef 4) #2\n  %22 = tail call i32 @xgbe_packet_info(ptr noundef nonnull %3, ptr noundef %20, ptr noundef nonnull %1, ptr noundef %20) #2\n  %23 = load i32, ptr %20, align 4, !tbaa !18\n  %24 = tail call i32 @xgbe_maybe_stop_tx_queue(ptr noundef nonnull %19, ptr noundef nonnull %20, i32 noundef %23) #2\n  %25 = icmp eq i32 %24, 0\n  br i1 %25, label %28, label %26\n\n26:                                               ; preds = %18\n  %27 = tail call i32 @m_free(ptr noundef nonnull %1) #2\n  br label %34\n\n28:                                               ; preds = %18\n  %29 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 1\n  %30 = load ptr, ptr %29, align 8, !tbaa !20\n  %31 = tail call i32 %30(ptr noundef nonnull %19, ptr noundef nonnull %1) #2\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %36, label %33\n\n33:                                               ; preds = %28\n  %34 = load ptr, ptr %3, align 8, !tbaa !15\n  %35 = tail call i32 %34(ptr noundef %34, ptr noundef nonnull %1) #2\n  br label %36\n\n36:                                               ; preds = %33, %28\n  %37 = phi i32 [ %35, %33 ], [ %31, %28 ]\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %41, label %39\n\n39:                                               ; preds = %36\n  %40 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  tail call void %40(ptr noundef nonnull %34) #2\n  br label %41\n\n41:                                               ; preds = %39, %36\n  %42 = tail call i32 @m_free(ptr noundef nonnull %1) #2\n  br label %43\n\n43:                                               ; preds = %41, %26\n  %44 = phi i32 [ %24, %26 ], [ %37, %41 ]\n  %45 = phi i32 [ %17, %26 ], [ %42, %41 ]\n  ret i32 %45\n}\n\ndeclare i32 @M_ASSERTPKTHDR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @MPASS(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @__predict_false(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @m_freem(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_packet_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_maybe_stop_tx_queue(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @m_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ifnet\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"mbuf\", !12, i64 0}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"TYPE_4__\", !7, i64 0}\n!17 = !{!17, !14, i64 0}\n!17 = !{!\"TYPE_5__\", !14, i64 0}\n!18 = !{!19, !14, i64 0}\n!19 = !{!\"xgbe_packet_info\", !17, i64 0}\n!20 = !{!21, !7, i64 8}\n!21 = !{!\"xgbe_prv_data\", !7, i64 0, !14, i64 8, !14, i64 12}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xgbe_prv_data = type { ptr, i32, i32 }\n\n@XGBE_DOWN = dso_local local_unnamed_addr global i32 0, align 4\n@ENETDOWN = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xgbe_xmit(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = tail call i32 @M_ASSERTPKTHDR(ptr noundef %1) #2\n  %5 = load i64, ptr %1, align 8, !tbaa !10\n  %6 = icmp eq i64 %5, 0\n  %7 = zext i1 %6 to i32\n  %8 = tail call i32 @MPASS(i32 noundef %7) #2\n  %9 = load i32, ptr @XGBE_DOWN, align 4, !tbaa !13\n  %10 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %11 = tail call i64 @test_bit(i32 noundef %9, ptr noundef nonnull %10) #2\n  %12 = icmp eq i64 %11, 0\n  %13 = zext i1 %12 to i32\n  %14 = tail call i64 @__predict_false(i32 noundef %13) #2\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %2\n  %17 = tail call i32 @m_freem(ptr noundef nonnull %1) #2\n  br label %33\n\n18:                                               ; preds = %2\n  %19 = load ptr, ptr %3, align 8, !tbaa !15\n  %20 = load ptr, ptr %19, align 8, !tbaa !16\n  %21 = tail call i32 @memset(ptr noundef %20, i32 noundef 0, i32 noundef 4) #2\n  %22 = tail call i32 @xgbe_packet_info(ptr noundef nonnull %3, ptr noundef %20, ptr noundef nonnull %1, ptr noundef %20) #2\n  %23 = load i32, ptr %20, align 4, !tbaa !18\n  %24 = tail call i32 @xgbe_maybe_stop_tx_queue(ptr noundef nonnull %19, ptr noundef nonnull %20, i32 noundef %23) #2\n  %25 = icmp eq i32 %24, 0\n  br i1 %25, label %26, label %31\n\n26:                                               ; preds = %18\n  %27 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 1\n  %28 = load ptr, ptr %27, align 8, !tbaa !20\n  %29 = tail call i32 %28(ptr noundef nonnull %19, ptr noundef nonnull %1) #2\n  %30 = icmp eq i32 %29, 0\n  br i1 %30, label %31, label %32\n\n31:                                               ; preds = %26, %18\n  br label %33\n\n32:                                               ; preds = %26\n  %33 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %34 = load ptr, ptr %33, align 8, !tbaa !21\n  %35 = tail call i32 %34(ptr noundef nonnull %19) #2\n  br label %36\n\n36:                                               ; preds = %32, %31\n  %37 = phi i32 [ %29, %32 ], [ %24, %31 ]\n  %38 = tail call i32 @m_free(ptr noundef nonnull %1) #2\n  br label %39\n\n39:                                               ; preds = %36, %31\n  %40 = phi i32 [ 0, %31 ], [ %37, %36 ]\n  ret i32 %40\n}\n\ndeclare i32 @M_ASSERTPKTHDR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @MPASS(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @__predict_false(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @m_freem(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_packet_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_maybe_stop_tx_queue(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @m_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"netif_tx_sring\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"mbuf\", !12, i64 0}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"TYPE_4__\", !7, i64 0}\n!17 = !{!17, !14, i64 0}\n!17 = !{!\"TYPE_3__\", !14, i64 0}\n!18 = !{!19, !14, i64 0}\n!19 = !{!\"xgbe_packet_info\", !14, i64 0}\n!20 = !{!21, !7, i64 8}\n!21 = !{!\"xgbe_prv_data\", !7, i64 0, !14, i64 8, !14, i64 12}\n!22 = !{!23, !22, i64 0}\n!23 = !{!\"TYPE_5__\", !22, i64 0}\n!24 = !{!25, !22, i64 0}\n!25 = !{!\"xgbe_channel\", !24, i64 0}\n!26 = !{!27, !22, i64 0}\n!27 = !{!\"xgbe_hw_if\", !26, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xgbe_prv_data = type { ptr, i32, i32 }\n\n@XGBE_DOWN = dso_local local_unnamed_addr global i32 0, align 4\n@ENETDOWN = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xgbe_xmit(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = tail call i32 @M_ASSERTPKTHDR(ptr noundef %1) #2\n  %5 = load i64, ptr %1, align 8, !tbaa !10\n  %6 = icmp eq i64 %5, 0\n  %7 = zext i1 %6 to i32\n  %8 = tail call i32 @MPASS(i32 noundef %7) #2\n  %9 = load i32, ptr @XGBE_DOWN, align 4, !tbaa !13\n  %10 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %11 = tail call i64 @test_bit(i32 noundef %9, ptr noundef nonnull %10) #2\n  %12 = icmp eq i64 %11, 0\n  %13 = zext i1 %12 to i32\n  %14 = tail call i64 @__predict_false(i32 noundef %13) #2\n  %15 = icmp eq i64 %14, 0\n  br i1 %15, label %18, label %16\n\n16:                                               ; preds = %2\n  %17 = tail call i32 @m_freem(ptr noundef nonnull %1) #2\n  br label %33\n\n18:                                               ; preds = %2\n  %19 = load ptr, ptr %3, align 8, !tbaa !15\n  %20 = load ptr, ptr %19, align 8, !tbaa !16\n  %21 = tail call i32 @memset(ptr noundef %20, i32 noundef 0, i32 noundef 4) #2\n  %22 = tail call i32 @xgbe_packet_info(ptr noundef nonnull %3, ptr noundef %20, ptr noundef nonnull %1, ptr noundef %20) #2\n  %23 = load i32, ptr %20, align 4, !tbaa !18\n  %24 = tail call i32 @xgbe_maybe_stop_tx_queue(ptr noundef nonnull %19, ptr noundef nonnull %20, i32 noundef %23) #2\n  %25 = icmp eq i32 %24, 0\n  br i1 %25, label %28, label %26\n\n26:                                               ; preds = %18\n  %27 = tail call i32 @m_free(ptr noundef nonnull %1) #2\n  br label %33\n\n28:                                               ; preds = %18\n  %29 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 1\n  %30 = load ptr, ptr %29, align 8, !tbaa !20\n  %31 = tail call i32 %30(ptr noundef nonnull %19, ptr noundef nonnull %1) #2\n  %32 = icmp eq i32 %31, 0\n  br i1 %32, label %35, label %33\n\n33:                                               ; preds = %28, %26, %16\n  %34 = phi i32 [ 0, %16 ], [ ENETDOWN, %26 ], [ 0, %28 ]\n  ret i32 %34\n\n35:                                               ; preds = %28\n  %36 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %37 = load ptr, ptr %36, align 8, !tbaa !21\n  %38 = tail call i32 %37(ptr noundef nonnull %19) #2\n  %39 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 3\n  %40 = load ptr, ptr %39, align 8, !tbaa !22\n  %41 = tail call i32 %40(ptr noundef nonnull %19) #2\n  br label %33\n}\n\ndeclare i32 @M_ASSERTPKTHDR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @MPASS(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @__predict_false(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @m_freem(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_packet_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_maybe_stop_tx_queue(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @m_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ifnet\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"mbuf\", !12, i64 0}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"TYPE_4__\", !7, i64 0}\n!17 = !{!17, !14, i64 0}\n!17 = !{!\"TYPE_3__\", !14, i64 0}\n!18 = !{!19, !14, i64 0}\n!19 = !{!\"xgbe_packet_info\", !17, i64 0}\n!20 = !{!21, !7, i64 8}\n!21 = !{!\"xgbe_prv_data\", !7, i64 0, !14, i64 8, !14, i64 12}\n!22 = !{!21, !7, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/dev/axgbe/extr_xgbe-drv.c_xgbe_xmit.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xgbe_prv_data = type { ptr, %struct.TYPE_2__, i32, %struct.xgbe_desc_if, %struct.xgbe_hw_if }\n%struct.TYPE_2__ = type { i32 }\n%struct.xgbe_desc_if = type { ptr }\n%struct.xgbe_hw_if = type { ptr }\n\n@XGBE_DOWN = dso_local local_unnamed_addr global i32 0, align 4\n@ENETDOWN = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @xgbe_xmit(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load ptr, ptr %0, align 8, !tbaa !5\n  %4 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 4\n  %5 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 3\n  %6 = tail call i32 @M_ASSERTPKTHDR(ptr noundef %1) #2\n  %7 = load ptr, ptr %1, align 8, !tbaa !10\n  %8 = icmp eq ptr %7, null\n  %9 = zext i1 %8 to i32\n  %10 = tail call i32 @MPASS(i32 noundef %9) #2\n  %11 = load i32, ptr @XGBE_DOWN, align 4, !tbaa !12\n  %12 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 2\n  %13 = tail call i64 @test_bit(i32 noundef %11, ptr noundef nonnull %12) #2\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %20\n\n15:                                               ; preds = %2\n  %16 = getelementptr inbounds %struct.xgbe_prv_data, ptr %3, i64 0, i32 1\n  %17 = load i32, ptr %16, align 8, !tbaa !14\n  %18 = icmp eq i32 %17, 0\n  %19 = zext i1 %18 to i32\n  br label %20\n\n20:                                               ; preds = %15, %2\n  %21 = phi i32 [ 1, %2 ], [ %19, %15 ]\n  %22 = tail call i64 @__predict_false(i32 noundef %21) #2\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %20\n  %25 = tail call i32 @m_freem(ptr noundef nonnull %1) #2\n  %26 = load i32, ptr @ENETDOWN, align 4, !tbaa !12\n  br label %44\n\n27:                                               ; preds = %20\n  %28 = load ptr, ptr %3, align 8, !tbaa !19\n  %29 = load ptr, ptr %28, align 8, !tbaa !20\n  %30 = tail call i32 @memset(ptr noundef %29, i32 noundef 0, i32 noundef 4) #2\n  %31 = tail call i32 @xgbe_packet_info(ptr noundef nonnull %3, ptr noundef %29, ptr noundef nonnull %1, ptr noundef %29) #2\n  %32 = load i32, ptr %29, align 4, !tbaa !22\n  %33 = tail call i32 @xgbe_maybe_stop_tx_queue(ptr noundef nonnull %28, ptr noundef nonnull %29, i32 noundef %32) #2\n  %34 = icmp eq i32 %33, 0\n  br i1 %34, label %35, label %42\n\n35:                                               ; preds = %27\n  %36 = load ptr, ptr %5, align 8, !tbaa !24\n  %37 = tail call i32 %36(ptr noundef nonnull %28, ptr noundef nonnull %1) #2\n  %38 = icmp eq i32 %37, 0\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %35\n  %40 = load ptr, ptr %4, align 8, !tbaa !25\n  %41 = tail call i32 %40(ptr noundef nonnull %28) #2\n  br label %44\n\n42:                                               ; preds = %35, %27\n  %43 = tail call i32 @m_free(ptr noundef nonnull %1) #2\n  br label %44\n\n44:                                               ; preds = %42, %39, %24\n  %45 = phi i32 [ %26, %24 ], [ 0, %42 ], [ 0, %39 ]\n  ret i32 %45\n}\n\ndeclare i32 @M_ASSERTPKTHDR(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @MPASS(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @__predict_false(i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @test_bit(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @m_freem(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_packet_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @xgbe_maybe_stop_tx_queue(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @m_free(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"ifnet\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"mbuf\", !7, i64 0}\n!12 = !{!13, !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!15, !13, i64 8}\n!15 = !{!\"xgbe_prv_data\", !7, i64 0, !16, i64 8, !13, i64 12, !17, i64 16, !18, i64 24}\n!16 = !{!\"TYPE_2__\", !13, i64 0}\n!17 = !{!\"xgbe_desc_if\", !7, i64 0}\n!18 = !{!\"xgbe_hw_if\", !7, i64 0}\n!19 = !{!15, !7, i64 0}\n!20 = !{!21, !7, i64 0}\n!21 = !{!\"xgbe_channel\", !7, i64 0}\n!22 = !{!23, !13, i64 0}\n!23 = !{!\"xgbe_packet_data\", !13, i64 0}\n!24 = !{!17, !7, i64 0}\n!25 = !{!18, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_ngx_http_upstream_ip_hash_module.c_ngx_http_upstream_init_ip_hash_peer.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ngx_http_upstream_init_ip_hash_peer\n\t.type\tngx_http_upstream_init_ip_hash_peer,@function\nngx_http_upstream_init_ip_hash_peer:    # @ngx_http_upstream_init_ip_hash_peer\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %rbx\n\tmovl\t16(%rdi), %edi\n\tmovl\t$40, %esi\n\tcallq\tngx_palloc@PLT\n\tmovl\t$NGX_ERROR, %r12d\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.1:\n\tmovq\t%rax, %r14\n\taddq\t$32, %rax\n\tmovq\t8(%rbx), %rcx\n\tmovq\t%rax, 8(%rcx)\n\tmovq\t%rbx, %rdi\n\tmovq\t%r15, %rsi\n\tcallq\tngx_http_upstream_init_round_robin_peer@PLT\n\tcmpq\tNGX_OK(%rip), %rax\n\tjne\t.LBB0_5\n# %bb.2:\n\tmovl\tngx_http_upstream_get_ip_hash_peer(%rip), %eax\n\tmovq\t8(%rbx), %rcx\n\tmovl\t%eax, (%rcx)\n\tmovq\t(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tcmpl\t$129, (%rax)\n\tje\t.LBB0_4\n# %bb.3:\n\tmovq\tngx_http_upstream_ip_hash_pseudo_addr(%rip), %rax\n.LBB0_4:\n\tmovq\t%rax, 24(%r14)\n\tmovabsq\t$382252089347, %rax             # imm = 0x5900000003\n\tmovq\t%rax, (%r14)\n\tmovq\t$0, 16(%r14)\n\tmovl\tngx_http_upstream_get_round_robin_peer(%rip), %eax\n\tmovl\t%eax, 8(%r14)\n\tmovl\t$NGX_OK, %r12d\n.LBB0_5:\n\tmovq\t(%r12), %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tngx_http_upstream_init_ip_hash_peer, .Lfunc_end0-ngx_http_upstream_init_ip_hash_peer\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNGX_ERROR,@object               # @NGX_ERROR\n\t.bss\n\t.globl\tNGX_ERROR\n\t.p2align\t3\nNGX_ERROR:\n\t.quad\t0                               # 0x0\n\t.size\tNGX_ERROR, 8\n\n\t.type\tNGX_OK,@object                  # @NGX_OK\n\t.globl\tNGX_OK\n\t.p2align\t3\nNGX_OK:\n\t.quad\t0                               # 0x0\n\t.size\tNGX_OK, 8\n\n\t.type\tngx_http_upstream_get_ip_hash_peer,@object # @ngx_http_upstream_get_ip_hash_peer\n\t.globl\tngx_http_upstream_get_ip_hash_peer\n\t.p2align\t2\nngx_http_upstream_get_ip_hash_peer:\n\t.long\t0                               # 0x0\n\t.size\tngx_http_upstream_get_ip_hash_peer, 4\n\n\t.type\tngx_http_upstream_ip_hash_pseudo_addr,@object # @ngx_http_upstream_ip_hash_pseudo_addr\n\t.globl\tngx_http_upstream_ip_hash_pseudo_addr\n\t.p2align\t3\nngx_http_upstream_ip_hash_pseudo_addr:\n\t.quad\t0\n\t.size\tngx_http_upstream_ip_hash_pseudo_addr, 8\n\n\t.type\tngx_http_upstream_get_round_robin_peer,@object # @ngx_http_upstream_get_round_robin_peer\n\t.globl\tngx_http_upstream_get_round_robin_peer\n\t.p2align\t2\nngx_http_upstream_get_round_robin_peer:\n\t.long\t0                               # 0x0\n\t.size\tngx_http_upstream_get_round_robin_peer, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, i32 }\n%struct.TYPE_11__ = type { i32, i32, ptr, ptr, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %21, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_11__, ptr %5, i64 0, i32 4\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_11__, ptr %10, i64 0, i32 2\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !14\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %21\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !16\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !17\n  %18 = load ptr, ptr %0, align 8, !tbaa !18\n  %19 = load ptr, ptr %18, align 8, !tbaa !19\n  %20 = load i32, ptr %19, align 4, !tbaa !21\n  switch i32 %20, label %23 [\n    i32 129, label %22\n    i32 128, label %22\n  ]\n\n21:                                               ; preds = %7, %2\n  br label %23\n\n22:                                               ; preds = %15, %15\n  br label %23\n\n23:                                               ; preds = %15, %22, %21\n  %24 = phi ptr [ @NGX_ERROR, %21 ], [ @NGX_OK, %22 ], [ @NGX_ERROR, %15 ]\n  %25 = load i64, ptr %24, align 8, !tbaa !14\n  ret i64 %25\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_11__\", !10, i64 0, !10, i64 4, !7, i64 8, !7, i64 16, !7, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!10, !10, i64 0}\n!17 = !{!13, !10, i64 0}\n!18 = !{!6, !7, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"TYPE_9__\", !7, i64 0}\n!21 = !{!22, !10, i64 0}\n!22 = !{!\"TYPE_8__\", !10, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/tengine/src/http/modules/extr_ngx_http_upstream_ip_hash_module.c_ngx_http_upstream_init_ip_hash_peer.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_19__ = type { ptr, ptr, i32 }\n%struct.TYPE_18__ = type { i32, i32, i32, i64, ptr, i32 }\n%struct.TYPE_12__ = type { i32, ptr }\n\n@NGX_ERROR = dso_local local_unnamed_addr global i64 0, align 8\n@NGX_OK = dso_local local_unnamed_addr global i64 0, align 8\n@ngx_http_upstream_get_ip_hash_peer = dso_local local_unnamed_addr global i32 0, align 4\n@ngx_http_upstream_ip_hash_pseudo_addr = dso_local local_unnamed_addr global ptr null, align 8\n@ngx_http_upstream_get_round_robin_peer = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ngx_http_upstream_init_ip_hash_peer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @ngx_http_upstream_init_ip_hash_peer(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.TYPE_19__, ptr %0, i64 0, i32 2\n  %4 = load i32, ptr %3, align 8, !tbaa !5\n  %5 = tail call ptr @ngx_palloc(i32 noundef %4, i32 noundef 40) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %28, label %7\n\n7:                                                ; preds = %2\n  %8 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 5\n  %9 = getelementptr inbounds %struct.TYPE_19__, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = getelementptr inbounds %struct.TYPE_12__, ptr %10, i64 0, i32 1\n  store ptr %8, ptr %11, align 8, !tbaa !12\n  %12 = tail call i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef nonnull %0, ptr noundef %1) #2\n  %13 = load i64, ptr @NGX_OK, align 8, !tbaa !15\n  %14 = icmp eq i64 %12, %13\n  br i1 %14, label %15, label %28\n\n15:                                               ; preds = %7\n  %16 = load i32, ptr @ngx_http_upstream_get_ip_hash_peer, align 4, !tbaa !17\n  %17 = load ptr, ptr %9, align 8, !tbaa !11\n  store i32 %16, ptr %17, align 8, !tbaa !18\n  %18 = load ptr, ptr %0, align 8, !tbaa !19\n  %19 = load ptr, ptr %18, align 8, !tbaa !20\n  %20 = load i32, ptr %19, align 4, !tbaa !22\n  %21 = icmp eq i32 %20, 129\n  %22 = load ptr, ptr @ngx_http_upstream_ip_hash_pseudo_addr, align 8\n  %23 = select i1 %21, ptr %19, ptr %22\n  %24 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 4\n  store ptr %23, ptr %24, align 8\n  store <2 x i32> <i32 3, i32 89>, ptr %5, align 8, !tbaa !17\n  %25 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 3\n  store i64 0, ptr %25, align 8, !tbaa !24\n  %26 = load i32, ptr @ngx_http_upstream_get_round_robin_peer, align 4, !tbaa !17\n  %27 = getelementptr inbounds %struct.TYPE_18__, ptr %5, i64 0, i32 2\n  store i32 %26, ptr %27, align 8, !tbaa !26\n  br label %28\n\n28:                                               ; preds = %7, %2, %15\n  %29 = phi ptr [ @NGX_OK, %15 ], [ @NGX_ERROR, %2 ], [ @NGX_ERROR, %7 ]\n  %30 = load i64, ptr %29, align 8, !tbaa !15\n  ret i64 %30\n}\n\ndeclare ptr @ngx_palloc(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @ngx_http_upstream_init_round_robin_peer(ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 16}\n!6 = !{!\"TYPE_19__\", !7, i64 0, !7, i64 8, !10, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 8}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"TYPE_13__\", !14, i64 0}\n!14 = !{!\"TYPE_12__\", !10, i64 0, !7, i64 8}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n!17 = !{!10, !10, i64 0}\n!18 = !{!13, !10, i64 0}\n!19 = !{!6, !7, i64 0}\n!20 = !{!21, !7, i64 0}\n!21 = !{!\"TYPE_16__\", !7, i64 0}\n!22 = !{!23, !10, i64 0}\n!23 = !{!\"TYPE_15__\", !10, i64 0}\n!24 = !{!25, !16, i64 16}\n!25 = !{!\"TYPE_18__\", !10, i64 0, !10, i64 4, !10, i64 8, !16, i64 16, !7, i64 24, !10, i64 32}\n!26 = !{!25, !10, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_funcs.c_file_replace.ll\"\n\t.globl\tfile_replace                    # -- Begin function file_replace\n\t.p2align\t4, 0x90\n\t.type\tfile_replace,@function\nfile_replace:                           # @file_replace\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tsubq\t$32, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdx, %r14\n\tmovq\t%rdi, %rbx\n\tmovl\tREG_EXTENDED(%rip), %edx\n\tleaq\t12(%rsp), %rdi\n\tcallq\tfile_regcomp@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_2\n# %bb.1:\n\tleaq\t12(%rsp), %rdi\n\tmovl\t%eax, %esi\n\tmovq\t%rbx, %rdx\n\tcallq\tfile_regerror@PLT\n.LBB0_9:\n\tmovl\t$-1, %ebp\n\tjmp\t.LBB0_10\n.LBB0_2:\n\tmovq\t(%rbx), %rsi\n\tleaq\t12(%rsp), %rdi\n\tleaq\t16(%rsp), %rcx\n\txorl\t%ebp, %ebp\n\tmovl\t$1, %edx\n\txorl\t%r8d, %r8d\n\tcallq\tfile_regexec@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_10\n# %bb.3:\n\txorl\t%ebp, %ebp\n\tleaq\t12(%rsp), %r15\n\tleaq\t16(%rsp), %r12\n\t.p2align\t4, 0x90\n.LBB0_4:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t(%rbx), %rax\n\tmovq\t16(%rsp), %rcx\n\tmovb\t$0, (%rax,%rcx)\n\tmovq\t24(%rsp), %rcx\n\ttestq\t%rcx, %rcx\n\tje\t.LBB0_6\n# %bb.5:                                #   in Loop: Header=BB0_4 Depth=1\n\taddq\t(%rbx), %rcx\n\tjmp\t.LBB0_7\n\t.p2align\t4, 0x90\n.LBB0_6:                                #   in Loop: Header=BB0_4 Depth=1\n\tmovl\t$.L.str.1, %ecx\n.LBB0_7:                                #   in Loop: Header=BB0_4 Depth=1\n\tmovl\t$.L.str, %esi\n\tmovq\t%rbx, %rdi\n\tmovq\t%r14, %rdx\n\tcallq\tfile_printf@PLT\n\tcmpl\t$-1, %eax\n\tje\t.LBB0_9\n# %bb.8:                                #   in Loop: Header=BB0_4 Depth=1\n\tincl\t%ebp\n\tmovq\t(%rbx), %rsi\n\tmovq\t%r15, %rdi\n\tmovl\t$1, %edx\n\tmovq\t%r12, %rcx\n\txorl\t%r8d, %r8d\n\tcallq\tfile_regexec@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n.LBB0_10:\n\tleaq\t12(%rsp), %rdi\n\tcallq\tfile_regfree@PLT\n\tmovl\t%ebp, %eax\n\taddq\t$32, %rsp\n\t.cfi_def_cfa_offset 48\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tfile_replace, .Lfunc_end0-file_replace\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tREG_EXTENDED,@object            # @REG_EXTENDED\n\t.bss\n\t.globl\tREG_EXTENDED\n\t.p2align\t2\nREG_EXTENDED:\n\t.long\t0                               # 0x0\n\t.size\tREG_EXTENDED, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%s%s\"\n\t.size\t.L.str, 5\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.zero\t1\n\t.size\t.L.str.1, 1\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i64, i64 }\n\n@REG_EXTENDED = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"%s%s\\00\", align 1\n@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @file_replace(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = alloca i32, align 4\n  %5 = alloca %struct.TYPE_4__, align 8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #3\n  %6 = load i32, ptr @REG_EXTENDED, align 4, !tbaa !5\n  %7 = call i32 @file_regcomp(ptr noundef nonnull %4, ptr noundef %1, i32 noundef %6) #3\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = call i32 @file_regerror(ptr noundef nonnull %4, i32 noundef %7, ptr noundef %0) #3\n  br label %33\n\n11:                                               ; preds = %3\n  %12 = load ptr, ptr %0, align 8, !tbaa !9\n  %13 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %12, i32 noundef 1, ptr noundef nonnull %5, ptr noundef null) #3\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %33\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.TYPE_4__, ptr %5, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_4__, ptr %5, i64 0, i32 2\n  br label %18\n\n18:                                               ; preds = %15, %29\n  %19 = phi i32 [ 0, %15 ], [ %31, %29 ]\n  %20 = load ptr, ptr %0, align 8, !tbaa !9\n  %21 = load i64, ptr %5, align 8, !tbaa !12\n  %22 = getelementptr inbounds i8, ptr %20, i64 %21\n  store i8 0, ptr %22, align 1, !tbaa !15\n  %23 = load i64, ptr %17, align 8, !tbaa !16\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %27, label %25\n\n25:                                               ; preds = %18\n  %26 = load ptr, ptr %0, align 8, !tbaa !9\n  br label %27\n\n27:                                               ; preds = %25, %18\n  %28 = phi ptr [ %26, %25 ], [ @.str.1, %18 ]\n  %29 = call i32 @file_printf(ptr noundef nonnull %0, ptr noundef nonnull @.str, ptr noundef %2, ptr noundef %28) #3\n  %30 = icmp eq i32 %29, -1\n  br i1 %30, label %33, label %31\n\n31:                                               ; preds = %27\n  %32 = add nsw i32 %19, 1\n  br label %18, !llvm.loop !17\n\n33:                                               ; preds = %27, %11, %9\n  %34 = phi i32 [ -1, %9 ], [ 0, %11 ], [ %32, %27 ]\n  %35 = call i32 @file_regfree(ptr noundef nonnull %4) #3\n  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  ret i32 %34\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @file_regcomp(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regerror(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @file_regexec(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @file_printf(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regfree(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_5__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_4__\", !14, i64 0, !14, i64 8, !14, i64 16}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!13, !14, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, i64, i64 }\n\n@REG_EXTENDED = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"%s%s\\00\", align 1\n@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @file_replace(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = alloca i32, align 4\n  %5 = alloca %struct.TYPE_4__, align 8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #3\n  %6 = load i32, ptr @REG_EXTENDED, align 4, !tbaa !5\n  %7 = call i32 @file_regcomp(ptr noundef nonnull %4, ptr noundef %1, i32 noundef %6) #3\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = call i32 @file_regerror(ptr noundef nonnull %4, i32 noundef %7, ptr noundef %0) #3\n  br label %34\n\n11:                                               ; preds = %3\n  %12 = load ptr, ptr %0, align 8, !tbaa !9\n  %13 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %12, i32 noundef 1, ptr noundef nonnull %5, i32 noundef 0) #3\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %34\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.TYPE_4__, ptr %5, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_4__, ptr %5, i64 0, i32 2\n  br label %18\n\n18:                                               ; preds = %15, %29\n  %19 = phi i32 [ 0, %15 ], [ %31, %29 ]\n  %20 = load ptr, ptr %0, align 8, !tbaa !9\n  %21 = load i64, ptr %5, align 8, !tbaa !12\n  %22 = getelementptr inbounds i8, ptr %20, i64 %21\n  store i8 0, ptr %22, align 1, !tbaa !15\n  %23 = load i64, ptr %17, align 8, !tbaa !16\n  %24 = icmp eq i64 %23, 0\n  %25 = load ptr, ptr %0, align 8, !tbaa !9\n  %26 = getelementptr inbounds i8, ptr %25, i64 %23\n  %27 = select i1 %24, ptr @.str.1, ptr %26\n  %28 = call i32 @file_printf(ptr noundef nonnull %0, ptr noundef nonnull @.str, ptr noundef %2, ptr noundef %27) #3\n  %29 = icmp eq i32 %28, -1\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %18\n  %31 = add nuw nsw i32 %19, 1\n  %32 = load ptr, ptr %0, align 8, !tbaa !9\n  %33 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %32, i32 noundef 1, ptr noundef nonnull %16, i32 noundef 0) #3\n  br i1 %33, label %34, label %18, !llvm.loop !17\n\n34:                                               ; preds = %18, %30, %11, %9\n  %35 = phi i32 [ -1, %9 ], [ 0, %11 ], [ %31, %30 ], [ -1, %18 ]\n  %36 = call i32 @file_regfree(ptr noundef nonnull %4) #3\n  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  ret i32 %35\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @file_regcomp(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regerror(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @file_regexec(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_printf(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regfree(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_5__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !14, i64 0}\n!13 = !{!\"TYPE_4__\", !14, i64 0, !14, i64 8, !14, i64 16}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!13, !14, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i64, i64, i64 }\n\n@REG_EXTENDED = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"%s%s\\00\", align 1\n@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @file_replace(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = alloca i32, align 4\n  %5 = alloca %struct.TYPE_5__, align 8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #3\n  %6 = load i32, ptr @REG_EXTENDED, align 4, !tbaa !5\n  %7 = call i32 @file_regcomp(ptr noundef nonnull %4, ptr noundef %1, i32 noundef %6) #3\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = call i32 @file_regerror(ptr noundef nonnull %4, i32 noundef %7, ptr noundef %0) #3\n  br label %34\n\n11:                                               ; preds = %3\n  %12 = load ptr, ptr %0, align 8, !tbaa !9\n  %13 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %12, i32 noundef 1, ptr noundef nonnull %5, i32 noundef 0) #3\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %34\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  br label %18\n\n18:                                               ; preds = %15, %29\n  %19 = phi i32 [ 0, %15 ], [ %31, %29 ]\n  %20 = load ptr, ptr %0, align 8, !tbaa !9\n  %21 = load i64, ptr %16, align 8, !tbaa !12\n  %22 = getelementptr inbounds i8, ptr %20, i64 %21\n  store i8 0, ptr %22, align 1, !tbaa !15\n  %23 = load i64, ptr %17, align 8, !tbaa !16\n  %24 = icmp eq i64 %23, 0\n  %25 = load ptr, ptr %0, align 8, !tbaa !9\n  %26 = getelementptr inbounds i8, ptr %25, i64 %23\n  %27 = select i1 %24, ptr @.str.1, ptr %26\n  %28 = call i32 @file_printf(ptr noundef nonnull %0, ptr noundef nonnull @.str, ptr noundef %2, ptr noundef %27) #3\n  %29 = icmp eq i32 %28, -1\n  br i1 %29, label %34, label %30\n\n30:                                               ; preds = %18\n  %31 = add nuw nsw i32 %19, 1\n  %32 = load ptr, ptr %0, align 8, !tbaa !9\n  %33 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %32, i32 noundef 1, ptr noundef nonnull %5, i32 noundef 0) #3\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %18, label %35, !llvm.loop !17\n\n35:                                               ; preds = %30\n  %36 = call i32 @file_regfree(ptr noundef nonnull %4) #3\n  %37 = phi i32 [ %31, %30 ], [ -1, %18 ]\n  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  ret i32 %37\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @file_regcomp(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regerror(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @file_regexec(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_printf(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regfree(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_6__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !14, i64 8}\n!13 = !{!\"TYPE_5__\", !14, i64 0, !14, i64 8, !14, i64 16}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!13, !14, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i64, i64, i64 }\n\n@REG_EXTENDED = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"%s%s\\00\", align 1\n@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @file_replace(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = alloca i32, align 4\n  %5 = alloca %struct.TYPE_5__, align 8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #3\n  %6 = load i32, ptr @REG_EXTENDED, align 4, !tbaa !5\n  %7 = call i32 @file_regcomp(ptr noundef nonnull %4, ptr noundef %1, i32 noundef %6) #3\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = call i32 @file_regerror(ptr noundef nonnull %4, i32 noundef %7, ptr noundef %0) #3\n  br label %33\n\n11:                                               ; preds = %3\n  %12 = load ptr, ptr %0, align 8, !tbaa !9\n  %13 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %12, i32 noundef 1, ptr noundef nonnull %5, i32 noundef 0) #3\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %33\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  br label %18\n\n18:                                               ; preds = %15, %28\n  %19 = phi i32 [ 0, %15 ], [ %30, %28 ]\n  %20 = load ptr, ptr %0, align 8, !tbaa !9\n  %21 = load i64, ptr %16, align 8, !tbaa !12\n  %22 = getelementptr inbounds i8, ptr %20, i64 %21\n  store i8 0, ptr %22, align 1, !tbaa !15\n  %23 = load i64, ptr %17, align 8, !tbaa !16\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %27, label %25\n\n25:                                               ; preds = %18\n  %26 = load ptr, ptr %0, align 8, !tbaa !9\n  br label %27\n\n27:                                               ; preds = %25, %18\n  %28 = phi ptr [ %26, %25 ], [ @.str.1, %18 ]\n  %29 = call i32 @file_printf(ptr noundef nonnull %0, ptr noundef nonnull @.str, ptr noundef %2, ptr noundef %28) #3\n  %30 = add i32 %19, 1\n  %31 = load ptr, ptr %0, align 8, !tbaa !9\n  %32 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %31, i32 noundef 1, ptr noundef nonnull %5, i32 noundef 0) #3\n  br i1 %32, label %33, label %18, !llvm.loop !17\n\n33:                                               ; preds = %27, %11, %9\n  %34 = phi i32 [ -1, %9 ], [ 0, %11 ], [ %30, %27 ]\n  %35 = call i32 @file_regfree(ptr noundef nonnull %4) #3\n  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  ret i32 %34\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @file_regcomp(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regerror(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @file_regexec(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_printf(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regfree(ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_6__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !14, i64 8}\n!13 = !{!\"TYPE_5__\", !14, i64 0, !14, i64 8, !14, i64 16}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!13, !14, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/file/src/extr_funcs.c_file_replace.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i64, i64 }\n\n@REG_EXTENDED = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [5 x i8] c\"%s%s\\00\", align 1\n@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @file_replace(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {\n  %4 = alloca i32, align 4\n  %5 = alloca %struct.TYPE_5__, align 8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #3\n  %6 = load i32, ptr @REG_EXTENDED, align 4, !tbaa !5\n  %7 = call i32 @file_regcomp(ptr noundef nonnull %4, ptr noundef %1, i32 noundef %6) #3\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %11, label %9\n\n9:                                                ; preds = %3\n  %10 = call i32 @file_regerror(ptr noundef nonnull %4, i32 noundef %7, ptr noundef %0) #3\n  br label %38\n\n11:                                               ; preds = %3\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #3\n  %12 = load ptr, ptr %0, align 8, !tbaa !9\n  %13 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %12, i32 noundef 1, ptr noundef nonnull %5, i32 noundef 0) #3\n  %14 = icmp eq i64 %13, 0\n  br i1 %14, label %15, label %36\n\n15:                                               ; preds = %11\n  %16 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 1\n  br label %17\n\n17:                                               ; preds = %15, %31\n  %18 = phi i32 [ 0, %15 ], [ %32, %31 ]\n  %19 = load ptr, ptr %0, align 8, !tbaa !9\n  %20 = load i64, ptr %5, align 8, !tbaa !13\n  %21 = getelementptr inbounds i8, ptr %19, i64 %20\n  store i8 0, ptr %21, align 1, !tbaa !16\n  %22 = load i64, ptr %16, align 8, !tbaa !17\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %17\n  %25 = load ptr, ptr %0, align 8, !tbaa !9\n  %26 = getelementptr inbounds i8, ptr %25, i64 %22\n  br label %27\n\n27:                                               ; preds = %17, %24\n  %28 = phi ptr [ %26, %24 ], [ @.str.1, %17 ]\n  %29 = call i32 @file_printf(ptr noundef nonnull %0, ptr noundef nonnull @.str, ptr noundef %2, ptr noundef %28) #3\n  %30 = icmp eq i32 %29, -1\n  br i1 %30, label %36, label %31\n\n31:                                               ; preds = %27\n  %32 = add nuw nsw i32 %18, 1\n  %33 = load ptr, ptr %0, align 8, !tbaa !9\n  %34 = call i64 @file_regexec(ptr noundef nonnull %4, ptr noundef %33, i32 noundef 1, ptr noundef nonnull %5, i32 noundef 0) #3\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %17, label %36, !llvm.loop !18\n\n36:                                               ; preds = %27, %31, %11\n  %37 = phi i32 [ 0, %11 ], [ %32, %31 ], [ -1, %27 ]\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #3\n  br label %38\n\n38:                                               ; preds = %36, %9\n  %39 = phi i32 [ -1, %9 ], [ %37, %36 ]\n  %40 = call i32 @file_regfree(ptr noundef nonnull %4) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #3\n  ret i32 %39\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @file_regcomp(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_regerror(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @file_regexec(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @file_printf(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @file_regfree(ptr noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !12, i64 0}\n!10 = !{!\"magic_set\", !11, i64 0}\n!11 = !{!\"TYPE_4__\", !12, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n!13 = !{!14, !15, i64 0}\n!14 = !{!\"TYPE_5__\", !15, i64 0, !15, i64 8}\n!15 = !{!\"long\", !7, i64 0}\n!16 = !{!7, !7, i64 0}\n!17 = !{!14, !15, i64 8}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_rpc_svcout.c_write_msg_out.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function write_msg_out\n\t.type\twrite_msg_out,@function\nwrite_msg_out:                          # @write_msg_out\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 16\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.1, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.2, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.3, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.4, %esi\n\tcallq\tf_print@PLT\n\tmovq\tinetdflag(%rip), %rax\n\torq\tpmflag(%rip), %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.5, %esi\n\tcallq\tf_print@PLT\n.LBB0_2:\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.6, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.7, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.8, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.9, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.10, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.11, %esi\n\tcallq\tf_print@PLT\n\tmovl\tfout(%rip), %edi\n\tmovl\t$.L.str.12, %esi\n\tpopq\t%rax\n\t.cfi_def_cfa_offset 8\n\tjmp\tf_print@PLT                     # TAILCALL\n.Lfunc_end0:\n\t.size\twrite_msg_out, .Lfunc_end0-write_msg_out\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tfout,@object                    # @fout\n\t.bss\n\t.globl\tfout\n\t.p2align\t2\nfout:\n\t.long\t0                               # 0x0\n\t.size\tfout, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"\\n\"\n\t.size\t.L.str, 2\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"static\\n\"\n\t.size\t.L.str.1, 8\n\n\t.type\t.L.str.2,@object                # @.str.2\n.L.str.2:\n\t.asciz\t\"void _msgout(const char* msg)\\n\"\n\t.size\t.L.str.2, 31\n\n\t.type\t.L.str.3,@object                # @.str.3\n.L.str.3:\n\t.asciz\t\"{\\n\"\n\t.size\t.L.str.3, 3\n\n\t.type\t.L.str.4,@object                # @.str.4\n.L.str.4:\n\t.asciz\t\"#ifdef RPC_SVC_FG\\n\"\n\t.size\t.L.str.4, 19\n\n\t.type\tinetdflag,@object               # @inetdflag\n\t.bss\n\t.globl\tinetdflag\n\t.p2align\t3\ninetdflag:\n\t.quad\t0                               # 0x0\n\t.size\tinetdflag, 8\n\n\t.type\tpmflag,@object                  # @pmflag\n\t.globl\tpmflag\n\t.p2align\t3\npmflag:\n\t.quad\t0                               # 0x0\n\t.size\tpmflag, 8\n\n\t.type\t.L.str.5,@object                # @.str.5\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.5:\n\t.asciz\t\"\\tif (_rpcpmstart)\\n\"\n\t.size\t.L.str.5, 19\n\n\t.type\t.L.str.6,@object                # @.str.6\n.L.str.6:\n\t.asciz\t\"\\t\\tsyslog(LOG_ERR, \\\"%%s\\\", msg);\\n\"\n\t.size\t.L.str.6, 32\n\n\t.type\t.L.str.7,@object                # @.str.7\n.L.str.7:\n\t.asciz\t\"\\telse\\n\"\n\t.size\t.L.str.7, 7\n\n\t.type\t.L.str.8,@object                # @.str.8\n.L.str.8:\n\t.asciz\t\"\\t\\t(void) fprintf(stderr, \\\"%%s\\\\n\\\", msg);\\n\"\n\t.size\t.L.str.8, 41\n\n\t.type\t.L.str.9,@object                # @.str.9\n.L.str.9:\n\t.asciz\t\"#else\\n\"\n\t.size\t.L.str.9, 7\n\n\t.type\t.L.str.10,@object               # @.str.10\n.L.str.10:\n\t.asciz\t\"\\tsyslog(LOG_ERR, \\\"%%s\\\", msg);\\n\"\n\t.size\t.L.str.10, 31\n\n\t.type\t.L.str.11,@object               # @.str.11\n.L.str.11:\n\t.asciz\t\"#endif\\n\"\n\t.size\t.L.str.11, 8\n\n\t.type\t.L.str.12,@object               # @.str.12\n.L.str.12:\n\t.asciz\t\"}\\n\"\n\t.size\t.L.str.12, 3\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@fout = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [2 x i8] c\"\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [8 x i8] c\"static\\0A\\00\", align 1\n@.str.2 = private unnamed_addr constant [31 x i8] c\"void _msgout(const char* msg)\\0A\\00\", align 1\n@.str.3 = private unnamed_addr constant [3 x i8] c\"{\\0A\\00\", align 1\n@.str.4 = private unnamed_addr constant [19 x i8] c\"#ifdef RPC_SVC_FG\\0A\\00\", align 1\n@inetdflag = dso_local local_unnamed_addr global i64 0, align 8\n@pmflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.5 = private unnamed_addr constant [19 x i8] c\"\\09if (_rpcpmstart)\\0A\\00\", align 1\n@.str.6 = private unnamed_addr constant [32 x i8] c\"\\09\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.7 = private unnamed_addr constant [7 x i8] c\"\\09else\\0A\\00\", align 1\n@.str.8 = private unnamed_addr constant [41 x i8] c\"\\09\\09(void) fprintf(stderr, \\22%%s\\\\n\\22, msg);\\0A\\00\", align 1\n@.str.9 = private unnamed_addr constant [7 x i8] c\"#else\\0A\\00\", align 1\n@.str.10 = private unnamed_addr constant [31 x i8] c\"\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.11 = private unnamed_addr constant [8 x i8] c\"#endif\\0A\\00\", align 1\n@.str.12 = private unnamed_addr constant [3 x i8] c\"}\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @write_msg_out], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @write_msg_out() #0 {\n  %1 = load i32, ptr @fout, align 4, !tbaa !5\n  %2 = tail call i32 @f_print(i32 noundef %1, ptr noundef nonnull @.str) #2\n  %3 = load i32, ptr @fout, align 4, !tbaa !5\n  %4 = tail call i32 @f_print(i32 noundef %3, ptr noundef nonnull @.str.1) #2\n  %5 = load i32, ptr @fout, align 4, !tbaa !5\n  %6 = tail call i32 @f_print(i32 noundef %5, ptr noundef nonnull @.str.2) #2\n  %7 = load i32, ptr @fout, align 4, !tbaa !5\n  %8 = tail call i32 @f_print(i32 noundef %7, ptr noundef nonnull @.str.3) #2\n  %9 = load i32, ptr @fout, align 4, !tbaa !5\n  %10 = tail call i32 @f_print(i32 noundef %9, ptr noundef nonnull @.str.4) #2\n  %11 = load i64, ptr @inetdflag, align 8, !tbaa !9\n  %12 = icmp ne i64 %11, 0\n  %13 = load i64, ptr @pmflag, align 8\n  %14 = icmp ne i64 %13, 0\n  %15 = select i1 %12, i1 true, i1 %14\n  br i1 %15, label %16, label %19\n\n16:                                               ; preds = %0\n  %17 = load i32, ptr @fout, align 4, !tbaa !5\n  %18 = tail call i32 @f_print(i32 noundef %17, ptr noundef nonnull @.str.5) #2\n  br label %19\n\n19:                                               ; preds = %16, %0\n  %20 = load i32, ptr @fout, align 4, !tbaa !5\n  %21 = tail call i32 @f_print(i32 noundef %20, ptr noundef nonnull @.str.6) #2\n  %22 = load i32, ptr @fout, align 4, !tbaa !5\n  %23 = tail call i32 @f_print(i32 noundef %22, ptr noundef nonnull @.str.7) #2\n  %24 = load i32, ptr @fout, align 4, !tbaa !5\n  %25 = tail call i32 @f_print(i32 noundef %24, ptr noundef nonnull @.str.8) #2\n  %26 = load i32, ptr @fout, align 4, !tbaa !5\n  %27 = tail call i32 @f_print(i32 noundef %26, ptr noundef nonnull @.str.9) #2\n  %28 = load i32, ptr @fout, align 4, !tbaa !5\n  %29 = tail call i32 @f_print(i32 noundef %28, ptr noundef nonnull @.str.10) #2\n  %30 = load i32, ptr @fout, align 4, !tbaa !5\n  %31 = tail call i32 @f_print(i32 noundef %30, ptr noundef nonnull @.str.11) #2\n  %32 = load i32, ptr @fout, align 4, !tbaa !5\n  %33 = tail call i32 @f_print(i32 noundef %32, ptr noundef nonnull @.str.12) #2\n  ret void\n}\n\ndeclare i32 @f_print(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@fout = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [2 x i8] c\"\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [8 x i8] c\"static\\0A\\00\", align 1\n@.str.2 = private unnamed_addr constant [31 x i8] c\"void _msgout(const char* msg)\\0A\\00\", align 1\n@.str.3 = private unnamed_addr constant [3 x i8] c\"{\\0A\\00\", align 1\n@.str.4 = private unnamed_addr constant [19 x i8] c\"#ifdef RPC_SVC_FG\\0A\\00\", align 1\n@inetdflag = dso_local local_unnamed_addr global i64 0, align 8\n@pmflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.5 = private unnamed_addr constant [19 x i8] c\"\\09if (_rpcpmstart)\\0A\\00\", align 1\n@.str.6 = private unnamed_addr constant [32 x i8] c\"\\09\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.7 = private unnamed_addr constant [7 x i8] c\"\\09else\\0A\\00\", align 1\n@.str.8 = private unnamed_addr constant [41 x i8] c\"\\09\\09(void) fprintf(stderr, \\22%%s\\\\n\\22, msg);\\0A\\00\", align 1\n@.str.9 = private unnamed_addr constant [7 x i8] c\"#else\\0A\\00\", align 1\n@.str.10 = private unnamed_addr constant [31 x i8] c\"\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.11 = private unnamed_addr constant [8 x i8] c\"#endif\\0A\\00\", align 1\n@.str.12 = private unnamed_addr constant [3 x i8] c\"}\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @write_msg_out], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @write_msg_out() #0 {\n  %1 = load i32, ptr @fout, align 4, !tbaa !5\n  %2 = tail call i32 @f_print(i32 noundef %1, ptr noundef nonnull @.str) #2\n  %3 = load i32, ptr @fout, align 4, !tbaa !5\n  %4 = tail call i32 @f_print(i32 noundef %3, ptr noundef nonnull @.str.1) #2\n  %5 = load i32, ptr @fout, align 4, !tbaa !5\n  %6 = tail call i32 @f_print(i32 noundef %5, ptr noundef nonnull @.str.2) #2\n  %7 = load i32, ptr @fout, align 4, !tbaa !5\n  %8 = tail call i32 @f_print(i32 noundef %7, ptr noundef nonnull @.str.3) #2\n  %9 = load i32, ptr @fout, align 4, !tbaa !5\n  %10 = tail call i32 @f_print(i32 noundef %9, ptr noundef nonnull @.str.4) #2\n  %11 = load i64, ptr @inetdflag, align 8, !tbaa !9\n  %12 = icmp ne i64 %11, 0\n  %13 = load i64, ptr @pmflag, align 8\n  %14 = icmp ne i64 %13, 0\n  %15 = select i1 %12, i1 true, i1 %14\n  br i1 %15, label %16, label %19\n\n16:                                               ; preds = %0\n  %17 = load i32, ptr @fout, align 4, !tbaa !5\n  %18 = tail call i32 @f_print(i32 noundef %17, ptr noundef nonnull @.str.5) #2\n  br label %19\n\n19:                                               ; preds = %16, %0\n  %20 = load i32, ptr @fout, align 4, !tbaa !5\n  %21 = tail call i32 @f_print(i32 noundef %20, ptr noundef nonnull @.str.6) #2\n  %22 = load i32, ptr @fout, align 4, !tbaa !5\n  %23 = tail call i32 @f_print(i32 noundef %22, ptr noundef nonnull @.str.7) #2\n  %24 = load i32, ptr @fout, align 4, !tbaa !5\n  %25 = tail call i32 @f_print(i32 noundef %24, ptr noundef nonnull @.str.8) #2\n  %26 = load i32, ptr @fout, align 4, !tbaa !5\n  %27 = tail call i32 @f_print(i32 noundef %26, ptr noundef nonnull @.str.9) #2\n  %28 = load i32, ptr @fout, align 4, !tbaa !5\n  %29 = tail call i32 @f_print(i32 noundef %28, ptr noundef nonnull @.str.10) #2\n  %30 = load i32, ptr @fout, align 4, !tbaa !5\n  %31 = tail call i32 @f_print(i32 noundef %30, ptr noundef nonnull @.str.11) #2\n  %32 = load i32, ptr @fout, align 4, !tbaa !5\n  %33 = tail call i32 @f_print(i32 noundef %32, ptr noundef nonnull @.str.12) #2\n  ret void\n}\n\ndeclare i32 @f_print(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@fout = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [2 x i8] c\"\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [8 x i8] c\"static\\0A\\00\", align 1\n@.str.2 = private unnamed_addr constant [31 x i8] c\"void _msgout(const char* msg)\\0A\\00\", align 1\n@.str.3 = private unnamed_addr constant [3 x i8] c\"{\\0A\\00\", align 1\n@.str.4 = private unnamed_addr constant [19 x i8] c\"#ifdef RPC_SVC_FG\\0A\\00\", align 1\n@inetdflag = dso_local local_unnamed_addr global i64 0, align 8\n@pmflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.5 = private unnamed_addr constant [19 x i8] c\"\\09if (_rpcpmstart)\\0A\\00\", align 1\n@.str.6 = private unnamed_addr constant [32 x i8] c\"\\09\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.7 = private unnamed_addr constant [7 x i8] c\"\\09else\\0A\\00\", align 1\n@.str.8 = private unnamed_addr constant [41 x i8] c\"\\09\\09(void) fprintf(stderr, \\22%%s\\\\n\\22, msg);\\0A\\00\", align 1\n@.str.9 = private unnamed_addr constant [7 x i8] c\"#else\\0A\\00\", align 1\n@.str.10 = private unnamed_addr constant [31 x i8] c\"\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.11 = private unnamed_addr constant [8 x i8] c\"#endif\\0A\\00\", align 1\n@.str.12 = private unnamed_addr constant [3 x i8] c\"}\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @write_msg_out], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @write_msg_out() #0 {\n  %1 = load i32, ptr @fout, align 4, !tbaa !5\n  %2 = tail call i32 @f_print(i32 noundef %1, ptr noundef nonnull @.str) #2\n  %3 = load i32, ptr @fout, align 4, !tbaa !5\n  %4 = tail call i32 @f_print(i32 noundef %3, ptr noundef nonnull @.str.1) #2\n  %5 = load i32, ptr @fout, align 4, !tbaa !5\n  %6 = tail call i32 @f_print(i32 noundef %5, ptr noundef nonnull @.str.2) #2\n  %7 = load i32, ptr @fout, align 4, !tbaa !5\n  %8 = tail call i32 @f_print(i32 noundef %7, ptr noundef nonnull @.str.3) #2\n  %9 = load i32, ptr @fout, align 4, !tbaa !5\n  %10 = tail call i32 @f_print(i32 noundef %9, ptr noundef nonnull @.str.4) #2\n  %11 = load i64, ptr @inetdflag, align 8, !tbaa !9\n  %12 = icmp ne i64 %11, 0\n  %13 = load i64, ptr @pmflag, align 8\n  %14 = icmp ne i64 %13, 0\n  %15 = select i1 %12, i1 true, i1 %14\n  br i1 %15, label %16, label %19\n\n16:                                               ; preds = %0\n  %17 = load i32, ptr @fout, align 4, !tbaa !5\n  %18 = tail call i32 @f_print(i32 noundef %17, ptr noundef nonnull @.str.5) #2\n  br label %19\n\n19:                                               ; preds = %16, %0\n  %20 = load i32, ptr @fout, align 4, !tbaa !5\n  %21 = tail call i32 @f_print(i32 noundef %20, ptr noundef nonnull @.str.6) #2\n  %22 = load i32, ptr @fout, align 4, !tbaa !5\n  %23 = tail call i32 @f_print(i32 noundef %22, ptr noundef nonnull @.str.7) #2\n  %24 = load i32, ptr @fout, align 4, !tbaa !5\n  %25 = tail call i32 @f_print(i32 noundef %24, ptr noundef nonnull @.str.8) #2\n  %26 = load i32, ptr @fout, align 4, !tbaa !5\n  %27 = tail call i32 @f_print(i32 noundef %26, ptr noundef nonnull @.str.9) #2\n  %28 = load i32, ptr @fout, align 4, !tbaa !5\n  %29 = tail call i32 @f_print(i32 noundef %28, ptr noundef nonnull @.str.10) #2\n  %30 = load i32, ptr @fout, align 4, !tbaa !5\n  %31 = tail call i32 @f_print(i32 noundef %30, ptr noundef nonnull @.str.11) #2\n  %32 = load i32, ptr @fout, align 4, !tbaa !5\n  %33 = tail call i32 @f_print(i32 noundef %32, ptr noundef nonnull @.str.12) #2\n  ret void\n}\n\ndeclare i32 @f_print(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@fout = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [2 x i8] c\"\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [8 x i8] c\"static\\0A\\00\", align 1\n@.str.2 = private unnamed_addr constant [31 x i8] c\"void _msgout(const char* msg)\\0A\\00\", align 1\n@.str.3 = private unnamed_addr constant [3 x i8] c\"{\\0A\\00\", align 1\n@.str.4 = private unnamed_addr constant [19 x i8] c\"#ifdef RPC_SVC_FG\\0A\\00\", align 1\n@inetdflag = dso_local local_unnamed_addr global i64 0, align 8\n@pmflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.5 = private unnamed_addr constant [19 x i8] c\"\\09if (_rpcpmstart)\\0A\\00\", align 1\n@.str.6 = private unnamed_addr constant [32 x i8] c\"\\09\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.7 = private unnamed_addr constant [7 x i8] c\"\\09else\\0A\\00\", align 1\n@.str.8 = private unnamed_addr constant [41 x i8] c\"\\09\\09(void) fprintf(stderr, \\22%%s\\\\n\\22, msg);\\0A\\00\", align 1\n@.str.9 = private unnamed_addr constant [7 x i8] c\"#else\\0A\\00\", align 1\n@.str.10 = private unnamed_addr constant [31 x i8] c\"\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.11 = private unnamed_addr constant [8 x i8] c\"#endif\\0A\\00\", align 1\n@.str.12 = private unnamed_addr constant [3 x i8] c\"}\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @write_msg_out], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @write_msg_out() #0 {\n  %1 = load i32, ptr @fout, align 4, !tbaa !5\n  %2 = tail call i32 @f_print(i32 noundef %1, ptr noundef nonnull @.str) #2\n  %3 = load i32, ptr @fout, align 4, !tbaa !5\n  %4 = tail call i32 @f_print(i32 noundef %3, ptr noundef nonnull @.str.1) #2\n  %5 = load i32, ptr @fout, align 4, !tbaa !5\n  %6 = tail call i32 @f_print(i32 noundef %5, ptr noundef nonnull @.str.2) #2\n  %7 = load i32, ptr @fout, align 4, !tbaa !5\n  %8 = tail call i32 @f_print(i32 noundef %7, ptr noundef nonnull @.str.3) #2\n  %9 = load i32, ptr @fout, align 4, !tbaa !5\n  %10 = tail call i32 @f_print(i32 noundef %9, ptr noundef nonnull @.str.4) #2\n  %11 = load i64, ptr @inetdflag, align 8, !tbaa !9\n  %12 = icmp ne i64 %11, 0\n  %13 = load i64, ptr @pmflag, align 8\n  %14 = icmp ne i64 %13, 0\n  %15 = select i1 %12, i1 true, i1 %14\n  br i1 %15, label %16, label %19\n\n16:                                               ; preds = %0\n  %17 = load i32, ptr @fout, align 4, !tbaa !5\n  %18 = tail call i32 @f_print(i32 noundef %17, ptr noundef nonnull @.str.5) #2\n  br label %19\n\n19:                                               ; preds = %16, %0\n  %20 = load i32, ptr @fout, align 4, !tbaa !5\n  %21 = tail call i32 @f_print(i32 noundef %20, ptr noundef nonnull @.str.6) #2\n  %22 = load i32, ptr @fout, align 4, !tbaa !5\n  %23 = tail call i32 @f_print(i32 noundef %22, ptr noundef nonnull @.str.7) #2\n  %24 = load i32, ptr @fout, align 4, !tbaa !5\n  %25 = tail call i32 @f_print(i32 noundef %24, ptr noundef nonnull @.str.8) #2\n  %26 = load i32, ptr @fout, align 4, !tbaa !5\n  %27 = tail call i32 @f_print(i32 noundef %26, ptr noundef nonnull @.str.9) #2\n  %28 = load i32, ptr @fout, align 4, !tbaa !5\n  %29 = tail call i32 @f_print(i32 noundef %28, ptr noundef nonnull @.str.10) #2\n  %30 = load i32, ptr @fout, align 4, !tbaa !5\n  %31 = tail call i32 @f_print(i32 noundef %30, ptr noundef nonnull @.str.11) #2\n  %32 = load i32, ptr @fout, align 4, !tbaa !5\n  %33 = tail call i32 @f_print(i32 noundef %32, ptr noundef nonnull @.str.12) #2\n  ret void\n}\n\ndeclare i32 @f_print(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/usr.bin/rpcgen/extr_rpc_svcout.c_write_msg_out.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@fout = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [2 x i8] c\"\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [8 x i8] c\"static\\0A\\00\", align 1\n@.str.2 = private unnamed_addr constant [31 x i8] c\"void _msgout(const char* msg)\\0A\\00\", align 1\n@.str.3 = private unnamed_addr constant [3 x i8] c\"{\\0A\\00\", align 1\n@.str.4 = private unnamed_addr constant [19 x i8] c\"#ifdef RPC_SVC_FG\\0A\\00\", align 1\n@inetdflag = dso_local local_unnamed_addr global i64 0, align 8\n@pmflag = dso_local local_unnamed_addr global i64 0, align 8\n@.str.5 = private unnamed_addr constant [19 x i8] c\"\\09if (_rpcpmstart)\\0A\\00\", align 1\n@.str.6 = private unnamed_addr constant [32 x i8] c\"\\09\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.7 = private unnamed_addr constant [7 x i8] c\"\\09else\\0A\\00\", align 1\n@.str.8 = private unnamed_addr constant [41 x i8] c\"\\09\\09(void) fprintf(stderr, \\22%%s\\\\n\\22, msg);\\0A\\00\", align 1\n@.str.9 = private unnamed_addr constant [7 x i8] c\"#else\\0A\\00\", align 1\n@.str.10 = private unnamed_addr constant [31 x i8] c\"\\09syslog(LOG_ERR, \\22%%s\\22, msg);\\0A\\00\", align 1\n@.str.11 = private unnamed_addr constant [8 x i8] c\"#endif\\0A\\00\", align 1\n@.str.12 = private unnamed_addr constant [3 x i8] c\"}\\0A\\00\", align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @write_msg_out], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @write_msg_out() #0 {\n  %1 = load i32, ptr @fout, align 4, !tbaa !5\n  %2 = tail call i32 @f_print(i32 noundef %1, ptr noundef nonnull @.str) #2\n  %3 = load i32, ptr @fout, align 4, !tbaa !5\n  %4 = tail call i32 @f_print(i32 noundef %3, ptr noundef nonnull @.str.1) #2\n  %5 = load i32, ptr @fout, align 4, !tbaa !5\n  %6 = tail call i32 @f_print(i32 noundef %5, ptr noundef nonnull @.str.2) #2\n  %7 = load i32, ptr @fout, align 4, !tbaa !5\n  %8 = tail call i32 @f_print(i32 noundef %7, ptr noundef nonnull @.str.3) #2\n  %9 = load i32, ptr @fout, align 4, !tbaa !5\n  %10 = tail call i32 @f_print(i32 noundef %9, ptr noundef nonnull @.str.4) #2\n  %11 = load i64, ptr @inetdflag, align 8, !tbaa !9\n  %12 = icmp ne i64 %11, 0\n  %13 = load i64, ptr @pmflag, align 8\n  %14 = icmp ne i64 %13, 0\n  %15 = select i1 %12, i1 true, i1 %14\n  br i1 %15, label %16, label %19\n\n16:                                               ; preds = %0\n  %17 = load i32, ptr @fout, align 4, !tbaa !5\n  %18 = tail call i32 @f_print(i32 noundef %17, ptr noundef nonnull @.str.5) #2\n  br label %19\n\n19:                                               ; preds = %0, %16\n  %20 = load i32, ptr @fout, align 4, !tbaa !5\n  %21 = tail call i32 @f_print(i32 noundef %20, ptr noundef nonnull @.str.6) #2\n  %22 = load i32, ptr @fout, align 4, !tbaa !5\n  %23 = tail call i32 @f_print(i32 noundef %22, ptr noundef nonnull @.str.7) #2\n  %24 = load i32, ptr @fout, align 4, !tbaa !5\n  %25 = tail call i32 @f_print(i32 noundef %24, ptr noundef nonnull @.str.8) #2\n  %26 = load i32, ptr @fout, align 4, !tbaa !5\n  %27 = tail call i32 @f_print(i32 noundef %26, ptr noundef nonnull @.str.9) #2\n  %28 = load i32, ptr @fout, align 4, !tbaa !5\n  %29 = tail call i32 @f_print(i32 noundef %28, ptr noundef nonnull @.str.10) #2\n  %30 = load i32, ptr @fout, align 4, !tbaa !5\n  %31 = tail call i32 @f_print(i32 noundef %30, ptr noundef nonnull @.str.11) #2\n  %32 = load i32, ptr @fout, align 4, !tbaa !5\n  %33 = tail call i32 @f_print(i32 noundef %32, ptr noundef nonnull @.str.12) #2\n  ret void\n}\n\ndeclare i32 @f_print(i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_vt_buf.c_vthistory_seek.ll\"\n\t.globl\tvthistory_seek                  # -- Begin function vthistory_seek\n\t.p2align\t4, 0x90\n\t.type\tvthistory_seek,@function\nvthistory_seek:                         # @vthistory_seek\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rdi, %rbx\n\tmovl\t(%rdi), %edi\n\ttestl\t%edi, VBF_SCROLL(%rip)\n\tje\t.LBB0_1\n# %bb.3:\n\tmovl\t8(%rbx), %ebp\n\txorl\t%eax, %eax\n\tmovl\t$0, %ecx\n\ttestl\t%edi, VBF_HISTORY_FULL(%rip)\n\tje\t.LBB0_5\n# %bb.4:\n\tmovl\t16(%rbx), %ecx\n\taddl\t%ebp, %ecx\n\tsubl\t12(%rbx), %ecx\n.LBB0_5:\n\tcmpl\t$130, %edx\n\tje\t.LBB0_9\n# %bb.6:\n\tcmpl\t$129, %edx\n\tje\t.LBB0_13\n# %bb.7:\n\tcmpl\t$128, %edx\n\tjne\t.LBB0_14\n# %bb.8:\n\txorl\t%eax, %eax\n\ttestl\t%esi, %esi\n\tcmovgl\t%esi, %eax\n\taddl\t%eax, %ecx\n\tmovl\t%ecx, %eax\n\tjmp\t.LBB0_14\n.LBB0_1:\n\tmovl\t8(%rbx), %eax\n\txorl\t%ecx, %ecx\n\tcmpl\t%eax, 4(%rbx)\n\tje\t.LBB0_15\n# %bb.2:\n\tmovl\t%eax, 4(%rbx)\n\tmovl\t$65535, %ecx                    # imm = 0xFFFF\n\tjmp\t.LBB0_15\n.LBB0_9:\n\tmovl\t4(%rbx), %edi\n\tmovl\t16(%rbx), %eax\n\taddl\t%ebp, %eax\n\tcmpl\t%eax, %edi\n\tjl\t.LBB0_11\n# %bb.10:\n\tsubl\t12(%rbx), %edi\n.LBB0_11:\n\taddl\t%esi, %edi\n\tmovl\t%ecx, %esi\n\tcallq\tMAX@PLT\n\tmovl\t%eax, %edi\n\tmovl\t%ebp, %esi\n\tcallq\tMIN@PLT\n\ttestl\t%eax, %eax\n\tjns\t.LBB0_14\n# %bb.12:\n\tmovl\t12(%rbx), %ecx\n\taddl\t%ecx, %eax\n\tjmp\t.LBB0_14\n.LBB0_13:\n\tmovl\t%ebp, %eax\n.LBB0_14:\n\txorl\t%ecx, %ecx\n\tcmpl\t%eax, 4(%rbx)\n\tsetne\t%cl\n\tmovl\t%eax, 4(%rbx)\n.LBB0_15:\n\tmovl\t%ecx, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tvthistory_seek, .Lfunc_end0-vthistory_seek\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tVBF_SCROLL,@object              # @VBF_SCROLL\n\t.bss\n\t.globl\tVBF_SCROLL\n\t.p2align\t2\nVBF_SCROLL:\n\t.long\t0                               # 0x0\n\t.size\tVBF_SCROLL, 4\n\n\t.type\tVBF_HISTORY_FULL,@object        # @VBF_HISTORY_FULL\n\t.globl\tVBF_HISTORY_FULL\n\t.p2align\t2\nVBF_HISTORY_FULL:\n\t.long\t0                               # 0x0\n\t.size\tVBF_HISTORY_FULL, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.vc_data = type { i32, i32, i32, i32, i32 }\n\n@VBF_SCROLL = dso_local local_unnamed_addr global i32 0, align 4\n@VBF_HISTORY_FULL = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @vthistory_seek(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = load i32, ptr @VBF_SCROLL, align 4, !tbaa !10\n  %6 = and i32 %5, %4\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %8, label %21\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !12\n  %13 = icmp eq i32 %10, %12\n  br i1 %13, label %38, label %14\n\n14:                                               ; preds = %8\n  store i32 %12, ptr %9, align 4, !tbaa !11\n  %15 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %16 = load i32, ptr %15, align 4, !tbaa !13\n  %17 = icmp slt i32 %16, %12\n  %18 = select i1 %17, i32 65535, i32 0\n  br label %38\n\n19:                                               ; preds = %35\n  %20 = add nsw i32 %36, %1\n  br label %38\n\n21:                                               ; preds = %3\n  %22 = load i32, ptr @VBF_HISTORY_FULL, align 4, !tbaa !10\n  %23 = and i32 %22, %4\n  %24 = icmp eq i32 %23, 0\n  %25 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 4\n  %26 = load i32, ptr %25, align 4, !tbaa !14\n  %27 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %28 = load i32, ptr %27, align 4, !tbaa !12\n  %29 = add nsw i32 %26, %28\n  %30 = sub nsw i32 %29, %12\n  %31 = select i1 %24, i32 0, i32 %30\n  switch i32 %2, label %38 [\n    i32 128, label %32\n    i32 129, label %39\n    i32 130, label %40\n  ]\n\n32:                                               ; preds = %21\n  %33 = tail call i32 @llvm.smax.i32(i32 %1, i32 0)\n  %34 = add nsw i32 %33, %31\n  br label %38\n\n35:                                               ; preds = %39\n  %36 = load i32, ptr %9, align 4, !tbaa !11\n  %37 = icmp slt i32 %36, %12\n  br i1 %37, label %19, label %39\n\n38:                                               ; preds = %21, %35, %19, %14, %8\n  %39 = phi i32 [ %18, %14 ], [ %36, %35 ], [ %20, %19 ], [ %12, %21 ], [ 0, %8 ]\n  %40 = phi i32 [ %31, %21 ], [ %31, %35 ], [ %31, %19 ], [ %12, %14 ], [ %12, %8 ]\n  br label %41\n\n41:                                               ; preds = %38, %40\n  %42 = phi i32 [ %40, %40 ], [ %39, %38 ]\n  %43 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %44 = load i32, ptr %43, align 4, !tbaa !11\n  %45 = icmp ne i32 %44, %42\n  %46 = zext i1 %45 to i32\n  store i32 %42, ptr %43, align 4, !tbaa !11\n  ret i32 %46\n\n47:                                               ; preds = %40\n  %48 = load i32, ptr %27, align 4, !tbaa !12\n  %49 = add nsw i32 %48, %42\n  %50 = tail call i32 @MIN(i32 noundef %49, i32 noundef %12) #3\n  %51 = icmp slt i32 %50, 0\n  br i1 %51, label %52, label %55\n\n52:                                               ; preds = %47\n  %53 = load i32, ptr %11, align 4, !tbaa !12\n  %54 = add nsw i32 %53, %50\n  br label %55\n\n55:                                               ; preds = %52, %47\n  %56 = phi i32 [ %54, %52 ], [ %42, %47 ]\n  %57 = tail call i32 @MAX(i32 noundef %50, i32 noundef %12) #3\n  %58 = tail call i32 @MIN(i32 noundef %57, i32 noundef %12) #3\n  %59 = icmp slt i32 %58, 0\n  br i1 %59, label %60, label %41\n\n60:                                               ; preds = %55\n  %61 = load i32, ptr %27, align 4, !tbaa !12\n  %62 = add nsw i32 %61, %58\n  br label %41\n}\n\ndeclare i32 @MIN(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @MAX(i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smax.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"vc_data\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !7, i64 8}\n!13 = !{!6, !7, i64 12}\n!14 = !{!6, !7, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.vc_data = type { i32, i32, i32, i32, i32 }\n\n@VBF_SCROLL = dso_local local_unnamed_addr global i32 0, align 4\n@VBF_HISTORY_FULL = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @vthistory_seek(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = load i32, ptr @VBF_SCROLL, align 4, !tbaa !10\n  %6 = and i32 %5, %4\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %8, label %20\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !12\n  %13 = icmp eq i32 %10, %12\n  br i1 %13, label %39, label %14\n\n14:                                               ; preds = %8\n  store i32 %12, ptr %9, align 4, !tbaa !11\n  %15 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %16 = load i32, ptr %15, align 4, !tbaa !13\n  %17 = icmp slt i32 %16, %10\n  %18 = select i1 %17, i32 65535, i32 0\n  %19 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 4\n  br label %39\n\n20:                                               ; preds = %3\n  %21 = load i32, ptr @VBF_HISTORY_FULL, align 4, !tbaa !10\n  %22 = and i32 %21, %4\n  %23 = icmp eq i32 %22, 0\n  %24 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %25 = load i32, ptr %24, align 4, !tbaa !12\n  %26 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %27 = load i32, ptr %26, align 4, !tbaa !13\n  %28 = load i32, ptr %0, align 4, !tbaa !5\n  %29 = add i32 %28, %25\n  %30 = sub i32 %29, %27\n  %31 = select i1 %23, i32 0, i32 %30\n  switch i32 %2, label %40 [\n    i32 128, label %32\n    i32 129, label %37\n    i32 130, label %35\n  ]\n\n32:                                               ; preds = %20\n  %33 = tail call i32 @llvm.smax.i32(i32 %1, i32 0)\n  %34 = add nsw i32 %33, %31\n  br label %40\n\n35:                                               ; preds = %20\n  %36 = load i32, ptr %24, align 4, !tbaa !12\n  br label %40\n\n37:                                               ; preds = %20\n  %38 = load i32, ptr %24, align 4, !tbaa !12\n  br label %40\n\n39:                                               ; preds = %8, %14\n  %40 = phi i32 [ %18, %14 ], [ %10, %8 ]\n  %41 = phi i32 [ %36, %35 ], [ %38, %37 ]\n  %42 = phi i32 [ %34, %32 ], [ %31, %20 ]\n  %43 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %44 = load i32, ptr %43, align 4, !tbaa !11\n  %45 = icmp ne i32 %44, %41\n  %46 = zext i1 %45 to i32\n  store i32 %41, ptr %43, align 4, !tbaa !11\n  br label %47\n\n40:                                               ; preds = %20, %35, %37\n  %41 = phi i32 [ %40, %20 ], [ %36, %35 ], [ %38, %37 ]\n  %42 = phi i32 [ %31, %20 ], [ %34, %35 ], [ %31, %37 ]\n  br label %47\n\n43:                                               ; preds = %47\n  %44 = phi i32 [ %46, %47 ], [ %48, %40 ]\n  %45 = phi i32 [ %42, %47 ], [ %41, %40 ]\n  %46 = phi i32 [ %49, %47 ], [ %42, %40 ]\n  %47 = add nsw i32 %45, %44\n  %48 = add nsw i32 %46, %44\n  %49 = add nsw i32 %47, %44\n  %50 = icmp slt i32 %47, %41\n  br i1 %50, label %43, label %40, !llvm.loop !14\n\n47:                                               ; preds = %40, %43\n  %48 = phi i32 [ %46, %43 ], [ %42, %40 ]\n  %49 = phi i32 [ %47, %43 ], [ %41, %40 ]\n  %50 = icmp slt i32 %49, %41\n  %51 = zext i1 %50 to i32\n  store i32 %49, ptr %43, align 4, !tbaa !11\n  br label %52\n\n52:                                               ; preds = %47, %39\n  %53 = phi i32 [ %48, %47 ], [ %40, %39 ]\n  ret i32 %53\n}\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smax.i32(i32, i32) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"vc_data\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !7, i64 8}\n!13 = !{!6, !7, i64 12}\n!14 = distinct !{!14, !15}\n!15 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.vc_data = type { i32, i32, i32, i32, i32 }\n\n@VBF_SCROLL = dso_local local_unnamed_addr global i32 0, align 4\n@VBF_HISTORY_FULL = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @vthistory_seek(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = load i32, ptr @VBF_SCROLL, align 4, !tbaa !10\n  %6 = and i32 %5, %4\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %8, label %20\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !12\n  %13 = icmp eq i32 %10, %12\n  br i1 %13, label %39, label %14\n\n14:                                               ; preds = %8\n  store i32 %12, ptr %9, align 4, !tbaa !11\n  %15 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %16 = load i32, ptr %15, align 4, !tbaa !13\n  %17 = icmp slt i32 %16, %10\n  %18 = select i1 %17, i32 65535, i32 0\n  br label %39\n\n19:                                               ; preds = %35\n  %20 = load i32, ptr @VBF_HISTORY_FULL, align 4, !tbaa !10\n  %21 = and i32 %20, %4\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %31, label %23\n\n23:                                               ; preds = %19\n  %24 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 4\n  %25 = load i32, ptr %24, align 4, !tbaa !14\n  %26 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %27 = load i32, ptr %26, align 4, !tbaa !12\n  %28 = add i32 %25, %27\n  %29 = load i32, ptr %0, align 4, !tbaa !5\n  %30 = sub i32 %28, %29\n  br label %31\n\n31:                                               ; preds = %23, %19\n  %32 = phi i32 [ %30, %23 ], [ %25, %19 ]\n  %33 = icmp eq i32 %2, 128\n  br i1 %33, label %34, label %38\n\n34:                                               ; preds = %31\n  %35 = tail call i32 @llvm.smax.i32(i32 %1, i32 0)\n  %36 = add nsw i32 %35, %32\n  br label %38\n\n37:                                               ; preds = %38\n  br label %39\n\n38:                                               ; preds = %31, %34\n  %39 = phi i32 [ %36, %34 ], [ %32, %31 ]\n  br label %37\n\n40:                                               ; preds = %44\n  %41 = load i32, ptr %0, align 4, !tbaa !5\n  %42 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %43 = load i32, ptr %42, align 4, !tbaa !11\n  br label %37\n\n44:                                               ; preds = %40\n  %45 = load i32, ptr %0, align 4, !tbaa !5\n  %46 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %47 = load i32, ptr %46, align 4, !tbaa !11\n  %48 = icmp slt i32 %45, %47\n  %49 = load i32, ptr %0, align 4, !tbaa !5\n  %50 = sub nsw i32 %49, %45\n  %51 = add nsw i32 %50, %1\n  %52 = tail call i32 @MAX(i32 noundef %51, i32 noundef %48) #3\n  %53 = tail call i32 @MIN(i32 noundef %52, i32 noundef %47) #3\n  %54 = icmp slt i32 %53, 0\n  br i1 %54, label %55, label %58\n\n55:                                               ; preds = %44\n  %56 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %57 = load i32, ptr %56, align 4, !tbaa !13\n  br label %58\n\n58:                                               ; preds = %55, %44\n  %59 = phi i32 [ %57, %55 ], [ %53, %44 ]\n  %60 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %61 = load i32, ptr %60, align 4, !tbaa !11\n  %62 = icmp ne i32 %61, %59\n  %63 = zext i1 %62 to i32\n  store i32 %59, ptr %60, align 4, !tbaa !11\n  br label %37\n\n64:                                               ; preds = %65\n  %65 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %66 = load i32, ptr %65, align 4, !tbaa !11\n  %67 = icmp slt i32 %66, %12\n  %68 = load i32, ptr %0, align 4, !tbaa !5\n  %69 = sub nsw i32 %68, %66\n  %70 = add nsw i32 %69, %1\n  %71 = tail call i32 @MAX(i32 noundef %70, i32 noundef %67) #3\n  %72 = tail call i32 @MIN(i32 noundef %71, i32 noundef %12) #3\n  %73 = icmp slt i32 %72, 0\n  br i1 %73, label %74, label %77\n\n74:                                               ; preds = %64\n  %75 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %76 = load i32, ptr %75, align 4, !tbaa !13\n  br label %77\n\n77:                                               ; preds = %74, %64\n  %78 = phi i32 [ %76, %74 ], [ %72, %64 ]\n  %79 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %80 = load i32, ptr %79, align 4, !tbaa !11\n  %81 = icmp ne i32 %80, %78\n  %82 = zext i1 %81 to i32\n  store i32 %78, ptr %79, align 4, !tbaa !11\n  br label %37\n\n83:                                               ; preds = %84\n  %85 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %86 = load i32, ptr %85, align 4, !tbaa !11\n  %87 = icmp slt i32 %86, %12\n  %88 = load i32, ptr %0, align 4, !tbaa !5\n  %89 = sub nsw i32 %88, %86\n  %90 = add nsw i32 %89, %1\n  %91 = tail call i32 @MAX(i32 noundef %90, i32 noundef %87) #3\n  %92 = tail call i32 @MIN(i32 noundef %91, i32 noundef %12) #3\n  %93 = icmp slt i32 %92, 0\n  br i1 %93, label %94, label %97\n\n94:                                               ; preds = %83\n  %95 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %96 = load i32, ptr %95, align 4, !tbaa !13\n  br label %97\n\n97:                                               ; preds = %94, %83\n  %98 = phi i32 [ %96, %94 ], [ %92, %83 ]\n  %99 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %100 = load i32, ptr %99, align 4, !tbaa !11\n  %101 = icmp ne i32 %100, %98\n  %102 = zext i1 %101 to i32\n  store i32 %98, ptr %99, align 4, !tbaa !11\n  br label %37\n\n103:                                              ; preds = %104\n  %105 = load i32, ptr %0, align 4, !tbaa !5\n  %106 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %107 = load i32, ptr %106, align 4, !tbaa !11\n  %108 = icmp slt i32 %105, %107\n  %109 = load i32, ptr", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.vc_data = type { i32, i32, i32, i32, i32 }\n\n@VBF_SCROLL = dso_local local_unnamed_addr global i32 0, align 4\n@VBF_HISTORY_FULL = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @vthistory_seek(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = load i32, ptr @VBF_SCROLL, align 4, !tbaa !10\n  %6 = and i32 %5, %4\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %8, label %20\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !11\n  %11 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !12\n  %13 = icmp eq i32 %10, %12\n  br i1 %13, label %41, label %14\n\n14:                                               ; preds = %8\n  store i32 %12, ptr %9, align 4, !tbaa !11\n  %15 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 3\n  %16 = load i32, ptr %15, align 4, !tbaa !13\n  %17 = icmp slt i32 %16, %12\n  %18 = select i1 %17, i32 65535, i32 0\n  br label %41\n\n19:                                               ; preds = %35\n  %20 = load i32, ptr @VBF_HISTORY_FULL, align 4, !tbaa !10\n  %21 = and i32 %20, %4\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %31, label %23\n\n23:                                               ; preds = %19\n  %24 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 4\n  %25 = load i32, ptr %24, align 4, !tbaa !14\n  %26 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %27 = load i32, ptr %26, align 4, !tbaa !12\n  %28 = add nsw i32 %25, %27\n  %29 = load i32, ptr %0, align 4, !tbaa !5\n  %30 = sub nsw i32 %28, %29\n  br label %31\n\n31:                                               ; preds = %23, %19\n  %32 = phi i32 [ %30, %23 ], [ %18, %19 ]\n  %33 = icmp eq i32 %2, 128\n  br i1 %33, label %34, label %39\n\n34:                                               ; preds = %31\n  %35 = tail call i32 @llvm.smax.i32(i32 %1, i32 0)\n  %36 = add nsw i32 %35, %32\n  br label %39\n\n37:                                               ; preds = %38\n  %38 = add nsw i32 %39, %32\n  br label %39\n\n39:                                               ; preds = %34, %37, %31\n  %40 = phi i32 [ %32, %31 ], [ %38, %37 ], [ %36, %34 ]\n  br label %41\n\n41:                                               ; preds = %39, %14, %8\n  %42 = phi i32 [ %18, %14 ], [ 0, %8 ], [ %40, %39 ]\n  %43 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %44 = load i32, ptr %43, align 4, !tbaa !11\n  %45 = icmp ne i32 %44, %12\n  %46 = zext i1 %45 to i32\n  store i32 %12, ptr %43, align 4, !tbaa !11\n  br label %47\n\n47:                                               ; preds = %41, %38\n  %48 = phi i32 [ %39, %38 ], [ %42, %41 ]\n  ret i32 %48\n}\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smax.i32(i32, i32) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"vc_data\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !7, i64 8}\n!13 = !{!6, !7, i64 12}\n!14 = !{!6, !7, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/dev/vt/extr_vt_buf.c_vthistory_seek.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.vt_buf = type { i32, i32, i32, i32, %struct.TYPE_2__ }\n%struct.TYPE_2__ = type { i32 }\n\n@VBF_SCROLL = dso_local local_unnamed_addr global i32 0, align 4\n@VBF_HISTORY_FULL = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @vthistory_seek(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 4, !tbaa !5\n  %5 = load i32, ptr @VBF_SCROLL, align 4, !tbaa !11\n  %6 = and i32 %5, %4\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %8, label %15\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !12\n  %11 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 2\n  %12 = load i32, ptr %11, align 4, !tbaa !13\n  %13 = icmp eq i32 %10, %12\n  br i1 %13, label %61, label %14\n\n14:                                               ; preds = %8\n  store i32 %12, ptr %9, align 4, !tbaa !12\n  br label %61\n\n15:                                               ; preds = %3\n  %16 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 2\n  %17 = load i32, ptr %16, align 4, !tbaa !13\n  %18 = load i32, ptr @VBF_HISTORY_FULL, align 4, !tbaa !11\n  %19 = and i32 %18, %4\n  %20 = icmp eq i32 %19, 0\n  br i1 %20, label %28, label %21\n\n21:                                               ; preds = %15\n  %22 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 4\n  %23 = load i32, ptr %22, align 4, !tbaa !14\n  %24 = add nsw i32 %23, %17\n  %25 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 3\n  %26 = load i32, ptr %25, align 4, !tbaa !15\n  %27 = sub i32 %24, %26\n  br label %28\n\n28:                                               ; preds = %15, %21\n  %29 = phi i32 [ %27, %21 ], [ 0, %15 ]\n  switch i32 %2, label %55 [\n    i32 128, label %30\n    i32 130, label %33\n    i32 129, label %54\n  ]\n\n30:                                               ; preds = %28\n  %31 = tail call i32 @llvm.smax.i32(i32 %1, i32 0)\n  %32 = add nsw i32 %29, %31\n  br label %55\n\n33:                                               ; preds = %28\n  %34 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 1\n  %35 = load i32, ptr %34, align 4, !tbaa !12\n  %36 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 4\n  %37 = load i32, ptr %36, align 4, !tbaa !14\n  %38 = add nsw i32 %37, %17\n  %39 = icmp slt i32 %35, %38\n  br i1 %39, label %44, label %40\n\n40:                                               ; preds = %33\n  %41 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 3\n  %42 = load i32, ptr %41, align 4, !tbaa !15\n  %43 = sub nsw i32 %35, %42\n  br label %44\n\n44:                                               ; preds = %40, %33\n  %45 = phi i32 [ %43, %40 ], [ %35, %33 ]\n  %46 = add nsw i32 %45, %1\n  %47 = tail call i32 @MAX(i32 noundef %46, i32 noundef %29) #3\n  %48 = tail call i32 @MIN(i32 noundef %47, i32 noundef %17) #3\n  %49 = icmp slt i32 %48, 0\n  br i1 %49, label %50, label %55\n\n50:                                               ; preds = %44\n  %51 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 3\n  %52 = load i32, ptr %51, align 4, !tbaa !15\n  %53 = add nsw i32 %52, %48\n  br label %55\n\n54:                                               ; preds = %28\n  br label %55\n\n55:                                               ; preds = %44, %50, %28, %54, %30\n  %56 = phi i32 [ 0, %28 ], [ %17, %54 ], [ %53, %50 ], [ %48, %44 ], [ %32, %30 ]\n  %57 = getelementptr inbounds %struct.vt_buf, ptr %0, i64 0, i32 1\n  %58 = load i32, ptr %57, align 4, !tbaa !12\n  %59 = icmp ne i32 %58, %56\n  %60 = zext i1 %59 to i32\n  store i32 %56, ptr %57, align 4, !tbaa !12\n  br label %61\n\n61:                                               ; preds = %8, %55, %14\n  %62 = phi i32 [ 65535, %14 ], [ %60, %55 ], [ 0, %8 ]\n  ret i32 %62\n}\n\ndeclare i32 @MAX(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @MIN(i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smax.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"vt_buf\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_2__\", !7, i64 0}\n!11 = !{!7, !7, i64 0}\n!12 = !{!6, !7, i64 4}\n!13 = !{!6, !7, i64 8}\n!14 = !{!6, !7, i64 16}\n!15 = !{!6, !7, i64 12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_gcse.c_load_killed_in_block_p.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function load_killed_in_block_p\n\t.type\tload_killed_in_block_p,@function\nload_killed_in_block_p:                 # @load_killed_in_block_p\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, %r15d\n\tmovq\t%rdx, %r14\n\tmovl\t%esi, %r12d\n\tmovq\tmodify_mem_list(%rip), %rax\n\tmovq\t(%rdi), %rcx\n\tmovq\t(%rax,%rcx,8), %rbx\n\tmovq\t%rdx, %rdi\n\tcallq\tMEM_READONLY_P@PLT\n\txorl\t%r13d, %r13d\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_10\n# %bb.1:\n\ttestq\t%rbx, %rbx\n\tje\t.LBB0_10\n# %bb.2:\n\tmovl\t$1, %r13d\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_8:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t%rbx, %rdi\n\tmovl\t$1, %esi\n\tcallq\tXEXP@PLT\n\tmovq\t%rax, %rbx\n\ttestq\t%rax, %rax\n\tje\t.LBB0_9\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t%rbx, %rdi\n\txorl\t%esi, %esi\n\tcallq\tXEXP@PLT\n\tmovq\t%rax, %rdi\n\tcallq\tINSN_CUID@PLT\n\ttestl\t%r15d, %r15d\n\tje\t.LBB0_5\n# %bb.4:                                #   in Loop: Header=BB0_3 Depth=1\n\tcmpl\t%r12d, %eax\n\tjl\t.LBB0_8\n\tjmp\t.LBB0_6\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   in Loop: Header=BB0_3 Depth=1\n\tcmpl\t%r12d, %eax\n\tjg\t.LBB0_8\n.LBB0_6:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t%rbx, %rdi\n\txorl\t%esi, %esi\n\tcallq\tXEXP@PLT\n\tmovq\t%rax, %rbp\n\tmovq\t%rax, %rdi\n\tcallq\tCALL_P@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_10\n# %bb.7:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t%r14, gcse_mem_operand(%rip)\n\tmovq\t$0, gcse_mems_conflict_p(%rip)\n\tmovq\t%rbp, %rdi\n\tcallq\tPATTERN@PLT\n\tmovl\tmems_conflict_for_gcse_p(%rip), %esi\n\tmovl\t%eax, %edi\n\txorl\t%edx, %edx\n\tcallq\tnote_stores@PLT\n\tcmpq\t$0, gcse_mems_conflict_p(%rip)\n\tje\t.LBB0_8\n\tjmp\t.LBB0_10\n.LBB0_9:\n\txorl\t%r13d, %r13d\n.LBB0_10:\n\tmovl\t%r13d, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tload_killed_in_block_p, .Lfunc_end0-load_killed_in_block_p\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tmodify_mem_list,@object         # @modify_mem_list\n\t.bss\n\t.globl\tmodify_mem_list\n\t.p2align\t3\nmodify_mem_list:\n\t.quad\t0\n\t.size\tmodify_mem_list, 8\n\n\t.type\tgcse_mem_operand,@object        # @gcse_mem_operand\n\t.globl\tgcse_mem_operand\n\t.p2align\t3\ngcse_mem_operand:\n\t.quad\t0                               # 0x0\n\t.size\tgcse_mem_operand, 8\n\n\t.type\tgcse_mems_conflict_p,@object    # @gcse_mems_conflict_p\n\t.globl\tgcse_mems_conflict_p\n\t.p2align\t3\ngcse_mems_conflict_p:\n\t.quad\t0                               # 0x0\n\t.size\tgcse_mems_conflict_p, 8\n\n\t.type\tmems_conflict_for_gcse_p,@object # @mems_conflict_for_gcse_p\n\t.globl\tmems_conflict_for_gcse_p\n\t.p2align\t2\nmems_conflict_for_gcse_p:\n\t.long\t0                               # 0x0\n\t.size\tmems_conflict_for_gcse_p, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@modify_mem_list = dso_local local_unnamed_addr global ptr null, align 8\n@gcse_mem_operand = dso_local local_unnamed_addr global i64 0, align 8\n@gcse_mems_conflict_p = dso_local local_unnamed_addr global i64 0, align 8\n@mems_conflict_for_gcse_p = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @load_killed_in_block_p], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @load_killed_in_block_p(ptr nocapture noundef readonly %0, i32 noundef %1, i64 noundef %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr @modify_mem_list, align 8, !tbaa !5\n  %6 = load i64, ptr %0, align 8, !tbaa !9\n  %7 = getelementptr inbounds i64, ptr %5, i64 %6\n  %8 = load i64, ptr %7, align 8, !tbaa !12\n  %9 = tail call i64 @MEM_READONLY_P(i64 noundef %2) #2\n  %10 = icmp ne i64 %9, 0\n  %11 = icmp eq i64 %8, 0\n  %12 = or i1 %10, %11\n  br i1 %12, label %33, label %13\n\n13:                                               ; preds = %4\n  %14 = icmp eq i32 %3, 0\n  br label %15\n\n15:                                               ; preds = %13, %27\n  %16 = phi i64 [ %8, %13 ], [ %28, %27 ]\n  %17 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %18 = tail call i32 @INSN_CUID(i64 noundef %17) #2\n  br i1 %14, label %22, label %19\n\n19:                                               ; preds = %15\n  %20 = icmp slt i32 %18, %1\n  br i1 %20, label %27, label %21\n\n21:                                               ; preds = %19\n  br label %27\n\n22:                                               ; preds = %15\n  %23 = icmp sgt i32 %18, %1\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %22\n  %25 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %26 = tail call i64 @CALL_P(i64 noundef %25) #2\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %22, %19, %24\n  %28 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 1) #2\n  %29 = icmp eq i64 %28, 0\n  br i1 %29, label %33, label %15, !llvm.loop !13\n\n30:                                               ; preds = %24\n  store i64 %2, ptr @gcse_mem_operand, align 8, !tbaa !12\n  store i64 0, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %31 = tail call i32 @PATTERN(i64 noundef %25) #2\n  %32 = load i32, ptr @mems_conflict_for_gcse_p, align 4, !tbaa !15\n  tail call void @note_stores(i32 noundef %31, i32 noundef %32, i32 noundef 0) #2\n  br label %33\n\n33:                                               ; preds = %27, %24, %4, %30\n  %34 = phi i32 [ 0, %30 ], [ 0, %4 ], [ 1, %24 ], [ 1, %27 ]\n  ret i32 %34\n}\n\ndeclare i64 @MEM_READONLY_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @XEXP(i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @INSN_CUID(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @CALL_P(i64 noundef) local_unnamed_addr #1\n\ndeclare void @note_stores(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @PATTERN(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_3__\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"int\", !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@modify_mem_list = dso_local local_unnamed_addr global ptr null, align 8\n@gcse_mem_operand = dso_local local_unnamed_addr global i64 0, align 8\n@gcse_mems_conflict_p = dso_local local_unnamed_addr global i64 0, align 8\n@mems_conflict_for_gcse_p = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @load_killed_in_block_p], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @load_killed_in_block_p(ptr nocapture noundef readonly %0, i32 noundef %1, i64 noundef %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr @modify_mem_list, align 8, !tbaa !5\n  %6 = load i64, ptr %0, align 8, !tbaa !9\n  %7 = getelementptr inbounds i64, ptr %5, i64 %6\n  %8 = load i64, ptr %7, align 8, !tbaa !12\n  %9 = tail call i64 @MEM_READONLY_P(i64 noundef %2) #2\n  %10 = icmp ne i64 %9, 0\n  %11 = icmp eq i64 %8, 0\n  %12 = or i1 %10, %11\n  br i1 %12, label %34, label %13\n\n13:                                               ; preds = %4\n  %14 = icmp eq i32 %3, 0\n  br label %15\n\n15:                                               ; preds = %13, %29\n  %16 = phi i64 [ %8, %13 ], [ %30, %29 ]\n  %17 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %18 = tail call i32 @INSN_CUID(i64 noundef %17) #2\n  br i1 %14, label %22, label %19\n\n19:                                               ; preds = %15\n  %20 = icmp slt i32 %18, %1\n  br i1 %20, label %29, label %21\n\n21:                                               ; preds = %19\n  br label %29\n\n22:                                               ; preds = %15\n  %23 = icmp sgt i32 %18, %1\n  br i1 %23, label %29, label %24\n\n24:                                               ; preds = %22\n  %25 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %26 = tail call i64 @CALL_P(i64 noundef %25) #2\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %28, label %34\n\n28:                                               ; preds = %24\n  store i64 %2, ptr @gcse_mem_operand, align 8, !tbaa !12\n  store i64 0, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %29 = tail call i32 @PATTERN(i64 noundef %25) #2\n  %30 = load i32, ptr @mems_conflict_for_gcse_p, align 4, !tbaa !13\n  %31 = tail call i32 @note_stores(i32 noundef %29, i32 noundef %30, i32 noundef 0) #2\n  %32 = load i64, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %33 = icmp eq i64 %32, 0\n  br i1 %33, label %15, label %34\n\n34:                                               ; preds = %28, %24, %4\n  %35 = phi i32 [ 0, %4 ], [ 1, %24 ], [ 0, %28 ]\n  ret i32 %35\n}\n\ndeclare i64 @MEM_READONLY_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @XEXP(i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @INSN_CUID(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @CALL_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @note_stores(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @PATTERN(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_3__\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@modify_mem_list = dso_local local_unnamed_addr global ptr null, align 8\n@gcse_mem_operand = dso_local local_unnamed_addr global i64 0, align 8\n@gcse_mems_conflict_p = dso_local local_unnamed_addr global i64 0, align 8\n@mems_conflict_for_gcse_p = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @load_killed_in_block_p], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @load_killed_in_block_p(ptr nocapture noundef readonly %0, i32 noundef %1, i64 noundef %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr @modify_mem_list, align 8, !tbaa !5\n  %6 = load i64, ptr %0, align 8, !tbaa !9\n  %7 = getelementptr inbounds i64, ptr %5, i64 %6\n  %8 = load i64, ptr %7, align 8, !tbaa !12\n  %9 = tail call i64 @MEM_READONLY_P(i64 noundef %2) #2\n  %10 = icmp ne i64 %9, 0\n  %11 = icmp eq i64 %8, 0\n  %12 = or i1 %10, %11\n  br i1 %12, label %34, label %13\n\n13:                                               ; preds = %4\n  %14 = icmp eq i32 %3, 0\n  br label %15\n\n15:                                               ; preds = %13, %29\n  %16 = phi i64 [ %8, %13 ], [ %30, %29 ]\n  %17 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %18 = tail call i32 @INSN_CUID(i64 noundef %17) #2\n  br i1 %14, label %22, label %19\n\n19:                                               ; preds = %15\n  %20 = icmp slt i32 %18, %1\n  br i1 %20, label %29, label %21\n\n21:                                               ; preds = %19\n  br label %29\n\n22:                                               ; preds = %15\n  %23 = icmp sgt i32 %18, %1\n  br i1 %23, label %29, label %24\n\n24:                                               ; preds = %22\n  %25 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %26 = tail call i64 @CALL_P(i64 noundef %25) #2\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %28, label %34\n\n28:                                               ; preds = %24\n  store i64 %2, ptr @gcse_mem_operand, align 8, !tbaa !12\n  store i64 0, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %29 = tail call i32 @PATTERN(i64 noundef %25) #2\n  %30 = load i32, ptr @mems_conflict_for_gcse_p, align 4, !tbaa !13\n  %31 = tail call i32 @note_stores(i32 noundef %29, i32 noundef %30, i32 noundef 0) #2\n  %32 = load i64, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %33 = icmp eq i64 %32, 0\n  br i1 %33, label %15, label %34\n\n34:                                               ; preds = %28, %24, %4\n  %35 = phi i32 [ 0, %4 ], [ 1, %24 ], [ 0, %28 ]\n  ret i32 %35\n}\n\ndeclare i64 @MEM_READONLY_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @XEXP(i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @INSN_CUID(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @CALL_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @note_stores(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @PATTERN(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_3__\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@modify_mem_list = dso_local local_unnamed_addr global ptr null, align 8\n@gcse_mem_operand = dso_local local_unnamed_addr global i64 0, align 8\n@gcse_mems_conflict_p = dso_local local_unnamed_addr global i64 0, align 8\n@mems_conflict_for_gcse_p = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @load_killed_in_block_p], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @load_killed_in_block_p(ptr nocapture noundef readonly %0, i32 noundef %1, i64 noundef %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr @modify_mem_list, align 8, !tbaa !5\n  %6 = load i64, ptr %0, align 8, !tbaa !9\n  %7 = getelementptr inbounds i64, ptr %5, i64 %6\n  %8 = load i64, ptr %7, align 8, !tbaa !12\n  %9 = tail call i64 @MEM_READONLY_P(i64 noundef %2) #2\n  %10 = icmp ne i64 %9, 0\n  %11 = icmp eq i64 %8, 0\n  %12 = or i1 %10, %11\n  br i1 %12, label %33, label %13\n\n13:                                               ; preds = %4\n  %14 = icmp eq i32 %3, 0\n  br label %15\n\n15:                                               ; preds = %13, %28\n  %16 = phi i64 [ %8, %13 ], [ %29, %28 ]\n  %17 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %18 = tail call i32 @INSN_CUID(i64 noundef %17) #2\n  br i1 %14, label %22, label %19\n\n19:                                               ; preds = %15\n  %20 = icmp slt i32 %18, %1\n  br i1 %20, label %28, label %21\n\n21:                                               ; preds = %19\n  br label %25\n\n22:                                               ; preds = %15\n  %23 = icmp sgt i32 %18, %1\n  br i1 %23, label %28, label %24\n\n24:                                               ; preds = %22\n  br label %25\n\n25:                                               ; preds = %24, %21\n  %26 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %27 = tail call i64 @CALL_P(i64 noundef %26) #2\n  br i1 %27, label %33, label %28\n\n28:                                               ; preds = %25, %22, %19\n  %29 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 1) #2\n  %30 = icmp eq i64 %29, 0\n  br i1 %30, label %33, label %15, !llvm.loop !13\n\n31:                                               ; preds = %32\n  %32 = load i64, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %33 = icmp eq i64 %32, 0\n  br i1 %33, label %28, label %34\n\n34:                                               ; preds = %31, %25\n  %35 = phi i32 [ 1, %25 ], [ 0, %31 ]\n  ret i32 %35\n}\n\ndeclare i64 @MEM_READONLY_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @XEXP(i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @INSN_CUID(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @CALL_P(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_3__\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/gcc/extr_gcse.c_load_killed_in_block_p.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@modify_mem_list = dso_local local_unnamed_addr global ptr null, align 8\n@gcse_mem_operand = dso_local local_unnamed_addr global i64 0, align 8\n@gcse_mems_conflict_p = dso_local local_unnamed_addr global i64 0, align 8\n@mems_conflict_for_gcse_p = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @load_killed_in_block_p], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @load_killed_in_block_p(ptr nocapture noundef readonly %0, i32 noundef %1, i64 noundef %2, i32 noundef %3) #0 {\n  %5 = load ptr, ptr @modify_mem_list, align 8, !tbaa !5\n  %6 = load i64, ptr %0, align 8, !tbaa !9\n  %7 = getelementptr inbounds i64, ptr %5, i64 %6\n  %8 = load i64, ptr %7, align 8, !tbaa !12\n  %9 = tail call i64 @MEM_READONLY_P(i64 noundef %2) #2\n  %10 = icmp ne i64 %9, 0\n  %11 = icmp eq i64 %8, 0\n  %12 = select i1 %10, i1 true, i1 %11\n  br i1 %12, label %36, label %13\n\n13:                                               ; preds = %4\n  %14 = icmp eq i32 %3, 0\n  br label %15\n\n15:                                               ; preds = %13, %33\n  %16 = phi i64 [ %8, %13 ], [ %34, %33 ]\n  %17 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %18 = tail call i32 @INSN_CUID(i64 noundef %17) #2\n  br i1 %14, label %21, label %19\n\n19:                                               ; preds = %15\n  %20 = icmp slt i32 %18, %1\n  br i1 %20, label %33, label %23, !llvm.loop !13\n\n21:                                               ; preds = %15\n  %22 = icmp sgt i32 %18, %1\n  br i1 %22, label %33, label %23, !llvm.loop !13\n\n23:                                               ; preds = %19, %21\n  %24 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 0) #2\n  %25 = tail call i64 @CALL_P(i64 noundef %24) #2\n  %26 = icmp eq i64 %25, 0\n  br i1 %26, label %27, label %36\n\n27:                                               ; preds = %23\n  store i64 %2, ptr @gcse_mem_operand, align 8, !tbaa !12\n  store i64 0, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %28 = tail call i32 @PATTERN(i64 noundef %24) #2\n  %29 = load i32, ptr @mems_conflict_for_gcse_p, align 4, !tbaa !15\n  %30 = tail call i32 @note_stores(i32 noundef %28, i32 noundef %29, ptr noundef null) #2\n  %31 = load i64, ptr @gcse_mems_conflict_p, align 8, !tbaa !12\n  %32 = icmp eq i64 %31, 0\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %27, %19, %21\n  %34 = tail call i64 @XEXP(i64 noundef %16, i32 noundef 1) #2\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %36, label %15\n\n36:                                               ; preds = %33, %23, %27, %4\n  %37 = phi i32 [ 0, %4 ], [ 0, %33 ], [ 1, %23 ], [ 1, %27 ]\n  ret i32 %37\n}\n\ndeclare i64 @MEM_READONLY_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @INSN_CUID(i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @XEXP(i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @CALL_P(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @note_stores(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @PATTERN(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_3__\", !11, i64 0}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = distinct !{!13, !14}\n!14 = !{!\"llvm.loop.mustprogress\"}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"int\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_diffcore-rename.c_find_renames.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function find_renames\n\t.type\tfind_renames,@function\nfind_renames:                           # @find_renames\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%ecx, %r14d\n\tmovl\tNUM_CANDIDATE_PER_DST(%rip), %eax\n\tmovl\t%eax, %ecx\n\timull\t%esi, %ecx\n\ttestl\t%ecx, %ecx\n\tjle\t.LBB0_1\n# %bb.2:\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r13d\n\tmovq\t%rdi, %rbp\n\taddq\t$16, %rbp\n\txorl\t%ebx, %ebx\n\txorl\t%r12d, %r12d\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_6:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t(%rbp), %rsi\n.LBB0_8:                                #   in Loop: Header=BB0_3 Depth=1\n\tcallq\trecord_rename_pair@PLT\n\tincl\t%r12d\n\tmovl\tNUM_CANDIDATE_PER_DST(%rip), %eax\n.LBB0_9:                                #   in Loop: Header=BB0_3 Depth=1\n\tincq\t%rbx\n\tmovl\t%eax, %ecx\n\timull\t%r13d, %ecx\n\tmovslq\t%ecx, %rcx\n\taddq\t$24, %rbp\n\tcmpq\t%rcx, %rbx\n\tjge\t.LBB0_10\n.LBB0_3:                                # =>This Inner Loop Header: Depth=1\n\tmovl\t-8(%rbp), %edx\n\tcmpl\t%r15d, %edx\n\tjl\t.LBB0_10\n# %bb.4:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t-16(%rbp), %rdi\n\tmovq\trename_dst(%rip), %rcx\n\tcmpq\t$0, (%rcx,%rdi,8)\n\tjne\t.LBB0_9\n# %bb.5:                                #   in Loop: Header=BB0_3 Depth=1\n\ttestl\t%r14d, %r14d\n\tjne\t.LBB0_6\n# %bb.7:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\trename_src(%rip), %rcx\n\tmovq\t(%rbp), %rsi\n\tmovq\t(%rcx,%rsi,8), %rcx\n\tmovq\t(%rcx), %rcx\n\tcmpq\t$0, (%rcx)\n\tjne\t.LBB0_9\n\tjmp\t.LBB0_8\n.LBB0_1:\n\txorl\t%r12d, %r12d\n.LBB0_10:\n\tmovl\t%r12d, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tfind_renames, .Lfunc_end0-find_renames\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNUM_CANDIDATE_PER_DST,@object   # @NUM_CANDIDATE_PER_DST\n\t.bss\n\t.globl\tNUM_CANDIDATE_PER_DST\n\t.p2align\t2\nNUM_CANDIDATE_PER_DST:\n\t.long\t0                               # 0x0\n\t.size\tNUM_CANDIDATE_PER_DST, 4\n\n\t.type\trename_dst,@object              # @rename_dst\n\t.globl\trename_dst\n\t.p2align\t3\nrename_dst:\n\t.quad\t0\n\t.size\trename_dst, 8\n\n\t.type\trename_src,@object              # @rename_src\n\t.globl\trename_src\n\t.p2align\t3\nrename_src:\n\t.quad\t0\n\t.size\trename_src, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rename_candidate = type { i32, i64, ptr }\n\n@NUM_CANDIDATE_PER_DST = dso_local local_unnamed_addr global i32 0, align 4\n@rename_dst = dso_local local_unnamed_addr global ptr null, align 8\n@rename_src = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @find_renames], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @find_renames(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  %6 = mul nsw i32 %5, %1\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %34\n\n8:                                                ; preds = %4\n  %9 = getelementptr inbounds %struct.rename_candidate, ptr %0, i64 0, i32 2\n  br label %10\n\n10:                                               ; preds = %8, %29\n  %11 = phi i32 [ %30, %29 ], [ %6, %8 ]\n  %12 = phi i32 [ %31, %29 ], [ 0, %8 ]\n  %13 = phi i64 [ %32, %29 ], [ 0, %8 ]\n  %14 = getelementptr inbounds %struct.rename_candidate, ptr %0, i64 %13\n  %15 = load i32, ptr %14, align 8, !tbaa !9\n  %16 = icmp slt i32 %15, %2\n  br i1 %16, label %34, label %17\n\n17:                                               ; preds = %10\n  %18 = getelementptr inbounds %struct.rename_candidate, ptr %0, i64 %13, i32 1\n  %19 = load i64, ptr %18, align 8, !tbaa !12\n  %20 = load ptr, ptr @rename_dst, align 8, !tbaa !13\n  %21 = getelementptr inbounds i64, ptr %20, i64 %19\n  %22 = load i64, ptr %21, align 8, !tbaa !14\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %24, label %29\n\n24:                                               ; preds = %17\n  %25 = icmp eq i32 %3, 0\n  br i1 %25, label %26, label %30\n\n26:                                               ; preds = %24\n  %27 = load ptr, ptr @rename_src, align 8, !tbaa !13\n  %28 = load i64, ptr %14, align 8, !tbaa !9\n  br label %30\n\n29:                                               ; preds = %17, %26\n  %30 = phi i64 [ %19, %17 ], [ %28, %26 ]\n  %31 = add nuw nsw i32 %12, 1\n  %32 = add nuw nsw i64 %13, 1\n  %33 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  br label %29\n\n34:                                               ; preds = %10, %4\n  %35 = phi i32 [ 0, %4 ], [ %12, %10 ]\n  ret i32 %35\n}\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"rename_candidate\", !6, i64 0, !11, i64 8, !13, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n!13 = !{!\"any pointer\", !7, i64 0}\n!14 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rename_candidate = type { i32, i64, ptr }\n\n@NUM_CANDIDATE_PER_DST = dso_local local_unnamed_addr global i32 0, align 4\n@rename_dst = dso_local local_unnamed_addr global ptr null, align 8\n@rename_src = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @find_renames], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @find_renames(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  %6 = mul nsw i32 %5, %1\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %35\n\n8:                                                ; preds = %4\n  %9 = getelementptr inbounds %struct.rename_candidate, ptr %0, i64 0, i32 2\n  br label %10\n\n10:                                               ; preds = %8, %29\n  %11 = phi i32 [ %30, %29 ], [ %6, %8 ]\n  %12 = phi i32 [ %31, %29 ], [ 0, %8 ]\n  %13 = phi i64 [ %32, %29 ], [ 0, %8 ]\n  %14 = getelementptr inbounds %struct.rename_candidate, ptr %0, i64 %13\n  %15 = load i32, ptr %14, align 8, !tbaa !9\n  %16 = icmp slt i32 %15, %2\n  br i1 %16, label %35, label %17\n\n17:                                               ; preds = %10\n  %18 = getelementptr inbounds %struct.rename_candidate, ptr %0, i64 %13, i32 1\n  %19 = load i64, ptr %18, align 8, !tbaa !12\n  %20 = load ptr, ptr @rename_dst, align 8, !tbaa !13\n  %21 = getelementptr inbounds i64, ptr %20, i64 %19\n  %22 = load i64, ptr %21, align 8, !tbaa !14\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %24, label %29\n\n24:                                               ; preds = %17\n  %25 = icmp eq i32 %3, 0\n  br i1 %25, label %26, label %30\n\n26:                                               ; preds = %24\n  %27 = load ptr, ptr @rename_src, align 8, !tbaa !13\n  %28 = load i64, ptr %14, align 8, !tbaa !9\n  br label %30\n\n29:                                               ; preds = %17, %26\n  %30 = phi i64 [ %19, %17 ], [ %28, %26 ]\n  %31 = add nuw nsw i32 %12, 1\n  %32 = add nuw nsw i64 %13, 1\n  %33 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  %34 = mul nsw i32 %33, %1\n  br label %10, !llvm.loop !15\n\n35:                                               ; preds = %10, %4\n  %36 = phi i32 [ 0, %4 ], [ %12, %10 ]\n  ret i32 %36\n}\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"rename_candidate\", !6, i64 0, !11, i64 8, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !11, i64 0}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rename_pair = type { i32, i64, ptr }\n\n@NUM_CANDIDATE_PER_DST = dso_local local_unnamed_addr global i32 0, align 4\n@rename_dst = dso_local local_unnamed_addr global ptr null, align 8\n@rename_src = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @find_renames], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @find_renames(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  %6 = mul nsw i32 %5, %1\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %35\n\n8:                                                ; preds = %4\n  %9 = getelementptr inbounds %struct.rename_pair, ptr %0, i64 0, i32 2\n  br label %10\n\n10:                                               ; preds = %8, %29\n  %11 = phi i32 [ %30, %29 ], [ %6, %8 ]\n  %12 = phi i32 [ %31, %29 ], [ 0, %8 ]\n  %13 = phi ptr [ %32, %29 ], [ %9, %8 ]\n  %14 = phi i64 [ %33, %29 ], [ 0, %8 ]\n  %15 = load i32, ptr %13, align 8, !tbaa !9\n  %16 = icmp slt i32 %15, %2\n  br i1 %16, label %35, label %17\n\n17:                                               ; preds = %10\n  %18 = getelementptr inbounds %struct.rename_pair, ptr %13, i64 0, i32 1\n  %19 = load i64, ptr %18, align 8, !tbaa !12\n  %20 = load ptr, ptr @rename_dst, align 8, !tbaa !13\n  %21 = getelementptr inbounds i64, ptr %20, i64 %19\n  %22 = load i64, ptr %21, align 8, !tbaa !14\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %24, label %29\n\n24:                                               ; preds = %17\n  %25 = icmp eq i32 %3, 0\n  br i1 %25, label %26, label %31\n\n26:                                               ; preds = %24\n  %27 = load ptr, ptr @rename_src, align 8, !tbaa !13\n  %28 = load i64, ptr %13, align 8, !tbaa !9\n  br label %31\n\n29:                                               ; preds = %17\n  %30 = load i64, ptr %13, align 8, !tbaa !9\n  %31 = tail call i32 @record_rename_pair(i64 noundef %19, i64 noundef %30, i32 noundef %15) #2\n  %32 = getelementptr inbounds %struct.rename_pair, ptr %13, i64 1\n  %33 = add nuw nsw i64 %14, 1\n  %34 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  br label %29\n\n35:                                               ; preds = %10, %4\n  %36 = phi i32 [ 0, %4 ], [ %12, %10 ]\n  ret i32 %36\n}\n\ndeclare i32 @record_rename_pair(i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"rename_pair\", !6, i64 0, !11, i64 8, !11, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !11, i64 8}\n!13 = !{!11, !11, i64 0}\n!14 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rename_pair = type { i32, i64, ptr }\n\n@NUM_CANDIDATE_PER_DST = dso_local local_unnamed_addr global i32 0, align 4\n@rename_dst = dso_local local_unnamed_addr global ptr null, align 8\n@rename_src = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @find_renames], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @find_renames(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  %6 = mul nsw i32 %5, %1\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %35\n\n8:                                                ; preds = %4\n  %9 = getelementptr inbounds %struct.rename_pair, ptr %0, i64 0, i32 2\n  br label %10\n\n10:                                               ; preds = %8, %29\n  %11 = phi i32 [ %30, %29 ], [ %6, %8 ]\n  %12 = phi i32 [ %31, %29 ], [ 0, %8 ]\n  %13 = phi i64 [ %32, %29 ], [ 0, %8 ]\n  %14 = getelementptr inbounds %struct.rename_pair, ptr %0, i64 %13\n  %15 = load i32, ptr %14, align 8, !tbaa !9\n  %16 = icmp slt i32 %15, %2\n  br i1 %16, label %35, label %17\n\n17:                                               ; preds = %10\n  %18 = getelementptr inbounds %struct.rename_pair, ptr %0, i64 %13, i32 1\n  %19 = load i64, ptr %18, align 8, !tbaa !12\n  %20 = load ptr, ptr @rename_dst, align 8, !tbaa !13\n  %21 = getelementptr inbounds i64, ptr %20, i64 %19\n  %22 = load i64, ptr %21, align 8, !tbaa !14\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %24, label %29\n\n24:                                               ; preds = %17\n  %25 = icmp eq i32 %3, 0\n  br i1 %25, label %26, label %30\n\n26:                                               ; preds = %24\n  %27 = load ptr, ptr @rename_src, align 8, !tbaa !13\n  %28 = load i64, ptr %14, align 8, !tbaa !9\n  br label %30\n\n29:                                               ; preds = %17, %26\n  %30 = phi i32 [ %11, %17 ], [ %11, %26 ]\n  %31 = phi i32 [ %12, %17 ], [ %12, %26 ]\n  %32 = add nuw nsw i64 %13, 1\n  %33 = load ptr, ptr %9, align 8, !tbaa !15\n  %34 = tail call i32 @record_rename_pair(ptr noundef nonnull %18, i64 noundef %28, i32 noundef %15, ptr noundef %33) #2\n  br label %29\n\n35:                                               ; preds = %10, %4\n  %36 = phi i32 [ 0, %4 ], [ %12, %10 ]\n  ret i32 %36\n}\n\ndeclare i32 @record_rename_pair(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"rename_pair\", !6, i64 0, !11, i64 8, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"any pointer\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !11, i64 0}\n!15 = !{!10, !12, i64 16}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/git/extr_diffcore-rename.c_find_renames.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.diff_score = type { i64, i32, i64 }\n%struct.diff_rename_dst = type { i64 }\n%struct.TYPE_6__ = type { ptr }\n\n@NUM_CANDIDATE_PER_DST = dso_local local_unnamed_addr global i32 0, align 4\n@rename_dst = dso_local local_unnamed_addr global ptr null, align 8\n@rename_src = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @find_renames], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @find_renames(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  %6 = mul nsw i32 %5, %1\n  %7 = icmp sgt i32 %6, 0\n  br i1 %7, label %8, label %49\n\n8:                                                ; preds = %4\n  %9 = icmp eq i32 %3, 0\n  br label %10\n\n10:                                               ; preds = %8, %42\n  %11 = phi i32 [ %5, %8 ], [ %43, %42 ]\n  %12 = phi i64 [ 0, %8 ], [ %45, %42 ]\n  %13 = phi i32 [ 0, %8 ], [ %44, %42 ]\n  %14 = getelementptr inbounds %struct.diff_score, ptr %0, i64 %12\n  %15 = load i64, ptr %14, align 8, !tbaa !9\n  %16 = getelementptr inbounds %struct.diff_score, ptr %0, i64 %12, i32 1\n  %17 = load i32, ptr %16, align 8, !tbaa !12\n  %18 = icmp slt i32 %17, %2\n  br i1 %18, label %49, label %19\n\n19:                                               ; preds = %10\n  %20 = load ptr, ptr @rename_dst, align 8, !tbaa !13\n  %21 = getelementptr inbounds %struct.diff_rename_dst, ptr %20, i64 %15\n  %22 = load i64, ptr %21, align 8, !tbaa !15\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %24, label %42\n\n24:                                               ; preds = %19\n  br i1 %9, label %28, label %25\n\n25:                                               ; preds = %24\n  %26 = getelementptr inbounds %struct.diff_score, ptr %0, i64 %12, i32 2\n  %27 = load i64, ptr %26, align 8, !tbaa !17\n  br label %37\n\n28:                                               ; preds = %24\n  %29 = load ptr, ptr @rename_src, align 8, !tbaa !13\n  %30 = getelementptr inbounds %struct.diff_score, ptr %0, i64 %12, i32 2\n  %31 = load i64, ptr %30, align 8, !tbaa !17\n  %32 = getelementptr inbounds %struct.TYPE_6__, ptr %29, i64 %31\n  %33 = load ptr, ptr %32, align 8, !tbaa !18\n  %34 = load ptr, ptr %33, align 8, !tbaa !20\n  %35 = load i64, ptr %34, align 8, !tbaa !22\n  %36 = icmp eq i64 %35, 0\n  br i1 %36, label %37, label %42\n\n37:                                               ; preds = %25, %28\n  %38 = phi i64 [ %27, %25 ], [ %31, %28 ]\n  %39 = tail call i32 @record_rename_pair(i64 noundef %15, i64 noundef %38, i32 noundef %17) #2\n  %40 = add nsw i32 %13, 1\n  %41 = load i32, ptr @NUM_CANDIDATE_PER_DST, align 4, !tbaa !5\n  br label %42\n\n42:                                               ; preds = %37, %19, %28\n  %43 = phi i32 [ %11, %28 ], [ %11, %19 ], [ %41, %37 ]\n  %44 = phi i32 [ %13, %28 ], [ %13, %19 ], [ %40, %37 ]\n  %45 = add nuw nsw i64 %12, 1\n  %46 = mul nsw i32 %43, %1\n  %47 = sext i32 %46 to i64\n  %48 = icmp slt i64 %45, %47\n  br i1 %48, label %10, label %49, !llvm.loop !24\n\n49:                                               ; preds = %42, %10, %4\n  %50 = phi i32 [ 0, %4 ], [ %13, %10 ], [ %44, %42 ]\n  ret i32 %50\n}\n\ndeclare i32 @record_rename_pair(i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"diff_score\", !11, i64 0, !6, i64 8, !11, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!10, !6, i64 8}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"any pointer\", !7, i64 0}\n!15 = !{!16, !11, i64 0}\n!16 = !{!\"diff_rename_dst\", !11, i64 0}\n!17 = !{!10, !11, i64 16}\n!18 = !{!19, !14, i64 0}\n!19 = !{!\"TYPE_6__\", !14, i64 0}\n!20 = !{!21, !14, i64 0}\n!21 = !{!\"TYPE_5__\", !14, i64 0}\n!22 = !{!23, !11, i64 0}\n!23 = !{!\"TYPE_4__\", !11, i64 0}\n!24 = distinct !{!24, !25}\n!25 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_status.c_delete_entry.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function delete_entry\n\t.type\tdelete_entry,@function\ndelete_entry:                           # @delete_entry\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rcx, %r14\n\tmovq\t%rdx, %r12\n\tmovl\t%esi, %r15d\n\tmovq\t%rdi, %rsi\n\tmovq\t16(%rdx), %rbx\n\tmovl\t16(%rbx), %edi\n\tmovq\t%rcx, %rdx\n\tcallq\tsvn_dirent_join@PLT\n\tmovl\tTRUE(%rip), %edx\n\tmovl\t(%rbx), %r8d\n\tmovl\t4(%rbx), %ecx\n\tmovl\tsvn_wc_status_deleted(%rip), %r10d\n\tmovq\t%r12, %rdi\n\tmovq\t%r12, %rsi\n\tmovq\t%rax, %r9\n\tpushq\t%r14\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t$0\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r15\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t$0\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t$0\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r10\n\t.cfi_adjust_cfa_offset 8\n\tcallq\ttweak_statushash@PLT\n\taddq\t$48, %rsp\n\t.cfi_adjust_cfa_offset -48\n\tmovl\t%eax, %edi\n\tcallq\tSVN_ERR@PLT\n\tmovq\t8(%r12), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_3\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tcmpl\t$0, (%rax)\n\tjne\t.LBB0_3\n# %bb.2:\n\tmovl\tTRUE(%rip), %edx\n\tmovl\t(%rbx), %r8d\n\tmovl\t4(%rbx), %ecx\n\tmovq\t(%r12), %r9\n\tmovl\tsvn_wc_status_modified(%rip), %eax\n\tmovl\tSVN_INVALID_REVNUM(%rip), %ebx\n\tmovq\t%r12, %rsi\n\tpushq\t%r14\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t$0\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%rbx\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t$0\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%rax\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%rax\n\t.cfi_adjust_cfa_offset 8\n\tcallq\ttweak_statushash@PLT\n\taddq\t$48, %rsp\n\t.cfi_adjust_cfa_offset -48\n\tmovl\t%eax, %edi\n\tcallq\tSVN_ERR@PLT\n.LBB0_3:\n\tmovq\tSVN_NO_ERROR(%rip), %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tdelete_entry, .Lfunc_end0-delete_entry\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tTRUE,@object                    # @TRUE\n\t.bss\n\t.globl\tTRUE\n\t.p2align\t2\nTRUE:\n\t.long\t0                               # 0x0\n\t.size\tTRUE, 4\n\n\t.type\tsvn_wc_status_deleted,@object   # @svn_wc_status_deleted\n\t.globl\tsvn_wc_status_deleted\n\t.p2align\t2\nsvn_wc_status_deleted:\n\t.long\t0                               # 0x0\n\t.size\tsvn_wc_status_deleted, 4\n\n\t.type\tsvn_wc_status_modified,@object  # @svn_wc_status_modified\n\t.globl\tsvn_wc_status_modified\n\t.p2align\t2\nsvn_wc_status_modified:\n\t.long\t0                               # 0x0\n\t.size\tsvn_wc_status_modified, 4\n\n\t.type\tSVN_INVALID_REVNUM,@object      # @SVN_INVALID_REVNUM\n\t.globl\tSVN_INVALID_REVNUM\n\t.p2align\t2\nSVN_INVALID_REVNUM:\n\t.long\t0                               # 0x0\n\t.size\tSVN_INVALID_REVNUM, 4\n\n\t.type\tSVN_NO_ERROR,@object            # @SVN_NO_ERROR\n\t.globl\tSVN_NO_ERROR\n\t.p2align\t3\nSVN_NO_ERROR:\n\t.quad\t0\n\t.size\tSVN_NO_ERROR, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32, ptr, i32 }\n\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_deleted = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_modified = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_INVALID_REVNUM = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_NO_ERROR = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @delete_entry], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @delete_entry(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 2\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 3\n  %8 = load i32, ptr %7, align 8, !tbaa !10\n  %9 = tail call ptr @svn_dirent_join(i32 noundef %8, ptr noundef %0, ptr noundef %3, ptr noundef %3) #2\n  %10 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %11 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !14\n  %13 = load i32, ptr %6, align 8, !tbaa !15\n  %14 = load i32, ptr @svn_wc_status_deleted, align 4, !tbaa !13\n  %15 = tail call i32 @tweak_statushash(ptr noundef %2, ptr noundef %2, i32 noundef %10, i32 noundef %12, i32 noundef %13, ptr noundef %9, ptr noundef null, i32 noundef 0, i32 noundef %1, ptr noundef %3, i32 noundef %14) #2\n  %16 = tail call i32 @SVN_ERR(i32 noundef %15) #2\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !16\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %32, label %20\n\n20:                                               ; preds = %4\n  %21 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 2\n  %22 = load ptr, ptr %21, align 8, !tbaa !17\n  %23 = load i32, ptr %22, align 4, !tbaa !18\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %25, label %32\n\n25:                                               ; preds = %20\n  %26 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %27 = load i32, ptr %6, align 8, !tbaa !15\n  %28 = load i32, ptr %11, align 4, !tbaa !14\n  %29 = load ptr, ptr %2, align 8, !tbaa !20\n  %30 = load i32, ptr @svn_wc_status_modified, align 4, !tbaa !13\n  %31 = load i32, ptr @SVN_INVALID_REVNUM, align 4, !tbaa !13\n  br label %32\n\n32:                                               ; preds = %25, %20, %4\n  %33 = phi i32 [ %31, %25 ], [ %13, %20 ], [ %13, %4 ]\n  %34 = phi i32 [ %30, %25 ], [ %13, %20 ], [ %14, %4 ]\n  %35 = phi ptr [ %29, %25 ], [ %18, %20 ], [ %18, %4 ]\n  %36 = phi i32 [ %28, %25 ], [ %12, %20 ], [ %12, %4 ]\n  %37 = phi i32 [ %26, %25 ], [ %10, %20 ], [ %10, %4 ]\n  %38 = tail call i32 @tweak_statushash(ptr noundef %2, ptr noundef %2, i32 noundef %37, i32 noundef %36, i32 noundef %33, ptr noundef %35, ptr noundef null, i32 noundef 0, i32 noundef %1, ptr noundef %3, i32 noundef %34) #2\n  %39 = tail call i32 @SVN_ERR(i32 noundef %38) #2\n  %40 = load ptr, ptr @SVN_NO_ERROR, align 8, !tbaa !21\n  ret ptr %40\n}\n\ndeclare ptr @svn_dirent_join(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SVN_ERR(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @tweak_statushash(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !7, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 16}\n!11 = !{!\"TYPE_9__\", !12, i64 0, !12, i64 4, !7, i64 8, !12, i64 16}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !12, i64 4}\n!15 = !{!11, !12, i64 0}\n!16 = !{!6, !7, i64 8}\n!17 = !{!11, !7, i64 8}\n!18 = !{!19, !12, i64 0}\n!19 = !{!\"TYPE_8__\", !12, i64 0}\n!20 = !{!6, !7, i64 0}\n!21 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32, ptr, i32 }\n\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_deleted = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_modified = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_INVALID_REVNUM = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_NO_ERROR = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @delete_entry], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @delete_entry(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 2\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 3\n  %8 = load i32, ptr %7, align 8, !tbaa !10\n  %9 = tail call ptr @svn_dirent_join(i32 noundef %8, ptr noundef %0, ptr noundef %3, ptr noundef %3) #2\n  %10 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %11 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !14\n  %13 = load i32, ptr %6, align 8, !tbaa !15\n  %14 = load i32, ptr @svn_wc_status_deleted, align 4, !tbaa !13\n  %15 = tail call i32 @tweak_statushash(ptr noundef %2, ptr noundef %2, i32 noundef %10, i32 noundef %12, i32 noundef %13, ptr noundef %9, ptr noundef null, i32 noundef 0, i32 noundef %1, ptr noundef %3, i32 noundef %14) #2\n  %16 = tail call i32 @SVN_ERR(i32 noundef %15) #2\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !16\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %32, label %20\n\n20:                                               ; preds = %4\n  %21 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 2\n  %22 = load ptr, ptr %21, align 8, !tbaa !17\n  %23 = load i32, ptr %22, align 4, !tbaa !18\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %25, label %32\n\n25:                                               ; preds = %20\n  %26 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %27 = load i32, ptr %6, align 8, !tbaa !15\n  %28 = load i32, ptr %11, align 4, !tbaa !14\n  %29 = load ptr, ptr %2, align 8, !tbaa !20\n  %30 = load i32, ptr @svn_wc_status_modified, align 4, !tbaa !13\n  %31 = load i32, ptr @SVN_INVALID_REVNUM, align 4, !tbaa !13\n  br label %32\n\n32:                                               ; preds = %25, %20, %4\n  %33 = phi i32 [ %31, %25 ], [ %13, %20 ], [ %13, %4 ]\n  %34 = phi i32 [ %30, %25 ], [ %13, %20 ], [ %14, %4 ]\n  %35 = phi ptr [ %29, %25 ], [ %18, %20 ], [ %18, %4 ]\n  %36 = phi i32 [ %28, %25 ], [ %12, %20 ], [ %12, %4 ]\n  %37 = phi i32 [ %26, %25 ], [ %10, %20 ], [ %10, %4 ]\n  %38 = tail call i32 @tweak_statushash(ptr noundef nonnull %35, ptr noundef nonnull %2, i32 noundef %37, i32 noundef %36, i32 noundef %33, ptr noundef %2, ptr noundef null, i32 noundef 0, i32 noundef %1, ptr noundef %3, i32 noundef %34) #2\n  %39 = tail call i32 @SVN_ERR(i32 noundef %38) #2\n  %40 = load ptr, ptr @SVN_NO_ERROR, align 8, !tbaa !21\n  ret ptr %40\n}\n\ndeclare ptr @svn_dirent_join(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SVN_ERR(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @tweak_statushash(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !7, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 16}\n!11 = !{!\"TYPE_9__\", !12, i64 0, !12, i64 4, !7, i64 8, !12, i64 16}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !12, i64 4}\n!15 = !{!11, !12, i64 0}\n!16 = !{!6, !7, i64 8}\n!17 = !{!11, !7, i64 8}\n!18 = !{!19, !12, i64 0}\n!19 = !{!\"TYPE_8__\", !12, i64 0}\n!20 = !{!6, !7, i64 0}\n!21 = !{!7, !7, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32, ptr, i32 }\n\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_deleted = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_modified = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_INVALID_REVNUM = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_NO_ERROR = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @delete_entry], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @delete_entry(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 2\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 3\n  %8 = load i32, ptr %7, align 8, !tbaa !10\n  %9 = tail call ptr @svn_dirent_join(i32 noundef %8, ptr noundef %0, ptr noundef %3, ptr noundef %3) #2\n  %10 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %11 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !14\n  %13 = load i32, ptr %6, align 8, !tbaa !15\n  %14 = load i32, ptr @svn_wc_status_deleted, align 4, !tbaa !13\n  %15 = tail call i32 @tweak_statushash(ptr noundef %2, ptr noundef %2, i32 noundef %10, i32 noundef %12, i32 noundef %13, ptr noundef %9, ptr noundef null, i32 noundef 0, i32 noundef %1, ptr noundef %3, i32 noundef %14) #2\n  %16 = tail call i32 @SVN_ERR(i32 noundef %15) #2\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !16\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %33, label %20\n\n20:                                               ; preds = %4\n  %21 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 2\n  %22 = load ptr, ptr %21, align 8, !tbaa !17\n  %23 = load i32, ptr %22, align 4, !tbaa !18\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %25, label %33\n\n25:                                               ; preds = %20\n  %26 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %27 = load i32, ptr %6, align 8, !tbaa !15\n  %28 = load i32, ptr %11, align 4, !tbaa !14\n  %29 = load ptr, ptr %2, align 8, !tbaa !20\n  %30 = load i32, ptr @svn_wc_status_modified, align 4, !tbaa !13\n  %31 = load i32, ptr @SVN_INVALID_REVNUM, align 4, !tbaa !13\n  %32 = tail call i32 @tweak_statushash(ptr noundef nonnull %18, ptr noundef nonnull %2, i32 noundef %26, i32 noundef %28, i32 noundef %27, ptr noundef %29, ptr noundef null, i32 noundef 0, i32 noundef %30, i32 noundef %30, i32 noundef %31) #2\n  br label %34\n\n33:                                               ; preds = %20, %4\n  br label %34\n\n34:                                               ; preds = %25, %33\n  %35 = load ptr, ptr @SVN_NO_ERROR, align 8, !tbaa !21\n  ret ptr %35\n}\n\ndeclare ptr @svn_dirent_join(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SVN_ERR(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @tweak_statushash(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !7, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 16}\n!11 = !{!\"TYPE_9__\", !12, i64 0, !12, i64 4, !7, i64 8, !12, i64 16}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !12, i64 4}\n!15 = !{!11, !12, i64 0}\n!16 = !{!6, !7, i64 8}\n!17 = !{!11, !7, i64 8}\n!18 = !{!19, !12, i64 0}\n!19 = !{!\"TYPE_8__\", !12, i64 0}\n!20 = !{!6, !7, i64 0}\n!21 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { ptr, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32, ptr, i32 }\n\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_deleted = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_modified = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_INVALID_REVNUM = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_NO_ERROR = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @delete_entry], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @delete_entry(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 2\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 3\n  %8 = load i32, ptr %7, align 8, !tbaa !10\n  %9 = tail call ptr @svn_dirent_join(i32 noundef %8, ptr noundef %0, ptr noundef %3, ptr noundef %3) #2\n  %10 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %11 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !14\n  %13 = load i32, ptr %6, align 8, !tbaa !15\n  %14 = load i32, ptr @svn_wc_status_deleted, align 4, !tbaa !13\n  %15 = tail call i32 @tweak_statushash(ptr noundef %2, ptr noundef %2, i32 noundef %10, i32 noundef %12, i32 noundef %13, ptr noundef %9, ptr noundef null, i32 noundef 0, i32 noundef %1, ptr noundef %3, i32 noundef %14) #2\n  %16 = tail call i32 @SVN_ERR(i32 noundef %15) #2\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %2, i64 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !16\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %32, label %20\n\n20:                                               ; preds = %4\n  %21 = getelementptr inbounds %struct.TYPE_9__, ptr %6, i64 0, i32 2\n  %22 = load ptr, ptr %21, align 8, !tbaa !17\n  %23 = load i32, ptr %22, align 4, !tbaa !18\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %25, label %32\n\n25:                                               ; preds = %20\n  %26 = load i32, ptr @TRUE, align 4, !tbaa !13\n  %27 = load i32, ptr %6, align 8, !tbaa !15\n  %28 = load i32, ptr %11, align 4, !tbaa !14\n  %29 = load ptr, ptr %2, align 8, !tbaa !20\n  %30 = load i32, ptr @svn_wc_status_modified, align 4, !tbaa !13\n  %31 = load i32, ptr @SVN_INVALID_REVNUM, align 4, !tbaa !13\n  br label %32\n\n32:                                               ; preds = %25, %20, %4\n  %33 = phi i32 [ %31, %25 ], [ %13, %20 ], [ %13, %4 ]\n  %34 = phi i32 [ %30, %25 ], [ %13, %20 ], [ %14, %4 ]\n  %35 = phi ptr [ %29, %25 ], [ %18, %20 ], [ %2, %4 ]\n  %36 = phi i32 [ %28, %25 ], [ %12, %20 ], [ %12, %4 ]\n  %37 = phi i32 [ %26, %25 ], [ %10, %20 ], [ %10, %4 ]\n  %38 = tail call i32 @tweak_statushash(ptr noundef %35, ptr noundef %35, i32 noundef %37, i32 noundef %36, i32 noundef %33, ptr noundef %35, ptr noundef null, i32 noundef 0, i32 noundef %1, ptr noundef %3, i32 noundef %34) #2\n  %39 = tail call i32 @SVN_ERR(i32 noundef %38) #2\n  %40 = load ptr, ptr @SVN_NO_ERROR, align 8, !tbaa !21\n  ret ptr %40\n}\n\ndeclare ptr @svn_dirent_join(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SVN_ERR(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @tweak_statushash(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 8, !7, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 16}\n!11 = !{!\"TYPE_9__\", !12, i64 0, !12, i64 4, !7, i64 8, !12, i64 16}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !12, i64 4}\n!15 = !{!11, !12, i64 0}\n!16 = !{!6, !7, i64 8}\n!17 = !{!11, !7, i64 8}\n!18 = !{!19, !12, i64 0}\n!19 = !{!\"TYPE_8__\", !12, i64 0}\n!20 = !{!6, !7, i64 0}\n!21 = !{!7, !7, i64 0}\n</s><s><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/subversion/subversion/libsvn_wc/extr_status.c_delete_entry.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.dir_baton = type { ptr, ptr, ptr }\n%struct.edit_baton = type { %struct.TYPE_2__, i32, ptr, i32 }\n%struct.TYPE_2__ = type { i32 }\n\n@TRUE = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_deleted = dso_local local_unnamed_addr global i32 0, align 4\n@svn_wc_status_modified = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_INVALID_REVNUM = dso_local local_unnamed_addr global i32 0, align 4\n@SVN_NO_ERROR = dso_local local_unnamed_addr global ptr null, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @delete_entry], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal ptr @delete_entry(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = getelementptr inbounds %struct.dir_baton, ptr %2, i64 0, i32 2\n  %6 = load ptr, ptr %5, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.edit_baton, ptr %6, i64 0, i32 3\n  %8 = load i32, ptr %7, align 8, !tbaa !10\n  %9 = tail call ptr @svn_dirent_join(i32 noundef %8, ptr noundef %0, ptr noundef %3) #2\n  %10 = load i32, ptr @TRUE, align 4, !tbaa !14\n  %11 = getelementptr inbounds %struct.edit_baton, ptr %6, i64 0, i32 1\n  %12 = load i32, ptr %11, align 4, !tbaa !15\n  %13 = load i32, ptr %6, align 8, !tbaa !16\n  %14 = load i32, ptr @svn_wc_status_deleted, align 4, !tbaa !14\n  %15 = tail call i32 @tweak_statushash(ptr noundef %2, ptr noundef %2, i32 noundef %10, i32 noundef %12, i32 noundef %13, ptr noundef %9, i32 noundef %14, i32 noundef 0, i32 noundef 0, i32 noundef %1, ptr noundef null, ptr noundef %3) #2\n  %16 = tail call i32 @SVN_ERR(i32 noundef %15) #2\n  %17 = getelementptr inbounds %struct.dir_baton, ptr %2, i64 0, i32 1\n  %18 = load ptr, ptr %17, align 8, !tbaa !17\n  %19 = icmp eq ptr %18, null\n  br i1 %19, label %34, label %20\n\n20:                                               ; preds = %4\n  %21 = getelementptr inbounds %struct.edit_baton, ptr %6, i64 0, i32 2\n  %22 = load ptr, ptr %21, align 8, !tbaa !18\n  %23 = load i32, ptr %22, align 4, !tbaa !14\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %25, label %34\n\n25:                                               ; preds = %20\n  %26 = load i32, ptr @TRUE, align 4, !tbaa !14\n  %27 = load i32, ptr %11, align 4, !tbaa !15\n  %28 = load i32, ptr %6, align 8, !tbaa !16\n  %29 = load ptr, ptr %2, align 8, !tbaa !19\n  %30 = load i32, ptr @svn_wc_status_modified, align 4, !tbaa !14\n  %31 = load i32, ptr @SVN_INVALID_REVNUM, align 4, !tbaa !14\n  %32 = tail call i32 @tweak_statushash(ptr noundef nonnull %18, ptr noundef nonnull %2, i32 noundef %26, i32 noundef %27, i32 noundef %28, ptr noundef %29, i32 noundef %30, i32 noundef %30, i32 noundef 0, i32 noundef %31, ptr noundef null, ptr noundef %3) #2\n  %33 = tail call i32 @SVN_ERR(i32 noundef %32) #2\n  br label %34\n\n34:                                               ; preds = %25, %20, %4\n  %35 = load ptr, ptr @SVN_NO_ERROR, align 8, !tbaa !20\n  ret ptr %35\n}\n\ndeclare ptr @svn_dirent_join(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @SVN_ERR(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @tweak_statushash(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 16}\n!6 = !{!\"dir_baton\", !7, i64 0, !7, i64 8, !7, i64 16}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !13, i64 16}\n!11 = !{!\"edit_baton\", !12, i64 0, !13, i64 4, !7, i64 8, !13, i64 16}\n!12 = !{!\"TYPE_2__\", !13, i64 0}\n!13 = !{!\"int\", !8, i64 0}\n!14 = !{!13, !13, i64 0}\n!15 = !{!11, !13, i64 4}\n!16 = !{!11, !13, i64 0}\n!17 = !{!6, !7, i64 8}\n!18 = !{!11, !7, i64 8}\n!19 = !{!6, !7, i64 0}\n!20 = !{!7, !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_main.c_rbcfg_update.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function rbcfg_update\n\t.type\trbcfg_update,@function\nrbcfg_update:                           # @rbcfg_update\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edi, %ebx\n\tmovq\trbcfg_ctx(%rip), %rbp\n\tmovq\t24(%rbp), %rdi\n\tmovl\tRB_MAGIC_SOFT(%rip), %esi\n\tcallq\tput_u32@PLT\n\tmovq\t24(%rbp), %rdi\n\taddq\t$4, %rdi\n\txorl\t%esi, %esi\n\tcallq\tput_u32@PLT\n\tmovq\t24(%rbp), %rdi\n\tmovl\t(%rbp), %esi\n\tcallq\tcyg_ether_crc32@PLT\n\tmovq\t24(%rbp), %rdi\n\taddq\t$4, %rdi\n\tmovl\t%eax, %esi\n\tcallq\tput_u32@PLT\n\txorl\t%eax, %eax\n\ttestl\t%ebx, %ebx\n\tsete\t%al\n\tmovq\t8(%rbp,%rax,8), %r14\n\tmovl\tO_CREAT(%rip), %esi\n\torl\tO_WRONLY(%rip), %esi\n\tmovq\t%r14, %rdi\n\tcallq\topen@PLT\n\ttestl\t%eax, %eax\n\tjs\t.LBB0_1\n# %bb.2:\n\tmovl\t%eax, %ebx\n\tmovq\t24(%rbp), %rsi\n\tmovl\t(%rbp), %edx\n\tmovl\t%eax, %edi\n\tcallq\twrite@PLT\n\tcmpl\t(%rbp), %eax\n\tjne\t.LBB0_3\n# %bb.4:\n\tmovl\t%ebx, %edi\n\tcallq\tfsync@PLT\n\txorl\t%ebp, %ebp\n\tjmp\t.LBB0_5\n.LBB0_1:\n\tmovl\tstderr(%rip), %edi\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdx\n\tcallq\tfprintf@PLT\n\tmovl\tRB_ERR_IO(%rip), %ebp\n\tjmp\t.LBB0_6\n.LBB0_3:\n\tmovl\tRB_ERR_IO(%rip), %ebp\n.LBB0_5:\n\tmovl\t%ebx, %edi\n\tcallq\tclose@PLT\n.LBB0_6:\n\tmovl\t%ebp, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\trbcfg_update, .Lfunc_end0-rbcfg_update\n\t.cfi_endproc\n                                        # -- End function\n\t.type\trbcfg_ctx,@object               # @rbcfg_ctx\n\t.bss\n\t.globl\trbcfg_ctx\n\t.p2align\t3\nrbcfg_ctx:\n\t.quad\t0\n\t.size\trbcfg_ctx, 8\n\n\t.type\tRB_MAGIC_SOFT,@object           # @RB_MAGIC_SOFT\n\t.globl\tRB_MAGIC_SOFT\n\t.p2align\t2\nRB_MAGIC_SOFT:\n\t.long\t0                               # 0x0\n\t.size\tRB_MAGIC_SOFT, 4\n\n\t.type\tO_WRONLY,@object                # @O_WRONLY\n\t.globl\tO_WRONLY\n\t.p2align\t2\nO_WRONLY:\n\t.long\t0                               # 0x0\n\t.size\tO_WRONLY, 4\n\n\t.type\tO_CREAT,@object                 # @O_CREAT\n\t.globl\tO_CREAT\n\t.p2align\t2\nO_CREAT:\n\t.long\t0                               # 0x0\n\t.size\tO_CREAT, 4\n\n\t.type\tstderr,@object                  # @stderr\n\t.globl\tstderr\n\t.p2align\t2\nstderr:\n\t.long\t0                               # 0x0\n\t.size\tstderr, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"unable to open %s for writing\\n\"\n\t.size\t.L.str, 31\n\n\t.type\tRB_ERR_IO,@object               # @RB_ERR_IO\n\t.bss\n\t.globl\tRB_ERR_IO\n\t.p2align\t2\nRB_ERR_IO:\n\t.long\t0                               # 0x0\n\t.size\tRB_ERR_IO, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %39\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  %35 = load i32, ptr @RB_ERR_IO, align 4\n  %36 = select i1 %34, i32 0, i32 %35\n  %37 = tail call i32 @close(i32 noundef %23) #2\n  %38 = select i1 %34, i32 0, i32 %36\n  br label %39\n\n39:                                               ; preds = %29, %25\n  %40 = phi i32 [ %28, %25 ], [ %38, %29 ]\n  ret i32 %40\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %29\n  %36 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n37:                                               ; preds = %29\n  %38 = tail call i32 @fsync(i32 noundef %23) #2\n  br label %39\n\n39:                                               ; preds = %37, %35\n  %40 = phi i32 [ %36, %35 ], [ 0, %37 ]\n  %41 = tail call i32 @close(i32 noundef %23) #2\n  %42 = phi i32 [ %40, %35 ], [ %38, %37 ]\n  ret i32 %42\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsync(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %39\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  %35 = load i32, ptr @RB_ERR_IO, align 4\n  %36 = select i1 %34, i32 0, i32 %35\n  %37 = tail call i32 @close(i32 noundef %23) #2\n  %38 = select i1 %34, i32 0, i32 %36\n  br label %39\n\n39:                                               ; preds = %29, %25\n  %40 = phi i32 [ %28, %25 ], [ %38, %29 ]\n  ret i32 %40\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %29\n  %36 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n37:                                               ; preds = %29\n  %38 = tail call i32 @fsync(i32 noundef %23) #2\n  br label %40\n\n39:                                               ; preds = %37\n  %40 = phi i32 [ %36, %37 ], [ 0, %35 ]\n  br label %41\n\n41:                                               ; preds = %39, %35\n  %42 = phi i32 [ %32, %35 ], [ %32, %39 ]\n  %43 = phi i32 [ %23, %35 ], [ %23, %39 ]\n  %44 = tail call i32 @close(i32 noundef %43) #2\n  %45 = phi i32 [ %40, %35 ], [ %40, %39 ]\n  ret i32 %45\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsync(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/lede/package/boot/rbcfg/src/extr_main.c_rbcfg_update.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rbcfg_ctx = type { i32, ptr, ptr, i64 }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.rbcfg_ctx, ptr %2, i64 0, i32 3\n  %4 = load i64, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !13\n  %6 = tail call i32 @put_u32(i64 noundef %4, i32 noundef %5) #3\n  %7 = load i64, ptr %3, align 8, !tbaa !9\n  %8 = add nsw i64 %7, 4\n  %9 = tail call i32 @put_u32(i64 noundef %8, i32 noundef 0) #3\n  %10 = load i64, ptr %3, align 8, !tbaa !9\n  %11 = inttoptr i64 %10 to ptr\n  %12 = load i32, ptr %2, align 8, !tbaa !14\n  %13 = tail call i32 @cyg_ether_crc32(ptr noundef %11, i32 noundef %12) #3\n  %14 = load i64, ptr %3, align 8, !tbaa !9\n  %15 = add nsw i64 %14, 4\n  %16 = tail call i32 @put_u32(i64 noundef %15, i32 noundef %13) #3\n  %17 = icmp eq i32 %0, 0\n  %18 = getelementptr inbounds %struct.rbcfg_ctx, ptr %2, i64 0, i32 1\n  %19 = getelementptr inbounds %struct.rbcfg_ctx, ptr %2, i64 0, i32 2\n  %20 = select i1 %17, ptr %19, ptr %18\n  %21 = load ptr, ptr %20, align 8, !tbaa !5\n  %22 = load i32, ptr @O_WRONLY, align 4, !tbaa !13\n  %23 = load i32, ptr @O_CREAT, align 4, !tbaa !13\n  %24 = or i32 %23, %22\n  %25 = tail call i32 @open(ptr noundef %21, i32 noundef %24) #3\n  %26 = icmp slt i32 %25, 0\n  br i1 %26, label %27, label %31\n\n27:                                               ; preds = %1\n  %28 = load i32, ptr @stderr, align 4, !tbaa !13\n  %29 = tail call i32 @fprintf(i32 noundef %28, ptr noundef nonnull @.str, ptr noundef %21) #3\n  %30 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !13\n  br label %44\n\n31:                                               ; preds = %1\n  %32 = load i64, ptr %3, align 8, !tbaa !9\n  %33 = load i32, ptr %2, align 8, !tbaa !14\n  %34 = tail call i32 @write(i32 noundef %25, i64 noundef %32, i32 noundef %33) #3\n  %35 = load i32, ptr %2, align 8, !tbaa !14\n  %36 = icmp eq i32 %34, %35\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %31\n  %38 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !13\n  br label %41\n\n39:                                               ; preds = %31\n  %40 = tail call i32 @fsync(i32 noundef %25) #3\n  br label %41\n\n41:                                               ; preds = %39, %37\n  %42 = phi i32 [ %38, %37 ], [ 0, %39 ]\n  %43 = tail call i32 @close(i32 noundef %25) #3\n  br label %44\n\n44:                                               ; preds = %41, %27\n  %45 = phi i32 [ %30, %27 ], [ %42, %41 ]\n  ret i32 %45\n}\n\ndeclare i32 @put_u32(i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree\ndeclare noundef i32 @open(ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsync(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nofree \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !12, i64 24}\n!10 = !{!\"rbcfg_ctx\", !11, i64 0, !6, i64 8, !6, i64 16, !12, i64 24}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!\"long\", !7, i64 0}\n!13 = !{!11, !11, i64 0}\n!14 = !{!10, !11, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_main.c_rbcfg_update.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function rbcfg_update\n\t.type\trbcfg_update,@function\nrbcfg_update:                           # @rbcfg_update\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edi, %ebx\n\tmovq\trbcfg_ctx(%rip), %rbp\n\tmovq\t24(%rbp), %rdi\n\tmovl\tRB_MAGIC_SOFT(%rip), %esi\n\tcallq\tput_u32@PLT\n\tmovq\t24(%rbp), %rdi\n\taddq\t$4, %rdi\n\txorl\t%esi, %esi\n\tcallq\tput_u32@PLT\n\tmovq\t24(%rbp), %rdi\n\tmovl\t(%rbp), %esi\n\tcallq\tcyg_ether_crc32@PLT\n\tmovq\t24(%rbp), %rdi\n\taddq\t$4, %rdi\n\tmovl\t%eax, %esi\n\tcallq\tput_u32@PLT\n\txorl\t%eax, %eax\n\ttestl\t%ebx, %ebx\n\tsete\t%al\n\tmovq\t8(%rbp,%rax,8), %r14\n\tmovl\tO_CREAT(%rip), %esi\n\torl\tO_WRONLY(%rip), %esi\n\tmovq\t%r14, %rdi\n\tcallq\topen@PLT\n\ttestl\t%eax, %eax\n\tjs\t.LBB0_1\n# %bb.2:\n\tmovl\t%eax, %ebx\n\tmovq\t24(%rbp), %rsi\n\tmovl\t(%rbp), %edx\n\tmovl\t%eax, %edi\n\tcallq\twrite@PLT\n\tcmpl\t(%rbp), %eax\n\tjne\t.LBB0_3\n# %bb.4:\n\tmovl\t%ebx, %edi\n\tcallq\tfsync@PLT\n\txorl\t%ebp, %ebp\n\tjmp\t.LBB0_5\n.LBB0_1:\n\tmovl\tstderr(%rip), %edi\n\tmovl\t$.L.str, %esi\n\tmovq\t%r14, %rdx\n\tcallq\tfprintf@PLT\n\tmovl\tRB_ERR_IO(%rip), %ebp\n\tjmp\t.LBB0_6\n.LBB0_3:\n\tmovl\tRB_ERR_IO(%rip), %ebp\n.LBB0_5:\n\tmovl\t%ebx, %edi\n\tcallq\tclose@PLT\n.LBB0_6:\n\tmovl\t%ebp, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\trbcfg_update, .Lfunc_end0-rbcfg_update\n\t.cfi_endproc\n                                        # -- End function\n\t.type\trbcfg_ctx,@object               # @rbcfg_ctx\n\t.bss\n\t.globl\trbcfg_ctx\n\t.p2align\t3\nrbcfg_ctx:\n\t.quad\t0\n\t.size\trbcfg_ctx, 8\n\n\t.type\tRB_MAGIC_SOFT,@object           # @RB_MAGIC_SOFT\n\t.globl\tRB_MAGIC_SOFT\n\t.p2align\t2\nRB_MAGIC_SOFT:\n\t.long\t0                               # 0x0\n\t.size\tRB_MAGIC_SOFT, 4\n\n\t.type\tO_WRONLY,@object                # @O_WRONLY\n\t.globl\tO_WRONLY\n\t.p2align\t2\nO_WRONLY:\n\t.long\t0                               # 0x0\n\t.size\tO_WRONLY, 4\n\n\t.type\tO_CREAT,@object                 # @O_CREAT\n\t.globl\tO_CREAT\n\t.p2align\t2\nO_CREAT:\n\t.long\t0                               # 0x0\n\t.size\tO_CREAT, 4\n\n\t.type\tstderr,@object                  # @stderr\n\t.globl\tstderr\n\t.p2align\t2\nstderr:\n\t.long\t0                               # 0x0\n\t.size\tstderr, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"unable to open %s for writing\\n\"\n\t.size\t.L.str, 31\n\n\t.type\tRB_ERR_IO,@object               # @RB_ERR_IO\n\t.bss\n\t.globl\tRB_ERR_IO\n\t.p2align\t2\nRB_ERR_IO:\n\t.long\t0                               # 0x0\n\t.size\tRB_ERR_IO, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %39\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %29\n  %36 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %39\n\n37:                                               ; preds = %29\n  %38 = tail call i32 @fsync(i32 noundef %23) #2\n  br label %39\n\n39:                                               ; preds = %37, %35, %25\n  %40 = phi i32 [ %28, %25 ], [ %36, %35 ], [ 0, %37 ]\n  %41 = tail call i32 @close(i32 noundef %23) #2\n  ret i32 %40\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsync(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %29\n  %36 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n37:                                               ; preds = %29\n  %38 = tail call i32 @fsync(i32 noundef %23) #2\n  br label %40\n\n39:                                               ; preds = %37\n  %40 = phi i32 [ %36, %37 ], [ 0, %35 ]\n  br label %41\n\n41:                                               ; preds = %39, %35\n  %42 = phi i32 [ %32, %35 ], [ %32, %39 ]\n  %43 = phi i32 [ %23, %35 ], [ %23, %39 ]\n  %44 = tail call i32 @close(i32 noundef %43) #2\n  %45 = phi i32 [ %40, %35 ], [ %40, %39 ]\n  ret i32 %45\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsync(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %39\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  %35 = load i32, ptr @RB_ERR_IO, align 4\n  %36 = select i1 %34, i32 0, i32 %35\n  %37 = tail call i32 @close(i32 noundef %23) #2\n  %38 = select i1 %34, i32 0, i32 %36\n  br label %39\n\n39:                                               ; preds = %29, %25\n  %40 = phi i32 [ %28, %25 ], [ %38, %29 ]\n  ret i32 %40\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32, ptr, ptr }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 2\n  %4 = load ptr, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !12\n  %6 = tail call i32 @put_u32(ptr noundef %4, i32 noundef %5) #2\n  %7 = load ptr, ptr %3, align 8, !tbaa !9\n  %8 = getelementptr inbounds i32, ptr %7, i64 1\n  %9 = tail call i32 @put_u32(ptr noundef nonnull %8, i32 noundef 0) #2\n  %10 = load ptr, ptr %3, align 8, !tbaa !9\n  %11 = load i32, ptr %2, align 8, !tbaa !13\n  %12 = tail call i32 @cyg_ether_crc32(ptr noundef %10, i32 noundef %11) #2\n  %13 = load ptr, ptr %3, align 8, !tbaa !9\n  %14 = getelementptr inbounds i32, ptr %13, i64 1\n  %15 = tail call i32 @put_u32(ptr noundef nonnull %14, i32 noundef %12) #2\n  %16 = icmp eq i32 %0, 0\n  %17 = getelementptr inbounds %struct.TYPE_2__, ptr %2, i64 0, i32 1\n  %18 = select i1 %16, ptr %17, ptr %2\n  %19 = load ptr, ptr %18, align 8, !tbaa !5\n  %20 = load i32, ptr @O_WRONLY, align 4, !tbaa !12\n  %21 = load i32, ptr @O_CREAT, align 4, !tbaa !12\n  %22 = or i32 %21, %20\n  %23 = tail call i32 @open(ptr noundef %19, i32 noundef %22) #2\n  %24 = icmp slt i32 %23, 0\n  br i1 %24, label %25, label %29\n\n25:                                               ; preds = %1\n  %26 = load i32, ptr @stderr, align 4, !tbaa !12\n  %27 = tail call i32 @fprintf(i32 noundef %26, ptr noundef nonnull @.str, ptr noundef %19) #2\n  %28 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n29:                                               ; preds = %1\n  %30 = load ptr, ptr %3, align 8, !tbaa !9\n  %31 = load i32, ptr %2, align 8, !tbaa !13\n  %32 = tail call i32 @write(i32 noundef %23, ptr noundef %30, i32 noundef %31) #2\n  %33 = load i32, ptr %2, align 8, !tbaa !13\n  %34 = icmp eq i32 %32, %33\n  br i1 %34, label %37, label %35\n\n35:                                               ; preds = %29\n  %36 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !12\n  br label %38\n\n37:                                               ; preds = %29\n  %38 = tail call i32 @fsync(i32 noundef %23) #2\n  br label %39\n\n39:                                               ; preds = %37, %35\n  %40 = phi i32 [ %36, %35 ], [ 0, %37 ]\n  %41 = tail call i32 @close(i32 noundef %23) #2\n  %42 = phi i32 [ %40, %35 ], [ %38, %37 ]\n  ret i32 %42\n}\n\ndeclare i32 @put_u32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @open(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsync(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 24}\n!10 = !{!\"TYPE_2__\", !11, i64 0, !6, i64 8, !6, i64 16}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/openwrt/package/boot/rbcfg/src/extr_main.c_rbcfg_update.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.rbcfg_ctx = type { i32, ptr, ptr, i64 }\n\n@rbcfg_ctx = dso_local local_unnamed_addr global ptr null, align 8\n@RB_MAGIC_SOFT = dso_local local_unnamed_addr global i32 0, align 4\n@O_WRONLY = dso_local local_unnamed_addr global i32 0, align 4\n@O_CREAT = dso_local local_unnamed_addr global i32 0, align 4\n@stderr = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [31 x i8] c\"unable to open %s for writing\\0A\\00\", align 1\n@RB_ERR_IO = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @rbcfg_update], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @rbcfg_update(i32 noundef %0) #0 {\n  %2 = load ptr, ptr @rbcfg_ctx, align 8, !tbaa !5\n  %3 = getelementptr inbounds %struct.rbcfg_ctx, ptr %2, i64 0, i32 3\n  %4 = load i64, ptr %3, align 8, !tbaa !9\n  %5 = load i32, ptr @RB_MAGIC_SOFT, align 4, !tbaa !13\n  %6 = tail call i32 @put_u32(i64 noundef %4, i32 noundef %5) #3\n  %7 = load i64, ptr %3, align 8, !tbaa !9\n  %8 = add nsw i64 %7, 4\n  %9 = tail call i32 @put_u32(i64 noundef %8, i32 noundef 0) #3\n  %10 = load i64, ptr %3, align 8, !tbaa !9\n  %11 = inttoptr i64 %10 to ptr\n  %12 = load i32, ptr %2, align 8, !tbaa !14\n  %13 = tail call i32 @cyg_ether_crc32(ptr noundef %11, i32 noundef %12) #3\n  %14 = load i64, ptr %3, align 8, !tbaa !9\n  %15 = add nsw i64 %14, 4\n  %16 = tail call i32 @put_u32(i64 noundef %15, i32 noundef %13) #3\n  %17 = icmp eq i32 %0, 0\n  %18 = getelementptr inbounds %struct.rbcfg_ctx, ptr %2, i64 0, i32 1\n  %19 = getelementptr inbounds %struct.rbcfg_ctx, ptr %2, i64 0, i32 2\n  %20 = select i1 %17, ptr %19, ptr %18\n  %21 = load ptr, ptr %20, align 8, !tbaa !5\n  %22 = load i32, ptr @O_WRONLY, align 4, !tbaa !13\n  %23 = load i32, ptr @O_CREAT, align 4, !tbaa !13\n  %24 = or i32 %23, %22\n  %25 = tail call i32 @open(ptr noundef %21, i32 noundef %24) #3\n  %26 = icmp slt i32 %25, 0\n  br i1 %26, label %27, label %31\n\n27:                                               ; preds = %1\n  %28 = load i32, ptr @stderr, align 4, !tbaa !13\n  %29 = tail call i32 @fprintf(i32 noundef %28, ptr noundef nonnull @.str, ptr noundef %21) #3\n  %30 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !13\n  br label %44\n\n31:                                               ; preds = %1\n  %32 = load i64, ptr %3, align 8, !tbaa !9\n  %33 = load i32, ptr %2, align 8, !tbaa !14\n  %34 = tail call i32 @write(i32 noundef %25, i64 noundef %32, i32 noundef %33) #3\n  %35 = load i32, ptr %2, align 8, !tbaa !14\n  %36 = icmp eq i32 %34, %35\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %31\n  %38 = load i32, ptr @RB_ERR_IO, align 4, !tbaa !13\n  br label %41\n\n39:                                               ; preds = %31\n  %40 = tail call i32 @fsync(i32 noundef %25) #3\n  br label %41\n\n41:                                               ; preds = %39, %37\n  %42 = phi i32 [ %38, %37 ], [ 0, %39 ]\n  %43 = tail call i32 @close(i32 noundef %25) #3\n  br label %44\n\n44:                                               ; preds = %41, %27\n  %45 = phi i32 [ %30, %27 ], [ %42, %41 ]\n  ret i32 %45\n}\n\ndeclare i32 @put_u32(i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @cyg_ether_crc32(ptr noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nofree\ndeclare noundef i32 @open(ptr nocapture noundef readonly, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @fprintf(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @write(i32 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @fsync(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @close(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nofree \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !12, i64 24}\n!10 = !{!\"rbcfg_ctx\", !11, i64 0, !6, i64 8, !6, i64 16, !12, i64 24}\n!11 = !{!\"int\", !7, i64 0}\n!12 = !{!\"long\", !7, i64 0}\n!13 = !{!11, !11, i64 0}\n!14 = !{!10, !11, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_tr_image.c_R_CreateDlightImage.ll\"\n\t.section\t.rodata.cst4,\"aM\",@progbits,4\n\t.p2align\t2                               # -- Begin function R_CreateDlightImage\n.LCPI0_0:\n\t.long\t0xbf000000                      # float -0.5\n.LCPI0_1:\n\t.long\t0x457a0000                      # float 4000\n\t.text\n\t.p2align\t4, 0x90\n\t.type\tR_CreateDlightImage,@function\nR_CreateDlightImage:                    # @R_CreateDlightImage\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r14\n\tpushq\t%rbx\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\tmovl\tDLIGHT_SIZE(%rip), %ecx\n\tmovq\t%rcx, %rax\n\timulq\t%rcx, %rax\n\tmovq\t%rsp, %rsi\n\tshlq\t$4, %rax\n\tsubq\t%rax, %rsi\n\tmovq\t%rsi, %rsp\n\ttestl\t%ecx, %ecx\n\tjle\t.LBB0_5\n# %bb.1:\n\tmovl\t%ecx, %eax\n\tshrl\t%eax\n\tcvtsi2ss\t%eax, %xmm0\n\taddss\t.LCPI0_0(%rip), %xmm0\n\tleaq\t12(%rsi), %r8\n\tmovq\t%rcx, %r14\n\tshlq\t$4, %r14\n\txorl\t%r10d, %r10d\n\tmovss\t.LCPI0_1(%rip), %xmm1           # xmm1 = mem[0],zero,zero,zero\n\tmovl\t$255, %r11d\n\txorl\t%r9d, %r9d\n\t.p2align\t4, 0x90\n.LBB0_2:                                # =>This Loop Header: Depth=1\n                                        #     Child Loop BB0_3 Depth 2\n\txorps\t%xmm3, %xmm3\n\tcvtsi2ss\t%r9d, %xmm3\n\tmovaps\t%xmm0, %xmm2\n\tsubss\t%xmm3, %xmm2\n\tmovq\t%r8, %rdi\n\txorl\t%eax, %eax\n\t.p2align\t4, 0x90\n.LBB0_3:                                #   Parent Loop BB0_2 Depth=1\n                                        # =>  This Inner Loop Header: Depth=2\n\txorps\t%xmm3, %xmm3\n\tcvtsi2ss\t%eax, %xmm3\n\tmovaps\t%xmm0, %xmm4\n\tsubss\t%xmm3, %xmm4\n\tmulss\t%xmm4, %xmm4\n\tmovaps\t%xmm2, %xmm3\n\tmulss\t%xmm2, %xmm3\n\taddss\t%xmm4, %xmm3\n\tmovaps\t%xmm1, %xmm4\n\tdivss\t%xmm3, %xmm4\n\tcvttss2si\t%xmm4, %edx\n\tcmpl\t$75, %edx\n\tmovl\t%edx, %ebx\n\tcmovll\t%r10d, %ebx\n\tcmpl\t$256, %edx                      # imm = 0x100\n\tcmovgel\t%r11d, %ebx\n\tmovl\t%ebx, -4(%rdi)\n\tmovl\t%ebx, -8(%rdi)\n\tmovl\t%ebx, -12(%rdi)\n\tmovl\t$255, (%rdi)\n\tincq\t%rax\n\taddq\t%r14, %rdi\n\tcmpq\t%rax, %rcx\n\tjne\t.LBB0_3\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\tincq\t%r9\n\taddq\t$16, %r8\n\tcmpq\t%rcx, %r9\n\tjne\t.LBB0_2\n.LBB0_5:\n\tmovl\tIMGTYPE_COLORALPHA(%rip), %r8d\n\tmovl\tIMGFLAG_CLAMPTOEDGE(%rip), %r9d\n\tsubq\t$8, %rsp\n\tmovl\t$.L.str, %edi\n\tmovl\t%ecx, %edx\n                                        # kill: def $ecx killed $ecx killed $rcx\n\tpushq\t$0\n\tcallq\tR_CreateImage@PLT\n\taddq\t$16, %rsp\n\tmovl\t%eax, tr(%rip)\n\tleaq\t-16(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r14\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.Lfunc_end0:\n\t.size\tR_CreateDlightImage, .Lfunc_end0-R_CreateDlightImage\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tDLIGHT_SIZE,@object             # @DLIGHT_SIZE\n\t.bss\n\t.globl\tDLIGHT_SIZE\n\t.p2align\t2\nDLIGHT_SIZE:\n\t.long\t0                               # 0x0\n\t.size\tDLIGHT_SIZE, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"*dlight\"\n\t.size\t.L.str, 8\n\n\t.type\tIMGTYPE_COLORALPHA,@object      # @IMGTYPE_COLORALPHA\n\t.bss\n\t.globl\tIMGTYPE_COLORALPHA\n\t.p2align\t2\nIMGTYPE_COLORALPHA:\n\t.long\t0                               # 0x0\n\t.size\tIMGTYPE_COLORALPHA, 4\n\n\t.type\tIMGFLAG_CLAMPTOEDGE,@object     # @IMGFLAG_CLAMPTOEDGE\n\t.globl\tIMGFLAG_CLAMPTOEDGE\n\t.p2align\t2\nIMGFLAG_CLAMPTOEDGE:\n\t.long\t0                               # 0x0\n\t.size\tIMGFLAG_CLAMPTOEDGE, 4\n\n\t.type\ttr,@object                      # @tr\n\t.globl\ttr\n\t.p2align\t2\ntr:\n\t.zero\t4\n\t.size\ttr, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %37\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %31\n  %14 = phi i64 [ 0, %7 ], [ %32, %31 ]\n  %15 = phi i64 [ 0, %7 ], [ %33, %31 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %28, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 3\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %22, %17\n  %25 = fdiv float %24, %23\n  %26 = fptosi float %25 to i32\n  %27 = tail call i32 @llvm.smin.i32(i32 %26, i32 75)\n  %28 = add nuw nsw i64 %19, 1\n  %29 = icmp slt i32 %27, 256\n  %30 = select i1 %29, i32 0, i32 255\n  store i32 %30, ptr %20, align 4, !tbaa !9\n  br label %31\n\n31:                                               ; preds = %18\n  %32 = add nuw nsw i64 %14, 1\n  %33 = add nuw nsw i64 %15, 1\n  %34 = icmp eq i64 %33, %12\n  br i1 %34, label %35, label %13, !llvm.loop !11\n\n35:                                               ; preds = %31\n  %36 = icmp eq i64 %32, %2\n  br i1 %36, label %37, label %13, !llvm.loop !13\n\n37:                                               ; preds = %35, %0\n  %38 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %39 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %40 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %1, i32 noundef %38, i32 noundef %39, i32 noundef 0) #3\n  store i32 %40, ptr @tr, align 4, !tbaa !14\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 12}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n!14 = !{!15, !6, i64 0}\n!15 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %34\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %29\n  %14 = phi i64 [ 0, %7 ], [ %30, %29 ]\n  %15 = phi i64 [ 0, %7 ], [ %31, %29 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %25, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 3\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %22, %17\n  %25 = add nuw nsw i64 %19, 1\n  %26 = fdiv float %24, %23\n  %27 = fptosi float %26 to i32\n  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 75)\n  store i32 %28, ptr %20, align 4, !tbaa !9\n  br label %29\n\n29:                                               ; preds = %18, %18\n  %30 = add nuw nsw i64 %14, 1\n  %31 = add i64 %15, 1\n  %32 = icmp eq i64 %31, %12\n  br i1 %32, label %33, label %13, !llvm.loop !11\n\n33:                                               ; preds = %29\n  br label %34\n\n34:                                               ; preds = %33, %0\n  %35 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %36 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %37 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %1, i32 noundef %35, i32 noundef %36, i32 noundef 0) #3\n  store i32 %37, ptr @tr, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 12}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !6, i64 0}\n!14 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %34\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 2\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %29\n  %14 = phi i64 [ 0, %7 ], [ %30, %29 ]\n  %15 = phi i64 [ 0, %7 ], [ %31, %29 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %25, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 3\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %22, %17\n  %25 = add nuw nsw i64 %19, 1\n  %26 = fdiv float %24, %23\n  %27 = fptosi float %26 to i32\n  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 75)\n  store i32 %28, ptr %20, align 4, !tbaa !9\n  br label %29\n\n29:                                               ; preds = %18, %18\n  %30 = add nuw nsw i64 %14, 1\n  %31 = add i64 %15, 1\n  %32 = icmp eq i64 %31, %12\n  br i1 %32, label %33, label %13, !llvm.loop !11\n\n33:                                               ; preds = %29\n  br label %34\n\n34:                                               ; preds = %33, %0\n  %35 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %36 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %37 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %1, i32 noundef %35, i32 noundef %36, i32 noundef 0) #3\n  store i32 %37, ptr @tr, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 12}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !6, i64 0}\n!14 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32 }\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_4__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = zext i32 %1 to i64\n  %4 = mul nsw i64 %3, %2\n  %5 = alloca i32, i64 %4, align 16\n  %6 = icmp sgt i32 %1, 0\n  br i1 %6, label %7, label %34\n\n7:                                                ; preds = %0\n  %8 = lshr i32 %1, 1\n  %9 = sitofp i32 %8 to float\n  %10 = fadd float %9, -5.000000e-01\n  %11 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 0, i32 3\n  %12 = zext i32 %1 to i64\n  br label %13\n\n13:                                               ; preds = %7, %29\n  %14 = phi i64 [ 0, %7 ], [ %30, %29 ]\n  %15 = phi i64 [ 0, %7 ], [ %31, %29 ]\n  %16 = sitofp i64 %15 to float\n  %17 = fsub float %10, %16\n  br label %18\n\n18:                                               ; preds = %13, %18\n  %19 = phi i64 [ 0, %13 ], [ %25, %18 ]\n  %20 = getelementptr inbounds %struct.TYPE_5__, ptr %5, i64 %14, i32 1\n  %21 = sitofp i64 %19 to float\n  %22 = fsub float %17, %21\n  %23 = fmul float %22, %22\n  %24 = fmul float %22, %17\n  %25 = add nuw nsw i64 %19, 1\n  %26 = fdiv float %24, %23\n  %27 = fptosi float %26 to i32\n  %28 = tail call i32 @llvm.smin.i32(i32 %27, i32 75)\n  store i32 %28, ptr %20, align 4, !tbaa !9\n  br label %29\n\n29:                                               ; preds = %18, %18\n  %30 = add nuw nsw i64 %14, 1\n  %31 = add nuw nsw i64 %15, 1\n  %32 = icmp eq i64 %31, %12\n  br i1 %32, label %33, label %13, !llvm.loop !11\n\n33:                                               ; preds = %29\n  br label %34\n\n34:                                               ; preds = %33, %0\n  %35 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %36 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %37 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %5, i32 noundef %1, i32 noundef %1, i32 noundef %35, i32 noundef %36, i32 noundef 0) #3\n  store i32 %37, ptr @tr, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 0}\n!10 = !{!\"TYPE_5__\", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!14, !6, i64 0}\n!14 = !{!\"TYPE_4__\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/lab/engine/code/renderergl1/extr_tr_image.c_R_CreateDlightImage.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { i32 }\n\n@DLIGHT_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [8 x i8] c\"*dlight\\00\", align 1\n@IMGTYPE_COLORALPHA = dso_local local_unnamed_addr global i32 0, align 4\n@IMGFLAG_CLAMPTOEDGE = dso_local local_unnamed_addr global i32 0, align 4\n@tr = dso_local local_unnamed_addr global %struct.TYPE_2__ zeroinitializer, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @R_CreateDlightImage], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @R_CreateDlightImage() #0 {\n  %1 = load i32, ptr @DLIGHT_SIZE, align 4, !tbaa !5\n  %2 = zext i32 %1 to i64\n  %3 = mul nuw i64 %2, %2\n  %4 = alloca [4 x i32], i64 %3, align 16\n  %5 = icmp sgt i32 %1, 0\n  br i1 %5, label %6, label %39\n\n6:                                                ; preds = %0\n  %7 = lshr i32 %1, 1\n  %8 = sitofp i32 %7 to float\n  %9 = fadd float %8, -5.000000e-01\n  br label %10\n\n10:                                               ; preds = %36, %6\n  %11 = phi i64 [ 0, %6 ], [ %37, %36 ]\n  %12 = trunc i64 %11 to i32\n  %13 = sitofp i32 %12 to float\n  %14 = fsub float %9, %13\n  %15 = getelementptr inbounds [4 x i32], ptr %4, i64 %11\n  br label %16\n\n16:                                               ; preds = %10, %16\n  %17 = phi i64 [ 0, %10 ], [ %34, %16 ]\n  %18 = trunc i64 %17 to i32\n  %19 = sitofp i32 %18 to float\n  %20 = fsub float %9, %19\n  %21 = fmul float %20, %20\n  %22 = tail call float @llvm.fmuladd.f32(float %14, float %14, float %21)\n  %23 = fdiv float 4.000000e+03, %22\n  %24 = fptosi float %23 to i32\n  %25 = icmp sgt i32 %24, 255\n  %26 = icmp slt i32 %24, 75\n  %27 = select i1 %26, i32 0, i32 %24\n  %28 = select i1 %25, i32 255, i32 %27\n  %29 = mul nuw nsw i64 %17, %2\n  %30 = getelementptr inbounds [4 x i32], ptr %15, i64 %29\n  %31 = getelementptr inbounds [4 x i32], ptr %30, i64 0, i64 2\n  store i32 %28, ptr %31, align 8, !tbaa !5\n  %32 = getelementptr inbounds [4 x i32], ptr %30, i64 0, i64 1\n  store i32 %28, ptr %32, align 4, !tbaa !5\n  store i32 %28, ptr %30, align 16, !tbaa !5\n  %33 = getelementptr inbounds [4 x i32], ptr %30, i64 0, i64 3\n  store i32 255, ptr %33, align 4, !tbaa !5\n  %34 = add nuw nsw i64 %17, 1\n  %35 = icmp eq i64 %34, %2\n  br i1 %35, label %36, label %16, !llvm.loop !9\n\n36:                                               ; preds = %16\n  %37 = add nuw nsw i64 %11, 1\n  %38 = icmp eq i64 %37, %2\n  br i1 %38, label %39, label %10, !llvm.loop !11\n\n39:                                               ; preds = %36, %0\n  %40 = load i32, ptr @IMGTYPE_COLORALPHA, align 4, !tbaa !5\n  %41 = load i32, ptr @IMGFLAG_CLAMPTOEDGE, align 4, !tbaa !5\n  %42 = call i32 @R_CreateImage(ptr noundef nonnull @.str, ptr noundef nonnull %4, i32 noundef %1, i32 noundef %1, i32 noundef %40, i32 noundef %41, i32 noundef 0) #3\n  store i32 %42, ptr @tr, align 4, !tbaa !12\n  ret void\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare float @llvm.fmuladd.f32(float, float, float) #1\n\ndeclare i32 @R_CreateImage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = distinct !{!9, !10}\n!10 = !{!\"llvm.loop.mustprogress\"}\n!11 = distinct !{!11, !10}\n!12 = !{!13, !6, i64 0}\n!13 = !{!\"TYPE_2__\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_keymap.c_process_record_user.ll\"\n\t.globl\tprocess_record_user             # -- Begin function process_record_user\n\t.p2align\t4, 0x90\n\t.type\tprocess_record_user,@function\nprocess_record_user:                    # @process_record_user\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n                                        # kill: def $edi killed $edi def $rdi\n\taddl\t$-128, %edi\n\tcmpl\t$4, %edi\n\tja\t.LBB0_1\n# %bb.2:\n\tjmpq\t*.LJTI0_0(,%rdi,8)\n.LBB0_10:\n\tcmpl\t$0, (%rsi)\n\tmovl\t_RAISE(%rip), %edi\n\tje\t.LBB0_11\n.LBB0_8:\n\tcallq\tlayer_on@PLT\n\tjmp\t.LBB0_9\n.LBB0_1:\n\tmovl\t$1, %ebx\n\tjmp\t.LBB0_16\n.LBB0_5:\n\txorl\t%ebx, %ebx\n\tcmpl\t$0, (%rsi)\n\tje\t.LBB0_16\n# %bb.6:\n\tmovl\t_QWERTY(%rip), %edi\n\tcallq\tset_single_persistent_default_layer@PLT\n\tjmp\t.LBB0_16\n.LBB0_7:\n\tcmpl\t$0, (%rsi)\n\tmovl\t_LOWER(%rip), %edi\n\tjne\t.LBB0_8\n.LBB0_11:\n\tcallq\tlayer_off@PLT\n.LBB0_9:\n\tmovl\t_LOWER(%rip), %edi\n\tmovl\t_RAISE(%rip), %esi\n\tmovl\t_ADJUST(%rip), %edx\n\tcallq\tupdate_tri_layer@PLT\n\tjmp\t.LBB0_15\n.LBB0_3:\n\txorl\t%ebx, %ebx\n\tcmpl\t$0, (%rsi)\n\tje\t.LBB0_16\n# %bb.4:\n\tmovl\t_DVORAK(%rip), %edi\n\tcallq\tset_single_persistent_default_layer@PLT\n\tjmp\t.LBB0_16\n.LBB0_12:\n\tcmpl\t$0, (%rsi)\n\tmovl\t_COMMAND(%rip), %edi\n\tje\t.LBB0_14\n# %bb.13:\n\tcallq\tlayer_on@PLT\n\tjmp\t.LBB0_15\n.LBB0_14:\n\tcallq\tlayer_off@PLT\n.LBB0_15:\n\txorl\t%ebx, %ebx\n.LBB0_16:\n\tmovl\t%ebx, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tprocess_record_user, .Lfunc_end0-process_record_user\n\t.cfi_endproc\n\t.section\t.rodata,\"a\",@progbits\n\t.p2align\t3\n.LJTI0_0:\n\t.quad\t.LBB0_10\n\t.quad\t.LBB0_5\n\t.quad\t.LBB0_7\n\t.quad\t.LBB0_3\n\t.quad\t.LBB0_12\n                                        # -- End function\n\t.type\t_DVORAK,@object                 # @_DVORAK\n\t.bss\n\t.globl\t_DVORAK\n\t.p2align\t2\n_DVORAK:\n\t.long\t0                               # 0x0\n\t.size\t_DVORAK, 4\n\n\t.type\t_QWERTY,@object                 # @_QWERTY\n\t.globl\t_QWERTY\n\t.p2align\t2\n_QWERTY:\n\t.long\t0                               # 0x0\n\t.size\t_QWERTY, 4\n\n\t.type\t_LOWER,@object                  # @_LOWER\n\t.globl\t_LOWER\n\t.p2align\t2\n_LOWER:\n\t.long\t0                               # 0x0\n\t.size\t_LOWER, 4\n\n\t.type\t_RAISE,@object                  # @_RAISE\n\t.globl\t_RAISE\n\t.p2align\t2\n_RAISE:\n\t.long\t0                               # 0x0\n\t.size\t_RAISE, 4\n\n\t.type\t_ADJUST,@object                 # @_ADJUST\n\t.globl\t_ADJUST\n\t.p2align\t2\n_ADJUST:\n\t.long\t0                               # 0x0\n\t.size\t_ADJUST, 4\n\n\t.type\t_COMMAND,@object                # @_COMMAND\n\t.globl\t_COMMAND\n\t.p2align\t2\n_COMMAND:\n\t.long\t0                               # 0x0\n\t.size\t_COMMAND, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_DVORAK = dso_local local_unnamed_addr global i32 0, align 4\n@_QWERTY = dso_local local_unnamed_addr global i32 0, align 4\n@_LOWER = dso_local local_unnamed_addr global i32 0, align 4\n@_RAISE = dso_local local_unnamed_addr global i32 0, align 4\n@_ADJUST = dso_local local_unnamed_addr global i32 0, align 4\n@_COMMAND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  switch i32 %0, label %34 [\n    i32 132, label %3\n    i32 131, label %10\n    i32 130, label %16\n    i32 129, label %22\n    i32 128, label %28\n  ]\n\n3:                                                ; preds = %2\n  %4 = load i32, ptr %1, align 4, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %34, label %6\n\n6:                                                ; preds = %3\n  %7 = load i32, ptr @_DVORAK, align 4, !tbaa !11\n  %8 = tail call i32 @set_single_persistent_default_layer(i32 noundef %7) #2\n  br label %34\n\n9:                                                ; preds = %28\n  br label %34\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr %1, align 4, !tbaa !5\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %34, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @_QWERTY, align 4, !tbaa !11\n  %15 = tail call i32 @set_single_persistent_default_layer(i32 noundef %14) #2\n  br label %34\n\n16:                                               ; preds = %2\n  %17 = load i32, ptr %1, align 4, !tbaa !5\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %34, label %19\n\n19:                                               ; preds = %16\n  %20 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %21 = tail call i32 @set_single_persistent_default_layer(i32 noundef %20) #2\n  br label %34\n\n22:                                               ; preds = %2\n  %23 = load i32, ptr %1, align 4, !tbaa !5\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %34, label %25\n\n25:                                               ; preds = %22\n  %26 = load i32, ptr @_COMMAND, align 4, !tbaa !11\n  %27 = tail call i32 @layer_on(i32 noundef %26) #2\n  br label %34\n\n28:                                               ; preds = %2\n  %29 = load i32, ptr %1, align 4, !tbaa !5\n  %30 = icmp eq i32 %29, 0\n  %31 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  br i1 %30, label %33, label %32\n\n32:                                               ; preds = %28\n  br label %3\n\n33:                                               ; preds = %28\n  %34 = tail call i32 @layer_off(i32 noundef %31) #2\n  br label %34\n\n35:                                               ; preds = %36\n  %36 = load i32, ptr %1, align 4, !tbaa !5\n  %37 = icmp eq i32 %36, 0\n  br i1 %37, label %34, label %38\n\n38:                                               ; preds = %35\n  %39 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %40 = tail call i32 @layer_on(i32 noundef %39) #2\n  %41 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %42 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %43 = tail call i32 @update_tri_layer(i32 noundef %41, i32 noundef %42, i32 noundef %42) #2\n  br label %34\n\n44:                                               ; preds = %45\n  %46 = load i32, ptr %1, align 4, !tbaa !5\n  %47 = icmp eq i32 %46, 0\n  br i1 %47, label %48, label %49\n\n48:                                               ; preds = %44\n  %49 = tail call i32 @layer_off(i32 noundef %41) #2\n  br label %34\n\n45:                                               ; preds = %44\n  %50 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %51 = tail call i32 @layer_on(i32 noundef %50) #2\n  br label %34\n\n52:                                               ; preds = %53\n  %54 = load i32, ptr %1, align 4, !tbaa !5\n  %55 = icmp eq i32 %54, 0\n  br i1 %55, label %34, label %56\n\n56:                                               ; preds = %52\n  %57 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %58 = tail call i32 @layer_on(i32 noundef %57) #2\n  %59 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %60 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %61 = tail call i32 @update_tri_layer(i32 noundef %59, i32 noundef %60, i32 noundef %60) #2\n  br label %34\n\n62:                                               ; preds = %63\n  %64 = load i32, ptr %1, align 4, !tbaa !5\n  %65 = icmp eq i32 %64, 0\n  br i1 %65, label %34, label %66\n\n66:                                               ; preds = %62\n  %67 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %68 = tail call i32 @layer_on(i32 noundef %67) #2\n  %69 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %70 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %71 = tail call i32 @update_tri_layer(i32 noundef %69, i32 noundef %70, i32 noundef %70) #2\n  br label %34\n\n72:                                               ; preds = %73\n  %74 = load i32, ptr %1, align 4, !tbaa !5\n  %75 = icmp eq i32 %74, 0\n  br i1 %75, label %34, label %76\n\n76:                                               ; preds = %72\n  %77 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %78 = tail call i32 @layer_on(i32 noundef %77) #2\n  %79 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %80 = tail call i32 @layer_off(i32 noundef %79) #2\n  %81 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %82 = tail call i32 @update_tri_layer(i32 noundef %77, i32 noundef %81, i32 noundef %81) #2\n  br label %34\n\n83:                                               ; preds = %84\n  %85 = load i32, ptr %1, align 4, !tbaa !5\n  %86 = icmp eq i32 %85, 0\n  br i1 %86, label %34, label %87\n\n87:                                               ; preds = %83\n  %88 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %89 = tail call i32 @layer_on(i32 noundef %88) #2\n  %90 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %91 = tail call i32 @layer_off(i32 noundef %90) #2\n  %92 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %93 = tail call i32 @update_tri_layer(i32 noundef %88, i32 noundef %92, i32 noundef %92) #2\n  br label %34\n\n94:                                               ; preds = %95\n  %96 = load i32, ptr %1, align 4, !tbaa !5\n  %97 = icmp eq i32 %96, 0\n  br i1 %97, label %34, label %98\n\n98:                                               ; preds = %94\n  %99 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %100 = tail call i32 @layer_on(i32 noundef %99) #2\n  %101 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %102 = tail call i32 @layer_off(i32 noundef %101) #2\n  %103 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %104 = tail call i32 @update_tri_layer(i32 noundef %99, i32 noundef", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_DVORAK = dso_local local_unnamed_addr global i32 0, align 4\n@_QWERTY = dso_local local_unnamed_addr global i32 0, align 4\n@_LOWER = dso_local local_unnamed_addr global i32 0, align 4\n@_RAISE = dso_local local_unnamed_addr global i32 0, align 4\n@_ADJUST = dso_local local_unnamed_addr global i32 0, align 4\n@_COMMAND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  switch i32 %0, label %34 [\n    i32 132, label %3\n    i32 131, label %10\n    i32 130, label %17\n    i32 129, label %24\n    i32 128, label %31\n  ]\n\n3:                                                ; preds = %2\n  %4 = load i32, ptr %1, align 4, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %34, label %6\n\n6:                                                ; preds = %3\n  %7 = load i32, ptr @_DVORAK, align 4, !tbaa !11\n  %8 = tail call i32 @set_single_persistent_default_layer(i32 noundef %7) #2\n  br label %34\n\n9:                                                ; preds = %3\n  br label %34\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr %1, align 4, !tbaa !5\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %34, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @_QWERTY, align 4, !tbaa !11\n  %15 = tail call i32 @set_single_persistent_default_layer(i32 noundef %14) #2\n  br label %34\n\n16:                                               ; preds = %31\n  br label %34\n\n17:                                               ; preds = %2\n  %18 = load i32, ptr %1, align 4, !tbaa !5\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %34, label %20\n\n20:                                               ; preds = %17\n  %21 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %22 = tail call i32 @layer_on(i32 noundef %21) #2\n  %23 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  br label %31\n\n24:                                               ; preds = %2\n  %25 = load i32, ptr %1, align 4, !tbaa !5\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %34, label %27\n\n27:                                               ; preds = %24\n  %28 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %29 = tail call i32 @layer_on(i32 noundef %28) #2\n  %30 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  br label %31\n\n31:                                               ; preds = %27, %20, %17\n  %32 = phi i32 [ %30, %27 ], [ %23, %20 ], [ %23, %17 ]\n  %33 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  br label %34\n\n34:                                               ; preds = %2, %31, %24, %10, %13, %3, %6, %9, %16\n  %35 = phi i32 [ 0, %16 ], [ 0, %9 ], [ 0, %6 ], [ 0, %3 ], [ 0, %13 ], [ 0, %10 ], [ 0, %24 ], [ 0, %31 ], [ 1, %2 ]\n  ret i32 %35\n}\n\ndeclare i32 @set_single_persistent_default_layer(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @layer_on(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0}\n!7 = !{!\"TYPE_4__\", !8, i64 0}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!8, !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_DVORAK = dso_local local_unnamed_addr global i32 0, align 4\n@_QWERTY = dso_local local_unnamed_addr global i32 0, align 4\n@_LOWER = dso_local local_unnamed_addr global i32 0, align 4\n@_RAISE = dso_local local_unnamed_addr global i32 0, align 4\n@_ADJUST = dso_local local_unnamed_addr global i32 0, align 4\n@_COMMAND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  switch i32 %0, label %33 [\n    i32 130, label %3\n    i32 129, label %10\n    i32 128, label %17\n    i32 131, label %24\n    i32 132, label %30\n  ]\n\n3:                                                ; preds = %2\n  %4 = load i32, ptr %1, align 4, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %33, label %6\n\n6:                                                ; preds = %3\n  %7 = load i32, ptr @_DVORAK, align 4, !tbaa !11\n  %8 = tail call i32 @set_single_persistent_default_layer(i32 noundef %7) #2\n  br label %33\n\n9:                                                ; preds = %3\n  br label %33\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr %1, align 4, !tbaa !5\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %33, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @_QWERTY, align 4, !tbaa !11\n  %15 = tail call i32 @set_single_persistent_default_layer(i32 noundef %14) #2\n  br label %33\n\n16:                                               ; preds = %30\n  br label %33\n\n17:                                               ; preds = %2\n  %18 = load i32, ptr %1, align 4, !tbaa !5\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %33, label %20\n\n20:                                               ; preds = %17\n  %21 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %22 = tail call i32 @layer_on(i32 noundef %21) #2\n  %23 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  br label %30\n\n24:                                               ; preds = %2\n  %25 = load i32, ptr %1, align 4, !tbaa !5\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %24\n  %28 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %29 = tail call i32 @layer_on(i32 noundef %28) #2\n  br label %30\n\n30:                                               ; preds = %27, %20, %16, %17\n  %31 = phi i32 [ %23, %20 ], [ %28, %27 ], [ %23, %16 ], [ %21, %17 ]\n  %32 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  br label %33\n\n33:                                               ; preds = %2, %3, %9, %13, %10, %6, %30, %24\n  %34 = phi i32 [ 0, %30 ], [ 0, %24 ], [ 0, %6 ], [ 0, %13 ], [ 0, %10 ], [ 0, %9 ], [ 0, %3 ], [ 1, %2 ]\n  ret i32 %34\n}\n\ndeclare i32 @set_single_persistent_default_layer(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @layer_on(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0}\n!7 = !{!\"TYPE_4__\", !8, i64 0}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!8, !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_DVORAK = dso_local local_unnamed_addr global i32 0, align 4\n@_QWERTY = dso_local local_unnamed_addr global i32 0, align 4\n@_LOWER = dso_local local_unnamed_addr global i32 0, align 4\n@_RAISE = dso_local local_unnamed_addr global i32 0, align 4\n@_ADJUST = dso_local local_unnamed_addr global i32 0, align 4\n@_COMMAND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  switch i32 %0, label %33 [\n    i32 132, label %3\n    i32 131, label %10\n    i32 130, label %17\n    i32 129, label %24\n    i32 128, label %30\n  ]\n\n3:                                                ; preds = %2\n  %4 = load i32, ptr %1, align 4, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %33, label %6\n\n6:                                                ; preds = %3\n  %7 = load i32, ptr @_DVORAK, align 4, !tbaa !11\n  %8 = tail call i32 @set_single_persistent_default_layer(i32 noundef %7) #2\n  br label %33\n\n9:                                                ; preds = %3\n  br label %33\n\n10:                                               ; preds = %2\n  %11 = load i32, ptr %1, align 4, !tbaa !5\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %33, label %13\n\n13:                                               ; preds = %10\n  %14 = load i32, ptr @_QWERTY, align 4, !tbaa !11\n  %15 = tail call i32 @set_single_persistent_default_layer(i32 noundef %14) #2\n  br label %33\n\n16:                                               ; preds = %3\n  br label %33\n\n17:                                               ; preds = %2\n  %18 = load i32, ptr %1, align 4, !tbaa !5\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %33, label %20\n\n20:                                               ; preds = %17\n  %21 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %22 = tail call i32 @layer_on(i32 noundef %21) #2\n  %23 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  br label %29\n\n24:                                               ; preds = %2\n  %25 = load i32, ptr %1, align 4, !tbaa !5\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %24\n  %28 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  br label %29\n\n29:                                               ; preds = %27, %20\n  %30 = phi i32 [ %28, %27 ], [ %23, %20 ]\n  %31 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %32 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  br label %35\n\n33:                                               ; preds = %2, %17, %10, %13, %3, %6, %9, %24\n  %34 = phi i32 [ 0, %9 ], [ 0, %6 ], [ 0, %3 ], [ 0, %13 ], [ 0, %10 ], [ 0, %17 ], [ 1, %2 ], [ 0, %24 ]\n  br label %35\n\n35:                                               ; preds = %33, %29\n  %36 = phi i32 [ %34, %33 ], [ 0, %29 ]\n  %37 = phi i32 [ %30, %29 ], [ %32, %33 ]\n  %38 = tail call i32 @update_tri_layer(i32 noundef %37, i32 noundef %37, i32 noundef %37) #2\n  br label %39\n\n39:                                               ; preds = %35\n  %40 = phi i32 [ %36, %35 ], [ 0, %33 ]\n  ret i32 %40\n}\n\ndeclare i32 @set_single_persistent_default_layer(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @layer_on(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @update_tri_layer(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0}\n!7 = !{!\"TYPE_4__\", !8, i64 0}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!8, !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/qmk_firmware/keyboards/preonic/keymaps/fig-r/extr_keymap.c_process_record_user.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@_DVORAK = dso_local local_unnamed_addr global i32 0, align 4\n@_QWERTY = dso_local local_unnamed_addr global i32 0, align 4\n@_LOWER = dso_local local_unnamed_addr global i32 0, align 4\n@_RAISE = dso_local local_unnamed_addr global i32 0, align 4\n@_ADJUST = dso_local local_unnamed_addr global i32 0, align 4\n@_COMMAND = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @process_record_user(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {\n  switch i32 %0, label %55 [\n    i32 131, label %3\n    i32 129, label %9\n    i32 130, label %15\n    i32 128, label %31\n    i32 132, label %47\n  ]\n\n3:                                                ; preds = %2\n  %4 = load i32, ptr %1, align 4, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %55, label %6\n\n6:                                                ; preds = %3\n  %7 = load i32, ptr @_DVORAK, align 4, !tbaa !11\n  %8 = tail call i32 @set_single_persistent_default_layer(i32 noundef %7) #2\n  br label %55\n\n9:                                                ; preds = %2\n  %10 = load i32, ptr %1, align 4, !tbaa !5\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %55, label %12\n\n12:                                               ; preds = %9\n  %13 = load i32, ptr @_QWERTY, align 4, !tbaa !11\n  %14 = tail call i32 @set_single_persistent_default_layer(i32 noundef %13) #2\n  br label %55\n\n15:                                               ; preds = %2\n  %16 = load i32, ptr %1, align 4, !tbaa !5\n  %17 = icmp eq i32 %16, 0\n  %18 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  br i1 %17, label %25, label %19\n\n19:                                               ; preds = %15\n  %20 = tail call i32 @layer_on(i32 noundef %18) #2\n  %21 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %22 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %23 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %24 = tail call i32 @update_tri_layer(i32 noundef %21, i32 noundef %22, i32 noundef %23) #2\n  br label %55\n\n25:                                               ; preds = %15\n  %26 = tail call i32 @layer_off(i32 noundef %18) #2\n  %27 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %28 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %29 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %30 = tail call i32 @update_tri_layer(i32 noundef %27, i32 noundef %28, i32 noundef %29) #2\n  br label %55\n\n31:                                               ; preds = %2\n  %32 = load i32, ptr %1, align 4, !tbaa !5\n  %33 = icmp eq i32 %32, 0\n  %34 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  br i1 %33, label %41, label %35\n\n35:                                               ; preds = %31\n  %36 = tail call i32 @layer_on(i32 noundef %34) #2\n  %37 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %38 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %39 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %40 = tail call i32 @update_tri_layer(i32 noundef %37, i32 noundef %38, i32 noundef %39) #2\n  br label %55\n\n41:                                               ; preds = %31\n  %42 = tail call i32 @layer_off(i32 noundef %34) #2\n  %43 = load i32, ptr @_LOWER, align 4, !tbaa !11\n  %44 = load i32, ptr @_RAISE, align 4, !tbaa !11\n  %45 = load i32, ptr @_ADJUST, align 4, !tbaa !11\n  %46 = tail call i32 @update_tri_layer(i32 noundef %43, i32 noundef %44, i32 noundef %45) #2\n  br label %55\n\n47:                                               ; preds = %2\n  %48 = load i32, ptr %1, align 4, !tbaa !5\n  %49 = icmp eq i32 %48, 0\n  %50 = load i32, ptr @_COMMAND, align 4, !tbaa !11\n  br i1 %49, label %53, label %51\n\n51:                                               ; preds = %47\n  %52 = tail call i32 @layer_on(i32 noundef %50) #2\n  br label %55\n\n53:                                               ; preds = %47\n  %54 = tail call i32 @layer_off(i32 noundef %50) #2\n  br label %55\n\n55:                                               ; preds = %2, %51, %53, %35, %41, %19, %25, %9, %12, %3, %6\n  %56 = phi i32 [ 0, %6 ], [ 0, %3 ], [ 0, %12 ], [ 0, %9 ], [ 0, %25 ], [ 0, %19 ], [ 0, %41 ], [ 0, %35 ], [ 0, %53 ], [ 0, %51 ], [ 1, %2 ]\n  ret i32 %56\n}\n\ndeclare i32 @set_single_persistent_default_layer(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @layer_on(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @update_tri_layer(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @layer_off(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"TYPE_5__\", !7, i64 0}\n!7 = !{!\"TYPE_4__\", !8, i64 0}\n!8 = !{!\"int\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!8, !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_qib_verbs.c_wait_kmem.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function wait_kmem\n\t.type\twait_kmem,@function\nwait_kmem:                              # @wait_kmem\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -48\n\t.cfi_offset %r12, -40\n\t.cfi_offset %r13, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r15\n\tleaq\t8(%rsi), %r14\n\tmovq\t%r14, %rdi\n\tcallq\tspin_lock_irqsave@PLT\n\tmovq\tib_qib_state_ops(%rip), %rax\n\tmovq\t(%rbx), %rcx\n\tmovl\tQIB_PROCESS_RECV_OK(%rip), %edx\n\ttestl\t%edx, (%rax,%rcx,4)\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t%r15, %rdi\n\tcallq\tspin_lock@PLT\n\tleaq\t16(%rbx), %r12\n\tmovq\t%r12, %rdi\n\tcallq\tlist_empty@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_6\n# %bb.3:\n\tleaq\t4(%r15), %r13\n\tmovq\t%r13, %rdi\n\tcallq\tlist_empty@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.4:\n\tleaq\t8(%r15), %rdi\n\tmovq\tjiffies(%rip), %rsi\n\tincq\t%rsi\n\tcallq\tmod_timer@PLT\n.LBB0_5:\n\tmovl\tQIB_S_WAIT_KMEM(%rip), %eax\n\torl\t%eax, 12(%rbx)\n\tmovq\t%r12, %rdi\n\tmovq\t%r13, %rsi\n\tcallq\tlist_add_tail@PLT\n.LBB0_6:\n\tmovq\t%r15, %rdi\n\tcallq\tspin_unlock@PLT\n\tmovl\tQIB_S_BUSY(%rip), %eax\n\tnotl\t%eax\n\tandl\t%eax, 12(%rbx)\n\txorl\t%ebx, %ebx\n\tsubl\tEBUSY(%rip), %ebx\n\tjmp\t.LBB0_7\n.LBB0_1:\n\txorl\t%ebx, %ebx\n.LBB0_7:\n\tmovq\t%r14, %rdi\n\tcallq\tspin_unlock_irqrestore@PLT\n\tmovl\t%ebx, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\twait_kmem, .Lfunc_end0-wait_kmem\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tib_qib_state_ops,@object        # @ib_qib_state_ops\n\t.bss\n\t.globl\tib_qib_state_ops\n\t.p2align\t3\nib_qib_state_ops:\n\t.quad\t0\n\t.size\tib_qib_state_ops, 8\n\n\t.type\tQIB_PROCESS_RECV_OK,@object     # @QIB_PROCESS_RECV_OK\n\t.globl\tQIB_PROCESS_RECV_OK\n\t.p2align\t2\nQIB_PROCESS_RECV_OK:\n\t.long\t0                               # 0x0\n\t.size\tQIB_PROCESS_RECV_OK, 4\n\n\t.type\tjiffies,@object                 # @jiffies\n\t.globl\tjiffies\n\t.p2align\t3\njiffies:\n\t.quad\t0                               # 0x0\n\t.size\tjiffies, 8\n\n\t.type\tQIB_S_WAIT_KMEM,@object         # @QIB_S_WAIT_KMEM\n\t.globl\tQIB_S_WAIT_KMEM\n\t.p2align\t2\nQIB_S_WAIT_KMEM:\n\t.long\t0                               # 0x0\n\t.size\tQIB_S_WAIT_KMEM, 4\n\n\t.type\tQIB_S_BUSY,@object              # @QIB_S_BUSY\n\t.globl\tQIB_S_BUSY\n\t.p2align\t2\nQIB_S_BUSY:\n\t.long\t0                               # 0x0\n\t.size\tQIB_S_BUSY, 4\n\n\t.type\tEBUSY,@object                   # @EBUSY\n\t.globl\tEBUSY\n\t.p2align\t2\nEBUSY:\n\t.long\t0                               # 0x0\n\t.size\tEBUSY, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.qib_qp = type { i64, i32, i32, i32 }\n%struct.qib_devdata = type { i32, i32, i32 }\n\n@ib_qib_state_ops = dso_local local_unnamed_addr global ptr null, align 8\n@QIB_PROCESS_RECV_OK = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@QIB_S_WAIT_KMEM = dso_local local_unnamed_addr global i32 0, align 4\n@QIB_S_BUSY = dso_local local_unnamed_addr global i32 0, align 4\n@EBUSY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wait_kmem], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wait_kmem(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 1\n  %4 = tail call i32 @spin_lock_irqsave(ptr noundef nonnull %3, i64 noundef undef) #2\n  %5 = load ptr, ptr @ib_qib_state_ops, align 8, !tbaa !5\n  %6 = load i64, ptr %1, align 8, !tbaa !9\n  %7 = getelementptr inbounds i32, ptr %5, i64 %6\n  %8 = load i32, ptr %7, align 4, !tbaa !13\n  %9 = load i32, ptr @QIB_PROCESS_RECV_OK, align 4, !tbaa !13\n  %10 = and i32 %9, %8\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %35, label %12\n\n12:                                               ; preds = %2\n  %13 = tail call i32 @spin_lock(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 3\n  %15 = tail call i64 @list_empty(ptr noundef nonnull %14) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %32, label %17\n\n17:                                               ; preds = %12\n  %18 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 1\n  %19 = tail call i64 @list_empty(ptr noundef nonnull %18) #2\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %25, label %21\n\n21:                                               ; preds = %17\n  %22 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 2\n  %23 = load i64, ptr @jiffies, align 8, !tbaa !14\n  %24 = add nsw i64 %23, 1\n  tail call i32 @mod_timer(ptr noundef nonnull %22, i64 noundef %24) #2\n  br label %25\n\n25:                                               ; preds = %21, %17\n  %26 = load i32, ptr @QIB_S_WAIT_KMEM, align 4, !tbaa !13\n  %27 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 2\n  %28 = load i32, ptr %27, align 4, !tbaa !15\n  %29 = or i32 %28, %26\n  store i32 %29, ptr %27, align 4, !tbaa !15\n  %30 = tail call i32 @list_add_tail(ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %31 = tail call i32 @spin_unlock(ptr noundef %0) #2\n  br label %35\n\n32:                                               ; preds = %12\n  %33 = tail call i32 @spin_unlock(ptr noundef %0) #2\n  %34 = load i32, ptr @EBUSY, align 4, !tbaa !13\n  br label %35\n\n35:                                               ; preds = %25, %32, %2\n  %36 = phi i32 [ 0, %2 ], [ %34, %32 ], [ 0, %25 ]\n  %37 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull %3, i64 noundef undef) #2\n  ret i32 %36\n}\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @list_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"qib_qp\", !11, i64 0, !12, i64 8, !12, i64 12, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !11, i64 0}\n!15 = !{!10, !12, i64 12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.qib_qp = type { i64, i32, i32, i32 }\n%struct.qib_devdata = type { i32, i32, i32 }\n\n@ib_qib_state_ops = dso_local local_unnamed_addr global ptr null, align 8\n@QIB_PROCESS_RECV_OK = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@QIB_S_WAIT_KMEM = dso_local local_unnamed_addr global i32 0, align 4\n@QIB_S_BUSY = dso_local local_unnamed_addr global i32 0, align 4\n@EBUSY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wait_kmem], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wait_kmem(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 1\n  %4 = tail call i32 @spin_lock_irqsave(ptr noundef nonnull %3, i64 noundef undef) #2\n  %5 = load ptr, ptr @ib_qib_state_ops, align 8, !tbaa !5\n  %6 = load i64, ptr %1, align 8, !tbaa !9\n  %7 = getelementptr inbounds i32, ptr %5, i64 %6\n  %8 = load i32, ptr %7, align 4, !tbaa !13\n  %9 = load i32, ptr @QIB_PROCESS_RECV_OK, align 4, !tbaa !13\n  %10 = and i32 %9, %8\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %35, label %12\n\n12:                                               ; preds = %2\n  %13 = tail call i32 @spin_lock(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 3\n  %15 = tail call i64 @list_empty(ptr noundef nonnull %14) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %32, label %17\n\n17:                                               ; preds = %12\n  %18 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 1\n  %19 = tail call i64 @list_empty(ptr noundef nonnull %18) #2\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %25, label %21\n\n21:                                               ; preds = %17\n  %22 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 2\n  %23 = load i64, ptr @jiffies, align 8, !tbaa !14\n  %24 = add nsw i64 %23, 1\n  tail call i32 @mod_timer(ptr noundef nonnull %22, i64 noundef %24) #2\n  br label %25\n\n25:                                               ; preds = %21, %17\n  %26 = load i32, ptr @QIB_S_WAIT_KMEM, align 4, !tbaa !13\n  %27 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 2\n  %28 = load i32, ptr %27, align 4, !tbaa !15\n  %29 = or i32 %28, %26\n  store i32 %29, ptr %27, align 4, !tbaa !15\n  %30 = tail call i32 @list_add_tail(ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %31 = tail call i32 @spin_unlock(ptr noundef %0) #2\n  br label %35\n\n32:                                               ; preds = %12\n  %33 = tail call i32 @spin_unlock(ptr noundef %0) #2\n  %34 = load i32, ptr @EBUSY, align 4, !tbaa !13\n  br label %35\n\n35:                                               ; preds = %25, %32, %2\n  %36 = phi i32 [ 0, %2 ], [ %34, %32 ], [ 0, %25 ]\n  %37 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull %3, i64 noundef undef) #2\n  ret i32 %36\n}\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @list_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"qib_qp\", !11, i64 0, !12, i64 8, !12, i64 12, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !11, i64 0}\n!15 = !{!10, !12, i64 12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.qib_qp = type { i64, i32, i32, i32 }\n%struct.qib_devdata = type { i32, i32, i32 }\n\n@ib_qib_state_ops = dso_local local_unnamed_addr global ptr null, align 8\n@QIB_PROCESS_RECV_OK = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@QIB_S_WAIT_KMEM = dso_local local_unnamed_addr global i32 0, align 4\n@QIB_S_BUSY = dso_local local_unnamed_addr global i32 0, align 4\n@EBUSY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wait_kmem], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wait_kmem(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 1\n  %4 = tail call i32 @spin_lock_irqsave(ptr noundef nonnull %3, i64 noundef undef) #2\n  %5 = load ptr, ptr @ib_qib_state_ops, align 8, !tbaa !5\n  %6 = load i64, ptr %1, align 8, !tbaa !9\n  %7 = getelementptr inbounds i32, ptr %5, i64 %6\n  %8 = load i32, ptr %7, align 4, !tbaa !13\n  %9 = load i32, ptr @QIB_PROCESS_RECV_OK, align 4, !tbaa !13\n  %10 = and i32 %9, %8\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %34, label %12\n\n12:                                               ; preds = %2\n  %13 = tail call i32 @spin_lock(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 3\n  %15 = tail call i64 @list_empty(ptr noundef nonnull %14) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %31, label %17\n\n17:                                               ; preds = %12\n  %18 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 1\n  %19 = tail call i64 @list_empty(ptr noundef nonnull %18) #2\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %25, label %21\n\n21:                                               ; preds = %17\n  %22 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 2\n  %23 = load i64, ptr @jiffies, align 8, !tbaa !14\n  %24 = add nsw i64 %23, 1\n  tail call i32 @mod_timer(ptr noundef nonnull %22, i64 noundef %24) #2\n  br label %25\n\n25:                                               ; preds = %21, %17\n  %26 = load i32, ptr @QIB_S_WAIT_KMEM, align 4, !tbaa !13\n  %27 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 2\n  %28 = load i32, ptr %27, align 4, !tbaa !15\n  %29 = or i32 %28, %26\n  store i32 %29, ptr %27, align 4, !tbaa !15\n  %30 = tail call i32 @list_add_tail(ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  br label %31\n\n31:                                               ; preds = %25, %12\n  %32 = tail call i32 @spin_unlock(ptr noundef %0) #2\n  %33 = load i32, ptr @QIB_S_BUSY, align 4, !tbaa !13\n  br label %34\n\n34:                                               ; preds = %2, %31\n  %35 = phi i32 [ %33, %31 ], [ 0, %2 ]\n  %36 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull %3, i64 noundef undef) #2\n  %37 = load i32, ptr @EBUSY, align 4, !tbaa !13\n  %38 = sub nsw i32 0, %37\n  ret i32 %38\n}\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @list_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"qib_qp\", !11, i64 0, !12, i64 8, !12, i64 12, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !11, i64 0}\n!15 = !{!10, !12, i64 12}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.qib_qp = type { i64, i32, i32, i32 }\n%struct.qib_devdata = type { i32, i32, i32 }\n\n@ib_qib_state_ops = dso_local local_unnamed_addr global ptr null, align 8\n@QIB_PROCESS_RECV_OK = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@QIB_S_WAIT_KMEM = dso_local local_unnamed_addr global i32 0, align 4\n@QIB_S_BUSY = dso_local local_unnamed_addr global i32 0, align 4\n@EBUSY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wait_kmem], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wait_kmem(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 1\n  %4 = tail call i32 @spin_lock_irqsave(ptr noundef nonnull %3, i64 noundef undef) #2\n  %5 = load ptr, ptr @ib_qib_state_ops, align 8, !tbaa !5\n  %6 = load i64, ptr %1, align 8, !tbaa !9\n  %7 = getelementptr inbounds i32, ptr %5, i64 %6\n  %8 = load i32, ptr %7, align 4, !tbaa !13\n  %9 = load i32, ptr @QIB_PROCESS_RECV_OK, align 4, !tbaa !13\n  %10 = and i32 %9, %8\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %36, label %12\n\n12:                                               ; preds = %2\n  %13 = tail call i32 @spin_lock(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 3\n  %15 = tail call i64 @list_empty(ptr noundef nonnull %14) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %32, label %17\n\n17:                                               ; preds = %12\n  %18 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 1\n  %19 = tail call i64 @list_empty(ptr noundef nonnull %18) #2\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %25, label %21\n\n21:                                               ; preds = %17\n  %22 = getelementptr inbounds %struct.qib_devdata, ptr %0, i64 0, i32 2\n  %23 = load i64, ptr @jiffies, align 8, !tbaa !14\n  %24 = add nsw i64 %23, 1\n  tail call i32 @mod_timer(ptr noundef nonnull %22, i64 noundef %24) #2\n  br label %25\n\n25:                                               ; preds = %21, %17\n  %26 = load i32, ptr @QIB_S_WAIT_KMEM, align 4, !tbaa !13\n  %27 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 2\n  %28 = load i32, ptr %27, align 4, !tbaa !15\n  %29 = or i32 %28, %26\n  store i32 %29, ptr %27, align 4, !tbaa !15\n  %30 = tail call i32 @list_add_tail(ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  %31 = tail call i32 @spin_unlock(ptr noundef %0) #2\n  br label %32\n\n32:                                               ; preds = %25, %12\n  %33 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull %3, i64 noundef undef) #2\n  %34 = load i32, ptr @QIB_S_BUSY, align 4, !tbaa !13\n  %35 = xor i32 %34, -1\n  store i32 %35, ptr %27, align 4, !tbaa !15\n  br label %36\n\n36:                                               ; preds = %2, %32\n  %37 = phi i32 [ 0, %32 ], [ 0, %2 ]\n  ret i32 %37\n}\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @list_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"qib_qp\", !11, i64 0, !12, i64 8, !12, i64 12, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !11, i64 0}\n!15 = !{!10, !12, i64 12}\n</s><s><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/fastsocket/kernel/drivers/infiniband/hw/qib/extr_qib_verbs.c_wait_kmem.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.qib_qp = type { i64, i32, i32, i32 }\n%struct.qib_ibdev = type { i32, i32, i32 }\n\n@ib_qib_state_ops = dso_local local_unnamed_addr global ptr null, align 8\n@QIB_PROCESS_RECV_OK = dso_local local_unnamed_addr global i32 0, align 4\n@jiffies = dso_local local_unnamed_addr global i64 0, align 8\n@QIB_S_WAIT_KMEM = dso_local local_unnamed_addr global i32 0, align 4\n@QIB_S_BUSY = dso_local local_unnamed_addr global i32 0, align 4\n@EBUSY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @wait_kmem], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @wait_kmem(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 1\n  %4 = tail call i32 @spin_lock_irqsave(ptr noundef nonnull %3, i64 noundef undef) #2\n  %5 = load ptr, ptr @ib_qib_state_ops, align 8, !tbaa !5\n  %6 = load i64, ptr %1, align 8, !tbaa !9\n  %7 = getelementptr inbounds i32, ptr %5, i64 %6\n  %8 = load i32, ptr %7, align 4, !tbaa !13\n  %9 = load i32, ptr @QIB_PROCESS_RECV_OK, align 4, !tbaa !13\n  %10 = and i32 %9, %8\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %41, label %12\n\n12:                                               ; preds = %2\n  %13 = tail call i32 @spin_lock(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 3\n  %15 = tail call i64 @list_empty(ptr noundef nonnull %14) #2\n  %16 = icmp eq i64 %15, 0\n  br i1 %16, label %32, label %17\n\n17:                                               ; preds = %12\n  %18 = getelementptr inbounds %struct.qib_ibdev, ptr %0, i64 0, i32 1\n  %19 = tail call i64 @list_empty(ptr noundef nonnull %18) #2\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %26, label %21\n\n21:                                               ; preds = %17\n  %22 = getelementptr inbounds %struct.qib_ibdev, ptr %0, i64 0, i32 2\n  %23 = load i64, ptr @jiffies, align 8, !tbaa !14\n  %24 = add nsw i64 %23, 1\n  %25 = tail call i32 @mod_timer(ptr noundef nonnull %22, i64 noundef %24) #2\n  br label %26\n\n26:                                               ; preds = %21, %17\n  %27 = load i32, ptr @QIB_S_WAIT_KMEM, align 4, !tbaa !13\n  %28 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 2\n  %29 = load i32, ptr %28, align 4, !tbaa !15\n  %30 = or i32 %29, %27\n  store i32 %30, ptr %28, align 4, !tbaa !15\n  %31 = tail call i32 @list_add_tail(ptr noundef nonnull %14, ptr noundef nonnull %18) #2\n  br label %32\n\n32:                                               ; preds = %26, %12\n  %33 = tail call i32 @spin_unlock(ptr noundef %0) #2\n  %34 = load i32, ptr @QIB_S_BUSY, align 4, !tbaa !13\n  %35 = xor i32 %34, -1\n  %36 = getelementptr inbounds %struct.qib_qp, ptr %1, i64 0, i32 2\n  %37 = load i32, ptr %36, align 4, !tbaa !15\n  %38 = and i32 %37, %35\n  store i32 %38, ptr %36, align 4, !tbaa !15\n  %39 = load i32, ptr @EBUSY, align 4, !tbaa !13\n  %40 = sub nsw i32 0, %39\n  br label %41\n\n41:                                               ; preds = %32, %2\n  %42 = phi i32 [ %40, %32 ], [ 0, %2 ]\n  %43 = tail call i32 @spin_unlock_irqrestore(ptr noundef nonnull %3, i64 noundef undef) #2\n  ret i32 %42\n}\n\ndeclare i32 @spin_lock_irqsave(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_lock(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @list_empty(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @mod_timer(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @list_add_tail(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @spin_unlock_irqrestore(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"qib_qp\", !11, i64 0, !12, i64 8, !12, i64 12, !12, i64 16}\n!11 = !{!\"long\", !7, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!12, !12, i64 0}\n!14 = !{!11, !11, i64 0}\n!15 = !{!10, !12, i64 12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_spl_fixedarray.c_spl_fixedarray_resize.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function spl_fixedarray_resize\n\t.type\tspl_fixedarray_resize,@function\nspl_fixedarray_resize:                  # @spl_fixedarray_resize\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t(%rdi), %rax\n\tcmpq\t%rsi, %rax\n\tje\t.LBB0_13\n# %bb.1:\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %r15\n\ttestq\t%rax, %rax\n\tje\t.LBB0_14\n# %bb.2:\n\ttestq\t%r14, %r14\n\tje\t.LBB0_3\n# %bb.7:\n\tcmpq\t%r14, %rax\n\tjae\t.LBB0_8\n# %bb.15:\n\tmovq\t8(%r15), %rdi\n\tmovq\t%r14, %rsi\n\tmovl\t$4, %edx\n\txorl\t%ecx, %ecx\n\tcallq\tsafe_erealloc@PLT\n\tmovq\t%rax, 8(%r15)\n\tmovq\t(%r15), %rcx\n\tleaq\t(%rax,%rcx,4), %rdi\n\tmovl\t%r14d, %edx\n\tsubl\t%ecx, %edx\n\tshll\t$2, %edx\n\txorl\t%esi, %esi\n\tcallq\tmemset@PLT\n\tjmp\t.LBB0_12\n.LBB0_14:\n\tmovq\t%r15, %rdi\n\tmovq\t%r14, %rsi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmp\tspl_fixedarray_init@PLT         # TAILCALL\n.LBB0_3:\n\t.cfi_def_cfa_offset 48\n\txorl\t%r12d, %r12d\n\txorl\t%ebx, %ebx\n\t.p2align\t4, 0x90\n.LBB0_4:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t8(%r15), %rdi\n\taddq\t%r12, %rdi\n\tcallq\tzval_ptr_dtor@PLT\n\tincq\t%rbx\n\taddq\t$4, %r12\n\tcmpq\t(%r15), %rbx\n\tjb\t.LBB0_4\n# %bb.5:\n\tmovq\t8(%r15), %rdi\n\ttestq\t%rdi, %rdi\n\tje\t.LBB0_12\n# %bb.6:\n\tcallq\tefree@PLT\n\tmovq\t$0, 8(%r15)\n\tjmp\t.LBB0_12\n.LBB0_8:\n\tjbe\t.LBB0_11\n# %bb.9:\n\tleaq\t(,%r14,4), %r12\n\tmovq\t%r14, %rbx\n\t.p2align\t4, 0x90\n.LBB0_10:                               # =>This Inner Loop Header: Depth=1\n\tmovq\t8(%r15), %rdi\n\taddq\t%r12, %rdi\n\tcallq\tzval_ptr_dtor@PLT\n\tincq\t%rbx\n\taddq\t$4, %r12\n\tcmpq\t(%r15), %rbx\n\tjb\t.LBB0_10\n.LBB0_11:\n\tmovq\t8(%r15), %rdi\n\tleal\t(,%r14,4), %esi\n\tcallq\terealloc@PLT\n\tmovq\t%rax, 8(%r15)\n.LBB0_12:\n\tmovq\t%r14, (%r15)\n.LBB0_13:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tspl_fixedarray_resize, .Lfunc_end0-spl_fixedarray_resize\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spl_fixedarray_resize], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spl_fixedarray_resize(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, %1\n  br i1 %4, label %43, label %5\n\n5:                                                ; preds = %2\n  %6 = icmp eq i64 %3, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %5\n  %8 = tail call i32 @spl_fixedarray_init(ptr noundef nonnull %0, i64 noundef %1) #2\n  br label %43\n\n9:                                                ; preds = %5\n  %10 = icmp eq i64 %1, 0\n  br i1 %10, label %11, label %19\n\n11:                                               ; preds = %9, %11\n  %12 = phi i64 [ %15, %11 ], [ 0, %9 ]\n  %13 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = add nuw i64 %12, 1\n  %16 = getelementptr inbounds i32, ptr %14, i64 %15\n  %17 = tail call i32 @zval_ptr_dtor(ptr noundef %16) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !5\n  %19 = icmp ult i64 %15, %18\n  br i1 %19, label %11, label %20, !llvm.loop !12\n\n20:                                               ; preds = %11\n  %21 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %22 = load ptr, ptr %21, align 8, !tbaa !11\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %41, label %24\n\n24:                                               ; preds = %20\n  %25 = tail call i32 @efree(ptr noundef nonnull %22) #2\n  store ptr null, ptr %21, align 8, !tbaa !11\n  br label %41\n\n26:                                               ; preds = %27\n  %27 = add nuw i64 %28, 1\n  %28 = load i64, ptr %0, align 8, !tbaa !5\n  %29 = icmp ult i64 %27, %28\n  br i1 %29, label %30, label %34, !llvm.loop !14\n\n30:                                               ; preds = %26\n  %31 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !11\n  %33 = getelementptr inbounds i32, ptr %32, i64 %27\n  br label %30\n\n34:                                               ; preds = %26\n  %35 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %36 = load ptr, ptr %35, align 8, !tbaa !11\n  %37 = shl i64 %1, 2\n  %38 = tail call ptr @erealloc(ptr noundef %36, i64 noundef %37) #2\n  store ptr %38, ptr %35, align 8, !tbaa !11\n  %39 = load i64, ptr %0, align 8, !tbaa !5\n  %40 = getelementptr inbounds i32, ptr %38, i64 %39\n  store ptr %40, ptr %0, align 8, !tbaa !5\n  br label %43\n\n41:                                               ; preds = %24, %20\n  %42 = load i64, ptr %0, align 8, !tbaa !5\n  store i64 %42, ptr %0, align 8, !tbaa !5\n  br label %43\n\n43:                                               ; preds = %34, %41, %7, %2\n  ret void\n}\n\ndeclare i32 @spl_fixedarray_init(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @zval_ptr_dtor(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @efree(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @erealloc(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = distinct !{!14, !13}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spl_fixedarray_resize], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spl_fixedarray_resize(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, %1\n  br i1 %4, label %43, label %5\n\n5:                                                ; preds = %2\n  %6 = icmp eq i64 %3, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %5\n  %8 = tail call i32 @spl_fixedarray_init(ptr noundef nonnull %0, i64 noundef %1) #2\n  br label %43\n\n9:                                                ; preds = %5\n  %10 = icmp eq i64 %1, 0\n  br i1 %10, label %11, label %19\n\n11:                                               ; preds = %9, %11\n  %12 = phi i64 [ %15, %11 ], [ 0, %9 ]\n  %13 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = add nuw i64 %12, 1\n  %16 = getelementptr inbounds i32, ptr %14, i64 %15\n  %17 = tail call i32 @zval_ptr_dtor(ptr noundef %16) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !5\n  %19 = icmp ult i64 %15, %18\n  br i1 %19, label %11, label %20, !llvm.loop !12\n\n20:                                               ; preds = %11\n  %21 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %22 = load ptr, ptr %21, align 8, !tbaa !11\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %41, label %24\n\n24:                                               ; preds = %20\n  %25 = tail call i32 @efree(ptr noundef nonnull %22) #2\n  store ptr null, ptr %21, align 8, !tbaa !11\n  br label %41\n\n26:                                               ; preds = %27\n  %27 = add nuw i64 %28, 1\n  %28 = load i64, ptr %0, align 8, !tbaa !5\n  %29 = icmp ult i64 %27, %28\n  br i1 %29, label %30, label %34, !llvm.loop !14\n\n30:                                               ; preds = %26\n  %31 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !11\n  %33 = getelementptr inbounds i32, ptr %32, i64 %27\n  br label %30\n\n34:                                               ; preds = %26\n  %35 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %36 = load ptr, ptr %35, align 8, !tbaa !11\n  %37 = shl i64 %1, 2\n  %38 = tail call ptr @erealloc(ptr noundef %36, i64 noundef %37) #2\n  store ptr %38, ptr %35, align 8, !tbaa !11\n  %39 = load i64, ptr %0, align 8, !tbaa !5\n  %40 = getelementptr inbounds i32, ptr %38, i64 %39\n  store ptr %40, ptr %0, align 8, !tbaa !5\n  br label %43\n\n41:                                               ; preds = %24, %20\n  %42 = load i64, ptr %0, align 8, !tbaa !5\n  store i64 %42, ptr %0, align 8, !tbaa !5\n  br label %43\n\n43:                                               ; preds = %34, %41, %7, %2\n  ret void\n}\n\ndeclare i32 @spl_fixedarray_init(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @zval_ptr_dtor(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @efree(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @erealloc(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = distinct !{!14, !13}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spl_fixedarray_resize], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spl_fixedarray_resize(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, %1\n  br i1 %4, label %40, label %5\n\n5:                                                ; preds = %2\n  %6 = icmp eq i64 %3, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %5\n  %8 = tail call i32 @spl_fixedarray_init(ptr noundef nonnull %0, i64 noundef %1) #2\n  br label %40\n\n9:                                                ; preds = %5\n  %10 = icmp eq i64 %1, 0\n  br i1 %10, label %11, label %19\n\n11:                                               ; preds = %9, %11\n  %12 = phi i64 [ %16, %11 ], [ 0, %9 ]\n  %13 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = getelementptr inbounds i32, ptr %14, i64 %12\n  %16 = add nuw i64 %12, 1\n  %17 = tail call i32 @zval_ptr_dtor(ptr noundef %15) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !5\n  %19 = icmp ult i64 %16, %18\n  br i1 %19, label %11, label %20, !llvm.loop !12\n\n20:                                               ; preds = %11\n  %21 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %22 = load ptr, ptr %21, align 8, !tbaa !11\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %39, label %24\n\n24:                                               ; preds = %20\n  %25 = tail call i32 @efree(ptr noundef nonnull %22) #2\n  store ptr null, ptr %21, align 8, !tbaa !11\n  br label %39\n\n26:                                               ; preds = %27\n  %27 = add nuw i64 %28, 1\n  %28 = load i64, ptr %0, align 8, !tbaa !5\n  %29 = icmp ult i64 %27, %28\n  br i1 %29, label %30, label %33, !llvm.loop !14\n\n30:                                               ; preds = %26\n  %31 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !11\n  br label %30\n\n33:                                               ; preds = %26\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %35 = load ptr, ptr %34, align 8, !tbaa !11\n  %36 = tail call i32 @erealloc(ptr noundef %35, i32 noundef %29) #2\n  %37 = inttoptr i32 %36 to ptr\n  store ptr %37, ptr %34, align 8, !tbaa !11\n  %38 = load i64, ptr %0, align 8, !tbaa !5\n  br label %39\n\n39:                                               ; preds = %20, %33, %24\n  store i64 %1, ptr %0, align 8, !tbaa !5\n  br label %40\n\n40:                                               ; preds = %2, %39, %7\n  ret void\n}\n\ndeclare i32 @spl_fixedarray_init(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @zval_ptr_dtor(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @efree(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @erealloc(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = distinct !{!14, !13}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spl_fixedarray_resize], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spl_fixedarray_resize(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, %1\n  br i1 %4, label %41, label %5\n\n5:                                                ; preds = %2\n  %6 = icmp eq i64 %3, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %5\n  %8 = tail call i32 @spl_fixedarray_init(ptr noundef nonnull %0, i64 noundef %1) #2\n  br label %41\n\n9:                                                ; preds = %5\n  %10 = icmp eq i64 %1, 0\n  br i1 %10, label %11, label %19\n\n11:                                               ; preds = %9, %11\n  %12 = phi i64 [ %16, %11 ], [ 0, %9 ]\n  %13 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !11\n  %15 = getelementptr inbounds i32, ptr %14, i64 %12\n  %16 = add nuw i64 %12, 1\n  %17 = tail call i32 @zval_ptr_dtor(ptr noundef %15) #2\n  %18 = load i64, ptr %0, align 8, !tbaa !5\n  %19 = icmp ult i64 %16, %18\n  br i1 %19, label %11, label %20, !llvm.loop !12\n\n20:                                               ; preds = %11\n  %21 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %22 = load ptr, ptr %21, align 8, !tbaa !11\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %40, label %24\n\n24:                                               ; preds = %20\n  %25 = tail call i32 @efree(ptr noundef nonnull %22) #2\n  store ptr null, ptr %21, align 8, !tbaa !11\n  br label %40\n\n26:                                               ; preds = %27\n  %27 = add nuw i64 %28, 1\n  %28 = load i64, ptr %0, align 8, !tbaa !5\n  %29 = icmp ult i64 %27, %28\n  br i1 %29, label %30, label %34, !llvm.loop !14\n\n30:                                               ; preds = %26\n  %31 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !11\n  %33 = getelementptr inbounds i32, ptr %32, i64 %27\n  br label %30\n\n34:                                               ; preds = %26\n  %35 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %36 = load ptr, ptr %35, align 8, !tbaa !11\n  %37 = shl i64 %1, 2\n  %38 = tail call ptr @erealloc(ptr noundef %36, i64 noundef %37) #2\n  store ptr %38, ptr %35, align 8, !tbaa !11\n  %39 = load i64, ptr %0, align 8, !tbaa !5\n  br label %40\n\n40:                                               ; preds = %24, %34, %20\n  store i64 %1, ptr %0, align 8, !tbaa !5\n  br label %41\n\n41:                                               ; preds = %2, %40, %7\n  ret void\n}\n\ndeclare i32 @spl_fixedarray_init(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @zval_ptr_dtor(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @efree(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @erealloc(ptr noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = distinct !{!14, !13}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/php-src/ext/spl/extr_spl_fixedarray.c_spl_fixedarray_resize.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i64, ptr }\n\n@llvm.compiler.used = appending global [1 x ptr] [ptr @spl_fixedarray_resize], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @spl_fixedarray_resize(ptr noundef %0, i64 noundef %1) #0 {\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = icmp eq i64 %3, %1\n  br i1 %4, label %58, label %5\n\n5:                                                ; preds = %2\n  %6 = icmp eq i64 %3, 0\n  br i1 %6, label %7, label %9\n\n7:                                                ; preds = %5\n  %8 = tail call i32 @spl_fixedarray_init(ptr noundef nonnull %0, i64 noundef %1) #2\n  br label %58\n\n9:                                                ; preds = %5\n  %10 = icmp eq i64 %1, 0\n  br i1 %10, label %11, label %27\n\n11:                                               ; preds = %9\n  %12 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  br label %13\n\n13:                                               ; preds = %11, %13\n  %14 = phi i64 [ 0, %11 ], [ %18, %13 ]\n  %15 = load ptr, ptr %12, align 8, !tbaa !11\n  %16 = getelementptr inbounds i32, ptr %15, i64 %14\n  %17 = tail call i32 @zval_ptr_dtor(ptr noundef %16) #2\n  %18 = add nuw i64 %14, 1\n  %19 = load i64, ptr %0, align 8, !tbaa !5\n  %20 = icmp ult i64 %18, %19\n  br i1 %20, label %13, label %21, !llvm.loop !12\n\n21:                                               ; preds = %13\n  %22 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %23 = load ptr, ptr %22, align 8, !tbaa !11\n  %24 = icmp eq ptr %23, null\n  br i1 %24, label %57, label %25\n\n25:                                               ; preds = %21\n  %26 = tail call i32 @efree(ptr noundef nonnull %23) #2\n  store ptr null, ptr %22, align 8, !tbaa !11\n  br label %57\n\n27:                                               ; preds = %9\n  %28 = icmp ult i64 %3, %1\n  br i1 %28, label %33, label %29\n\n29:                                               ; preds = %27\n  %30 = icmp ugt i64 %3, %1\n  br i1 %30, label %31, label %51\n\n31:                                               ; preds = %29\n  %32 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  br label %43\n\n33:                                               ; preds = %27\n  %34 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %35 = load ptr, ptr %34, align 8, !tbaa !11\n  %36 = tail call ptr @safe_erealloc(ptr noundef %35, i64 noundef %1, i32 noundef 4, i32 noundef 0) #2\n  store ptr %36, ptr %34, align 8, !tbaa !11\n  %37 = load i64, ptr %0, align 8, !tbaa !5\n  %38 = getelementptr inbounds i32, ptr %36, i64 %37\n  %39 = sub i64 %1, %37\n  %40 = trunc i64 %39 to i32\n  %41 = shl i32 %40, 2\n  %42 = tail call i32 @memset(ptr noundef %38, i8 noundef signext 0, i32 noundef %41) #2\n  br label %57\n\n43:                                               ; preds = %31, %43\n  %44 = phi i64 [ %1, %31 ], [ %48, %43 ]\n  %45 = load ptr, ptr %32, align 8, !tbaa !11\n  %46 = getelementptr inbounds i32, ptr %45, i64 %44\n  %47 = tail call i32 @zval_ptr_dtor(ptr noundef %46) #2\n  %48 = add nuw i64 %44, 1\n  %49 = load i64, ptr %0, align 8, !tbaa !5\n  %50 = icmp ult i64 %48, %49\n  br i1 %50, label %43, label %51, !llvm.loop !14\n\n51:                                               ; preds = %43, %29\n  %52 = getelementptr inbounds %struct.TYPE_4__, ptr %0, i64 0, i32 1\n  %53 = load ptr, ptr %52, align 8, !tbaa !11\n  %54 = trunc i64 %1 to i32\n  %55 = shl i32 %54, 2\n  %56 = tail call ptr @erealloc(ptr noundef %53, i32 noundef %55) #2\n  store ptr %56, ptr %52, align 8, !tbaa !11\n  br label %57\n\n57:                                               ; preds = %21, %25, %33, %51\n  store i64 %1, ptr %0, align 8, !tbaa !5\n  br label %58\n\n58:                                               ; preds = %2, %57, %7\n  ret void\n}\n\ndeclare i32 @spl_fixedarray_init(ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @zval_ptr_dtor(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @efree(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @safe_erealloc(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @memset(ptr noundef, i8 noundef signext, i32 noundef) local_unnamed_addr #1\n\ndeclare ptr @erealloc(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = distinct !{!14, !13}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_p2p_supplicant.c_p2p_group_go_member_count.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function p2p_group_go_member_count\n\t.type\tp2p_group_go_member_count,@function\np2p_group_go_member_count:              # @p2p_group_go_member_count\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t24(%rdi), %rax\n\tmovq\t(%rax), %rbx\n\txorl\t%r14d, %r14d\n\tjmp\t.LBB0_1\n\t.p2align\t4, 0x90\n.LBB0_9:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovq\t16(%rbx), %rbx\n.LBB0_1:                                # =>This Loop Header: Depth=1\n                                        #     Child Loop BB0_3 Depth 2\n\ttestq\t%rbx, %rbx\n\tje\t.LBB0_10\n# %bb.2:                                #   in Loop: Header=BB0_1 Depth=1\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rbp\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_8:                                #   in Loop: Header=BB0_3 Depth=2\n\tmovq\t24(%rbp), %rbp\n.LBB0_3:                                #   Parent Loop BB0_1 Depth=1\n                                        # =>  This Inner Loop Header: Depth=2\n\ttestq\t%rbp, %rbp\n\tje\t.LBB0_9\n# %bb.4:                                #   in Loop: Header=BB0_3 Depth=2\n\tmovl\tMSG_DEBUG(%rip), %edi\n\tmovl\t16(%rbp), %r8d\n\tmovq\t(%rbp), %rax\n\tmovq\t8(%rbp), %r9\n\tmovq\t%rax, (%rsp)\n\tmovl\t$.L.str, %esi\n\tmovq\t%rbx, %rdx\n\tmovq\t%rbp, %rcx\n\tcallq\twpa_printf@PLT\n\tcmpl\t$0, 16(%rbp)\n\tjne\t.LBB0_8\n# %bb.5:                                #   in Loop: Header=BB0_3 Depth=2\n\tcmpq\t$0, 8(%rbp)\n\tje\t.LBB0_8\n# %bb.6:                                #   in Loop: Header=BB0_3 Depth=2\n\tmovq\t(%rbp), %rax\n\tcmpq\tWPAS_MODE_P2P_GO(%rip), %rax\n\tjne\t.LBB0_8\n# %bb.7:                                #   in Loop: Header=BB0_3 Depth=2\n\tmovl\t(%rbx), %edi\n\tcallq\tp2p_get_group_num_members@PLT\n\taddl\t%eax, %r14d\n\tjmp\t.LBB0_8\n.LBB0_10:\n\tmovl\t%r14d, %eax\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tp2p_group_go_member_count, .Lfunc_end0-p2p_group_go_member_count\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMSG_DEBUG,@object               # @MSG_DEBUG\n\t.bss\n\t.globl\tMSG_DEBUG\n\t.p2align\t2\nMSG_DEBUG:\n\t.long\t0                               # 0x0\n\t.size\tMSG_DEBUG, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"P2P: sup:%p ssid:%p disabled:%d p2p:%d mode:%d\"\n\t.size\t.L.str, 47\n\n\t.type\tWPAS_MODE_P2P_GO,@object        # @WPAS_MODE_P2P_GO\n\t.bss\n\t.globl\tWPAS_MODE_P2P_GO\n\t.p2align\t3\nWPAS_MODE_P2P_GO:\n\t.quad\t0                               # 0x0\n\t.size\tWPAS_MODE_P2P_GO, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.p2p_data = type { i32, ptr, ptr }\n%struct.wpa_ssid = type { i64, i64, i32, ptr }\n\n@MSG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [47 x i8] c\"P2P: sup:%p ssid:%p disabled:%d p2p:%d mode:%d\\00\", align 1\n@WPAS_MODE_P2P_GO = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @p2p_group_go_member_count], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @p2p_group_go_member_count(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load ptr, ptr %3, align 8, !tbaa !11\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %35, label %6\n\n6:                                                ; preds = %1, %31\n  %7 = phi ptr [ %33, %31 ], [ %4, %1 ]\n  %8 = phi i32 [ %32, %31 ], [ 0, %1 ]\n  %9 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !13\n  %11 = load ptr, ptr %10, align 8, !tbaa !14\n  %12 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 2\n  %13 = load i32, ptr %12, align 8, !tbaa !16\n  %14 = load ptr, ptr %11, align 8, !tbaa !19\n  %15 = tail call i32 @wpa_printf(i32 noundef %13, ptr noundef nonnull @.str, ptr noundef nonnull %11, ptr noundef nonnull %11, i32 noundef %13, ptr noundef %14) #2\n  %16 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !20\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %31, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr %11, align 8, !tbaa !19\n  %21 = load i64, ptr @WPAS_MODE_P2P_GO, align 8, !tbaa !21\n  %22 = icmp eq i64 %20, %21\n  br i1 %22, label %23, label %31\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr %7, align 8, !tbaa !22\n  %25 = tail call i64 @p2p_get_group_num_members(i32 noundef %24) #2\n  %26 = trunc i64 %25 to i32\n  %27 = add i32 %8, %26\n  %28 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %29 = load ptr, ptr %28, align 8, !tbaa !24\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %6, !llvm.loop !25\n\n31:                                               ; preds = %6, %23, %19\n  %32 = phi i32 [ %27, %23 ], [ %8, %19 ], [ %8, %6 ]\n  %33 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %34 = icmp eq ptr %33, null\n  br i1 %34, label %35, label %6, !llvm.loop !27\n\n35:                                               ; preds = %31, %1\n  %36 = phi i32 [ 0, %1 ], [ %32, %31 ]\n  ret i32 %36\n}\n\ndeclare i32 @wpa_printf(i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @p2p_get_group_num_members(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"p2p_data\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_4__\", !10, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"TYPE_3__\", !10, i64 0}\n!16 = !{!17, !7, i64 16}\n!17 = !{!\"wpa_ssid\", !18, i64 0, !18, i64 8, !7, i64 16, !10, i64 24}\n!18 = !{!\"long\", !8, i64 0}\n!19 = !{!17, !18, i64 0}\n!20 = !{!17, !18, i64 8}\n!21 = !{!18, !18, i64 0}\n!22 = !{!23, !7, i64 0}\n!23 = !{!\"p2p_group\", !7, i64 0}\n!24 = !{!17, !10, i64 24}\n!25 = distinct !{!25, !26}\n!26 = !{!\"llvm.loop.mustprogress\"}\n!27 = distinct !{!27, !26}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.p2p_data = type { i32, ptr, ptr }\n%struct.wpa_ssid = type { i64, i64, i32, ptr }\n\n@MSG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [47 x i8] c\"P2P: sup:%p ssid:%p disabled:%d p2p:%d mode:%d\\00\", align 1\n@WPAS_MODE_P2P_GO = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @p2p_group_go_member_count], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @p2p_group_go_member_count(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load ptr, ptr %3, align 8, !tbaa !11\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %37, label %6\n\n6:                                                ; preds = %1, %33\n  %7 = phi ptr [ %35, %33 ], [ %4, %1 ]\n  %8 = phi i32 [ %34, %33 ], [ 0, %1 ]\n  %9 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !13\n  %11 = load ptr, ptr %10, align 8, !tbaa !14\n  %12 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 2\n  %13 = load i32, ptr %12, align 8, !tbaa !16\n  %14 = load ptr, ptr %11, align 8, !tbaa !19\n  %15 = tail call i32 @wpa_printf(i32 noundef %13, ptr noundef nonnull @.str, ptr noundef nonnull %11, ptr noundef nonnull %11, i32 noundef %13, ptr noundef %14) #2\n  %16 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !20\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %33, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr %11, align 8, !tbaa !19\n  %21 = load i64, ptr @WPAS_MODE_P2P_GO, align 8, !tbaa !21\n  %22 = icmp eq i64 %20, %21\n  br i1 %22, label %23, label %33\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr %7, align 8, !tbaa !22\n  %25 = tail call i64 @p2p_get_group_num_members(i32 noundef %24) #2\n  %26 = trunc i64 %25 to i32\n  %27 = add i32 %8, %26\n  %28 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %29 = load ptr, ptr %28, align 8, !tbaa !24\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %33, label %31\n\n31:                                               ; preds = %23\n  %32 = load i32, ptr %29, align 8, !tbaa !19\n  br label %33\n\n33:                                               ; preds = %23, %31, %19, %6\n  %34 = phi i32 [ %27, %31 ], [ %8, %19 ], [ %8, %23 ], [ %8, %6 ]\n  %35 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %36 = load ptr, ptr %35, align 8, !tbaa !24\n  br label %6, !llvm.loop !25\n\n37:                                               ; preds = %1\n  %38 = phi i32 [ %34, %1 ], [ 0, %33 ]\n  ret i32 %38\n}\n\ndeclare i32 @wpa_printf(i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @p2p_get_group_num_members(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"p2p_data\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_2__\", !10, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"TYPE_3__\", !10, i64 0}\n!16 = !{!17, !7, i64 16}\n!17 = !{!\"wpa_ssid\", !18, i64 0, !18, i64 8, !7, i64 16, !10, i64 24}\n!18 = !{!\"long\", !8, i64 0}\n!19 = !{!17, !18, i64 0}\n!20 = !{!17, !18, i64 8}\n!21 = !{!18, !18, i64 0}\n!22 = !{!23, !7, i64 0}\n!23 = !{!\"p2p_group\", !7, i64 0}\n!24 = !{!17, !10, i64 24}\n!25 = distinct !{!25, !26}\n!26 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.p2p_data = type { i32, ptr, ptr }\n%struct.wpa_ssid = type { i64, i64, i32, ptr }\n\n@MSG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [47 x i8] c\"P2P: sup:%p ssid:%p disabled:%d p2p:%d mode:%d\\00\", align 1\n@WPAS_MODE_P2P_GO = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @p2p_group_go_member_count], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @p2p_group_go_member_count(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load ptr, ptr %3, align 8, !tbaa !11\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %34, label %6\n\n6:                                                ; preds = %1, %30\n  %7 = phi ptr [ %32, %30 ], [ %4, %1 ]\n  %8 = phi i32 [ %31, %30 ], [ 0, %1 ]\n  %9 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !13\n  %11 = load ptr, ptr %10, align 8, !tbaa !14\n  %12 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 2\n  %13 = load i32, ptr %12, align 8, !tbaa !16\n  %14 = load ptr, ptr %11, align 8, !tbaa !19\n  %15 = tail call i32 @wpa_printf(i32 noundef %13, ptr noundef nonnull @.str, ptr noundef nonnull %11, ptr noundef nonnull %11, i32 noundef %13, ptr noundef %14) #2\n  %16 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !20\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %30, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr %11, align 8, !tbaa !19\n  %21 = load i64, ptr @WPAS_MODE_P2P_GO, align 8, !tbaa !21\n  %22 = icmp eq i64 %20, %21\n  br i1 %22, label %23, label %30\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr %7, align 8, !tbaa !22\n  %25 = tail call i64 @p2p_get_group_num_members(i32 noundef %24) #2\n  %26 = trunc i64 %25 to i32\n  %27 = add i32 %8, %26\n  %28 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %29 = load ptr, ptr %28, align 8, !tbaa !24\n  br label %30\n\n30:                                               ; preds = %6, %19, %23\n  %31 = phi i32 [ %27, %23 ], [ %8, %19 ], [ %8, %6 ]\n  %32 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %33 = load ptr, ptr %32, align 8, !tbaa !24\n  br label %6, !llvm.loop !25\n\n34:                                               ; preds = %30, %1\n  %35 = phi i32 [ 0, %1 ], [ %31, %30 ]\n  ret i32 %35\n}\n\ndeclare i32 @wpa_printf(i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @p2p_get_group_num_members(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"p2p_data\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_2__\", !10, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"TYPE_3__\", !10, i64 0}\n!16 = !{!17, !7, i64 16}\n!17 = !{!\"wpa_ssid\", !18, i64 0, !18, i64 8, !7, i64 16, !10, i64 24}\n!18 = !{!\"long\", !8, i64 0}\n!19 = !{!17, !18, i64 0}\n!20 = !{!17, !18, i64 8}\n!21 = !{!18, !18, i64 0}\n!22 = !{!23, !7, i64 0}\n!23 = !{!\"p2p_group\", !7, i64 0}\n!24 = !{!17, !10, i64 24}\n!25 = distinct !{!25, !26}\n!26 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.p2p_data = type { i32, ptr, ptr }\n%struct.wpa_ssid = type { i64, i64, i32, ptr }\n\n@MSG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [47 x i8] c\"P2P: sup:%p ssid:%p disabled:%d p2p:%d mode:%d\\00\", align 1\n@WPAS_MODE_P2P_GO = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @p2p_group_go_member_count], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @p2p_group_go_member_count(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 2\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load ptr, ptr %3, align 8, !tbaa !11\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %35, label %6\n\n6:                                                ; preds = %1, %31\n  %7 = phi ptr [ %33, %31 ], [ %4, %1 ]\n  %8 = phi i32 [ %32, %31 ], [ 0, %1 ]\n  %9 = getelementptr inbounds %struct.p2p_data, ptr %0, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !13\n  %11 = load ptr, ptr %10, align 8, !tbaa !14\n  %12 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 2\n  %13 = load i32, ptr %12, align 8, !tbaa !16\n  %14 = load ptr, ptr %11, align 8, !tbaa !19\n  %15 = tail call i32 @wpa_printf(i32 noundef %13, ptr noundef nonnull @.str, ptr noundef nonnull %11, ptr noundef nonnull %11, i32 noundef %13, ptr noundef %14) #2\n  %16 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 1\n  %17 = load i64, ptr %16, align 8, !tbaa !20\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %31, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr %11, align 8, !tbaa !19\n  %21 = load i64, ptr @WPAS_MODE_P2P_GO, align 8, !tbaa !21\n  %22 = icmp eq i64 %20, %21\n  br i1 %22, label %23, label %31\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr %7, align 8, !tbaa !22\n  %25 = tail call i64 @p2p_get_group_num_members(i32 noundef %24) #2\n  %26 = trunc i64 %25 to i32\n  %27 = add i32 %8, %26\n  %28 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %29 = load ptr, ptr %28, align 8, !tbaa !24\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %6, !llvm.loop !25\n\n31:                                               ; preds = %6, %23, %19\n  %32 = phi i32 [ %27, %23 ], [ %8, %19 ], [ %8, %6 ]\n  %33 = getelementptr inbounds %struct.wpa_ssid, ptr %11, i64 0, i32 3\n  %34 = icmp eq ptr %33, null\n  br i1 %34, label %35, label %6, !llvm.loop !27\n\n35:                                               ; preds = %31, %1\n  %36 = phi i32 [ 0, %1 ], [ %32, %31 ]\n  ret i32 %36\n}\n\ndeclare i32 @wpa_printf(i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @p2p_get_group_num_members(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"p2p_data\", !7, i64 0, !10, i64 8, !10, i64 16}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_4__\", !10, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!15, !10, i64 0}\n!15 = !{!\"TYPE_3__\", !10, i64 0}\n!16 = !{!17, !7, i64 16}\n!17 = !{!\"wpa_ssid\", !18, i64 0, !18, i64 8, !7, i64 16, !10, i64 24}\n!18 = !{!\"long\", !8, i64 0}\n!19 = !{!17, !18, i64 0}\n!20 = !{!17, !18, i64 8}\n!21 = !{!18, !18, i64 0}\n!22 = !{!23, !7, i64 0}\n!23 = !{!\"p2p_group\", !7, i64 0}\n!24 = !{!17, !10, i64 24}\n!25 = distinct !{!25, !26}\n!26 = !{!\"llvm.loop.mustprogress\"}\n!27 = distinct !{!27, !26}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/wpa/wpa_supplicant/extr_p2p_supplicant.c_p2p_group_go_member_count.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wpa_supplicant = type { i32, ptr, ptr, ptr }\n%struct.wpa_ssid = type { i64, i64, i32, ptr }\n\n@MSG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [47 x i8] c\"P2P: sup:%p ssid:%p disabled:%d p2p:%d mode:%d\\00\", align 1\n@WPAS_MODE_P2P_GO = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @p2p_group_go_member_count], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @p2p_group_go_member_count(ptr nocapture noundef readonly %0) #0 {\n  %2 = getelementptr inbounds %struct.wpa_supplicant, ptr %0, i64 0, i32 3\n  %3 = load ptr, ptr %2, align 8, !tbaa !5\n  %4 = load ptr, ptr %3, align 8, !tbaa !11\n  %5 = icmp eq ptr %4, null\n  br i1 %5, label %47, label %6\n\n6:                                                ; preds = %1, %42\n  %7 = phi ptr [ %45, %42 ], [ %4, %1 ]\n  %8 = phi i32 [ %43, %42 ], [ 0, %1 ]\n  %9 = getelementptr inbounds %struct.wpa_supplicant, ptr %7, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !11\n  %12 = icmp eq ptr %11, null\n  br i1 %12, label %42, label %13\n\n13:                                               ; preds = %6, %37\n  %14 = phi ptr [ %40, %37 ], [ %11, %6 ]\n  %15 = phi i32 [ %38, %37 ], [ %8, %6 ]\n  %16 = load i32, ptr @MSG_DEBUG, align 4, !tbaa !13\n  %17 = getelementptr inbounds %struct.wpa_ssid, ptr %14, i64 0, i32 2\n  %18 = load i32, ptr %17, align 8, !tbaa !14\n  %19 = getelementptr inbounds %struct.wpa_ssid, ptr %14, i64 0, i32 1\n  %20 = load i64, ptr %19, align 8, !tbaa !17\n  %21 = load i64, ptr %14, align 8, !tbaa !18\n  %22 = tail call i32 @wpa_printf(i32 noundef %16, ptr noundef nonnull @.str, ptr noundef nonnull %7, ptr noundef nonnull %14, i32 noundef %18, i64 noundef %20, i64 noundef %21) #2\n  %23 = load i32, ptr %17, align 8, !tbaa !14\n  %24 = icmp eq i32 %23, 0\n  br i1 %24, label %25, label %37\n\n25:                                               ; preds = %13\n  %26 = load i64, ptr %19, align 8, !tbaa !17\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %37, label %28\n\n28:                                               ; preds = %25\n  %29 = load i64, ptr %14, align 8, !tbaa !18\n  %30 = load i64, ptr @WPAS_MODE_P2P_GO, align 8, !tbaa !19\n  %31 = icmp eq i64 %29, %30\n  br i1 %31, label %32, label %37\n\n32:                                               ; preds = %28\n  %33 = load i32, ptr %7, align 8, !tbaa !20\n  %34 = tail call i64 @p2p_get_group_num_members(i32 noundef %33) #2\n  %35 = trunc i64 %34 to i32\n  %36 = add i32 %15, %35\n  br label %37\n\n37:                                               ; preds = %13, %25, %28, %32\n  %38 = phi i32 [ %15, %13 ], [ %36, %32 ], [ %15, %28 ], [ %15, %25 ]\n  %39 = getelementptr inbounds %struct.wpa_ssid, ptr %14, i64 0, i32 3\n  %40 = load ptr, ptr %39, align 8, !tbaa !11\n  %41 = icmp eq ptr %40, null\n  br i1 %41, label %42, label %13, !llvm.loop !21\n\n42:                                               ; preds = %37, %6\n  %43 = phi i32 [ %8, %6 ], [ %38, %37 ]\n  %44 = getelementptr inbounds %struct.wpa_supplicant, ptr %7, i64 0, i32 2\n  %45 = load ptr, ptr %44, align 8, !tbaa !11\n  %46 = icmp eq ptr %45, null\n  br i1 %46, label %47, label %6, !llvm.loop !23\n\n47:                                               ; preds = %42, %1\n  %48 = phi i32 [ 0, %1 ], [ %43, %42 ]\n  ret i32 %48\n}\n\ndeclare i32 @wpa_printf(i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i64 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @p2p_get_group_num_members(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 24}\n!6 = !{!\"wpa_supplicant\", !7, i64 0, !10, i64 8, !10, i64 16, !10, i64 24}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!10, !10, i64 0}\n!12 = !{!6, !10, i64 8}\n!13 = !{!7, !7, i64 0}\n!14 = !{!15, !7, i64 16}\n!15 = !{!\"wpa_ssid\", !16, i64 0, !16, i64 8, !7, i64 16, !10, i64 24}\n!16 = !{!\"long\", !8, i64 0}\n!17 = !{!15, !16, i64 8}\n!18 = !{!15, !16, i64 0}\n!19 = !{!16, !16, i64 0}\n!20 = !{!6, !7, i64 0}\n!21 = distinct !{!21, !22}\n!22 = !{!\"llvm.loop.mustprogress\"}\n!23 = distinct !{!23, !22}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_hpread.c_hpread_get_next_skip_over_anon_unions.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function hpread_get_next_skip_over_anon_unions\n\t.type\thpread_get_next_skip_over_anon_unions,@function\nhpread_get_next_skip_over_anon_unions:  # @hpread_get_next_skip_over_anon_unions\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rcx, 16(%rsp)                  # 8-byte Spill\n\tmovl\t%esi, 8(%rsp)                   # 4-byte Spill\n\ttestl\t%edi, %edi\n\tjle\t.LBB0_7\n# %bb.1:                                # %.preheader\n\tmovq\t%rdx, %r12\n\tmovl\t%edi, %ebp\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %esi\n\tcallq\thpread_adjust_bitoffsets@PLT\n\tmovq\t%rbx, %rdi\n\tcallq\tTYPE_NFIELDS@PLT\n\tmovl\t%eax, %edi\n\tmovl\t8(%rsp), %esi                   # 4-byte Reload\n\tmovq\t%r12, %rdx\n\tmovq\t16(%rsp), %rcx                  # 8-byte Reload\n\tcallq\thpread_get_next_skip_over_anon_unions\n\tmovl\t%eax, 8(%rsp)                   # 4-byte Spill\n.LBB0_6:                                #   in Loop: Header=BB0_2 Depth=1\n\tdecl\t%ebp\n\tje\t.LBB0_7\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t(%r12), %rax\n\tmovl\t12(%rax), %edi\n\tmovq\t16(%rsp), %r14                  # 8-byte Reload\n\tmovq\t%r14, %rsi\n\tcallq\thpread_type_lookup@PLT\n\tmovq\t%rax, %rdi\n\tcallq\tCHECK_TYPEDEF@PLT\n\tmovq\t%rax, %rbx\n\tmovq\t(%r12), %rax\n\tmovl\t(%rax), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t%r14, %rdi\n\tcallq\tVT@PLT\n\tmovq\t%rax, %r13\n\tmovq\t(%r12), %rax\n\tmovslq\t4(%rax), %r15\n\tmovl\t8(%rax), %edi\n\tmovl\t%edi, 8(%rsp)                   # 4-byte Spill\n\tmovq\t%r14, %rsi\n\tcallq\thpread_get_lntt@PLT\n\tmovq\t%rax, (%r12)\n\tmovq\t%rbx, %rdi\n\tcallq\tTYPE_CODE@PLT\n\tcmpq\tTYPE_CODE_UNION(%rip), %rax\n\tjne\t.LBB0_6\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovl\t12(%rsp), %r14d                 # 4-byte Reload\n\ttestq\t%r13, %r13\n\tje\t.LBB0_5\n# %bb.4:                                #   in Loop: Header=BB0_2 Depth=1\n\taddq\t%r15, %r13\n\tmovl\t$.L.str, %esi\n\tmovq\t%r13, %rdi\n\tcallq\tDEPRECATED_STREQ@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_5\n\tjmp\t.LBB0_6\n.LBB0_7:\n\tmovl\t8(%rsp), %eax                   # 4-byte Reload\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\thpread_get_next_skip_over_anon_unions, .Lfunc_end0-hpread_get_next_skip_over_anon_unions\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tTYPE_CODE_UNION,@object         # @TYPE_CODE_UNION\n\t.bss\n\t.globl\tTYPE_CODE_UNION\n\t.p2align\t3\nTYPE_CODE_UNION:\n\t.quad\t0                               # 0x0\n\t.size\tTYPE_CODE_UNION, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.zero\t1\n\t.size\t.L.str, 1\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@TYPE_CODE_UNION = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hpread_get_next_skip_over_anon_unions], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hpread_get_next_skip_over_anon_unions(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = icmp sgt i32 %0, 0\n  br i1 %5, label %6, label %31\n\n6:                                                ; preds = %4, %26\n  %7 = phi i32 [ %27, %26 ], [ %1, %4 ]\n  %8 = phi i32 [ %28, %26 ], [ %0, %4 ]\n  %9 = load ptr, ptr %2, align 8, !tbaa !5\n  %10 = getelementptr inbounds %struct.TYPE_5__, ptr %9, i64 0, i32 3\n  %11 = load i32, ptr %10, align 4, !tbaa !10\n  %12 = tail call ptr @hpread_type_lookup(i32 noundef %11, ptr noundef %3) #2\n  %13 = tail call ptr @CHECK_TYPEDEF(ptr noundef %12) #2\n  %14 = load ptr, ptr %2, align 8, !tbaa !5\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = tail call i64 @VT(ptr noundef %3) #2\n  %17 = load ptr, ptr %2, align 8, !tbaa !5\n  %18 = getelementptr inbounds %struct.TYPE_5__, ptr %17, i64 0, i32 2\n  %19 = load i32, ptr %18, align 4, !tbaa !14\n  %20 = tail call ptr @hpread_get_lntt(i32 noundef %19, ptr noundef %3) #2\n  store ptr %20, ptr %2, align 8, !tbaa !5\n  %21 = tail call i64 @TYPE_CODE(ptr noundef %13) #2\n  %22 = load i64, ptr @TYPE_CODE_UNION, align 8, !tbaa !15\n  %23 = icmp eq i64 %21, %22\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %6\n  %25 = icmp eq i64 %16, 0\n  br i1 %25, label %29, label %27\n\n26:                                               ; preds = %6\n  %27 = phi i32 [ %7, %6 ], [ %8, %24 ]\n  %28 = add nsw i32 %8, -1\n  br label %29\n\n29:                                               ; preds = %24, %26\n  %30 = tail call i32 @hpread_adjust_bitoffsets(ptr noundef %13, i32 noundef %15) #2\n  br label %31\n\n31:                                               ; preds = %29, %4\n  %32 = phi i32 [ %1, %4 ], [ %27, %29 ]\n  ret i32 %32\n}\n\ndeclare ptr @hpread_type_lookup(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @CHECK_TYPEDEF(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @VT(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @hpread_get_lntt(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @TYPE_CODE(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @hpread_adjust_bitoffsets(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 12}\n!11 = !{!\"TYPE_5__\", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !12, i64 0}\n!14 = !{!11, !12, i64 8}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@TYPE_CODE_UNION = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hpread_get_next_skip_over_anon_unions], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hpread_get_next_skip_over_anon_unions(i32 noundef %0, i32 noundef returned %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = icmp sgt i32 %0, 0\n  br i1 %5, label %6, label %31\n\n6:                                                ; preds = %4, %26\n  %7 = phi i32 [ %27, %26 ], [ %0, %4 ]\n  %8 = phi ptr [ %28, %26 ], [ %2, %4 ]\n  %9 = load ptr, ptr %8, align 8, !tbaa !5\n  %10 = getelementptr inbounds %struct.TYPE_5__, ptr %9, i64 0, i32 3\n  %11 = load i32, ptr %10, align 4, !tbaa !10\n  %12 = tail call ptr @hpread_type_lookup(i32 noundef %11, ptr noundef %3) #2\n  %13 = tail call ptr @CHECK_TYPEDEF(ptr noundef %12) #2\n  %14 = load ptr, ptr %8, align 8, !tbaa !5\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = tail call i64 @VT(ptr noundef %3) #2\n  %17 = load ptr, ptr %8, align 8, !tbaa !5\n  %18 = getelementptr inbounds %struct.TYPE_5__, ptr %17, i64 0, i32 2\n  %19 = load i32, ptr %18, align 4, !tbaa !14\n  %20 = tail call ptr @hpread_get_lntt(i32 noundef %19, ptr noundef %3) #2\n  store ptr %20, ptr %8, align 8, !tbaa !5\n  %21 = tail call i64 @TYPE_CODE(ptr noundef %13) #2\n  %22 = load i64, ptr @TYPE_CODE_UNION, align 8, !tbaa !15\n  %23 = icmp eq i64 %21, %22\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %6\n  %25 = icmp eq i64 %16, 0\n  br i1 %25, label %29, label %27\n\n26:                                               ; preds = %6\n  %27 = add nsw i32 %7, -1\n  %28 = tail call i32 @hpread_adjust_bitoffsets(ptr noundef %13, i32 noundef %15) #2\n  br label %29\n\n29:                                               ; preds = %24, %26\n  %30 = tail call i32 @hpread_get_next_skip_over_anon_unions(ptr noundef %13, i32 noundef %15, ptr noundef nonnull %8, ptr noundef %3)\n  br label %31\n\n31:                                               ; preds = %29, %4\n  %32 = phi i32 [ %1, %4 ], [ %30, %29 ]\n  ret i32 %32\n}\n\ndeclare ptr @hpread_type_lookup(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @CHECK_TYPEDEF(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @VT(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @hpread_get_lntt(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @TYPE_CODE(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @hpread_adjust_bitoffsets(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 12}\n!11 = !{!\"TYPE_5__\", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !12, i64 0}\n!14 = !{!11, !12, i64 8}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@TYPE_CODE_UNION = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hpread_get_next_skip_over_anon_unions], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hpread_get_next_skip_over_anon_unions(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = icmp sgt i32 %0, 0\n  br i1 %5, label %6, label %30\n\n6:                                                ; preds = %4, %25\n  %7 = phi i32 [ %26, %25 ], [ %0, %4 ]\n  %8 = load ptr, ptr %2, align 8, !tbaa !5\n  %9 = getelementptr inbounds %struct.TYPE_5__, ptr %8, i64 0, i32 3\n  %10 = load i32, ptr %9, align 4, !tbaa !10\n  %11 = tail call ptr @hpread_type_lookup(i32 noundef %10, ptr noundef %3) #2\n  %12 = tail call ptr @CHECK_TYPEDEF(ptr noundef %11) #2\n  %13 = load ptr, ptr %2, align 8, !tbaa !5\n  %14 = load i32, ptr %13, align 4, !tbaa !13\n  %15 = tail call i64 @VT(ptr noundef %3) #2\n  %16 = load ptr, ptr %2, align 8, !tbaa !5\n  %17 = getelementptr inbounds %struct.TYPE_5__, ptr %16, i64 0, i32 2\n  %18 = load i32, ptr %17, align 4, !tbaa !14\n  %19 = tail call ptr @hpread_get_lntt(i32 noundef %18, ptr noundef %3) #2\n  store ptr %19, ptr %2, align 8, !tbaa !5\n  %20 = tail call i64 @TYPE_CODE(ptr noundef %12) #2\n  %21 = load i64, ptr @TYPE_CODE_UNION, align 8, !tbaa !15\n  %22 = icmp eq i64 %20, %21\n  br i1 %22, label %23, label %25\n\n23:                                               ; preds = %6\n  %24 = icmp eq i64 %15, 0\n  br i1 %24, label %29, label %27\n\n25:                                               ; preds = %6\n  %26 = add nsw i32 %7, -1\n  br label %6, !llvm.loop !17\n\n27:                                               ; preds = %23\n  %28 = add nsw i64 %15, %17\n  br label %29\n\n29:                                               ; preds = %27, %23\n  %30 = tail call i32 @hpread_adjust_bitoffsets(ptr noundef %12, i32 noundef %1) #2\n  %31 = tail call i32 @TYPE_NFIELDS(ptr noundef %12) #2\n  %32 = tail call i32 @hpread_get_next_skip_over_anon_unions(i32 noundef %31, i32 noundef %1, ptr noundef nonnull %2, ptr noundef %3)\n  br label %25\n\n31:                                               ; preds = %6\n  %32 = tail call i32 @hpread_adjust_bitoffsets(ptr noundef %12, i32 noundef %1) #2\n  br label %25\n}\n\ndeclare ptr @hpread_type_lookup(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @CHECK_TYPEDEF(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @VT(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @hpread_get_lntt(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @TYPE_CODE(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @hpread_adjust_bitoffsets(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @TYPE_NFIELDS(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn\ndeclare ptr @DEPRECATED_STREQ(i64 noundef, ptr nocapture noundef) local_unnamed_addr #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 12}\n!11 = !{!\"TYPE_5__\", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !12, i64 0}\n!14 = !{!11, !12, i64 8}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_5__ = type { i32, i32, i32, i32 }\n\n@TYPE_CODE_UNION = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hpread_get_next_skip_over_anon_unions], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hpread_get_next_skip_over_anon_unions(i32 noundef %0, i32 noundef returned %1, ptr noundef %2, ptr noundef %3) #0 {\n  %5 = icmp sgt i32 %0, 0\n  br i1 %5, label %6, label %31\n\n6:                                                ; preds = %4, %26\n  %7 = phi i32 [ %27, %26 ], [ %0, %4 ]\n  %8 = phi ptr [ %28, %26 ], [ %2, %4 ]\n  %9 = load ptr, ptr %8, align 8, !tbaa !5\n  %10 = getelementptr inbounds %struct.TYPE_5__, ptr %9, i64 0, i32 3\n  %11 = load i32, ptr %10, align 4, !tbaa !10\n  %12 = tail call ptr @hpread_type_lookup(i32 noundef %11, ptr noundef %3) #2\n  %13 = tail call ptr @CHECK_TYPEDEF(ptr noundef %12) #2\n  %14 = load ptr, ptr %8, align 8, !tbaa !5\n  %15 = load i32, ptr %14, align 4, !tbaa !13\n  %16 = tail call i64 @VT(ptr noundef %3) #2\n  %17 = load ptr, ptr %8, align 8, !tbaa !5\n  %18 = getelementptr inbounds %struct.TYPE_5__, ptr %17, i64 0, i32 2\n  %19 = load i32, ptr %18, align 4, !tbaa !14\n  %20 = tail call ptr @hpread_get_lntt(i32 noundef %19, ptr noundef %3) #2\n  store ptr %20, ptr %8, align 8, !tbaa !5\n  %21 = tail call i64 @TYPE_CODE(ptr noundef %13) #2\n  %22 = load i64, ptr @TYPE_CODE_UNION, align 8, !tbaa !15\n  %23 = icmp eq i64 %21, %22\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %6\n  %25 = icmp eq i64 %16, 0\n  br i1 %25, label %29, label %27\n\n26:                                               ; preds = %6\n  %27 = add nsw i32 %7, -1\n  %28 = tail call i32 @hpread_adjust_bitoffsets(ptr noundef %13, i32 noundef %15) #2\n  br label %29\n\n29:                                               ; preds = %24, %26\n  %30 = tail call i32 @hpread_get_next_skip_over_anon_unions(ptr noundef %13, i32 noundef %15, ptr noundef nonnull %8, ptr noundef %3)\n  br label %31\n\n31:                                               ; preds = %29, %4\n  %32 = phi i32 [ %1, %4 ], [ %30, %29 ]\n  ret i32 %32\n}\n\ndeclare ptr @hpread_type_lookup(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @CHECK_TYPEDEF(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @VT(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @hpread_get_lntt(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @TYPE_CODE(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @hpread_adjust_bitoffsets(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 12}\n!11 = !{!\"TYPE_5__\", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!11, !12, i64 0}\n!14 = !{!11, !12, i64 8}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/gdb/gdb/extr_hpread.c_hpread_get_next_skip_over_anon_unions.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, %struct.TYPE_8__, i32 }\n%struct.TYPE_8__ = type { %struct.TYPE_7__ }\n%struct.TYPE_7__ = type { i32 }\n\n@TYPE_CODE_UNION = dso_local local_unnamed_addr global i64 0, align 8\n@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1\n@llvm.compiler.used = appending global [1 x ptr] [ptr @hpread_get_next_skip_over_anon_unions], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @hpread_get_next_skip_over_anon_unions(i32 noundef %0, i32 %1, ptr nocapture noundef %2, ptr noundef %3) #0 {\n  %5 = icmp sgt i32 %0, 0\n  br i1 %5, label %6, label %40\n\n6:                                                ; preds = %4, %36\n  %7 = phi i32 [ %38, %36 ], [ 0, %4 ]\n  %8 = load ptr, ptr %2, align 8, !tbaa !5\n  %9 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 3\n  %10 = load i32, ptr %9, align 4, !tbaa !9\n  %11 = tail call ptr @hpread_type_lookup(i32 noundef %10, ptr noundef %3) #2\n  %12 = tail call ptr @CHECK_TYPEDEF(ptr noundef %11) #2\n  %13 = load ptr, ptr %2, align 8, !tbaa !5\n  %14 = load i32, ptr %13, align 4, !tbaa !9\n  %15 = tail call ptr @VT(ptr noundef %3) #2\n  %16 = load ptr, ptr %2, align 8, !tbaa !5\n  %17 = getelementptr inbounds %struct.TYPE_6__, ptr %16, i64 0, i32 1\n  %18 = load i32, ptr %17, align 4, !tbaa !9\n  %19 = sext i32 %18 to i64\n  %20 = getelementptr inbounds i8, ptr %15, i64 %19\n  %21 = getelementptr inbounds %struct.TYPE_6__, ptr %16, i64 0, i32 2\n  %22 = load i32, ptr %21, align 4, !tbaa.struct !10\n  %23 = tail call ptr @hpread_get_lntt(i32 noundef %22, ptr noundef %3) #2\n  store ptr %23, ptr %2, align 8, !tbaa !5\n  %24 = tail call i64 @TYPE_CODE(ptr noundef %12) #2\n  %25 = load i64, ptr @TYPE_CODE_UNION, align 8, !tbaa !13\n  %26 = icmp eq i64 %24, %25\n  br i1 %26, label %27, label %36\n\n27:                                               ; preds = %6\n  %28 = icmp eq ptr %15, null\n  br i1 %28, label %32, label %29\n\n29:                                               ; preds = %27\n  %30 = tail call i64 @DEPRECATED_STREQ(ptr noundef nonnull %20, ptr noundef nonnull @.str) #2\n  %31 = icmp eq i64 %30, 0\n  br i1 %31, label %36, label %32\n\n32:                                               ; preds = %29, %27\n  %33 = tail call i32 @hpread_adjust_bitoffsets(ptr noundef %12, i32 noundef %14) #2\n  %34 = tail call i32 @TYPE_NFIELDS(ptr noundef %12) #2\n  %35 = tail call i32 @hpread_get_next_skip_over_anon_unions(i32 noundef %34, i32 %22, ptr noundef nonnull %2, ptr noundef %3)\n  br label %36\n\n36:                                               ; preds = %6, %29, %32\n  %37 = phi i32 [ %35, %32 ], [ %22, %29 ], [ %22, %6 ]\n  %38 = add nuw nsw i32 %7, 1\n  %39 = icmp eq i32 %38, %0\n  br i1 %39, label %40, label %6, !llvm.loop !15\n\n40:                                               ; preds = %36, %4\n  %41 = phi i32 [ %1, %4 ], [ %37, %36 ]\n  ret i32 %41\n}\n\ndeclare ptr @hpread_type_lookup(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @CHECK_TYPEDEF(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @VT(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @hpread_get_lntt(i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @TYPE_CODE(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @DEPRECATED_STREQ(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @hpread_adjust_bitoffsets(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @TYPE_NFIELDS(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"any pointer\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!7, !7, i64 0}\n!10 = !{i64 0, i64 4, !11}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !7, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !7, i64 0}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_omap2.c_omap2_onenand_dma_transfer.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function omap2_onenand_dma_transfer\n\t.type\tomap2_onenand_dma_transfer,@function\nomap2_onenand_dma_transfer:             # @omap2_onenand_dma_transfer\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%esi, %eax\n\tmovq\t%rdi, %r14\n\tmovl\t(%rdi), %edi\n\txorl\t%ebp, %ebp\n\tmovl\t%edx, %esi\n\tmovl\t%eax, %edx\n\txorl\t%r8d, %r8d\n\tcallq\tdmaengine_prep_dma_memcpy@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_1\n# %bb.2:\n\tmovq\t%rax, %rbx\n\tleaq\t4(%r14), %rbp\n\tmovq\t%rbp, %rdi\n\tcallq\treinit_completion@PLT\n\tmovl\tomap2_onenand_dma_complete_func(%rip), %eax\n\tmovl\t%eax, 16(%rbx)\n\tmovq\t%rbp, 8(%rbx)\n\tmovq\t%rbx, %rdi\n\tcallq\t*(%rbx)\n\tmovl\t%eax, %edi\n\tcallq\tdma_submit_error@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_4\n# %bb.3:\n\tmovq\t8(%r14), %rdi\n\tmovl\t$.L.str.1, %esi\n\tcallq\tdev_err@PLT\n\txorl\t%ebp, %ebp\n\tsubl\tEIO(%rip), %ebp\n\tjmp\t.LBB0_6\n.LBB0_1:\n\tmovq\t8(%r14), %rdi\n\tmovl\t$.L.str, %esi\n\tcallq\tdev_err@PLT\n\tsubl\tEIO(%rip), %ebp\n\tjmp\t.LBB0_6\n.LBB0_4:\n\tmovl\t(%r14), %edi\n\tcallq\tdma_async_issue_pending@PLT\n\tmovl\t$20, %edi\n\tcallq\tmsecs_to_jiffies@PLT\n\tmovq\t%rbp, %rdi\n\tmovl\t%eax, %esi\n\tcallq\twait_for_completion_io_timeout@PLT\n\txorl\t%ebp, %ebp\n\ttestl\t%eax, %eax\n\tjne\t.LBB0_6\n# %bb.5:\n\tmovl\t(%r14), %edi\n\tcallq\tdmaengine_terminate_sync@PLT\n\txorl\t%ebp, %ebp\n\tsubl\tETIMEDOUT(%rip), %ebp\n.LBB0_6:\n\tmovl\t%ebp, %eax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tomap2_onenand_dma_transfer, .Lfunc_end0-omap2_onenand_dma_transfer\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Failed to prepare DMA memcpy\\n\"\n\t.size\t.L.str, 30\n\n\t.type\tEIO,@object                     # @EIO\n\t.bss\n\t.globl\tEIO\n\t.p2align\t2\nEIO:\n\t.long\t0                               # 0x0\n\t.size\tEIO, 4\n\n\t.type\tomap2_onenand_dma_complete_func,@object # @omap2_onenand_dma_complete_func\n\t.globl\tomap2_onenand_dma_complete_func\n\t.p2align\t2\nomap2_onenand_dma_complete_func:\n\t.long\t0                               # 0x0\n\t.size\tomap2_onenand_dma_complete_func, 4\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"Failed to do DMA tx_submit\\n\"\n\t.size\t.L.str.1, 28\n\n\t.type\tETIMEDOUT,@object               # @ETIMEDOUT\n\t.bss\n\t.globl\tETIMEDOUT\n\t.p2align\t2\nETIMEDOUT:\n\t.long\t0                               # 0x0\n\t.size\tETIMEDOUT, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.omap2_onenand_dma = type { i32, i32, ptr }\n%struct.omap2_onenand_controller = type { i32, ptr }\n\n@.str = private unnamed_addr constant [30 x i8] c\"Failed to prepare DMA memcpy\\0A\\00\", align 1\n@EIO = dso_local local_unnamed_addr global i32 0, align 4\n@omap2_onenand_dma_complete_func = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [28 x i8] c\"Failed to do DMA tx_submit\\0A\\00\", align 1\n@ETIMEDOUT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @omap2_onenand_dma_transfer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @omap2_onenand_dma_transfer(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = tail call ptr @dmaengine_prep_dma_memcpy(i32 noundef %4, i32 noundef %2, i32 noundef %1, i32 noundef 0, ptr noundef null) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %7, label %12\n\n7:                                                ; preds = %3\n  %8 = getelementptr inbounds %struct.omap2_onenand_controller, ptr %0, i64 0, i32 1\n  %9 = load ptr, ptr %8, align 8, !tbaa !11\n  %10 = tail call i32 @dev_err(ptr noundef %9, ptr noundef nonnull @.str) #2\n  %11 = load i32, ptr @EIO, align 4, !tbaa !12\n  br label %33\n\n12:                                               ; preds = %3\n  %13 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %0, i64 0, i32 1\n  %14 = tail call i32 @reinit_completion(ptr noundef nonnull %13) #2\n  %15 = load i32, ptr @omap2_onenand_dma_complete_func, align 4, !tbaa !12\n  %16 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 2\n  store i32 %15, ptr %16, align 8, !tbaa !13\n  %17 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 1\n  store ptr %13, ptr %17, align 8, !tbaa !15\n  %18 = load ptr, ptr %5, align 8, !tbaa !16\n  %19 = tail call i32 %18(ptr noundef nonnull %5) #2\n  %20 = tail call i64 @dma_submit_error(i32 noundef %19) #2\n  %21 = icmp eq i64 %20, 0\n  br i1 %21, label %26, label %22\n\n22:                                               ; preds = %12\n  %23 = getelementptr inbounds %struct.omap2_onenand_controller, ptr %0, i64 0, i32 1\n  %24 = load ptr, ptr %23, align 8, !tbaa !11\n  %25 = tail call i32 @dev_err(ptr noundef %24, ptr noundef nonnull @.str.1) #2\n  br label %33\n\n26:                                               ; preds = %12\n  %27 = load i32, ptr %0, align 8, !tbaa !5\n  %28 = tail call i32 @dma_async_issue_pending(i32 noundef %27) #2\n  %29 = tail call i32 @msecs_to_jiffies(i32 noundef 20) #2\n  %30 = tail call i32 @wait_for_completion_io_timeout(ptr noundef nonnull %13, i32 noundef %29) #2\n  %31 = icmp eq i32 %30, 0\n  br i1 %31, label %32, label %36\n\n32:                                               ; preds = %26\n  %33 = load i32, ptr @EIO, align 4, !tbaa !12\n  br label %36\n\n34:                                               ; preds = %32\n  %35 = load i32, ptr @ETIMEDOUT, align 4, !tbaa !12\n  br label %36\n\n36:                                               ; preds = %32, %34, %26\n  %37 = phi i32 [ %35, %34 ], [ %33, %32 ], [ 0, %26 ]\n  ret i32 %37\n\n32:                                               ; preds = %32\n  %33 = load i32, ptr @EIO, align 4, !tbaa !12\n  br label %36\n\n}\n\ndeclare ptr @dmaengine_prep_dma_memcpy(i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @reinit_completion(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dma_submit_error(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dma_async_issue_pending(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @wait_for_completion_io_timeout(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @msecs_to_jiffies(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"omap2_onenand_controller\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!14, !7, i64 16}\n!14 = !{!\"omap2_onenand_dma\", !7, i64 0, !7, i64 4, !10, i64 8}\n!15 = !{!14, !10, i64 4}\n!16 = !{!14, !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.omap2_onenand_dma = type { i32, i32, ptr }\n%struct.omap2_onenand_mtd = type { i32, ptr }\n\n@.str = private unnamed_addr constant [30 x i8] c\"Failed to prepare DMA memcpy\\0A\\00\", align 1\n@EIO = dso_local local_unnamed_addr global i32 0, align 4\n@omap2_onenand_dma_complete_func = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [28 x i8] c\"Failed to do DMA tx_submit\\0A\\00\", align 1\n@ETIMEDOUT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @omap2_onenand_dma_transfer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @omap2_onenand_dma_transfer(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = tail call ptr @dmaengine_prep_dma_memcpy(i32 noundef %4, i32 noundef %2, i32 noundef %1, i32 noundef 0, ptr noundef null) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %7, label %12\n\n7:                                                ; preds = %3\n  %8 = getelementptr inbounds %struct.omap2_onenand_mtd, ptr %0, i64 0, i32 1\n  %9 = load ptr, ptr %8, align 8, !tbaa !11\n  %10 = tail call i32 @dev_err(ptr noundef %9, ptr noundef nonnull @.str) #2\n  %11 = load i32, ptr @EIO, align 4, !tbaa !12\n  br label %34\n\n12:                                               ; preds = %3\n  %13 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %0, i64 0, i32 1\n  %14 = tail call i32 @reinit_completion(ptr noundef nonnull %13) #2\n  %15 = load i32, ptr @omap2_onenand_dma_complete_func, align 4, !tbaa !12\n  %16 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 2\n  store i32 %15, ptr %16, align 8, !tbaa !13\n  %17 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 1\n  store ptr %13, ptr %17, align 8, !tbaa !15\n  %18 = load ptr, ptr %5, align 8, !tbaa !16\n  %19 = tail call i32 %18(ptr noundef nonnull %5) #2\n  %20 = tail call i64 @dma_submit_error(i32 noundef %19) #2\n  %21 = icmp eq i64 %20, 0\n  br i1 %21, label %26, label %22\n\n22:                                               ; preds = %12\n  %23 = getelementptr inbounds %struct.omap2_onenand_mtd, ptr %0, i64 0, i32 1\n  %24 = load ptr, ptr %23, align 8, !tbaa !11\n  %25 = tail call i32 @dev_err(ptr noundef %24, ptr noundef nonnull @.str.1) #2\n  br label %34\n\n26:                                               ; preds = %12\n  %27 = load i32, ptr %0, align 8, !tbaa !5\n  %28 = tail call i32 @dma_async_issue_pending(i32 noundef %27) #2\n  %29 = tail call i32 @msecs_to_jiffies(i32 noundef 20) #2\n  %30 = tail call i32 @wait_for_completion_io_timeout(ptr noundef nonnull %13, i32 noundef %29) #2\n  %31 = icmp eq i32 %30, 0\n  br i1 %31, label %32, label %34\n\n32:                                               ; preds = %26\n  %33 = tail call i32 @dmaengine_terminate_sync(i32 noundef %27) #2\n  br label %34\n\n34:                                               ; preds = %26, %32, %22, %7\n  %35 = phi i32 [ %11, %7 ], [ %30, %26 ], [ 0, %32 ], [ -1, %22 ]\n  ret i32 %35\n}\n\ndeclare ptr @dmaengine_prep_dma_memcpy(i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @reinit_completion(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dma_submit_error(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dma_async_issue_pending(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @wait_for_completion_io_timeout(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @msecs_to_jiffies(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dmaengine_terminate_sync(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"omap2_onenand_mtd\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!14, !7, i64 16}\n!14 = !{!\"omap2_onenand_dma\", !7, i64 0, !7, i64 4, !10, i64 8}\n!15 = !{!14, !10, i64 4}\n!16 = !{!14, !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.omap2_onenand_dma = type { i32, i32, ptr }\n%struct.omap2_onenand_mtd = type { i32, ptr }\n\n@.str = private unnamed_addr constant [30 x i8] c\"Failed to prepare DMA memcpy\\0A\\00\", align 1\n@EIO = dso_local local_unnamed_addr global i32 0, align 4\n@omap2_onenand_dma_complete_func = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [28 x i8] c\"Failed to do DMA tx_submit\\0A\\00\", align 1\n@ETIMEDOUT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @omap2_onenand_dma_transfer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @omap2_onenand_dma_transfer(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = tail call ptr @dmaengine_prep_dma_memcpy(i32 noundef %4, i32 noundef %2, i32 noundef %1, i32 noundef 0, ptr noundef null) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %7, label %13\n\n7:                                                ; preds = %3\n  %8 = getelementptr inbounds %struct.omap2_onenand_mtd, ptr %0, i64 0, i32 1\n  %9 = load ptr, ptr %8, align 8, !tbaa !11\n  %10 = tail call i32 @dev_err(ptr noundef %9, ptr noundef nonnull @.str) #2\n  %11 = load i32, ptr @EIO, align 4, !tbaa !12\n  %12 = sub nsw i32 0, %11\n  br label %35\n\n13:                                               ; preds = %3\n  %14 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %0, i64 0, i32 1\n  %15 = tail call i32 @reinit_completion(ptr noundef nonnull %14) #2\n  %16 = load i32, ptr @omap2_onenand_dma_complete_func, align 4, !tbaa !12\n  %17 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 2\n  store i32 %16, ptr %17, align 8, !tbaa !13\n  %18 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 1\n  store ptr %14, ptr %18, align 8, !tbaa !15\n  %19 = load ptr, ptr %5, align 8, !tbaa !16\n  %20 = tail call i32 %19(ptr noundef nonnull %5) #2\n  %21 = tail call i64 @dma_submit_error(i32 noundef %20) #2\n  %22 = icmp eq i64 %21, 0\n  br i1 %22, label %27, label %23\n\n23:                                               ; preds = %13\n  %24 = getelementptr inbounds %struct.omap2_onenand_mtd, ptr %0, i64 0, i32 1\n  %25 = load ptr, ptr %24, align 8, !tbaa !11\n  %26 = tail call i32 @dev_err(ptr noundef %25, ptr noundef nonnull @.str.1) #2\n  br label %30\n\n27:                                               ; preds = %13\n  %28 = load i32, ptr %0, align 8, !tbaa !5\n  %29 = tail call i32 @dma_async_issue_pending(i32 noundef %28) #2\n  br label %33\n\n30:                                               ; preds = %23\n  %31 = load i32, ptr @EIO, align 4, !tbaa !12\n  %32 = sub nsw i32 0, %31\n  br label %35\n\n33:                                               ; preds = %27\n  %34 = tail call i32 @msecs_to_jiffies(i32 noundef 20) #2\n  br label %37\n\n35:                                               ; preds = %30, %7\n  %36 = phi i32 [ %32, %30 ], [ %12, %7 ]\n  ret i32 %36\n\n37:                                               ; preds = %33\n  %38 = tail call i32 @wait_for_completion_io_timeout(ptr noundef nonnull %14, i32 noundef %34) #2\n  %39 = icmp eq i32 %38, 0\n  br i1 %39, label %40, label %44\n\n40:                                               ; preds = %37\n  %41 = load i32, ptr %0, align 8, !tbaa !5\n  %42 = tail call i32 @dmaengine_terminate_sync(i32 noundef %41) #2\n  %43 = load i32, ptr @ETIMEDOUT, align 4, !tbaa !12\n  br label %44\n\n44:                                               ; preds = %40, %37\n  %45 = phi i32 [ %36, %37 ], [ %43, %40 ]\n  ret i32 %45\n}\n\ndeclare ptr @dmaengine_prep_dma_memcpy(i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @reinit_completion(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dma_submit_error(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dma_async_issue_pending(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @msecs_to_jiffies(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @wait_for_completion_io_timeout(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dmaengine_terminate_sync(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"omap2_onenand_dma\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 8}\n!12 = !{!\"omap2_onenand_mtd\", !7, i64 0, !10, i64 8}\n!13 = !{!6, !7, i64 16}\n!14 = !{!6, !10, i64 8}\n!15 = !{!6, !10, i64 4}\n!16 = !{!6, !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.omap2_onenand_dma = type { i32, i32, ptr }\n%struct.omap2_onenand_controller = type { i32, ptr }\n\n@.str = private unnamed_addr constant [30 x i8] c\"Failed to prepare DMA memcpy\\0A\\00\", align 1\n@EIO = dso_local local_unnamed_addr global i32 0, align 4\n@omap2_onenand_dma_complete_func = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [28 x i8] c\"Failed to do DMA tx_submit\\0A\\00\", align 1\n@ETIMEDOUT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @omap2_onenand_dma_transfer], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @omap2_onenand_dma_transfer(ptr noundef %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = tail call ptr @dmaengine_prep_dma_memcpy(i32 noundef %4, i32 noundef %2, i32 noundef %1, i32 noundef 0, ptr noundef null) #2\n  %6 = icmp eq ptr %5, null\n  br i1 %6, label %7, label %12\n\n7:                                                ; preds = %3\n  %8 = getelementptr inbounds %struct.omap2_onenand_controller, ptr %0, i64 0, i32 1\n  %9 = load ptr, ptr %8, align 8, !tbaa !11\n  %10 = tail call i32 @dev_err(ptr noundef %9, ptr noundef nonnull @.str) #2\n  %11 = load i32, ptr @EIO, align 4, !tbaa !12\n  br label %34\n\n12:                                               ; preds = %3\n  %13 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %0, i64 0, i32 1\n  %14 = tail call i32 @reinit_completion(ptr noundef nonnull %13) #2\n  %15 = load i32, ptr @omap2_onenand_dma_complete_func, align 4, !tbaa !12\n  %16 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 2\n  store i32 %15, ptr %16, align 8, !tbaa !13\n  %17 = getelementptr inbounds %struct.omap2_onenand_dma, ptr %5, i64 0, i32 1\n  store ptr %13, ptr %17, align 8, !tbaa !15\n  %18 = load ptr, ptr %5, align 8, !tbaa !16\n  %19 = tail call i32 %18(ptr noundef nonnull %5) #2\n  %20 = tail call i64 @dma_submit_error(i32 noundef %19) #2\n  %21 = icmp eq i64 %20, 0\n  br i1 %21, label %26, label %22\n\n22:                                               ; preds = %12\n  %23 = getelementptr inbounds %struct.omap2_onenand_controller, ptr %0, i64 0, i32 1\n  %24 = load ptr, ptr %23, align 8, !tbaa !11\n  %25 = tail call i32 @dev_err(ptr noundef %24, ptr noundef nonnull @.str.1) #2\n  br label %34\n\n26:                                               ; preds = %12\n  %27 = load i32, ptr %0, align 8, !tbaa !5\n  %28 = tail call i32 @dma_async_issue_pending(i32 noundef %27) #2\n  %29 = tail call i32 @msecs_to_jiffies(i32 noundef 20) #2\n  %30 = tail call i32 @wait_for_completion_io_timeout(ptr noundef nonnull %13, i32 noundef %29) #2\n  %31 = icmp eq i32 %30, 0\n  br i1 %31, label %32, label %34\n\n32:                                               ; preds = %26\n  %33 = tail call i32 @dmaengine_terminate_sync(i32 noundef %27) #2\n  br label %34\n\n34:                                               ; preds = %26, %32, %22, %7\n  %35 = phi i32 [ %11, %7 ], [ %30, %26 ], [ 0, %32 ], [ -1, %22 ]\n  ret i32 %35\n}\n\ndeclare ptr @dmaengine_prep_dma_memcpy(i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @reinit_completion(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dma_submit_error(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dma_async_issue_pending(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @wait_for_completion_io_timeout(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @msecs_to_jiffies(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dmaengine_terminate_sync(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"omap2_onenand_dma\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 8}\n!12 = !{!\"omap2_onenand_controller\", !7, i64 0, !10, i64 8}\n!13 = !{!14, !7, i64 16}\n!14 = !{!\"dma_async_tx_descriptor\", !15, i64 0}\n!15 = !{!\"TYPE_2__\", !7, i64 0}\n!16 = !{!14, !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/mtd/nand/onenand/extr_omap2.c_omap2_onenand_dma_transfer.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.omap2_onenand = type { i32, i32, ptr }\n%struct.dma_async_tx_descriptor = type { ptr, ptr, i32 }\n\n@.str = private unnamed_addr constant [30 x i8] c\"Failed to prepare DMA memcpy\\0A\\00\", align 1\n@EIO = dso_local local_unnamed_addr global i32 0, align 4\n@omap2_onenand_dma_complete_func = dso_local local_unnamed_addr global i32 0, align 4\n@.str.1 = private unnamed_addr constant [28 x i8] c\"Failed to do DMA tx_submit\\0A\\00\", align 1\n@ETIMEDOUT = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @omap2_onenand_dma_transfer], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i32 @omap2_onenand_dma_transfer(ptr noundef %0, i32 noundef %1, i32 noundef %2, i64 noundef %3) #0 {\n  %5 = load i32, ptr %0, align 8, !tbaa !5\n  %6 = tail call ptr @dmaengine_prep_dma_memcpy(i32 noundef %5, i32 noundef %2, i32 noundef %1, i64 noundef %3, i32 noundef 0) #2\n  %7 = icmp eq ptr %6, null\n  br i1 %7, label %8, label %14\n\n8:                                                ; preds = %4\n  %9 = getelementptr inbounds %struct.omap2_onenand, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = tail call i32 @dev_err(ptr noundef %10, ptr noundef nonnull @.str) #2\n  %12 = load i32, ptr @EIO, align 4, !tbaa !12\n  %13 = sub nsw i32 0, %12\n  br label %41\n\n14:                                               ; preds = %4\n  %15 = getelementptr inbounds %struct.omap2_onenand, ptr %0, i64 0, i32 1\n  %16 = tail call i32 @reinit_completion(ptr noundef nonnull %15) #2\n  %17 = load i32, ptr @omap2_onenand_dma_complete_func, align 4, !tbaa !12\n  %18 = getelementptr inbounds %struct.dma_async_tx_descriptor, ptr %6, i64 0, i32 2\n  store i32 %17, ptr %18, align 8, !tbaa !13\n  %19 = getelementptr inbounds %struct.dma_async_tx_descriptor, ptr %6, i64 0, i32 1\n  store ptr %15, ptr %19, align 8, !tbaa !15\n  %20 = load ptr, ptr %6, align 8, !tbaa !16\n  %21 = tail call i32 %20(ptr noundef nonnull %6) #2\n  %22 = tail call i64 @dma_submit_error(i32 noundef %21) #2\n  %23 = icmp eq i64 %22, 0\n  br i1 %23, label %30, label %24\n\n24:                                               ; preds = %14\n  %25 = getelementptr inbounds %struct.omap2_onenand, ptr %0, i64 0, i32 2\n  %26 = load ptr, ptr %25, align 8, !tbaa !11\n  %27 = tail call i32 @dev_err(ptr noundef %26, ptr noundef nonnull @.str.1) #2\n  %28 = load i32, ptr @EIO, align 4, !tbaa !12\n  %29 = sub nsw i32 0, %28\n  br label %41\n\n30:                                               ; preds = %14\n  %31 = load i32, ptr %0, align 8, !tbaa !5\n  %32 = tail call i32 @dma_async_issue_pending(i32 noundef %31) #2\n  %33 = tail call i32 @msecs_to_jiffies(i32 noundef 20) #2\n  %34 = tail call i32 @wait_for_completion_io_timeout(ptr noundef nonnull %15, i32 noundef %33) #2\n  %35 = icmp eq i32 %34, 0\n  br i1 %35, label %36, label %41\n\n36:                                               ; preds = %30\n  %37 = load i32, ptr %0, align 8, !tbaa !5\n  %38 = tail call i32 @dmaengine_terminate_sync(i32 noundef %37) #2\n  %39 = load i32, ptr @ETIMEDOUT, align 4, !tbaa !12\n  %40 = sub nsw i32 0, %39\n  br label %41\n\n41:                                               ; preds = %30, %36, %24, %8\n  %42 = phi i32 [ %29, %24 ], [ %40, %36 ], [ %13, %8 ], [ 0, %30 ]\n  ret i32 %42\n}\n\ndeclare ptr @dmaengine_prep_dma_memcpy(i32 noundef, i32 noundef, i32 noundef, i64 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_err(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @reinit_completion(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @dma_submit_error(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dma_async_issue_pending(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @wait_for_completion_io_timeout(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @msecs_to_jiffies(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dmaengine_terminate_sync(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"omap2_onenand\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!7, !7, i64 0}\n!13 = !{!14, !7, i64 16}\n!14 = !{!\"dma_async_tx_descriptor\", !10, i64 0, !10, i64 8, !7, i64 16}\n!15 = !{!14, !10, i64 8}\n!16 = !{!14, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lj_cparse.c_cp_expr_sizeof.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function cp_expr_sizeof\n\t.type\tcp_expr_sizeof,@function\ncp_expr_sizeof:                         # @cp_expr_sizeof\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$16, %rsp\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %ebp\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tmovl\t$40, %esi\n\tcallq\tcp_opt@PLT\n\tmovq\t%rbx, %rdi\n\ttestq\t%rax, %rax\n\tje\t.LBB0_5\n# %bb.1:\n\tcallq\tcp_istypedecl@PLT\n\tmovq\t%rbx, %rdi\n\ttestq\t%rax, %rax\n\tje\t.LBB0_3\n# %bb.2:\n\tcallq\tcp_decl_abstract@PLT\n\tmovq\t%rax, (%r14)\n\tjmp\t.LBB0_4\n.LBB0_5:\n\tmovq\t%r14, %rsi\n\tcallq\tcp_expr_unary@PLT\n\tjmp\t.LBB0_6\n.LBB0_3:\n\tmovq\t%r14, %rsi\n\tcallq\tcp_expr_comma@PLT\n.LBB0_4:\n\tmovq\t%rbx, %rdi\n\tmovl\t$41, %esi\n\tcallq\tcp_check@PLT\n.LBB0_6:\n\tmovl\t(%rbx), %edi\n\tmovq\t(%r14), %rsi\n\tleaq\t8(%rsp), %rdx\n\tcallq\tlj_ctype_info@PLT\n\ttestl\t%ebp, %ebp\n\tje\t.LBB0_11\n# %bb.7:\n\tmovq\t8(%rsp), %rax\n\tcmpq\tCTSIZE_INVALID(%rip), %rax\n\tjne\t.LBB0_8\n# %bb.9:\n\tmovq\t(%r14), %rax\n\tcmpq\tCTID_A_CCHAR(%rip), %rax\n\tje\t.LBB0_12\n# %bb.10:\n\tmovl\tLJ_ERR_FFI_INVSIZE(%rip), %esi\n\tmovq\t%rbx, %rdi\n\tcallq\tcp_err@PLT\n\tjmp\t.LBB0_12\n.LBB0_11:\n\tmovl\t%eax, %edi\n\tcallq\tctype_align@PLT\n\tmovl\t$1, %edx\n\tmovl\t%eax, %ecx\n\tshll\t%cl, %edx\n\tmovl\t%edx, 8(%r14)\n\tjmp\t.LBB0_12\n.LBB0_8:\n\tmovl\t%eax, 8(%r14)\n.LBB0_12:\n\tmovq\tCTID_UINT32(%rip), %rax\n\tmovq\t%rax, (%r14)\n\taddq\t$16, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tcp_expr_sizeof, .Lfunc_end0-cp_expr_sizeof\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCTSIZE_INVALID,@object          # @CTSIZE_INVALID\n\t.bss\n\t.globl\tCTSIZE_INVALID\n\t.p2align\t3\nCTSIZE_INVALID:\n\t.quad\t0                               # 0x0\n\t.size\tCTSIZE_INVALID, 8\n\n\t.type\tCTID_A_CCHAR,@object            # @CTID_A_CCHAR\n\t.globl\tCTID_A_CCHAR\n\t.p2align\t3\nCTID_A_CCHAR:\n\t.quad\t0                               # 0x0\n\t.size\tCTID_A_CCHAR, 8\n\n\t.type\tLJ_ERR_FFI_INVSIZE,@object      # @LJ_ERR_FFI_INVSIZE\n\t.globl\tLJ_ERR_FFI_INVSIZE\n\t.p2align\t2\nLJ_ERR_FFI_INVSIZE:\n\t.long\t0                               # 0x0\n\t.size\tLJ_ERR_FFI_INVSIZE, 4\n\n\t.type\tCTID_UINT32,@object             # @CTID_UINT32\n\t.globl\tCTID_UINT32\n\t.p2align\t3\nCTID_UINT32:\n\t.quad\t0                               # 0x0\n\t.size\tCTID_UINT32, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_10__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %13, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %15\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %15\n\n14:                                               ; preds = %15\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n\n15:                                               ; preds = %12, %10\n  %16 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %17 = load i64, ptr %1, align 8, !tbaa !5\n  %18 = call i32 @lj_ctype_info(ptr noundef %0, i64 noundef %17, ptr noundef nonnull %4) #3\n  %19 = icmp eq i32 %2, 0\n  br i1 %19, label %28, label %20\n\n20:                                               ; preds = %15\n  %21 = load i64, ptr %4, align 8, !tbaa !11\n  %22 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !12\n  %23 = icmp eq i64 %21, %22\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %20\n  %25 = getelementptr inbounds %struct.TYPE_10__, ptr %4, i64 0, i32 1\n  %26 = load i32, ptr %25, align 8, !tbaa !13\n  store i32 %26, ptr %1, align 8, !tbaa !5\n  br label %34\n\n27:                                               ; preds = %20\n  %28 = load i64, ptr %1, align 8, !tbaa !5\n  %29 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !12\n  %30 = icmp eq i64 %28, %29\n  br i1 %30, label %34, label %31\n\n31:                                               ; preds = %27\n  %32 = load i32, ptr @LJ_ERR_FFI_INVSIZE, align 4, !tbaa !14\n  %33 = call i32 @cp_err(ptr noundef %0, i32 noundef %32) #3\n  br label %34\n\n34:                                               ; preds = %27, %31, %24\n  %35 = load i64, ptr @CTID_UINT32, align 8, !tbaa !12\n  store i64 %35, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  br label %14\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_err(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!10, !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_10__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %14, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %16\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %16\n\n14:                                               ; preds = %3\n  %15 = tail call i32 @cp_expr_unary(ptr noundef %0, ptr noundef %1) #3\n  br label %19\n\n16:                                               ; preds = %10, %12\n  %17 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %18 = load i64, ptr %4, align 8, !tbaa !11\n  store i64 %18, ptr %1, align 8, !tbaa !5\n  br label %19\n\n19:                                               ; preds = %16, %14\n  %20 = load i32, ptr %0, align 4, !tbaa !12\n  %21 = load i64, ptr %1, align 8, !tbaa !5\n  %22 = call i32 @lj_ctype_info(i32 noundef %20, i64 noundef %21, ptr noundef nonnull %4) #3\n  %23 = icmp eq i32 %2, 0\n  br i1 %23, label %31, label %24\n\n24:                                               ; preds = %19\n  %25 = load i64, ptr %4, align 8, !tbaa !11\n  %26 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !14\n  %27 = icmp eq i64 %25, %26\n  br i1 %27, label %30, label %28\n\n28:                                               ; preds = %24\n  %29 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  store i32 %22, ptr %29, align 8, !tbaa !15\n  br label %35\n\n30:                                               ; preds = %24\n  %31 = load i64, ptr %1, align 8, !tbaa !5\n  %32 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !14\n  %33 = icmp eq i64 %31, %32\n  br i1 %33, label %35, label %34\n\n34:                                               ; preds = %30\n  %35 = load i32, ptr @LJ_ERR_FFI_INVSIZE, align 4, !tbaa !16\n  %36 = call i32 @cp_err(ptr noundef nonnull %0, i32 noundef %35) #3\n  br label %35\n\n37:                                               ; preds = %35\n  %38 = load i64, ptr @CTID_UINT32, align 8, !tbaa !14\n  store i64 %38, ptr %1, align 8, !tbaa !5\n  br label %39\n\n35:                                               ; preds = %30, %34, %28\n  %36 = phi i64 [ %31, %30 ], [ %38, %34 ], [ %31, %28 ]\n  store i64 %36, ptr %1, align 8, !tbaa !5\n  br label %37\n\n39:                                               ; preds = %37, %35\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_unary(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_err(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !7, i64 0}\n!12 = !{!\"TYPE_9__\", !10, i64 0}\n!13 = !{!10, !10, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!6, !10, i64 8}\n!16 = !{!10, !10, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_10__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %13, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %15\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %15\n\n14:                                               ; preds = %15\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n\n15:                                               ; preds = %12, %10\n  %16 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %17 = load i64, ptr %1, align 8, !tbaa !5\n  %18 = call i32 @lj_ctype_info(ptr noundef %0, i64 noundef %17, ptr noundef nonnull %4) #3\n  %19 = icmp eq i32 %2, 0\n  br i1 %19, label %28, label %20\n\n20:                                               ; preds = %15\n  %21 = load i64, ptr %4, align 8, !tbaa !11\n  %22 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !12\n  %23 = icmp eq i64 %21, %22\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %20\n  %25 = getelementptr inbounds %struct.TYPE_10__, ptr %4, i64 0, i32 1\n  %26 = load i32, ptr %25, align 8, !tbaa !13\n  store i32 %26, ptr %1, align 8, !tbaa !5\n  br label %34\n\n27:                                               ; preds = %20\n  %28 = load i64, ptr %1, align 8, !tbaa !5\n  %29 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !12\n  %30 = icmp eq i64 %28, %29\n  br i1 %30, label %34, label %31\n\n31:                                               ; preds = %27\n  %32 = load i32, ptr @LJ_ERR_FFI_INVSIZE, align 4, !tbaa !14\n  %33 = call i32 @cp_err(ptr noundef %0, i32 noundef %32) #3\n  br label %34\n\n34:                                               ; preds = %27, %31, %24\n  %35 = load i64, ptr @CTID_UINT32, align 8, !tbaa !12\n  store i64 %35, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  br label %14\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_err(ptr noundef, i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 8}\n!14 = !{!10, !10, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca %struct.TYPE_10__, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %13, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %15\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef nonnull %1) #3\n  br label %15\n\n14:                                               ; preds = %15\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  ret void\n\n15:                                               ; preds = %12, %10\n  %16 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  %17 = load i64, ptr %1, align 8, !tbaa !5\n  %18 = call i32 @lj_ctype_info(ptr noundef %0, i64 noundef %17, ptr noundef nonnull %4) #3\n  %19 = icmp eq i32 %2, 0\n  br i1 %19, label %29, label %20\n\n20:                                               ; preds = %15\n  %21 = load i64, ptr %4, align 8, !tbaa !11\n  %22 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !12\n  %23 = icmp eq i64 %21, %22\n  br i1 %23, label %27, label %24\n\n24:                                               ; preds = %20\n  %25 = getelementptr inbounds %struct.TYPE_10__, ptr %4, i64 0, i32 1\n  %26 = load i32, ptr %25, align 8, !tbaa !13\n  store i32 %26, ptr %1, align 8, !tbaa !5\n  br label %34\n\n27:                                               ; preds = %20\n  %28 = load i64, ptr %1, align 8, !tbaa !5\n  br label %30\n\n29:                                               ; preds = %15\n  %30 = call i32 @ctype_align(i32 noundef %18) #3\n  %31 = shl nuw i32 1, %30\n  %32 = getelementptr inbounds %struct.TYPE_10__, ptr %1, i64 0, i32 1\n  store i32 %31, ptr %32, align 8, !tbaa !13\n  br label %34\n\n33:                                               ; preds = %30\n  store i64 %31, ptr %1, align 8, !tbaa !5\n  br label %34\n\n34:                                               ; preds = %29, %33, %27\n  %35 = load i64, ptr @CTID_UINT32, align 8, !tbaa !12\n  store i64 %35, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #3\n  br label %14\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @ctype_align(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!6, !7, i64 0}\n!12 = !{!7, !7, i64 0}\n!13 = !{!6, !10, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/xLua/build/luajit-2.1.0b2/src/extr_lj_cparse.c_cp_expr_sizeof.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_14__ = type { i64, i32 }\n\n@CTSIZE_INVALID = dso_local local_unnamed_addr global i64 0, align 8\n@CTID_A_CCHAR = dso_local local_unnamed_addr global i64 0, align 8\n@LJ_ERR_FFI_INVSIZE = dso_local local_unnamed_addr global i32 0, align 4\n@CTID_UINT32 = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @cp_expr_sizeof], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @cp_expr_sizeof(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {\n  %4 = alloca i64, align 8\n  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #3\n  %5 = tail call i64 @cp_opt(ptr noundef %0, i8 noundef signext 40) #3\n  %6 = icmp eq i64 %5, 0\n  br i1 %6, label %16, label %7\n\n7:                                                ; preds = %3\n  %8 = tail call i64 @cp_istypedecl(ptr noundef %0) #3\n  %9 = icmp eq i64 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %7\n  %11 = tail call i64 @cp_decl_abstract(ptr noundef %0) #3\n  store i64 %11, ptr %1, align 8, !tbaa !5\n  br label %14\n\n12:                                               ; preds = %7\n  %13 = tail call i32 @cp_expr_comma(ptr noundef %0, ptr noundef %1) #3\n  br label %14\n\n14:                                               ; preds = %12, %10\n  %15 = tail call i32 @cp_check(ptr noundef %0, i8 noundef signext 41) #3\n  br label %18\n\n16:                                               ; preds = %3\n  %17 = tail call i32 @cp_expr_unary(ptr noundef %0, ptr noundef %1) #3\n  br label %18\n\n18:                                               ; preds = %16, %14\n  %19 = load i32, ptr %0, align 4, !tbaa !11\n  %20 = load i64, ptr %1, align 8, !tbaa !5\n  %21 = call i32 @lj_ctype_info(i32 noundef %19, i64 noundef %20, ptr noundef nonnull %4) #3\n  %22 = icmp eq i32 %2, 0\n  br i1 %22, label %37, label %23\n\n23:                                               ; preds = %18\n  %24 = load i64, ptr %4, align 8, !tbaa !13\n  %25 = load i64, ptr @CTSIZE_INVALID, align 8, !tbaa !13\n  %26 = icmp eq i64 %24, %25\n  br i1 %26, label %30, label %27\n\n27:                                               ; preds = %23\n  %28 = trunc i64 %24 to i32\n  %29 = getelementptr inbounds %struct.TYPE_14__, ptr %1, i64 0, i32 1\n  store i32 %28, ptr %29, align 8, !tbaa !14\n  br label %41\n\n30:                                               ; preds = %23\n  %31 = load i64, ptr %1, align 8, !tbaa !5\n  %32 = load i64, ptr @CTID_A_CCHAR, align 8, !tbaa !13\n  %33 = icmp eq i64 %31, %32\n  br i1 %33, label %41, label %34\n\n34:                                               ; preds = %30\n  %35 = load i32, ptr @LJ_ERR_FFI_INVSIZE, align 4, !tbaa !15\n  %36 = call i32 @cp_err(ptr noundef nonnull %0, i32 noundef %35) #3\n  br label %41\n\n37:                                               ; preds = %18\n  %38 = call i32 @ctype_align(i32 noundef %21) #3\n  %39 = shl nuw i32 1, %38\n  %40 = getelementptr inbounds %struct.TYPE_14__, ptr %1, i64 0, i32 1\n  store i32 %39, ptr %40, align 8, !tbaa !14\n  br label %41\n\n41:                                               ; preds = %27, %34, %30, %37\n  %42 = load i64, ptr @CTID_UINT32, align 8, !tbaa !13\n  store i64 %42, ptr %1, align 8, !tbaa !5\n  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #3\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i64 @cp_opt(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i64 @cp_istypedecl(ptr noundef) local_unnamed_addr #2\n\ndeclare i64 @cp_decl_abstract(ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_comma(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_check(ptr noundef, i8 noundef signext) local_unnamed_addr #2\n\ndeclare i32 @cp_expr_unary(ptr noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @lj_ctype_info(i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2\n\ndeclare i32 @cp_err(ptr noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @ctype_align(i32 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_14__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"int\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_15__\", !10, i64 0}\n!13 = !{!7, !7, i64 0}\n!14 = !{!6, !10, i64 8}\n!15 = !{!10, !10, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_pktsched_qfq.c_qfq_calc_index.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function qfq_calc_index\n\t.type\tqfq_calc_index,@function\nqfq_calc_index:                         # @qfq_calc_index\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r14d\n\tmovl\t%esi, %r15d\n\tmovq\t%rdi, %rbx\n\tmovl\t%edx, %ebp\n\timull\t%esi, %ebp\n\tmovzbl\tQFQ_MIN_SLOT_SHIFT(%rip), %ecx\n\tmovl\t%ebp, %eax\n\tsarl\t%cl, %eax\n\ttestl\t%eax, %eax\n\tje\t.LBB0_1\n# %bb.2:\n\tmovslq\t%eax, %rdi\n\tcallq\t__fls@PLT\n                                        # kill: def $eax killed $eax def $rax\n\tmovslq\t%ebp, %rdx\n\tmovl\t%eax, %ecx\n\taddl\tQFQ_MIN_SLOT_SHIFT(%rip), %ecx\n\tmovq\t$-1, %rsi\n                                        # kill: def $cl killed $cl killed $ecx\n\tshlq\t%cl, %rsi\n\txorl\t%ecx, %ecx\n\taddq\t%rdx, %rsi\n\tsete\t%cl\n\tnegl\t%ecx\n\taddl\t%ecx, %eax\n\tincl\t%eax\n\txorl\t%ebp, %ebp\n\ttestl\t%eax, %eax\n\tcmovgl\t%eax, %ebp\n\tcmpq\t$0, pktsched_verbose(%rip)\n\tje\t.LBB0_5\n.LBB0_4:\n\tmovl\tLOG_DEBUG(%rip), %r12d\n\tmovl\t4(%rbx), %edi\n\tcallq\tQFQIF_IFP@PLT\n\tmovl\t%eax, %edi\n\tcallq\tif_name@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t4(%rbx), %edi\n\tcallq\tqfq_style@PLT\n\tmovl\t%eax, %ecx\n\tmovl\t(%rbx), %r8d\n\tmovl\tQFQ_ONE_FP(%rip), %eax\n\tcltd\n\tidivl\t%r15d\n                                        # kill: def $eax killed $eax def $rax\n\tsubq\t$8, %rsp\n\t.cfi_adjust_cfa_offset 8\n\tmovl\t$.L.str, %esi\n\tmovl\t%r12d, %edi\n\tmovl\t%r13d, %edx\n\tmovl\t%ebp, %r9d\n\tpushq\t%rbp\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%r14\n\t.cfi_adjust_cfa_offset 8\n\tpushq\t%rax\n\t.cfi_adjust_cfa_offset 8\n\tcallq\tlog@PLT\n\taddq\t$32, %rsp\n\t.cfi_adjust_cfa_offset -32\n.LBB0_5:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_1:\n\t.cfi_def_cfa_offset 64\n\txorl\t%ebp, %ebp\n\tcmpq\t$0, pktsched_verbose(%rip)\n\tjne\t.LBB0_4\n\tjmp\t.LBB0_5\n.Lfunc_end0:\n\t.size\tqfq_calc_index, .Lfunc_end0-qfq_calc_index\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tQFQ_MIN_SLOT_SHIFT,@object      # @QFQ_MIN_SLOT_SHIFT\n\t.bss\n\t.globl\tQFQ_MIN_SLOT_SHIFT\n\t.p2align\t2\nQFQ_MIN_SLOT_SHIFT:\n\t.long\t0                               # 0x0\n\t.size\tQFQ_MIN_SLOT_SHIFT, 4\n\n\t.type\tpktsched_verbose,@object        # @pktsched_verbose\n\t.globl\tpktsched_verbose\n\t.p2align\t3\npktsched_verbose:\n\t.quad\t0                               # 0x0\n\t.size\tpktsched_verbose, 8\n\n\t.type\tLOG_DEBUG,@object               # @LOG_DEBUG\n\t.globl\tLOG_DEBUG\n\t.p2align\t2\nLOG_DEBUG:\n\t.long\t0                               # 0x0\n\t.size\tLOG_DEBUG, 4\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"%s: %s qid=%d grp=%d W=%u, L=%u, I=%d\\n\"\n\t.size\t.L.str, 39\n\n\t.type\tQFQ_ONE_FP,@object              # @QFQ_ONE_FP\n\t.bss\n\t.globl\tQFQ_ONE_FP\n\t.p2align\t2\nQFQ_ONE_FP:\n\t.long\t0                               # 0x0\n\t.size\tQFQ_ONE_FP, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32 }\n\n@QFQ_MIN_SLOT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@pktsched_verbose = dso_local local_unnamed_addr global i64 0, align 8\n@LOG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [39 x i8] c\"%s: %s qid=%d grp=%d W=%u, L=%u, I=%d\\0A\\00\", align 1\n@QFQ_ONE_FP = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qfq_calc_index], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qfq_calc_index(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = mul nsw i32 %2, %1\n  %5 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %6 = ashr i32 %4, %5\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %18, label %8\n\n8:                                                ; preds = %3\n  %9 = sext i32 %6 to i64\n  %10 = tail call i32 @__fls(i64 noundef %9) #2\n  %11 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %12 = add nsw i32 %10, %11\n  %13 = sext i32 %4 to i64\n  %14 = shl nsw i64 -1, %12\n  %15 = add nsw i64 %14, %13\n  %16 = icmp eq i64 %15, 0\n  %17 = sext i1 %16 to i32\n  br label %18\n\n18:                                               ; preds = %8, %3\n  %19 = phi i32 [ 0, %3 ], [ %17, %8 ]\n  %20 = load i64, ptr @pktsched_verbose, align 8, !tbaa !9\n  %21 = icmp eq i64 %20, 0\n  br i1 %21, label %31, label %22\n\n22:                                               ; preds = %18\n  %23 = load i32, ptr @LOG_DEBUG, align 4, !tbaa !5\n  %24 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %25 = load i32, ptr %24, align 4, !tbaa !11\n  %26 = tail call i32 @QFQIF_IFP(i32 noundef %25) #2\n  %27 = tail call i32 @if_name(i32 noundef %26) #2\n  %28 = load i32, ptr %24, align 4, !tbaa !11\n  %29 = tail call i32 @qfq_style(i32 noundef %28) #2\n  %30 = load i32, ptr %0, align 4, !tbaa !13\n  br label %31\n\n31:                                               ; preds = %22, %18\n  %32 = phi i32 [ %27, %22 ], [ %23, %18 ]\n  %33 = phi i32 [ %29, %22 ], [ %23, %18 ]\n  %34 = phi i32 [ %30, %22 ], [ %30, %18 ]\n  %35 = phi i32 [ %19, %22 ], [ 0, %18 ]\n  %36 = load i32, ptr @QFQ_ONE_FP, align 4, !tbaa !5\n  %37 = sdiv i32 %36, %1\n  %38 = tail call i32 @log(i32 noundef %32, ptr noundef nonnull @.str, i32 noundef %33, i32 noundef %35, i32 noundef %34, i32 noundef %35, i32 noundef %37) #2\n  ret i32 %35\n}\n\ndeclare i32 @__fls(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @log(i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @if_name(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @QFQIF_IFP(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qfq_style(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"TYPE_3__\", !6, i64 0, !6, i64 4}\n!13 = !{!12, !6, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32 }\n\n@QFQ_MIN_SLOT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@pktsched_verbose = dso_local local_unnamed_addr global i64 0, align 8\n@LOG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [39 x i8] c\"%s: %s qid=%d grp=%d W=%u, L=%u, I=%d\\0A\\00\", align 1\n@QFQ_ONE_FP = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qfq_calc_index], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qfq_calc_index(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = mul nsw i32 %2, %1\n  %5 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %6 = ashr i32 %4, %5\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %16, label %8\n\n8:                                                ; preds = %3\n  %9 = sext i32 %6 to i64\n  %10 = tail call i32 @__fls(i64 noundef %9) #2\n  %11 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %12 = add nsw i32 %10, %11\n  %13 = sext i32 %4 to i64\n  %14 = shl nsw i64 -1, %12\n  %15 = add nsw i64 %14, %13\n  br label %16\n\n16:                                               ; preds = %8, %3\n  %17 = phi i64 [ %15, %8 ], [ 0, %3 ]\n  %18 = phi i32 [ %10, %8 ], [ 0, %3 ]\n  %19 = load i64, ptr @pktsched_verbose, align 8, !tbaa !9\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %29, label %21\n\n21:                                               ; preds = %16\n  %22 = load i32, ptr @LOG_DEBUG, align 4, !tbaa !5\n  %23 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %24 = load i32, ptr %23, align 4, !tbaa !11\n  %25 = tail call i32 @QFQIF_IFP(i32 noundef %24) #2\n  %26 = tail call i32 @if_name(i32 noundef %25) #2\n  %27 = load i32, ptr %23, align 4, !tbaa !11\n  %28 = tail call i32 @qfq_style(i32 noundef %27) #2\n  br label %29\n\n29:                                               ; preds = %21, %16\n  %30 = phi i32 [ %22, %21 ], [ 0, %16 ]\n  %31 = phi i32 [ %26, %21 ], [ 0, %16 ]\n  %32 = phi i32 [ %28, %21 ], [ 0, %16 ]\n  %33 = phi i32 [ %18, %21 ], [ 0, %16 ]\n  %34 = phi i32 [ %17, %21 ], [ 0, %16 ]\n  %35 = load i32, ptr @QFQ_ONE_FP, align 4, !tbaa !5\n  %36 = sdiv i32 %35, %1\n  %37 = tail call i32 @log(i32 noundef %30, ptr noundef nonnull @.str, i32 noundef %31, i32 noundef %32, i32 noundef %3, i32 noundef %34, i32 noundef %36) #2\n  ret i32 %33\n}\n\ndeclare i32 @__fls(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @log(i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @if_name(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @QFQIF_IFP(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qfq_style(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"TYPE_3__\", !6, i64 0, !6, i64 4}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32 }\n\n@QFQ_MIN_SLOT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@pktsched_verbose = dso_local local_unnamed_addr global i64 0, align 8\n@LOG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [39 x i8] c\"%s: %s qid=%d grp=%d W=%u, L=%u, I=%d\\0A\\00\", align 1\n@QFQ_ONE_FP = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qfq_calc_index], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qfq_calc_index(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = mul nsw i32 %2, %1\n  %5 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %6 = ashr i32 %4, %5\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %18, label %8\n\n8:                                                ; preds = %3\n  %9 = sext i32 %6 to i64\n  %10 = tail call i32 @__fls(i64 noundef %9) #2\n  %11 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %12 = add nsw i32 %10, %11\n  %13 = sext i32 %4 to i64\n  %14 = shl nsw i64 -1, %12\n  %15 = add nsw i64 %14, %13\n  %16 = icmp eq i64 %15, 0\n  %17 = sext i1 %16 to i32\n  br label %18\n\n18:                                               ; preds = %8, %3\n  %19 = phi i32 [ 0, %3 ], [ %17, %8 ]\n  %20 = load i64, ptr @pktsched_verbose, align 8, !tbaa !9\n  %21 = icmp eq i64 %20, 0\n  br i1 %21, label %30, label %22\n\n22:                                               ; preds = %18\n  %23 = load i32, ptr @LOG_DEBUG, align 4, !tbaa !5\n  %24 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %25 = load i32, ptr %24, align 4, !tbaa !11\n  %26 = tail call i32 @QFQIF_IFP(i32 noundef %25) #2\n  %27 = tail call i32 @if_name(i32 noundef %26) #2\n  %28 = load i32, ptr %24, align 4, !tbaa !11\n  %29 = tail call i32 @qfq_style(i32 noundef %28) #2\n  br label %30\n\n30:                                               ; preds = %22, %18\n  %31 = phi i32 [ %27, %22 ], [ %23, %18 ]\n  %32 = phi i32 [ %29, %22 ], [ %23, %18 ]\n  %33 = phi i32 [ %19, %22 ], [ %19, %18 ]\n  %34 = load i32, ptr %0, align 4, !tbaa !13\n  %35 = load i32, ptr @QFQ_ONE_FP, align 4, !tbaa !5\n  %36 = sdiv i32 %35, %1\n  %37 = tail call i32 @log(i32 noundef %31, ptr noundef nonnull @.str, i32 noundef %33, i32 noundef %32, i32 noundef %34, i32 noundef %36, i32 noundef %2) #2\n  ret i32 %33\n}\n\ndeclare i32 @__fls(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @log(i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @if_name(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @QFQIF_IFP(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qfq_style(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"TYPE_3__\", !6, i64 0, !6, i64 4}\n!13 = !{!12, !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_3__ = type { i32, i32 }\n\n@QFQ_MIN_SLOT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@pktsched_verbose = dso_local local_unnamed_addr global i64 0, align 8\n@LOG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [39 x i8] c\"%s: %s qid=%d grp=%d W=%u, L=%u, I=%d\\0A\\00\", align 1\n@QFQ_ONE_FP = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qfq_calc_index], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qfq_calc_index(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = mul nsw i32 %2, %1\n  %5 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %6 = ashr i32 %4, %5\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %16, label %8\n\n8:                                                ; preds = %3\n  %9 = sext i32 %6 to i64\n  %10 = tail call i32 @__fls(i64 noundef %9) #2\n  %11 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %12 = add nsw i32 %10, %11\n  %13 = sext i32 %4 to i64\n  %14 = shl nsw i64 -1, %12\n  %15 = add nsw i64 %14, %13\n  br label %16\n\n16:                                               ; preds = %8, %3\n  %17 = phi i64 [ %15, %8 ], [ 0, %3 ]\n  %18 = phi i32 [ %10, %8 ], [ 0, %3 ]\n  %19 = load i64, ptr @pktsched_verbose, align 8, !tbaa !9\n  %20 = icmp eq i64 %19, 0\n  br i1 %20, label %29, label %21\n\n21:                                               ; preds = %16\n  %22 = load i32, ptr @LOG_DEBUG, align 4, !tbaa !5\n  %23 = getelementptr inbounds %struct.TYPE_3__, ptr %0, i64 0, i32 1\n  %24 = load i32, ptr %23, align 4, !tbaa !11\n  %25 = tail call i32 @QFQIF_IFP(i32 noundef %24) #2\n  %26 = tail call i32 @if_name(i32 noundef %25) #2\n  %27 = load i32, ptr %23, align 4, !tbaa !11\n  %28 = tail call i32 @qfq_style(i32 noundef %27) #2\n  br label %29\n\n29:                                               ; preds = %21, %16\n  %30 = phi i32 [ %22, %21 ], [ 0, %16 ]\n  %31 = phi i32 [ %26, %21 ], [ 0, %16 ]\n  %32 = phi i32 [ %28, %21 ], [ 0, %16 ]\n  %33 = phi i32 [ %18, %21 ], [ 0, %16 ]\n  %34 = phi i32 [ %17, %21 ], [ 0, %16 ]\n  %35 = load i32, ptr @QFQ_ONE_FP, align 4, !tbaa !5\n  %36 = sdiv i32 %35, %1\n  %37 = tail call i32 @log(i32 noundef %30, ptr noundef nonnull @.str, i32 noundef %31, i32 noundef %32, i32 noundef %3, i32 noundef %34, i32 noundef %36) #2\n  ret i32 %33\n}\n\ndeclare i32 @__fls(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @log(i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @if_name(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @QFQIF_IFP(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qfq_style(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"TYPE_3__\", !6, i64 0, !6, i64 4}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/darwin-xnu/bsd/net/pktsched/extr_pktsched_qfq.c_qfq_calc_index.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.qfq_class = type { i32, i32 }\n\n@QFQ_MIN_SLOT_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@pktsched_verbose = dso_local local_unnamed_addr global i64 0, align 8\n@LOG_DEBUG = dso_local local_unnamed_addr global i32 0, align 4\n@.str = private unnamed_addr constant [39 x i8] c\"%s: %s qid=%d grp=%d W=%u, L=%u, I=%d\\0A\\00\", align 1\n@QFQ_ONE_FP = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qfq_calc_index], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @qfq_calc_index(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {\n  %4 = mul nsw i32 %2, %1\n  %5 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %6 = ashr i32 %4, %5\n  %7 = icmp eq i32 %6, 0\n  br i1 %7, label %22, label %8\n\n8:                                                ; preds = %3\n  %9 = sext i32 %6 to i64\n  %10 = tail call i32 @__fls(i64 noundef %9) #3\n  %11 = add nsw i32 %10, 1\n  %12 = sext i32 %4 to i64\n  %13 = load i32, ptr @QFQ_MIN_SLOT_SHIFT, align 4, !tbaa !5\n  %14 = add i32 %13, %10\n  %15 = zext i32 %14 to i64\n  %16 = shl nsw i64 -1, %15\n  %17 = sub nsw i64 0, %12\n  %18 = icmp eq i64 %16, %17\n  %19 = sext i1 %18 to i32\n  %20 = add nsw i32 %11, %19\n  %21 = tail call i32 @llvm.smax.i32(i32 %20, i32 0)\n  br label %22\n\n22:                                               ; preds = %3, %8\n  %23 = phi i32 [ %21, %8 ], [ 0, %3 ]\n  %24 = load i64, ptr @pktsched_verbose, align 8, !tbaa !9\n  %25 = icmp eq i64 %24, 0\n  br i1 %25, label %38, label %26\n\n26:                                               ; preds = %22\n  %27 = load i32, ptr @LOG_DEBUG, align 4, !tbaa !5\n  %28 = getelementptr inbounds %struct.qfq_class, ptr %0, i64 0, i32 1\n  %29 = load i32, ptr %28, align 4, !tbaa !11\n  %30 = tail call i32 @QFQIF_IFP(i32 noundef %29) #3\n  %31 = tail call i32 @if_name(i32 noundef %30) #3\n  %32 = load i32, ptr %28, align 4, !tbaa !11\n  %33 = tail call i32 @qfq_style(i32 noundef %32) #3\n  %34 = load i32, ptr %0, align 4, !tbaa !13\n  %35 = load i32, ptr @QFQ_ONE_FP, align 4, !tbaa !5\n  %36 = sdiv i32 %35, %1\n  %37 = tail call i32 @log(i32 noundef %27, ptr noundef nonnull @.str, i32 noundef %31, i32 noundef %33, i32 noundef %34, i32 noundef %23, i32 noundef %36, i32 noundef %2, i32 noundef %23) #3\n  br label %38\n\n38:                                               ; preds = %26, %22\n  ret i32 %23\n}\n\ndeclare i32 @__fls(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @log(i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @if_name(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @QFQIF_IFP(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @qfq_style(i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smax.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n!11 = !{!12, !6, i64 4}\n!12 = !{!\"qfq_class\", !6, i64 0, !6, i64 4}\n!13 = !{!12, !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_lcode.c_luaK_nil.ll\"\n\t.globl\tluaK_nil                        # -- Begin function luaK_nil\n\t.p2align\t4, 0x90\n\t.type\tluaK_nil,@function\nluaK_nil:                               # @luaK_nil\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edx, %r15d\n\tmovl\t%esi, %r14d\n\tmovq\t%rdi, %rbx\n\tmovslq\t(%rdi), %rbp\n\tcmpl\t4(%rdi), %ebp\n\tjle\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rbx), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%rax, 16(%rsp)                  # 8-byte Spill\n\tmovl\t-4(%rax,%rbp,4), %edi\n\tcallq\tGET_OPCODE@PLT\n\tcmpq\tOP_LOADNIL(%rip), %rax\n\tjne\t.LBB0_7\n# %bb.2:\n\tleal\t(%r15,%r14), %eax\n\tmovl\t%eax, 12(%rsp)                  # 4-byte Spill\n\tmovq\t16(%rsp), %r12                  # 8-byte Reload\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_A@PLT\n\tmovl\t%eax, %r13d\n\tmovl\t-4(%r12,%rbp,4), %edi\n\tcallq\tGETARG_B@PLT\n\tmovl\t12(%rsp), %ecx                  # 4-byte Reload\n\tmovl\t%eax, %r12d\n\tcmpl\t%r14d, %r13d\n\tjg\t.LBB0_4\n# %bb.3:\n\tleal\t(%r12,%r13), %eax\n\tincl\t%eax\n\tcmpl\t%r14d, %eax\n\tjge\t.LBB0_6\n.LBB0_4:\n\tcmpl\t%r14d, %r13d\n\tjl\t.LBB0_7\n# %bb.5:\n\tcmpl\t%ecx, %r13d\n\tjg\t.LBB0_7\n.LBB0_6:\n\tleal\t(%r15,%r14), %eax\n\tdecl\t%eax\n\taddl\t%r13d, %r12d\n\tcmpl\t%r14d, %r13d\n\tcmovll\t%r13d, %r14d\n\tcmpl\t%ecx, %r12d\n\tcmovll\t%eax, %r12d\n\tmovq\t16(%rsp), %rbx                  # 8-byte Reload\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tmovl\t%r14d, %esi\n\tcallq\tSETARG_A@PLT\n\tmovl\t-4(%rbx,%rbp,4), %edi\n\tsubl\t%r14d, %r12d\n\tmovl\t%r12d, %esi\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tSETARG_B@PLT                    # TAILCALL\n.LBB0_7:\n\t.cfi_def_cfa_offset 80\n\tmovq\tOP_LOADNIL(%rip), %rsi\n\tdecl\t%r15d\n\tmovq\t%rbx, %rdi\n\tmovl\t%r14d, %edx\n\tmovl\t%r15d, %ecx\n\txorl\t%r8d, %r8d\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tluaK_codeABC@PLT                # TAILCALL\n.Lfunc_end0:\n\t.size\tluaK_nil, .Lfunc_end0-luaK_nil\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tOP_LOADNIL,@object              # @OP_LOADNIL\n\t.bss\n\t.globl\tOP_LOADNIL\n\t.p2align\t3\nOP_LOADNIL:\n\t.quad\t0                               # 0x0\n\t.size\tOP_LOADNIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %39\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %39\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %33, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %33, label %30\n\n30:                                               ; preds = %27\n  %31 = icmp sgt i32 %23, %1\n  %32 = icmp sgt i32 %23, %2\n  br i1 %32, label %39, label %33\n\n33:                                               ; preds = %30, %27, %19\n  %34 = phi i32 [ %23, %19 ], [ %23, %27 ], [ %23, %30 ]\n  %35 = phi i32 [ %20, %19 ], [ %21, %27 ], [ %21, %30 ]\n  %36 = icmp slt i32 %34, %1\n  br i1 %36, label %39, label %37\n\n37:                                               ; preds = %33\n  %38 = icmp sgt i32 %34, %2\n  br i1 %38, label %39, label %42\n\n39:                                               ; preds = %33, %37, %30, %8, %3\n  %40 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %41 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %40, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %51\n\n42:                                               ; preds = %37\n  %43 = load i32, ptr %14, align 4, !tbaa !15\n  %44 = tail call i32 @SETARG_A(i32 noundef %43, i32 noundef %1) #2\n  %45 = load i32, ptr %14, align 4, !tbaa !15\n  %46 = sub nsw i32 %25, %1\n  %47 = tail call i32 @SETARG_B(i32 noundef %45, i32 noundef %46) #2\n  br label %51\n\n51:                                               ; preds = %42, %39\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %37\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %37\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %31, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = add nsw i32 %27, %20\n  %29 = icmp slt i32 %28, %1\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %26\n  br label %31\n\n31:                                               ; preds = %30, %26, %18\n  %32 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %20, %30 ]\n  %33 = phi i32 [ %24, %18 ], [ %24, %26 ], [ %20, %30 ]\n  %34 = icmp slt i32 %22, %1\n  %35 = icmp sgt i32 %22, %2\n  %36 = select i1 %34, i1 true, i1 %35\n  br i1 %36, label %37, label %39\n\n37:                                               ; preds = %31, %8, %3\n  %38 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %45\n\n39:                                               ; preds = %31\n  %40 = load i32, ptr %13, align 4, !tbaa !15\n  %41 = tail call i32 @llvm.smin.i32(i32 %22, i32 %1)\n  %42 = tail call i32 @llvm.smin.i32(i32 %33, i32 %20)\n  %43 = tail call i32 @SETARG_A(i32 noundef %40, i32 noundef %41) #2\n  %44 = tail call i32 @SETARG_B(i32 noundef %40, i32 noundef %42) #2\n  br label %47\n\n45:                                               ; preds = %37, %47\n  %46 = phi i64 [ %48, %47 ], [ %38, %37 ]\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %46, i32 noundef %1, i32 noundef %2, i32 noundef 0) #2\n  br label %49\n\n48:                                               ; preds = %45\n  ret void\n\n49:                                               ; preds = %45, %39\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %40\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = sext i32 %4 to i64\n  %13 = getelementptr inbounds i32, ptr %11, i64 %12\n  %14 = load i32, ptr %13, align 4, !tbaa !15\n  %15 = tail call i64 @GET_OPCODE(i32 noundef %14) #2\n  %16 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %17 = icmp eq i64 %15, %16\n  br i1 %17, label %18, label %40\n\n18:                                               ; preds = %8\n  %19 = add nsw i32 %2, %1\n  %20 = add nsw i32 %19, -1\n  %21 = load i32, ptr %13, align 4, !tbaa !15\n  %22 = tail call i32 @GETARG_A(i32 noundef %21) #2\n  %23 = load i32, ptr %13, align 4, !tbaa !15\n  %24 = tail call i32 @GETARG_B(i32 noundef %23) #2\n  %25 = icmp sgt i32 %22, %1\n  br i1 %25, label %33, label %26\n\n26:                                               ; preds = %18\n  %27 = add nsw i32 %22, 1\n  %28 = icmp slt i32 %27, %19\n  br i1 %28, label %33, label %29\n\n29:                                               ; preds = %26\n  %30 = icmp slt i32 %22, %1\n  %31 = icmp sgt i32 %22, %2\n  %32 = select i1 %30, i1 true, i1 %31\n  br i1 %32, label %40, label %33\n\n33:                                               ; preds = %29, %26, %18\n  %34 = phi i32 [ %22, %18 ], [ %22, %26 ], [ %22, %29 ]\n  %35 = phi i32 [ %20, %18 ], [ %20, %26 ], [ %20, %29 ]\n  %36 = phi i32 [ %19, %18 ], [ %19, %26 ], [ %19, %29 ]\n  %37 = icmp slt i32 %34, %1\n  br i1 %37, label %40, label %38\n\n38:                                               ; preds = %33\n  %39 = icmp sgt i32 %34, %2\n  br i1 %39, label %40, label %43\n\n40:                                               ; preds = %33, %38, %29, %8, %3\n  %41 = phi i32 [ %2, %3 ], [ %2, %8 ], [ %2, %29 ], [ %2, %38 ], [ %2, %33 ]\n  %42 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  br label %46\n\n43:                                               ; preds = %38\n  %44 = load i32, ptr %13, align 4, !tbaa !15\n  %45 = tail call i32 @SETARG_A(i32 noundef %44, i32 noundef %1) #2\n  br label %46\n\n46:                                               ; preds = %43, %40\n  %47 = phi i64 [ %42, %40 ], [ %45, %43 ]\n  %48 = phi i32 [ %41, %40 ], [ %41, %43 ]\n  %49 = load i32, ptr %13, align 4, !tbaa !15\n  %50 = sub nsw i32 %48, %1\n  %51 = tail call i32 @SETARG_B(i32 noundef %49, i32 noundef %50) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = load i32, ptr %0, align 8, !tbaa !5\n  %5 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 1\n  %6 = load i32, ptr %5, align 4, !tbaa !11\n  %7 = icmp sgt i32 %4, %6\n  br i1 %7, label %8, label %43\n\n8:                                                ; preds = %3\n  %9 = getelementptr inbounds %struct.TYPE_10__, ptr %0, i64 0, i32 2\n  %10 = load ptr, ptr %9, align 8, !tbaa !12\n  %11 = load ptr, ptr %10, align 8, !tbaa !13\n  %12 = add nsw i32 %4, -1\n  %13 = sext i32 %12 to i64\n  %14 = getelementptr inbounds i32, ptr %11, i64 %13\n  %15 = load i32, ptr %14, align 4, !tbaa !15\n  %16 = tail call i64 @GET_OPCODE(i32 noundef %15) #2\n  %17 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %19, label %43\n\n19:                                               ; preds = %8\n  %20 = add nsw i32 %2, %1\n  %21 = add nsw i32 %20, -1\n  %22 = load i32, ptr %14, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #2\n  %24 = load i32, ptr %14, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #2\n  %26 = icmp sgt i32 %23, %1\n  br i1 %26, label %31, label %27\n\n27:                                               ; preds = %19\n  %28 = add nsw i32 %23, 1\n  %29 = icmp slt i32 %28, %20\n  br i1 %29, label %31, label %30\n\n30:                                               ; preds = %27\n  br label %43\n\n31:                                               ; preds = %27, %19\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %2\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %43, label %35\n\n35:                                               ; preds = %31\n  %36 = add nsw i32 %23, %25\n  %37 = icmp slt i32 %23, %1\n  %38 = select i1 %37, i32 %23, i32 %1\n  %39 = icmp slt i32 %36, %2\n  %40 = select i1 %39, i32 %21, i32 %20\n  %41 = load i32, ptr %14, align 4, !tbaa !15\n  %42 = tail call i32 @SETARG_A(i32 noundef %41, i32 noundef %38) #2\n  br label %43\n\n43:                                               ; preds = %35, %31, %8, %3, %30\n  %44 = phi i32 [ %2, %30 ], [ %2, %3 ], [ %1, %8 ], [ %20, %31 ], [ %20, %35 ]\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %4, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %44, i32 noundef 0) #2\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_10__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_9__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/xLua/WebGLPlugins/extr_lcode.c_luaK_nil.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_6__ = type { i32, i32, ptr }\n\n@OP_LOADNIL = dso_local local_unnamed_addr global i64 0, align 8\n\n; Function Attrs: nounwind uwtable\ndefine dso_local void @luaK_nil(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {\n  %4 = add nsw i32 %2, %1\n  %5 = add nsw i32 %4, -1\n  %6 = load i32, ptr %0, align 8, !tbaa !5\n  %7 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 1\n  %8 = load i32, ptr %7, align 4, !tbaa !11\n  %9 = icmp sgt i32 %6, %8\n  br i1 %9, label %10, label %44\n\n10:                                               ; preds = %3\n  %11 = getelementptr inbounds %struct.TYPE_6__, ptr %0, i64 0, i32 2\n  %12 = load ptr, ptr %11, align 8, !tbaa !12\n  %13 = load ptr, ptr %12, align 8, !tbaa !13\n  %14 = add nsw i32 %6, -1\n  %15 = sext i32 %14 to i64\n  %16 = getelementptr inbounds i32, ptr %13, i64 %15\n  %17 = load i32, ptr %16, align 4, !tbaa !15\n  %18 = tail call i64 @GET_OPCODE(i32 noundef %17) #3\n  %19 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %20 = icmp eq i64 %18, %19\n  br i1 %20, label %21, label %44\n\n21:                                               ; preds = %10\n  %22 = load i32, ptr %16, align 4, !tbaa !15\n  %23 = tail call i32 @GETARG_A(i32 noundef %22) #3\n  %24 = load i32, ptr %16, align 4, !tbaa !15\n  %25 = tail call i32 @GETARG_B(i32 noundef %24) #3\n  %26 = add nsw i32 %25, %23\n  %27 = icmp sgt i32 %23, %1\n  %28 = add nsw i32 %26, 1\n  %29 = icmp slt i32 %28, %1\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %31, label %35\n\n31:                                               ; preds = %21\n  %32 = icmp slt i32 %23, %1\n  %33 = icmp sgt i32 %23, %4\n  %34 = select i1 %32, i1 true, i1 %33\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %21, %31\n  %36 = tail call i32 @llvm.smin.i32(i32 %23, i32 %1)\n  %37 = icmp slt i32 %26, %4\n  %38 = select i1 %37, i32 %5, i32 %26\n  %39 = load i32, ptr %16, align 4, !tbaa !15\n  %40 = tail call i32 @SETARG_A(i32 noundef %39, i32 noundef %36) #3\n  %41 = load i32, ptr %16, align 4, !tbaa !15\n  %42 = sub nsw i32 %38, %36\n  %43 = tail call i32 @SETARG_B(i32 noundef %41, i32 noundef %42) #3\n  br label %48\n\n44:                                               ; preds = %31, %10, %3\n  %45 = load i64, ptr @OP_LOADNIL, align 8, !tbaa !16\n  %46 = add nsw i32 %2, -1\n  %47 = tail call i32 @luaK_codeABC(ptr noundef nonnull %0, i64 noundef %45, i32 noundef %1, i32 noundef %46, i32 noundef 0) #3\n  br label %48\n\n48:                                               ; preds = %35, %44\n  ret void\n}\n\ndeclare i64 @GET_OPCODE(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_A(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @GETARG_B(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_A(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @SETARG_B(i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @luaK_codeABC(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_6__\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !7, i64 4}\n!12 = !{!6, !10, i64 8}\n!13 = !{!14, !10, i64 0}\n!14 = !{!\"TYPE_5__\", !10, i64 0}\n!15 = !{!7, !7, i64 0}\n!16 = !{!17, !17, i64 0}\n!17 = !{!\"long\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_clock.c_vlc_clock_main_New.ll\"\n\t.section\t.rodata.cst16,\"aM\",@progbits,16\n\t.p2align\t4                               # -- Begin function vlc_clock_main_New\n.LCPI0_0:\n\t.long\t0x3f800000                      # float 1\n\t.long\t0x3f800000                      # float 1\n\t.zero\t4\n\t.zero\t4\n\t.text\n\t.globl\tvlc_clock_main_New\n\t.p2align\t4, 0x90\n\t.type\tvlc_clock_main_New,@function\nvlc_clock_main_New:                     # @vlc_clock_main_New\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbx, -16\n\tmovl\t$104, %edi\n\tcallq\tmalloc@PLT\n\tmovq\t%rax, %rbx\n\ttestq\t%rax, %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tleaq\t100(%rbx), %rdi\n\tcallq\tvlc_mutex_init@PLT\n\tleaq\t96(%rbx), %rdi\n\tcallq\tvlc_cond_init@PLT\n\tmovq\t$0, 88(%rbx)\n\tmovl\t$1, (%rbx)\n\tmovsd\t.LCPI0_0(%rip), %xmm0           # xmm0 = mem[0],zero\n\tmovsd\t%xmm0, 4(%rbx)\n\tmovq\tVLC_TICK_INVALID(%rip), %rdi\n\tmovq\t%rdi, 80(%rbx)\n\tmovq\t$0, 72(%rbx)\n\tmovq\t%rdi, %rsi\n\tcallq\tclock_point_Create@PLT\n\tmovq\t%rax, 64(%rbx)\n\tmovl\tUINT_MAX(%rip), %eax\n\tmovl\t%eax, 56(%rbx)\n\tmovq\tVLC_TICK_INVALID(%rip), %rdi\n\tmovq\t%rdi, %rsi\n\tcallq\tclock_point_Create@PLT\n\tmovq\t%rax, 40(%rbx)\n\tmovq\t%rax, 48(%rbx)\n\tmovq\tVLC_TICK_INVALID(%rip), %rax\n\tmovq\t%rax, 32(%rbx)\n\tmovl\tDEFAULT_PTS_DELAY(%rip), %eax\n\tmovl\t%eax, 24(%rbx)\n\tmovl\tAOUT_MAX_PTS_ADVANCE(%rip), %eax\n\taddl\t%eax, %eax\n\tmovl\t%eax, 12(%rbx)\n\tmovl\t$0, 16(%rbx)\n\tmovq\t%rbx, %rdi\n\taddq\t$20, %rdi\n\tmovl\t$10, %esi\n\tcallq\tAvgInit@PLT\n.LBB0_2:\n\tmovq\t%rbx, %rax\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tvlc_clock_main_New, .Lfunc_end0-vlc_clock_main_New\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tVLC_TICK_INVALID,@object        # @VLC_TICK_INVALID\n\t.bss\n\t.globl\tVLC_TICK_INVALID\n\t.p2align\t3\nVLC_TICK_INVALID:\n\t.quad\t0\n\t.size\tVLC_TICK_INVALID, 8\n\n\t.type\tUINT_MAX,@object                # @UINT_MAX\n\t.globl\tUINT_MAX\n\t.p2align\t2\nUINT_MAX:\n\t.long\t0                               # 0x0\n\t.size\tUINT_MAX, 4\n\n\t.type\tDEFAULT_PTS_DELAY,@object       # @DEFAULT_PTS_DELAY\n\t.globl\tDEFAULT_PTS_DELAY\n\t.p2align\t2\nDEFAULT_PTS_DELAY:\n\t.long\t0                               # 0x0\n\t.size\tDEFAULT_PTS_DELAY, 4\n\n\t.type\tAOUT_MAX_PTS_ADVANCE,@object    # @AOUT_MAX_PTS_ADVANCE\n\t.globl\tAOUT_MAX_PTS_ADVANCE\n\t.p2align\t2\nAOUT_MAX_PTS_ADVANCE:\n\t.long\t0                               # 0x0\n\t.size\tAOUT_MAX_PTS_ADVANCE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/vlc/src/clock/extr_clock.c_vlc_clock_main_New.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_4__ = type { i32, float, float, i32, i32, i32, i32, ptr, ptr, ptr, i32, ptr, i64, ptr, ptr, i32, i32 }\n\n@VLC_TICK_INVALID = dso_local local_unnamed_addr global ptr null, align 8\n@UINT_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@DEFAULT_PTS_DELAY = dso_local local_unnamed_addr global i32 0, align 4\n@AOUT_MAX_PTS_ADVANCE = dso_local local_unnamed_addr global i32 0, align 4\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @vlc_clock_main_New() local_unnamed_addr #0 {\n  %1 = tail call ptr @malloc(i32 noundef 104) #2\n  %2 = icmp eq ptr %1, null\n  br i1 %2, label %31, label %3\n\n3:                                                ; preds = %0\n  %4 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 16\n  %5 = tail call i32 @vlc_mutex_init(ptr noundef nonnull %4) #2\n  %6 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 15\n  %7 = tail call i32 @vlc_cond_init(ptr noundef nonnull %6) #2\n  %8 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 14\n  store ptr null, ptr %8, align 8, !tbaa !5\n  store i32 1, ptr %1, align 8, !tbaa !13\n  %9 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 1\n  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, ptr %9, align 4, !tbaa !14\n  %10 = load ptr, ptr @VLC_TICK_INVALID, align 8, !tbaa !15\n  %11 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 13\n  store ptr %10, ptr %11, align 8, !tbaa !16\n  %12 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 12\n  store i64 0, ptr %12, align 8, !tbaa !17\n  %13 = tail call ptr @clock_point_Create(ptr noundef %10, ptr noundef %10) #2\n  %14 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 11\n  store ptr %13, ptr %14, align 8, !tbaa !18\n  %15 = load i32, ptr @UINT_MAX, align 4, !tbaa !19\n  %16 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 10\n  store i32 %15, ptr %16, align 8, !tbaa !20\n  %17 = load ptr, ptr @VLC_TICK_INVALID, align 8, !tbaa !15\n  %18 = tail call ptr @clock_point_Create(ptr noundef %17, ptr noundef %17) #2\n  %19 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 8\n  store ptr %18, ptr %19, align 8, !tbaa !21\n  %20 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 9\n  store ptr %18, ptr %20, align 8, !tbaa !22\n  %21 = load ptr, ptr @VLC_TICK_INVALID, align 8, !tbaa !15\n  %22 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 7\n  store ptr %21, ptr %22, align 8, !tbaa !23\n  %23 = load i32, ptr @DEFAULT_PTS_DELAY, align 4, !tbaa !19\n  %24 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 6\n  store i32 %23, ptr %24, align 8, !tbaa !24\n  %25 = load i32, ptr @AOUT_MAX_PTS_ADVANCE, align 4, !tbaa !19\n  %26 = shl nsw i32 %25, 1\n  %27 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 3\n  store i32 %26, ptr %27, align 4, !tbaa !25\n  %28 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 4\n  store i32 0, ptr %28, align 8, !tbaa !26\n  %29 = getelementptr inbounds %struct.TYPE_4__, ptr %1, i64 0, i32 5\n  %30 = tail call i32 @AvgInit(ptr noundef nonnull %29, i32 noundef 10) #2\n  br label %31\n\n31:                                               ; preds = %0, %3\n  ret ptr %1\n}\n\ndeclare ptr @malloc(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @vlc_mutex_init(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @vlc_cond_init(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @clock_point_Create(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @AvgInit(ptr noundef, i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !11, i64 88}\n!6 = !{!\"TYPE_4__\", !7, i64 0, !10, i64 4, !10, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !7, i64 56, !11, i64 64, !12, i64 72, !11, i64 80, !11, i64 88, !7, i64 96, !7, i64 100}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"float\", !8, i64 0}\n!11 = !{!\"any pointer\", !8, i64 0}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n!15 = !{!11, !11, i64 0}\n!16 = !{!6, !11, i64 80}\n!17 = !{!6, !12, i64 72}\n!18 = !{!6, !11, i64 64}\n!19 = !{!7, !7, i64 0}\n!20 = !{!6, !7, i64 56}\n!21 = !{!6, !11, i64 40}\n!22 = !{!6, !11, i64 48}\n!23 = !{!6, !11, i64 32}\n!24 = !{!6, !7, i64 24}\n!25 = !{!6, !7, i64 12}\n!26 = !{!6, !7, i64 16}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_qcom_geni_serial.c_qcom_geni_serial_start_rx.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function qcom_geni_serial_start_rx\n\t.type\tqcom_geni_serial_start_rx,@function\nqcom_geni_serial_start_rx:              # @qcom_geni_serial_start_rx\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %r14, -16\n\tmovq\t%rdi, %rbx\n\tmovq\t%rdi, %rsi\n\tcallq\tto_dev_port@PLT\n\tmovq\t%rax, %r14\n\tmovq\tSE_GENI_STATUS(%rip), %rdi\n\taddq\t(%rbx), %rdi\n\tcallq\treadl@PLT\n\ttestl\t%eax, S_GENI_CMD_ACTIVE(%rip)\n\tje\t.LBB0_2\n# %bb.1:\n\tmovq\t%rbx, %rdi\n\tcallq\tqcom_geni_serial_stop_rx@PLT\n.LBB0_2:\n\tmovl\tUART_START_READ(%rip), %esi\n\tmovq\t%r14, %rdi\n\txorl\t%edx, %edx\n\tcallq\tgeni_se_setup_s_cmd@PLT\n\tmovq\tSE_GENI_S_IRQ_EN(%rip), %rdi\n\taddq\t(%rbx), %rdi\n\tcallq\treadl@PLT\n\torl\tS_RX_FIFO_WATERMARK_EN(%rip), %eax\n\torl\tS_RX_FIFO_LAST_EN(%rip), %eax\n\tmovq\tSE_GENI_S_IRQ_EN(%rip), %rsi\n\taddq\t(%rbx), %rsi\n\tmovl\t%eax, %edi\n\tcallq\twritel@PLT\n\tmovq\tSE_GENI_M_IRQ_EN(%rip), %rdi\n\taddq\t(%rbx), %rdi\n\tcallq\treadl@PLT\n\torl\tM_RX_FIFO_WATERMARK_EN(%rip), %eax\n\torl\tM_RX_FIFO_LAST_EN(%rip), %eax\n\tmovq\tSE_GENI_M_IRQ_EN(%rip), %rsi\n\taddq\t(%rbx), %rsi\n\tmovl\t%eax, %edi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 8\n\tjmp\twritel@PLT                      # TAILCALL\n.Lfunc_end0:\n\t.size\tqcom_geni_serial_start_rx, .Lfunc_end0-qcom_geni_serial_start_rx\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tSE_GENI_STATUS,@object          # @SE_GENI_STATUS\n\t.bss\n\t.globl\tSE_GENI_STATUS\n\t.p2align\t3\nSE_GENI_STATUS:\n\t.quad\t0                               # 0x0\n\t.size\tSE_GENI_STATUS, 8\n\n\t.type\tS_GENI_CMD_ACTIVE,@object       # @S_GENI_CMD_ACTIVE\n\t.globl\tS_GENI_CMD_ACTIVE\n\t.p2align\t2\nS_GENI_CMD_ACTIVE:\n\t.long\t0                               # 0x0\n\t.size\tS_GENI_CMD_ACTIVE, 4\n\n\t.type\tUART_START_READ,@object         # @UART_START_READ\n\t.globl\tUART_START_READ\n\t.p2align\t2\nUART_START_READ:\n\t.long\t0                               # 0x0\n\t.size\tUART_START_READ, 4\n\n\t.type\tSE_GENI_S_IRQ_EN,@object        # @SE_GENI_S_IRQ_EN\n\t.globl\tSE_GENI_S_IRQ_EN\n\t.p2align\t3\nSE_GENI_S_IRQ_EN:\n\t.quad\t0                               # 0x0\n\t.size\tSE_GENI_S_IRQ_EN, 8\n\n\t.type\tS_RX_FIFO_WATERMARK_EN,@object  # @S_RX_FIFO_WATERMARK_EN\n\t.globl\tS_RX_FIFO_WATERMARK_EN\n\t.p2align\t2\nS_RX_FIFO_WATERMARK_EN:\n\t.long\t0                               # 0x0\n\t.size\tS_RX_FIFO_WATERMARK_EN, 4\n\n\t.type\tS_RX_FIFO_LAST_EN,@object       # @S_RX_FIFO_LAST_EN\n\t.globl\tS_RX_FIFO_LAST_EN\n\t.p2align\t2\nS_RX_FIFO_LAST_EN:\n\t.long\t0                               # 0x0\n\t.size\tS_RX_FIFO_LAST_EN, 4\n\n\t.type\tSE_GENI_M_IRQ_EN,@object        # @SE_GENI_M_IRQ_EN\n\t.globl\tSE_GENI_M_IRQ_EN\n\t.p2align\t3\nSE_GENI_M_IRQ_EN:\n\t.quad\t0                               # 0x0\n\t.size\tSE_GENI_M_IRQ_EN, 8\n\n\t.type\tM_RX_FIFO_WATERMARK_EN,@object  # @M_RX_FIFO_WATERMARK_EN\n\t.globl\tM_RX_FIFO_WATERMARK_EN\n\t.p2align\t2\nM_RX_FIFO_WATERMARK_EN:\n\t.long\t0                               # 0x0\n\t.size\tM_RX_FIFO_WATERMARK_EN, 4\n\n\t.type\tM_RX_FIFO_LAST_EN,@object       # @M_RX_FIFO_LAST_EN\n\t.globl\tM_RX_FIFO_LAST_EN\n\t.p2align\t2\nM_RX_FIFO_LAST_EN:\n\t.long\t0                               # 0x0\n\t.size\tM_RX_FIFO_LAST_EN, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SE_GENI_STATUS = dso_local local_unnamed_addr global i64 0, align 8\n@S_GENI_CMD_ACTIVE = dso_local local_unnamed_addr global i32 0, align 4\n@UART_START_READ = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_S_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@S_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@S_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_M_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@M_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@M_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qcom_geni_serial_start_rx], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qcom_geni_serial_start_rx(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_dev_port(ptr noundef %0, ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @SE_GENI_STATUS, align 8, !tbaa !10\n  %5 = add nsw i64 %4, %3\n  %6 = tail call i32 @readl(i64 noundef %5) #2\n  %7 = load i32, ptr @S_GENI_CMD_ACTIVE, align 4, !tbaa !11\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %1\n  %11 = tail call i32 @qcom_geni_serial_stop_rx(ptr noundef nonnull %0) #2\n  br label %12\n\n12:                                               ; preds = %10, %1\n  %13 = load i32, ptr @UART_START_READ, align 4, !tbaa !11\n  %14 = tail call i32 @geni_se_setup_s_cmd(ptr noundef %2, i32 noundef %13, i32 noundef 0) #2\n  %15 = load i64, ptr %0, align 8, !tbaa !5\n  %16 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %17 = add nsw i64 %16, %15\n  %18 = tail call i32 @readl(i64 noundef %17) #2\n  %19 = load i32, ptr @S_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %20 = load i32, ptr @S_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %21 = or i32 %19, %18\n  %22 = or i32 %21, %20\n  %23 = load i64, ptr %0, align 8, !tbaa !5\n  %24 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %25 = add nsw i64 %24, %23\n  %26 = tail call i32 @writel(i32 noundef %22, i64 noundef %25) #2\n  %27 = load i64, ptr %0, align 8, !tbaa !5\n  %28 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %29 = add nsw i64 %28, %27\n  %30 = tail call i32 @readl(i64 noundef %29) #2\n  %31 = load i32, ptr @M_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %32 = load i32, ptr @M_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %33 = or i32 %31, %30\n  %34 = or i32 %33, %32\n  %35 = load i64, ptr %0, align 8, !tbaa !5\n  %36 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %37 = add nsw i64 %36, %35\n  %38 = tail call i32 @writel(i32 noundef %34, i64 noundef %37) #2\n  ret void\n}\n\ndeclare ptr @to_dev_port(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @readl(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @qcom_geni_serial_stop_rx(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @geni_se_setup_s_cmd(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @writel(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"uart_port\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SE_GENI_STATUS = dso_local local_unnamed_addr global i64 0, align 8\n@S_GENI_CMD_ACTIVE = dso_local local_unnamed_addr global i32 0, align 4\n@UART_START_READ = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_S_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@S_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@S_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_M_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@M_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@M_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qcom_geni_serial_start_rx], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qcom_geni_serial_start_rx(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_dev_port(ptr noundef %0, ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @SE_GENI_STATUS, align 8, !tbaa !10\n  %5 = add nsw i64 %4, %3\n  %6 = tail call i32 @readl(i64 noundef %5) #2\n  %7 = load i32, ptr @S_GENI_CMD_ACTIVE, align 4, !tbaa !11\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %1\n  %11 = tail call i32 @qcom_geni_serial_stop_rx(ptr noundef nonnull %0) #2\n  br label %12\n\n12:                                               ; preds = %10, %1\n  %13 = load i32, ptr @UART_START_READ, align 4, !tbaa !11\n  %14 = tail call i32 @geni_se_setup_s_cmd(ptr noundef %2, i32 noundef %13, i32 noundef 0) #2\n  %15 = load i64, ptr %0, align 8, !tbaa !5\n  %16 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %17 = add nsw i64 %16, %15\n  %18 = tail call i32 @readl(i64 noundef %17) #2\n  %19 = load i32, ptr @S_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %20 = load i32, ptr @S_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %21 = or i32 %19, %18\n  %22 = or i32 %21, %20\n  %23 = load i64, ptr %0, align 8, !tbaa !5\n  %24 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %25 = add nsw i64 %24, %23\n  %26 = tail call i32 @writel(i32 noundef %22, i64 noundef %25) #2\n  %27 = load i64, ptr %0, align 8, !tbaa !5\n  %28 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %29 = add nsw i64 %28, %27\n  %30 = tail call i32 @readl(i64 noundef %29) #2\n  %31 = load i32, ptr @M_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %32 = load i32, ptr @M_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %33 = or i32 %31, %30\n  %34 = or i32 %33, %32\n  %35 = load i64, ptr %0, align 8, !tbaa !5\n  %36 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %37 = add nsw i64 %36, %35\n  %38 = tail call i32 @writel(i32 noundef %34, i64 noundef %37) #2\n  ret void\n}\n\ndeclare ptr @to_dev_port(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @readl(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @qcom_geni_serial_stop_rx(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @geni_se_setup_s_cmd(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @writel(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"uart_port\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SE_GENI_STATUS = dso_local local_unnamed_addr global i64 0, align 8\n@S_GENI_CMD_ACTIVE = dso_local local_unnamed_addr global i32 0, align 4\n@UART_START_READ = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_S_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@S_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@S_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_M_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@M_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@M_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qcom_geni_serial_start_rx], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qcom_geni_serial_start_rx(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_dev_port(ptr noundef %0, ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @SE_GENI_STATUS, align 8, !tbaa !10\n  %5 = add nsw i64 %4, %3\n  %6 = tail call i32 @readl(i64 noundef %5) #2\n  %7 = load i32, ptr @S_GENI_CMD_ACTIVE, align 4, !tbaa !11\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %1\n  %11 = tail call i32 @qcom_geni_serial_stop_rx(ptr noundef nonnull %0) #2\n  br label %12\n\n12:                                               ; preds = %10, %1\n  %13 = load i32, ptr @UART_START_READ, align 4, !tbaa !11\n  %14 = tail call i32 @geni_se_setup_s_cmd(ptr noundef %2, i32 noundef %13, i32 noundef 0) #2\n  %15 = load i64, ptr %0, align 8, !tbaa !5\n  %16 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %17 = add nsw i64 %16, %15\n  %18 = tail call i32 @readl(i64 noundef %17) #2\n  %19 = load i32, ptr @S_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %20 = load i32, ptr @S_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %21 = or i32 %19, %18\n  %22 = or i32 %21, %20\n  %23 = load i64, ptr %0, align 8, !tbaa !5\n  %24 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %25 = add nsw i64 %24, %23\n  %26 = tail call i32 @writel(i32 noundef %22, i64 noundef %25) #2\n  %27 = load i64, ptr %0, align 8, !tbaa !5\n  %28 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %29 = add nsw i64 %28, %27\n  %30 = tail call i32 @readl(i64 noundef %29) #2\n  %31 = load i32, ptr @M_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %32 = load i32, ptr @M_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %33 = or i32 %31, %30\n  %34 = or i32 %33, %32\n  %35 = load i64, ptr %0, align 8, !tbaa !5\n  %36 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %37 = add nsw i64 %36, %35\n  %38 = tail call i32 @writel(i32 noundef %34, i64 noundef %37) #2\n  ret void\n}\n\ndeclare ptr @to_dev_port(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @readl(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @qcom_geni_serial_stop_rx(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @geni_se_setup_s_cmd(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @writel(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"uart_port\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SE_GENI_STATUS = dso_local local_unnamed_addr global i64 0, align 8\n@S_GENI_CMD_ACTIVE = dso_local local_unnamed_addr global i32 0, align 4\n@UART_START_READ = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_S_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@S_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@S_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_M_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@M_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@M_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qcom_geni_serial_start_rx], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qcom_geni_serial_start_rx(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_dev_port(ptr noundef %0, ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @SE_GENI_STATUS, align 8, !tbaa !10\n  %5 = add nsw i64 %4, %3\n  %6 = tail call i32 @readl(i64 noundef %5) #2\n  %7 = load i32, ptr @S_GENI_CMD_ACTIVE, align 4, !tbaa !11\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %1\n  %11 = tail call i32 @qcom_geni_serial_stop_rx(ptr noundef nonnull %0) #2\n  br label %12\n\n12:                                               ; preds = %10, %1\n  %13 = load i32, ptr @UART_START_READ, align 4, !tbaa !11\n  %14 = tail call i32 @geni_se_setup_s_cmd(ptr noundef %2, i32 noundef %13, i32 noundef 0) #2\n  %15 = load i64, ptr %0, align 8, !tbaa !5\n  %16 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %17 = add nsw i64 %16, %15\n  %18 = tail call i32 @readl(i64 noundef %17) #2\n  %19 = load i32, ptr @S_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %20 = load i32, ptr @S_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %21 = or i32 %19, %18\n  %22 = or i32 %21, %20\n  %23 = load i64, ptr %0, align 8, !tbaa !5\n  %24 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %25 = add nsw i64 %24, %23\n  %26 = tail call i32 @writel(i32 noundef %22, i64 noundef %25) #2\n  %27 = load i64, ptr %0, align 8, !tbaa !5\n  %28 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %29 = add nsw i64 %28, %27\n  %30 = tail call i32 @readl(i64 noundef %29) #2\n  %31 = load i32, ptr @M_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %32 = load i32, ptr @M_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %33 = or i32 %31, %30\n  %34 = or i32 %33, %32\n  %35 = load i64, ptr %0, align 8, !tbaa !5\n  %36 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %37 = add nsw i64 %36, %35\n  %38 = tail call i32 @writel(i32 noundef %34, i64 noundef %37) #2\n  ret void\n}\n\ndeclare ptr @to_dev_port(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @readl(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @qcom_geni_serial_stop_rx(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @geni_se_setup_s_cmd(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @writel(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"uart_port\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/tty/serial/extr_qcom_geni_serial.c_qcom_geni_serial_start_rx.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@SE_GENI_STATUS = dso_local local_unnamed_addr global i64 0, align 8\n@S_GENI_CMD_ACTIVE = dso_local local_unnamed_addr global i32 0, align 4\n@UART_START_READ = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_S_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@S_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@S_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@SE_GENI_M_IRQ_EN = dso_local local_unnamed_addr global i64 0, align 8\n@M_RX_FIFO_WATERMARK_EN = dso_local local_unnamed_addr global i32 0, align 4\n@M_RX_FIFO_LAST_EN = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @qcom_geni_serial_start_rx], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @qcom_geni_serial_start_rx(ptr noundef %0) #0 {\n  %2 = tail call ptr @to_dev_port(ptr noundef %0, ptr noundef %0) #2\n  %3 = load i64, ptr %0, align 8, !tbaa !5\n  %4 = load i64, ptr @SE_GENI_STATUS, align 8, !tbaa !10\n  %5 = add nsw i64 %4, %3\n  %6 = tail call i32 @readl(i64 noundef %5) #2\n  %7 = load i32, ptr @S_GENI_CMD_ACTIVE, align 4, !tbaa !11\n  %8 = and i32 %7, %6\n  %9 = icmp eq i32 %8, 0\n  br i1 %9, label %12, label %10\n\n10:                                               ; preds = %1\n  %11 = tail call i32 @qcom_geni_serial_stop_rx(ptr noundef nonnull %0) #2\n  br label %12\n\n12:                                               ; preds = %10, %1\n  %13 = load i32, ptr @UART_START_READ, align 4, !tbaa !11\n  %14 = tail call i32 @geni_se_setup_s_cmd(ptr noundef %2, i32 noundef %13, i32 noundef 0) #2\n  %15 = load i64, ptr %0, align 8, !tbaa !5\n  %16 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %17 = add nsw i64 %16, %15\n  %18 = tail call i32 @readl(i64 noundef %17) #2\n  %19 = load i32, ptr @S_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %20 = load i32, ptr @S_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %21 = or i32 %19, %18\n  %22 = or i32 %21, %20\n  %23 = load i64, ptr %0, align 8, !tbaa !5\n  %24 = load i64, ptr @SE_GENI_S_IRQ_EN, align 8, !tbaa !10\n  %25 = add nsw i64 %24, %23\n  %26 = tail call i32 @writel(i32 noundef %22, i64 noundef %25) #2\n  %27 = load i64, ptr %0, align 8, !tbaa !5\n  %28 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %29 = add nsw i64 %28, %27\n  %30 = tail call i32 @readl(i64 noundef %29) #2\n  %31 = load i32, ptr @M_RX_FIFO_WATERMARK_EN, align 4, !tbaa !11\n  %32 = load i32, ptr @M_RX_FIFO_LAST_EN, align 4, !tbaa !11\n  %33 = or i32 %31, %30\n  %34 = or i32 %33, %32\n  %35 = load i64, ptr %0, align 8, !tbaa !5\n  %36 = load i64, ptr @SE_GENI_M_IRQ_EN, align 8, !tbaa !10\n  %37 = add nsw i64 %36, %35\n  %38 = tail call i32 @writel(i32 noundef %34, i64 noundef %37) #2\n  ret void\n}\n\ndeclare ptr @to_dev_port(ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @readl(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @qcom_geni_serial_stop_rx(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @geni_se_setup_s_cmd(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @writel(i32 noundef, i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"uart_port\", !7, i64 0}\n!7 = !{!\"long\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!7, !7, i64 0}\n!11 = !{!12, !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_fbcon_ud.c_ud_clear_margins.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function ud_clear_margins\n\t.type\tud_clear_margins,@function\nud_clear_margins:                       # @ud_clear_margins\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tsubq\t$32, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovl\t8(%rsi), %eax\n\tmovl\t12(%rsi), %r14d\n\tmovl\t(%rdi), %esi\n\tmovl\t4(%rdi), %ebp\n\timull\t8(%rdi), %esi\n\timull\t12(%rdi), %ebp\n\tmovl\t%edx, (%rsp)\n\tmovl\tROP_COPY(%rip), %edx\n\tmovl\t%edx, 24(%rsp)\n\ttestl\t%ecx, %ecx\n\tjne\t.LBB0_3\n# %bb.1:\n\tsubl\t%esi, %eax\n\tje\t.LBB0_3\n# %bb.2:\n\tmovq\t$0, 16(%rsp)\n\tmovl\t%eax, 4(%rsp)\n\tmovq\t16(%rbx), %rax\n\tmovq\t%rax, 8(%rsp)\n\tmovq\t(%rbx), %rax\n\tmovq\t%rsp, %rsi\n\tmovq\t%rbx, %rdi\n\tcallq\t*(%rax)\n.LBB0_3:\n\tcmpl\t%ebp, %r14d\n\tje\t.LBB0_5\n# %bb.4:\n\tsubl\t%ebp, %r14d\n\tmovq\t24(%rbx), %rax\n\tmovq\t%rax, 16(%rsp)\n\tmovl\t20(%rbx), %eax\n\tmovl\t%eax, 12(%rsp)\n\tmovl\t%r14d, 8(%rsp)\n\tmovl\t8(%rbx), %eax\n\tmovl\t%eax, 4(%rsp)\n\tmovq\t(%rbx), %rax\n\tmovq\t%rsp, %rsi\n\tmovq\t%rbx, %rdi\n\tcallq\t*(%rax)\n.LBB0_5:\n\taddq\t$32, %rsp\n\t.cfi_def_cfa_offset 32\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tud_clear_margins, .Lfunc_end0-ud_clear_margins\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tROP_COPY,@object                # @ROP_COPY\n\t.bss\n\t.globl\tROP_COPY\n\t.p2align\t2\nROP_COPY:\n\t.long\t0                               # 0x0\n\t.size\tROP_COPY, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fb_copyarea = type { i32, i32, i32, i32, i32, i32, i32, i32 }\n%struct.fb_info = type { i32, i32, i32, i32 }\n\n@ROP_COPY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ud_clear_margins], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ud_clear_margins(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = alloca %struct.fb_copyarea, align 8\n  %6 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 3\n  %7 = load i32, ptr %6, align 4, !tbaa !5\n  %8 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 2\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1\n  %11 = load i32, ptr %10, align 4, !tbaa !11\n  %12 = load i32, ptr %0, align 4, !tbaa !12\n  %13 = mul nsw i32 %12, %9\n  %14 = getelementptr inbounds %struct.fb_info, ptr %0, i64 0, i32 3\n  %15 = load i32, ptr %14, align 4, !tbaa !14\n  %16 = mul nsw i32 %15, %11\n  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #2\n  store i32 %2, ptr %5, align 8, !tbaa !15\n  %17 = load i32, ptr @ROP_COPY, align 4, !tbaa !17\n  %18 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 7\n  store i32 %17, ptr %18, align 8, !tbaa !18\n  %19 = icmp ne i32 %3, 0\n  %20 = icmp eq i32 %7, %13\n  %21 = or i1 %20, %19\n  br i1 %21, label %28, label %22\n\n22:                                               ; preds = %4\n  %23 = sub nsw i32 %7, %13\n  %24 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 1\n  store i32 %23, ptr %24, align 4, !tbaa !19\n  %25 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 6\n  %26 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 4\n  %27 = load <2 x i32>, ptr %26, align 4, !tbaa !17\n  store <2 x i32> %27, ptr %25, align 8, !tbaa !17\n  br label %28\n\n28:                                               ; preds = %22, %4\n  %29 = phi i32 [ %16, %4 ], [ %7, %22 ]\n  %30 = icmp eq i32 %29, %16\n  br i1 %30, label %41, label %31\n\n31:                                               ; preds = %28\n  %32 = sub nsw i32 %29, %16\n  %33 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 5\n  %34 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 4\n  %35 = load <2 x i32>, ptr %34, align 4, !tbaa !17\n  store <2 x i32> %35, ptr %33, align 8, !tbaa !17\n  %36 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 4\n  %37 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 3\n  %38 = load i32, ptr %37, align 4, !tbaa !14\n  store i32 %38, ptr %36, align 8, !tbaa !20\n  %39 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 1\n  %40 = load i32, ptr %8, align 4, !tbaa !10\n  store i32 %40, ptr %39, align 4, !tbaa !19\n  br label %41\n\n41:                                               ; preds = %31, %28\n  %42 = phi i32 [ %29, %28 ], [ %32, %31 ]\n  %43 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 2\n  %44 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 2\n  %45 = load <2 x i32>, ptr %44, align 4, !tbaa !17\n  store <2 x i32> %45, ptr %43, align 8, !tbaa !17\n  %46 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 3\n  %47 = load i32, ptr %8, align 4, !tbaa !10\n  store i32 %47, ptr %46, align 4, !tbaa !21\n  %48 = load i32, ptr %1, align 4, !tbaa !22\n  %49 = load ptr, ptr %0, align 8, !tbaa !23\n  %50 = call i32 %49(ptr noundef nonnull %1, ptr noundef nonnull %5) #2\n  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 12}\n!6 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 8}\n!11 = !{!6, !7, i64 4}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!14 = !{!13, !7, i64 12}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"fb_copyarea\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28}\n!17 = !{!7, !7, i64 0}\n!18 = !{!16, !7, i64 28}\n!19 = !{!16, !7, i64 4}\n!20 = !{!16, !7, i64 12}\n!21 = !{!16, !7, i64 8}\n!22 = !{!6, !7, i64 0}\n!23 = !{!24, !25, i64 0}\n!24 = !{!\"fb_par\", !25, i64 0}\n!25 = !{!\"any pointer\", !8, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fb_copyarea = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }\n%struct.fb_info = type { i32, i32, i32, i32 }\n\n@ROP_COPY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ud_clear_margins], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ud_clear_margins(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = alloca %struct.fb_copyarea, align 8\n  %6 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 3\n  %7 = load i32, ptr %6, align 4, !tbaa !5\n  %8 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 2\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1\n  %11 = load i32, ptr %10, align 4, !tbaa !11\n  %12 = load i32, ptr %0, align 4, !tbaa !12\n  %13 = mul nsw i32 %12, %9\n  %14 = getelementptr inbounds %struct.fb_info, ptr %0, i64 0, i32 3\n  %15 = load i32, ptr %14, align 4, !tbaa !14\n  %16 = mul nsw i32 %15, %11\n  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #2\n  store i32 %2, ptr %5, align 8, !tbaa !15\n  %17 = load i32, ptr @ROP_COPY, align 4, !tbaa !17\n  %18 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 8\n  store i32 %17, ptr %18, align 8, !tbaa !18\n  %19 = icmp ne i32 %3, 0\n  %20 = icmp eq i32 %7, %13\n  %21 = or i1 %20, %19\n  br i1 %21, label %28, label %22\n\n22:                                               ; preds = %4\n  %23 = sub nsw i32 %7, %13\n  %24 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 1\n  store i32 %23, ptr %24, align 4, !tbaa !19\n  %25 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 2\n  %26 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 4\n  %27 = load <2 x i32>, ptr %26, align 4, !tbaa !17\n  store <2 x i32> %27, ptr %25, align 8, !tbaa !17\n  br label %28\n\n28:                                               ; preds = %22, %4\n  %29 = phi i32 [ %16, %4 ], [ %7, %22 ]\n  %30 = icmp eq i32 %29, %16\n  br i1 %30, label %43, label %31\n\n31:                                               ; preds = %28\n  %32 = sub nsw i32 %29, %16\n  %33 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 7\n  %34 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 5\n  %35 = load <2 x i32>, ptr %34, align 4, !tbaa !17\n  store <2 x i32> %35, ptr %33, align 8, !tbaa !17\n  %36 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 6\n  %37 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 4\n  %38 = load i32, ptr %37, align 4, !tbaa !14\n  store i32 %38, ptr %36, align 4, !tbaa !20\n  %39 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 3\n  store i32 %32, ptr %39, align 8, !tbaa !21\n  %40 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 2\n  %41 = load i32, ptr %8, align 4, !tbaa !10\n  store i32 %41, ptr %40, align 4, !tbaa !22\n  %42 = load ptr, ptr %1, align 8, !tbaa !23\n  call void %42(ptr noundef nonnull %1, ptr noundef nonnull %5) #2\n  br label %43\n\n43:                                               ; preds = %31, %28\n  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 12}\n!6 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 8}\n!11 = !{!6, !7, i64 4}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!14 = !{!13, !7, i64 12}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"fb_copyarea\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32}\n!17 = !{!7, !7, i64 0}\n!18 = !{!16, !7, i64 28}\n!19 = !{!16, !7, i64 4}\n!20 = !{!16, !7, i64 12}\n!21 = !{!16, !7, i64 8}\n!22 = !{!16, !7, i64 8}\n!23 = !{!6, !24, i64 0}\n!24 = !{!\"any pointer\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fb_copyarea = type { i32, i32, i32, i32, i32, i32, i32, i32 }\n%struct.fb_info = type { i32, i32, i32, i32 }\n\n@ROP_COPY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ud_clear_margins], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ud_clear_margins(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = alloca %struct.fb_copyarea, align 8\n  %6 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 3\n  %7 = load i32, ptr %6, align 4, !tbaa !5\n  %8 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 2\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1\n  %11 = load i32, ptr %10, align 4, !tbaa !11\n  %12 = load i32, ptr %0, align 4, !tbaa !12\n  %13 = mul nsw i32 %12, %9\n  %14 = getelementptr inbounds %struct.fb_info, ptr %0, i64 0, i32 3\n  %15 = load i32, ptr %14, align 4, !tbaa !14\n  %16 = mul nsw i32 %15, %11\n  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #2\n  store i32 %2, ptr %5, align 8, !tbaa !15\n  %17 = load i32, ptr @ROP_COPY, align 4, !tbaa !17\n  %18 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 7\n  store i32 %17, ptr %18, align 8, !tbaa !18\n  %19 = icmp eq i32 %3, 0\n  br i1 %19, label %20, label %28\n\n20:                                               ; preds = %4\n  %21 = sub nsw i32 %7, %13\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %28, label %23\n\n23:                                               ; preds = %20\n  %24 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 6\n  store <2 x i32> zeroinitializer, ptr %24, align 8, !tbaa !17\n  %25 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 1\n  store i32 %21, ptr %25, align 4, !tbaa !19\n  %26 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 4\n  %27 = load <2 x i32>, ptr %26, align 8, !tbaa !17\n  store <2 x i32> %27, ptr %5, align 8, !tbaa !17\n  br label %28\n\n28:                                               ; preds = %23, %20, %4\n  %29 = phi i32 [ %7, %4 ], [ %21, %23 ], [ %7, %20 ]\n  %30 = icmp eq i32 %16, %29\n  br i1 %30, label %42, label %31\n\n31:                                               ; preds = %28\n  %32 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 6\n  %33 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 5\n  %34 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 3\n  %35 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 2\n  %36 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 4\n  %37 = load <2 x i32>, ptr %36, align 8, !tbaa !17\n  store <2 x i32> %37, ptr %32, align 8, !tbaa !17\n  %38 = load i32, ptr %33, align 4, !tbaa !20\n  %39 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 1\n  store i32 %38, ptr %39, align 4, !tbaa !19\n  store i32 %16, ptr %35, align 8, !tbaa !21\n  %40 = load i32, ptr %8, align 4, !tbaa !10\n  store i32 %40, ptr %34, align 4, !tbaa !22\n  %41 = load ptr, ptr %1, align 8, !tbaa !23\n  call void %41(ptr noundef nonnull %1, ptr noundef nonnull %5) #2\n  br label %42\n\n42:                                               ; preds = %31, %28\n  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 12}\n!6 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 8}\n!11 = !{!6, !7, i64 4}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!14 = !{!13, !7, i64 12}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"fb_copyarea\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28}\n!17 = !{!7, !7, i64 0}\n!18 = !{!16, !7, i64 28}\n!19 = !{!16, !7, i64 4}\n!20 = !{!16, !7, i64 20}\n!21 = !{!16, !7, i64 12}\n!22 = !{!16, !7, i64 8}\n!23 = !{!24, !25, i64 0}\n!24 = !{!\"fb_info\", !25, i64 0}\n!25 = !{!\"any pointer\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fb_copyarea = type { i32, i32, i32, i32, i32, i32, i32, i32 }\n%struct.fb_info = type { i32, i32, i32, i32 }\n\n@ROP_COPY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ud_clear_margins], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ud_clear_margins(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = alloca %struct.fb_copyarea, align 8\n  %6 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 3\n  %7 = load i32, ptr %6, align 4, !tbaa !5\n  %8 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 2\n  %9 = load i32, ptr %8, align 4, !tbaa !10\n  %10 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1\n  %11 = load i32, ptr %10, align 4, !tbaa !11\n  %12 = load i32, ptr %0, align 4, !tbaa !12\n  %13 = mul nsw i32 %12, %9\n  %14 = getelementptr inbounds %struct.fb_info, ptr %0, i64 0, i32 3\n  %15 = load i32, ptr %14, align 4, !tbaa !14\n  %16 = mul nsw i32 %15, %11\n  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #2\n  store i32 %2, ptr %5, align 8, !tbaa !15\n  %17 = load i32, ptr @ROP_COPY, align 4, !tbaa !17\n  %18 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 7\n  store i32 %17, ptr %18, align 8, !tbaa !18\n  %19 = icmp eq i32 %3, 0\n  br i1 %19, label %20, label %28\n\n20:                                               ; preds = %4\n  %21 = sub nsw i32 %7, %13\n  %22 = icmp eq i32 %21, 0\n  br i1 %22, label %28, label %23\n\n23:                                               ; preds = %20\n  %24 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 6\n  store <2 x i32> zeroinitializer, ptr %24, align 8, !tbaa !17\n  %25 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 1\n  store i32 %21, ptr %25, align 4, !tbaa !19\n  %26 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 4\n  %27 = load <2 x i32>, ptr %26, align 8, !tbaa !17\n  store <2 x i32> %27, ptr %5, align 8, !tbaa !17\n  br label %28\n\n28:                                               ; preds = %23, %20, %4\n  %29 = phi i32 [ %13, %4 ], [ %13, %20 ], [ %7, %23 ]\n  %30 = phi i32 [ %16, %4 ], [ %16, %20 ], [ %16, %23 ]\n  %31 = icmp eq i32 %30, %29\n  br i1 %31, label %41, label %32\n\n32:                                               ; preds = %28\n  %33 = sub nsw i32 %30, %29\n  %34 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 6\n  %35 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 5\n  %36 = load <2 x i32>, ptr %35, align 4, !tbaa !17\n  store <2 x i32> %36, ptr %34, align 8, !tbaa !17\n  %37 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 3\n  %38 = load i32, ptr %37, align 4, !tbaa !20\n  %39 = getelementptr inbounds %struct.fb_copyarea, ptr %5, i64 0, i32 2\n  store i32 %33, ptr %39, align 8, !tbaa !21\n  %40 = load i32, ptr %8, align 4, !tbaa !10\n  store i32 %40, ptr %25, align 4, !tbaa !19\n  br label %41\n\n41:                                               ; preds = %32, %28\n  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 12}\n!6 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!6, !7, i64 8}\n!11 = !{!6, !7, i64 4}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"fb_info\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}\n!14 = !{!13, !7, i64 12}\n!15 = !{!16, !7, i64 0}\n!16 = !{!\"fb_copyarea\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28}\n!17 = !{!7, !7, i64 0}\n!18 = !{!16, !7, i64 28}\n!19 = !{!16, !7, i64 4}\n!20 = !{!16, !7, i64 12}\n!21 = !{!16, !7, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/video/fbdev/core/extr_fbcon_ud.c_ud_clear_margins.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.fb_fillrect = type { i32, i32, i32, i32, i64, i32 }\n%struct.vc_data = type { i32, i32, %struct.TYPE_4__ }\n%struct.TYPE_4__ = type { i32, i32 }\n%struct.fb_info = type { ptr, %struct.TYPE_5__ }\n%struct.TYPE_5__ = type { i32, i32, i32, i32, i64 }\n\n@ROP_COPY = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @ud_clear_margins], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @ud_clear_margins(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {\n  %5 = alloca %struct.fb_fillrect, align 8\n  %6 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2\n  %7 = load i32, ptr %6, align 4, !tbaa !5\n  %8 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 2, i32 1\n  %9 = load i32, ptr %8, align 4, !tbaa !11\n  %10 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1\n  %11 = load i32, ptr %10, align 8, !tbaa !12\n  %12 = load i32, ptr %0, align 4, !tbaa !17\n  %13 = mul i32 %12, %7\n  %14 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1, i32 1\n  %15 = load i32, ptr %14, align 4, !tbaa !18\n  %16 = getelementptr inbounds %struct.vc_data, ptr %0, i64 0, i32 1\n  %17 = load i32, ptr %16, align 4, !tbaa !19\n  %18 = mul i32 %17, %9\n  %19 = sub i32 %15, %18\n  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #2\n  store i32 %2, ptr %5, align 8, !tbaa !20\n  %20 = load i32, ptr @ROP_COPY, align 4, !tbaa !22\n  %21 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 5\n  store i32 %20, ptr %21, align 8, !tbaa !23\n  %22 = icmp eq i32 %11, %13\n  %23 = icmp ne i32 %3, 0\n  %24 = or i1 %23, %22\n  br i1 %24, label %35, label %25\n\n25:                                               ; preds = %4\n  %26 = sub i32 %11, %13\n  %27 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 4\n  store i64 0, ptr %27, align 8, !tbaa !24\n  %28 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 1\n  store i32 %26, ptr %28, align 4, !tbaa !25\n  %29 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1, i32 2\n  %30 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 2\n  %31 = load <2 x i32>, ptr %29, align 8, !tbaa !22\n  store <2 x i32> %31, ptr %30, align 8, !tbaa !22\n  %32 = load ptr, ptr %1, align 8, !tbaa !26\n  %33 = load ptr, ptr %32, align 8, !tbaa !27\n  %34 = call i32 %33(ptr noundef nonnull %1, ptr noundef nonnull %5) #2\n  br label %35\n\n35:                                               ; preds = %25, %4\n  %36 = icmp eq i32 %15, %18\n  br i1 %36, label %50, label %37\n\n37:                                               ; preds = %35\n  %38 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1, i32 4\n  %39 = load i64, ptr %38, align 8, !tbaa !29\n  %40 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 4\n  store i64 %39, ptr %40, align 8, !tbaa !24\n  %41 = getelementptr inbounds %struct.fb_info, ptr %1, i64 0, i32 1, i32 3\n  %42 = load i32, ptr %41, align 4, !tbaa !30\n  %43 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 3\n  store i32 %42, ptr %43, align 4, !tbaa !31\n  %44 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 2\n  store i32 %19, ptr %44, align 8, !tbaa !32\n  %45 = load i32, ptr %10, align 8, !tbaa !12\n  %46 = getelementptr inbounds %struct.fb_fillrect, ptr %5, i64 0, i32 1\n  store i32 %45, ptr %46, align 4, !tbaa !25\n  %47 = load ptr, ptr %1, align 8, !tbaa !26\n  %48 = load ptr, ptr %47, align 8, !tbaa !27\n  %49 = call i32 %48(ptr noundef nonnull %1, ptr noundef nonnull %5) #2\n  br label %50\n\n50:                                               ; preds = %37, %35\n  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #2\n  ret void\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 8}\n!6 = !{!\"vc_data\", !7, i64 0, !7, i64 4, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"TYPE_4__\", !7, i64 0, !7, i64 4}\n!11 = !{!6, !7, i64 12}\n!12 = !{!13, !7, i64 8}\n!13 = !{!\"fb_info\", !14, i64 0, !15, i64 8}\n!14 = !{!\"any pointer\", !8, i64 0}\n!15 = !{!\"TYPE_5__\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !16, i64 16}\n!16 = !{!\"long\", !8, i64 0}\n!17 = !{!6, !7, i64 0}\n!18 = !{!13, !7, i64 12}\n!19 = !{!6, !7, i64 4}\n!20 = !{!21, !7, i64 0}\n!21 = !{!\"fb_fillrect\", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !16, i64 16, !7, i64 24}\n!22 = !{!7, !7, i64 0}\n!23 = !{!21, !7, i64 24}\n!24 = !{!21, !16, i64 16}\n!25 = !{!21, !7, i64 4}\n!26 = !{!13, !14, i64 0}\n!27 = !{!28, !14, i64 0}\n!28 = !{!\"TYPE_6__\", !14, i64 0}\n!29 = !{!13, !16, i64 24}\n!30 = !{!13, !7, i64 20}\n!31 = !{!21, !7, i64 12}\n!32 = !{!21, !7, i64 8}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_xen-netfront.c_xennet_release_tx_bufs.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function xennet_release_tx_bufs\n\t.type\txennet_release_tx_bufs,@function\nxennet_release_tx_bufs:                 # @xennet_release_tx_bufs\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tcmpl\t$0, NET_TX_RING_SIZE(%rip)\n\tjle\t.LBB0_5\n# %bb.1:\n\tmovq\t%rdi, %r15\n\tleaq\t8(%rdi), %rax\n\tmovq\t%rax, (%rsp)                    # 8-byte Spill\n\txorl\t%r14d, %r14d\n\txorl\t%ebx, %ebx\n\tjmp\t.LBB0_2\n\t.p2align\t4, 0x90\n.LBB0_4:                                #   in Loop: Header=BB0_2 Depth=1\n\tincq\t%rbx\n\tmovslq\tNET_TX_RING_SIZE(%rip), %rax\n\taddq\t$8, %r14\n\tcmpq\t%rax, %rbx\n\tjge\t.LBB0_5\n.LBB0_2:                                # =>This Inner Loop Header: Depth=1\n\tmovq\t(%r15), %rdi\n\taddq\t%r14, %rdi\n\tcallq\tskb_entry_is_link@PLT\n\ttestq\t%rax, %rax\n\tjne\t.LBB0_4\n# %bb.3:                                #   in Loop: Header=BB0_2 Depth=1\n\tmovq\t(%r15), %rax\n\tmovq\t24(%r15), %rcx\n\tmovq\t(%rax,%rbx,8), %r12\n\tmovq\t(%rcx,%rbx,8), %rdi\n\tcallq\tget_page@PLT\n\tmovq\t16(%r15), %rax\n\tmovq\t24(%r15), %rcx\n\tmovl\t(%rax,%rbx,4), %ebp\n\tmovl\tGNTMAP_readonly(%rip), %r13d\n\tmovq\t(%rcx,%rbx,8), %rdi\n\tcallq\tpage_address@PLT\n\tmovl\t%ebp, %edi\n\tmovl\t%r13d, %esi\n\tmovq\t%rax, %rdx\n\tcallq\tgnttab_end_foreign_access@PLT\n\tmovq\t24(%r15), %rax\n\tmovq\t$0, (%rax,%rbx,8)\n\tmovl\tGRANT_INVALID_REF(%rip), %eax\n\tmovq\t16(%r15), %rcx\n\tmovl\t%eax, (%rcx,%rbx,4)\n\tmovq\t(%r15), %rsi\n\tmovq\t(%rsp), %rdi                    # 8-byte Reload\n\tmovl\t%ebx, %edx\n\tcallq\tadd_id_to_freelist@PLT\n\tmovq\t%r12, %rdi\n\tcallq\tdev_kfree_skb_irq@PLT\n\tjmp\t.LBB0_4\n.LBB0_5:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\txennet_release_tx_bufs, .Lfunc_end0-xennet_release_tx_bufs\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNET_TX_RING_SIZE,@object        # @NET_TX_RING_SIZE\n\t.bss\n\t.globl\tNET_TX_RING_SIZE\n\t.p2align\t2\nNET_TX_RING_SIZE:\n\t.long\t0                               # 0x0\n\t.size\tNET_TX_RING_SIZE, 4\n\n\t.type\tGNTMAP_readonly,@object         # @GNTMAP_readonly\n\t.globl\tGNTMAP_readonly\n\t.p2align\t2\nGNTMAP_readonly:\n\t.long\t0                               # 0x0\n\t.size\tGNTMAP_readonly, 4\n\n\t.type\tGRANT_INVALID_REF,@object       # @GRANT_INVALID_REF\n\t.globl\tGRANT_INVALID_REF\n\t.p2align\t2\nGRANT_INVALID_REF:\n\t.long\t0                               # 0x0\n\t.size\tGRANT_INVALID_REF, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xennet_info = type { ptr, i32, ptr, ptr }\n\n@NET_TX_RING_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@GNTMAP_readonly = dso_local local_unnamed_addr global i32 0, align 4\n@GRANT_INVALID_REF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xennet_release_tx_bufs], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @xennet_release_tx_bufs(ptr noundef %0) #0 {\n  %2 = load i32, ptr @NET_TX_RING_SIZE, align 4, !tbaa !5\n  %3 = icmp sgt i32 %2, 0\n  br i1 %3, label %4, label %36\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 1\n  %6 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 3\n  br label %7\n\n7:                                                ; preds = %4, %31\n  %8 = phi i64 [ 0, %4 ], [ %32, %31 ]\n  %9 = load ptr, ptr %0, align 8, !tbaa !9\n  %10 = getelementptr inbounds i64, ptr %9, i64 %8\n  %11 = tail call i64 @skb_entry_is_link(ptr noundef %10) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %13, label %31\n\n13:                                               ; preds = %7\n  %14 = load ptr, ptr %0, align 8, !tbaa !9\n  %15 = getelementptr inbounds ptr, ptr %14, i64 %8\n  %16 = load ptr, ptr %15, align 8, !tbaa !12\n  %17 = load ptr, ptr %6, align 8, !tbaa !13\n  %18 = getelementptr inbounds i64, ptr %17, i64 %8\n  %19 = load i64, ptr %18, align 8, !tbaa !14\n  %20 = tail call i32 @get_page(i64 noundef %19) #2\n  %21 = load ptr, ptr %5, align 8, !tbaa !16\n  %22 = getelementptr inbounds i32, ptr %21, i64 %8\n  %23 = load i32, ptr %22, align 4, !tbaa !5\n  %24 = load i32, ptr @GNTMAP_readonly, align 4, !tbaa !5\n  %25 = load ptr, ptr %6, align 8, !tbaa !13\n  %26 = getelementptr inbounds i64, ptr %25, i64 %8\n  %27 = load i64, ptr %26, align 8, !tbaa !14\n  %28 = tail call i64 @page_address(i64 noundef %27) #2\n  %29 = tail call i32 @gnttab_end_foreign_access(i32 noundef %23, i32 noundef %24, i64 noundef %28) #2\n  %30 = load ptr, ptr %6, align 8, !tbaa !13\n  store i64 0, ptr %26, align 8, !tbaa !14\n  %31 = add nuw nsw i64 %8, 1\n  %32 = load i32, ptr @NET_TX_RING_SIZE, align 4, !tbaa !5\n  %33 = sext i32 %32 to i64\n  %34 = icmp slt i64 %31, %33\n  br i1 %34, label %7, label %35, !llvm.loop !17\n\n35:                                               ; preds = %13\n  store i32 ptrtoint (ptr @GRANT_INVALID_REF to i32), ptr %22, align 4, !tbaa !5\n  %36 = load ptr, ptr %5, align 8, !tbaa !16\n  %37 = getelementptr inbounds i32, ptr %36, i64 %8\n  %38 = load i32, ptr %37, align 4, !tbaa !5\n  %39 = tail call i32 @add_id_to_freelist(ptr noundef nonnull %5, ptr noundef %14, i32 noundef %38) #2\n  %40 = tail call i32 @dev_kfree_skb_irq(ptr noundef %16) #2\n  br label %36\n\n36:                                               ; preds = %35, %1\n  ret void\n}\n\ndeclare i64 @skb_entry_is_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @get_page(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @gnttab_end_foreign_access(i32 noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @page_address(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @add_id_to_freelist(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_kfree_skb_irq(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"xennet_info\", !11, i64 0, !6, i64 8, !11, i64 16, !11, i64 24}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n!13 = !{!10, !11, i64 24}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !7, i64 0}\n!16 = !{!10, !11, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xennet_info = type { ptr, i32, ptr, ptr }\n\n@NET_TX_RING_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@GNTMAP_readonly = dso_local local_unnamed_addr global i32 0, align 4\n@GRANT_INVALID_REF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xennet_release_tx_bufs], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @xennet_release_tx_bufs(ptr noundef %0) #0 {\n  %2 = load i32, ptr @NET_TX_RING_SIZE, align 4, !tbaa !5\n  %3 = icmp sgt i32 %2, 0\n  br i1 %3, label %4, label %37\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 1\n  %6 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 3\n  br label %7\n\n7:                                                ; preds = %4, %32\n  %8 = phi i64 [ 0, %4 ], [ %33, %32 ]\n  %9 = load ptr, ptr %0, align 8, !tbaa !9\n  %10 = getelementptr inbounds i64, ptr %9, i64 %8\n  %11 = tail call i64 @skb_entry_is_link(ptr noundef %10) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %13, label %32\n\n13:                                               ; preds = %7\n  %14 = load ptr, ptr %6, align 8, !tbaa !12\n  %15 = getelementptr inbounds i64, ptr %14, i64 %8\n  %16 = load i64, ptr %15, align 8, !tbaa !13\n  %17 = load ptr, ptr %0, align 8, !tbaa !9\n  %18 = getelementptr inbounds ptr, ptr %17, i64 %8\n  %19 = load ptr, ptr %18, align 8, !tbaa !15\n  %20 = tail call i32 @get_page(ptr noundef %19) #2\n  %21 = load ptr, ptr %5, align 8, !tbaa !16\n  %22 = getelementptr inbounds i64, ptr %21, i64 %8\n  %23 = load i64, ptr %22, align 8, !tbaa !13\n  %24 = load i32, ptr @GNTMAP_readonly, align 4, !tbaa !5\n  %25 = tail call ptr @page_address(i64 noundef %23) #2\n  %26 = trunc i64 %8 to i32\n  %27 = tail call i32 @gnttab_end_foreign_access(i32 noundef %26, i32 noundef %24, ptr noundef %25) #2\n  %28 = load ptr, ptr %6, align 8, !tbaa !12\n  %29 = getelementptr inbounds i64, ptr %28, i64 %8\n  store i64 0, ptr %29, align 8, !tbaa !13\n  %30 = load i32, ptr @GRANT_INVALID_REF, align 4, !tbaa !5\n  %31 = load ptr, ptr %5, align 8, !tbaa !16\n  %32 = add nuw nsw i64 %8, 1\n  %33 = getelementptr inbounds i32, ptr %31, i64 %32\n  store i32 %30, ptr %33, align 4, !tbaa !5\n  %34 = load ptr, ptr %0, align 8, !tbaa !9\n  %35 = tail call i32 @add_id_to_freelist(ptr noundef nonnull %5, ptr noundef %34, i32 noundef %26) #2\n  %36 = tail call i32 @dev_kfree_skb_irq(i64 noundef %16) #2\n  br label %7\n\n37:                                               ; preds = %1, %13\n  ret void\n}\n\ndeclare i64 @skb_entry_is_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @get_page(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gnttab_end_foreign_access(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @page_address(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @add_id_to_freelist(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_kfree_skb_irq(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"xennet_info\", !11, i64 0, !6, i64 8, !11, i64 16, !11, i64 24}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 24}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!11, !11, i64 0}\n!16 = !{!10, !11, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xennet_info = type { ptr, i32, ptr, ptr }\n\n@NET_TX_RING_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@GNTMAP_readonly = dso_local local_unnamed_addr global i32 0, align 4\n@GRANT_INVALID_REF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xennet_release_tx_bufs], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @xennet_release_tx_bufs(ptr noundef %0) #0 {\n  %2 = load i32, ptr @NET_TX_RING_SIZE, align 4, !tbaa !5\n  %3 = icmp sgt i32 %2, 0\n  br i1 %3, label %4, label %37\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 1\n  %6 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 3\n  br label %7\n\n7:                                                ; preds = %4, %32\n  %8 = phi i64 [ 0, %4 ], [ %33, %32 ]\n  %9 = load ptr, ptr %0, align 8, !tbaa !9\n  %10 = getelementptr inbounds i64, ptr %9, i64 %8\n  %11 = tail call i64 @skb_entry_is_link(ptr noundef %10) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %13, label %32\n\n13:                                               ; preds = %7\n  %14 = load ptr, ptr %6, align 8, !tbaa !12\n  %15 = getelementptr inbounds i64, ptr %14, i64 %8\n  %16 = load i64, ptr %15, align 8, !tbaa !13\n  %17 = load ptr, ptr %0, align 8, !tbaa !9\n  %18 = getelementptr inbounds ptr, ptr %17, i64 %8\n  %19 = load ptr, ptr %18, align 8, !tbaa !15\n  %20 = tail call i32 @get_page(ptr noundef %19) #2\n  %21 = load ptr, ptr %5, align 8, !tbaa !16\n  %22 = getelementptr inbounds i64, ptr %21, i64 %8\n  %23 = load i64, ptr %22, align 8, !tbaa !13\n  %24 = load i32, ptr @GNTMAP_readonly, align 4, !tbaa !5\n  %25 = tail call i64 @page_address(i64 noundef %23) #2\n  %26 = trunc i64 %25 to i32\n  %27 = tail call i32 @gnttab_end_foreign_access(i32 noundef %26, i32 noundef %24, i32 noundef %26) #2\n  %28 = load ptr, ptr %6, align 8, !tbaa !12\n  %29 = getelementptr inbounds i64, ptr %28, i64 %8\n  store i64 0, ptr %29, align 8, !tbaa !13\n  %30 = load i32, ptr @GRANT_INVALID_REF, align 4, !tbaa !5\n  %31 = load ptr, ptr %5, align 8, !tbaa !16\n  %32 = add nuw nsw i64 %8, 1\n  %33 = getelementptr inbounds i32, ptr %31, i64 %32\n  store i32 %30, ptr %33, align 4, !tbaa !5\n  %34 = load ptr, ptr %0, align 8, !tbaa !9\n  %35 = getelementptr inbounds i64, ptr %34, i64 %8\n  %36 = tail call i32 @add_id_to_freelist(ptr noundef nonnull %5, ptr noundef %35, i64 noundef %32) #2\n  tail call void @dev_kfree_skb_irq(i64 noundef %16) #2\n  br label %7\n\n37:                                               ; preds = %1, %13\n  ret void\n}\n\ndeclare i64 @skb_entry_is_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gnttab_end_foreign_access(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @get_page(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @page_address(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @add_id_to_freelist(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare void @dev_kfree_skb_irq(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"xennet_info\", !11, i64 0, !6, i64 8, !11, i64 16, !11, i64 24}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 24}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!11, !11, i64 0}\n!16 = !{!10, !11, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.xennet_info = type { ptr, i32, ptr, ptr }\n\n@NET_TX_RING_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@GNTMAP_readonly = dso_local local_unnamed_addr global i32 0, align 4\n@GRANT_INVALID_REF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xennet_release_tx_bufs], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @xennet_release_tx_bufs(ptr noundef %0) #0 {\n  %2 = load i32, ptr @NET_TX_RING_SIZE, align 4, !tbaa !5\n  %3 = icmp sgt i32 %2, 0\n  br i1 %3, label %4, label %37\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 1\n  %6 = getelementptr inbounds %struct.xennet_info, ptr %0, i64 0, i32 3\n  br label %7\n\n7:                                                ; preds = %4, %32\n  %8 = phi i64 [ 0, %4 ], [ %33, %32 ]\n  %9 = load ptr, ptr %0, align 8, !tbaa !9\n  %10 = getelementptr inbounds i64, ptr %9, i64 %8\n  %11 = tail call i64 @skb_entry_is_link(ptr noundef %10) #2\n  %12 = icmp eq i64 %11, 0\n  br i1 %12, label %13, label %32\n\n13:                                               ; preds = %7\n  %14 = load ptr, ptr %6, align 8, !tbaa !12\n  %15 = getelementptr inbounds i64, ptr %14, i64 %8\n  %16 = load i64, ptr %15, align 8, !tbaa !13\n  %17 = load ptr, ptr %0, align 8, !tbaa !9\n  %18 = getelementptr inbounds ptr, ptr %17, i64 %8\n  %19 = load ptr, ptr %18, align 8, !tbaa !15\n  %20 = tail call i32 @get_page(ptr noundef %19) #2\n  %21 = load ptr, ptr %5, align 8, !tbaa !16\n  %22 = getelementptr inbounds i64, ptr %21, i64 %8\n  %23 = load i64, ptr %22, align 8, !tbaa !13\n  %24 = load i32, ptr @GNTMAP_readonly, align 4, !tbaa !5\n  %25 = tail call ptr @page_address(i64 noundef %23) #2\n  %26 = trunc i64 %8 to i32\n  %27 = tail call i32 @gnttab_end_foreign_access(i32 noundef %26, i32 noundef %24, ptr noundef %25) #2\n  %28 = load ptr, ptr %6, align 8, !tbaa !12\n  %29 = getelementptr inbounds i64, ptr %28, i64 %8\n  store i64 0, ptr %29, align 8, !tbaa !13\n  %30 = load i32, ptr @GRANT_INVALID_REF, align 4, !tbaa !5\n  %31 = load ptr, ptr %5, align 8, !tbaa !16\n  %32 = add nuw nsw i64 %8, 1\n  %33 = getelementptr inbounds i32, ptr %31, i64 %32\n  store i32 %30, ptr %33, align 4, !tbaa !5\n  %34 = load ptr, ptr %0, align 8, !tbaa !9\n  %35 = tail call i32 @add_id_to_freelist(ptr noundef nonnull %5, ptr noundef %34, i32 noundef %26) #2\n  %36 = tail call i32 @dev_kfree_skb_irq(i64 noundef %16) #2\n  br label %7\n\n37:                                               ; preds = %1, %13\n  ret void\n}\n\ndeclare i64 @skb_entry_is_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @get_page(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gnttab_end_foreign_access(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @page_address(i64 noundef) local_unnamed_addr #1\n\ndeclare i32 @add_id_to_freelist(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_kfree_skb_irq(i64 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"xennet_info\", !11, i64 0, !6, i64 8, !11, i64 16, !11, i64 24}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!10, !11, i64 24}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"long\", !7, i64 0}\n!15 = !{!11, !11, i64 0}\n!16 = !{!10, !11, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/extr_xen-netfront.c_xennet_release_tx_bufs.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.netfront_queue = type { ptr, i32, ptr, ptr }\n%struct.TYPE_3__ = type { ptr }\n\n@NET_TX_RING_SIZE = dso_local local_unnamed_addr global i32 0, align 4\n@GNTMAP_readonly = dso_local local_unnamed_addr global i32 0, align 4\n@GRANT_INVALID_REF = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @xennet_release_tx_bufs], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @xennet_release_tx_bufs(ptr noundef %0) #0 {\n  %2 = load i32, ptr @NET_TX_RING_SIZE, align 4, !tbaa !5\n  %3 = icmp sgt i32 %2, 0\n  br i1 %3, label %4, label %45\n\n4:                                                ; preds = %1\n  %5 = getelementptr inbounds %struct.netfront_queue, ptr %0, i64 0, i32 3\n  %6 = getelementptr inbounds %struct.netfront_queue, ptr %0, i64 0, i32 2\n  %7 = getelementptr inbounds %struct.netfront_queue, ptr %0, i64 0, i32 1\n  br label %8\n\n8:                                                ; preds = %4, %40\n  %9 = phi i64 [ 0, %4 ], [ %41, %40 ]\n  %10 = load ptr, ptr %0, align 8, !tbaa !9\n  %11 = getelementptr inbounds %struct.TYPE_3__, ptr %10, i64 %9\n  %12 = tail call i64 @skb_entry_is_link(ptr noundef %11) #2\n  %13 = icmp eq i64 %12, 0\n  br i1 %13, label %14, label %40\n\n14:                                               ; preds = %8\n  %15 = load ptr, ptr %0, align 8, !tbaa !9\n  %16 = getelementptr inbounds %struct.TYPE_3__, ptr %15, i64 %9\n  %17 = load ptr, ptr %16, align 8, !tbaa !12\n  %18 = load ptr, ptr %5, align 8, !tbaa !14\n  %19 = getelementptr inbounds ptr, ptr %18, i64 %9\n  %20 = load ptr, ptr %19, align 8, !tbaa !15\n  %21 = tail call i32 @get_page(ptr noundef %20) #2\n  %22 = load ptr, ptr %6, align 8, !tbaa !16\n  %23 = getelementptr inbounds i32, ptr %22, i64 %9\n  %24 = load i32, ptr %23, align 4, !tbaa !5\n  %25 = load i32, ptr @GNTMAP_readonly, align 4, !tbaa !5\n  %26 = load ptr, ptr %5, align 8, !tbaa !14\n  %27 = getelementptr inbounds ptr, ptr %26, i64 %9\n  %28 = load ptr, ptr %27, align 8, !tbaa !15\n  %29 = tail call i64 @page_address(ptr noundef %28) #2\n  %30 = tail call i32 @gnttab_end_foreign_access(i32 noundef %24, i32 noundef %25, i64 noundef %29) #2\n  %31 = load ptr, ptr %5, align 8, !tbaa !14\n  %32 = getelementptr inbounds ptr, ptr %31, i64 %9\n  store ptr null, ptr %32, align 8, !tbaa !15\n  %33 = load i32, ptr @GRANT_INVALID_REF, align 4, !tbaa !5\n  %34 = load ptr, ptr %6, align 8, !tbaa !16\n  %35 = getelementptr inbounds i32, ptr %34, i64 %9\n  store i32 %33, ptr %35, align 4, !tbaa !5\n  %36 = load ptr, ptr %0, align 8, !tbaa !9\n  %37 = trunc i64 %9 to i32\n  %38 = tail call i32 @add_id_to_freelist(ptr noundef nonnull %7, ptr noundef %36, i32 noundef %37) #2\n  %39 = tail call i32 @dev_kfree_skb_irq(ptr noundef %17) #2\n  br label %40\n\n40:                                               ; preds = %8, %14\n  %41 = add nuw nsw i64 %9, 1\n  %42 = load i32, ptr @NET_TX_RING_SIZE, align 4, !tbaa !5\n  %43 = sext i32 %42 to i64\n  %44 = icmp slt i64 %41, %43\n  br i1 %44, label %8, label %45, !llvm.loop !17\n\n45:                                               ; preds = %40, %1\n  ret void\n}\n\ndeclare i64 @skb_entry_is_link(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @get_page(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @gnttab_end_foreign_access(i32 noundef, i32 noundef, i64 noundef) local_unnamed_addr #1\n\ndeclare i64 @page_address(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @add_id_to_freelist(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @dev_kfree_skb_irq(ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"netfront_queue\", !11, i64 0, !6, i64 8, !11, i64 16, !11, i64 24}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!13, !11, i64 0}\n!13 = !{!\"TYPE_3__\", !11, i64 0}\n!14 = !{!10, !11, i64 24}\n!15 = !{!11, !11, i64 0}\n!16 = !{!10, !11, i64 16}\n!17 = distinct !{!17, !18}\n!18 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_intel_dvo.c_intel_dvo_mode_valid.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function intel_dvo_mode_valid\n\t.type\tintel_dvo_mode_valid,@function\nintel_dvo_mode_valid:                   # @intel_dvo_mode_valid\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rsi, %r15\n\tmovq\t%rdi, %rbx\n\tcallq\tintel_attached_dvo@PLT\n\tmovq\t%rax, %r14\n\tmovq\t%rbx, %rdi\n\tcallq\tto_intel_connector@PLT\n\tmovq\t(%rax), %r12\n\tmovl\t(%rbx), %edi\n\tcallq\tto_i915@PLT\n\tmovl\tDRM_MODE_FLAG_DBLSCAN(%rip), %ecx\n\ttestl\t%ecx, 4(%r15)\n\tje\t.LBB0_3\n# %bb.1:\n\tmovl\tMODE_NO_DBLESCAN(%rip), %eax\n\tjmp\t.LBB0_2\n.LBB0_3:\n\tmovl\t(%rax), %eax\n\tmovq\t%r15, %rcx\n\ttestq\t%r12, %r12\n\tje\t.LBB0_8\n# %bb.4:\n\tmovq\t8(%r15), %rcx\n\tcmpq\t8(%r12), %rcx\n\tjg\t.LBB0_5\n# %bb.6:\n\tmovq\t16(%r15), %rdx\n\tmovq\t%r12, %rcx\n\tcmpq\t16(%r12), %rdx\n\tjle\t.LBB0_8\n.LBB0_5:\n\tmovl\tMODE_PANEL(%rip), %eax\n\tjmp\t.LBB0_2\n.LBB0_8:\n\tcmpl\t%eax, (%rcx)\n\tjle\t.LBB0_10\n# %bb.9:\n\tmovl\tMODE_CLOCK_HIGH(%rip), %eax\n.LBB0_2:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_10:\n\t.cfi_def_cfa_offset 48\n\tmovq\t(%r14), %rax\n\tmovq\t(%rax), %rax\n\tmovq\t%r14, %rdi\n\tmovq\t%r15, %rsi\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tjmpq\t*%rax                           # TAILCALL\n.Lfunc_end0:\n\t.size\tintel_dvo_mode_valid, .Lfunc_end0-intel_dvo_mode_valid\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tDRM_MODE_FLAG_DBLSCAN,@object   # @DRM_MODE_FLAG_DBLSCAN\n\t.bss\n\t.globl\tDRM_MODE_FLAG_DBLSCAN\n\t.p2align\t2\nDRM_MODE_FLAG_DBLSCAN:\n\t.long\t0                               # 0x0\n\t.size\tDRM_MODE_FLAG_DBLSCAN, 4\n\n\t.type\tMODE_NO_DBLESCAN,@object        # @MODE_NO_DBLESCAN\n\t.globl\tMODE_NO_DBLESCAN\n\t.p2align\t2\nMODE_NO_DBLESCAN:\n\t.long\t0                               # 0x0\n\t.size\tMODE_NO_DBLESCAN, 4\n\n\t.type\tMODE_PANEL,@object              # @MODE_PANEL\n\t.globl\tMODE_PANEL\n\t.p2align\t2\nMODE_PANEL:\n\t.long\t0                               # 0x0\n\t.size\tMODE_PANEL, 4\n\n\t.type\tMODE_CLOCK_HIGH,@object         # @MODE_CLOCK_HIGH\n\t.globl\tMODE_CLOCK_HIGH\n\t.p2align\t2\nMODE_CLOCK_HIGH:\n\t.long\t0                               # 0x0\n\t.size\tMODE_CLOCK_HIGH, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.drm_display_mode = type { i32, i32, i64, i64 }\n%struct.intel_dvo_device = type { i32, i64 }\n\n@DRM_MODE_FLAG_DBLSCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_NO_DBLESCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_PANEL = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_CLOCK_HIGH = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @intel_dvo_mode_valid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @intel_dvo_mode_valid(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @intel_attached_dvo(ptr noundef %0) #2\n  %4 = tail call ptr @to_intel_connector(ptr noundef %0) #2\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = load i32, ptr %0, align 4, !tbaa !10\n  %7 = tail call ptr @to_i915(i32 noundef %6) #2\n  %8 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 1\n  %9 = load i32, ptr %8, align 4, !tbaa !13\n  %10 = load i32, ptr @DRM_MODE_FLAG_DBLSCAN, align 4, !tbaa !15\n  %11 = and i32 %10, %9\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @MODE_NO_DBLESCAN, align 4, !tbaa !15\n  br label %34\n\n15:                                               ; preds = %26\n  %16 = load i32, ptr %7, align 4, !tbaa !16\n  %17 = load i32, ptr %1, align 8, !tbaa !18\n  %18 = icmp sgt i32 %17, %16\n  br i1 %18, label %19, label %21\n\n19:                                               ; preds = %15\n  %20 = load i32, ptr @MODE_CLOCK_HIGH, align 4, !tbaa !15\n  br label %34\n\n21:                                               ; preds = %15\n  %22 = icmp eq ptr %5, null\n  br i1 %22, label %30, label %23\n\n23:                                               ; preds = %21\n  %24 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 2\n  %25 = load i64, ptr %24, align 8, !tbaa !19\n  br label %26\n\n26:                                               ; preds = %23, %29\n  %27 = phi i64 [ %25, %23 ], [ %31, %29 ]\n  %28 = phi ptr [ %5, %23 ], [ %32, %29 ]\n  %29 = icmp sgt i64 %27, %28\n  br i1 %29, label %30, label %15\n\n30:                                               ; preds = %26, %21\n  %31 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 3\n  %32 = load i64, ptr %31, align 8, !tbaa !20\n  %33 = icmp sgt i64 %32, %28\n  br i1 %33, label %34, label %15\n\n34:                                               ; preds = %30, %19, %13\n  %35 = phi i32 [ %14, %13 ], [ %20, %19 ], [ %32, %30 ]\n  %36 = tail call i32 %3(ptr noundef %3, ptr noundef nonnull %1) #2\n  ret i32 %35\n}\n\ndeclare ptr @intel_attached_dvo(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_intel_connector(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_i915(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"intel_connector\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"drm_connector\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!14, !12, i64 4}\n!14 = !{!\"drm_display_mode\", !12, i64 0, !12, i64 4, !15, i64 8, !15, i64 16}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !12, i64 0}\n!17 = !{!\"drm_i915_private\", !12, i64 0}\n!18 = !{!14, !12, i64 0}\n!19 = !{!14, !15, i64 8}\n!20 = !{!14, !15, i64 16}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.drm_display_mode = type { i32, i32, i64, i64 }\n%struct.intel_dvo_device = type { i32, i64 }\n\n@DRM_MODE_FLAG_DBLSCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_NO_DBLESCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_PANEL = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_CLOCK_HIGH = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @intel_dvo_mode_valid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @intel_dvo_mode_valid(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @intel_attached_dvo(ptr noundef %0) #2\n  %4 = tail call ptr @to_intel_connector(ptr noundef %0) #2\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = load i32, ptr %0, align 4, !tbaa !10\n  %7 = tail call ptr @to_i915(i32 noundef %6) #2\n  %8 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 1\n  %9 = load i32, ptr %8, align 4, !tbaa !13\n  %10 = load i32, ptr @DRM_MODE_FLAG_DBLSCAN, align 4, !tbaa !15\n  %11 = and i32 %10, %9\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @MODE_NO_DBLESCAN, align 4, !tbaa !15\n  br label %34\n\n15:                                               ; preds = %26\n  %16 = load i32, ptr %7, align 4, !tbaa !16\n  %17 = load i32, ptr %1, align 8, !tbaa !18\n  %18 = icmp sgt i32 %17, %16\n  br i1 %18, label %19, label %22\n\n19:                                               ; preds = %15\n  %20 = load i32, ptr @MODE_CLOCK_HIGH, align 4, !tbaa !15\n  %21 = load ptr, ptr %3, align 8, !tbaa !19\n  br label %34\n\n22:                                               ; preds = %15\n  %23 = icmp eq ptr %5, null\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %22\n  %25 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 2\n  %26 = load i64, ptr %25, align 8, !tbaa !21\n  %27 = getelementptr inbounds %struct.intel_dvo_device, ptr %5, i64 0, i32 1\n  %28 = load i64, ptr %27, align 8, !tbaa !22\n  %29 = icmp sgt i64 %26, %28\n  br i1 %29, label %30, label %34\n\n30:                                               ; preds = %24\n  %31 = load i32, ptr @MODE_PANEL, align 4, !tbaa !15\n  %32 = load i64, ptr %25, align 8, !tbaa !21\n  %33 = load i64, ptr %5, align 8, !tbaa !24\n  br label %34\n\n34:                                               ; preds = %24, %30, %22, %19, %13\n  %35 = phi i32 [ %14, %13 ], [ %21, %19 ], [ %31, %30 ], [ %16, %22 ], [ %33, %24 ]\n  ret i32 %35\n}\n\ndeclare ptr @intel_attached_dvo(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_intel_connector(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_i915(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"intel_connector\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"drm_connector\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!14, !12, i64 4}\n!14 = !{!\"drm_display_mode\", !12, i64 0, !12, i64 4, !15, i64 8, !15, i64 16}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !12, i64 0}\n!17 = !{!\"drm_i915_private\", !12, i64 0}\n!18 = !{!14, !12, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"intel_dvo_device\", !12, i64 0, !15, i64 8}\n!21 = !{!14, !15, i64 8}\n!22 = !{!20, !15, i64 8}\n!23 = !{!23, !12, i64 0}\n!24 = !{!20, !15, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.drm_display_mode = type { i32, i32, i64, i64 }\n%struct.intel_dvo_device = type { i32, i64 }\n\n@DRM_MODE_FLAG_DBLSCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_NO_DBLESCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_PANEL = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_CLOCK_HIGH = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @intel_dvo_mode_valid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @intel_dvo_mode_valid(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @intel_attached_dvo(ptr noundef %0) #2\n  %4 = tail call ptr @to_intel_connector(ptr noundef %0) #2\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = load i32, ptr %0, align 4, !tbaa !10\n  %7 = tail call ptr @to_i915(i32 noundef %6) #2\n  %8 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 1\n  %9 = load i32, ptr %8, align 4, !tbaa !13\n  %10 = load i32, ptr @DRM_MODE_FLAG_DBLSCAN, align 4, !tbaa !15\n  %11 = and i32 %10, %9\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @MODE_NO_DBLESCAN, align 4, !tbaa !15\n  br label %33\n\n15:                                               ; preds = %25\n  %16 = load i32, ptr %7, align 4, !tbaa !16\n  %17 = load i32, ptr %1, align 8, !tbaa !18\n  %18 = icmp sgt i32 %17, %16\n  br i1 %18, label %19, label %22\n\n19:                                               ; preds = %15\n  %20 = load i32, ptr @MODE_CLOCK_HIGH, align 4, !tbaa !15\n  %21 = load ptr, ptr %3, align 8, !tbaa !19\n  br label %33\n\n22:                                               ; preds = %15\n  %23 = icmp eq ptr %5, null\n  br i1 %23, label %28, label %24\n\n24:                                               ; preds = %22\n  %25 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 2\n  %26 = load i64, ptr %25, align 8, !tbaa !21\n  %27 = getelementptr inbounds %struct.intel_dvo_device, ptr %5, i64 0, i32 1\n  br label %28\n\n28:                                               ; preds = %24, %22\n  %29 = phi i64 [ %26, %24 ], [ 0, %22 ]\n  %30 = phi ptr [ %27, %24 ], [ %5, %22 ]\n  %31 = load i32, ptr %30, align 8, !tbaa !22\n  %32 = icmp sgt i32 %31, %17\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %28, %19, %13\n  %34 = phi i32 [ %14, %13 ], [ %20, %19 ], [ %17, %28 ]\n  ret i32 %34\n\n35:                                               ; preds = %36\n  %37 = load i32, ptr %3, align 8, !tbaa !19\n  %38 = load ptr, ptr %3, align 8, !tbaa !19\n  %39 = tail call i32 %38(ptr noundef nonnull %3, ptr noundef nonnull %1) #2\n  ret i32 %39\n\n40:                                               ; preds = %35\n  ret i32 %37\n\n41:                                               ; preds = %35\n  ret i32 %37\n\n42:                                               ; preds = %35\n  ret i32 %37\n\n43:                                               ; preds = %35\n  ret i32 %37\n\n44:                                               ; preds = %35\n  ret i32 %37\n\n45:                                               ; preds = %35\n  ret i32 %37\n\n46:                                               ; preds = %35\n  ret i32 %37\n\n47:                                               ; preds = %35\n  ret i32 %37\n\n48:                                               ; preds = %35\n  ret i32 %37\n\n49:                                               ; preds = %35\n  ret i32 %37\n\n50:                                               ; preds = %35\n  ret i32 %37\n\n51:                                               ; preds = %35\n  ret i32 %37\n\n52:                                               ; preds = %35\n  ret i32 %37\n\n53:                                               ; preds = %35\n  ret i32 %37\n\n54:                                               ; preds = %35\n  ret i32 %37\n\n55:                                               ; preds = %35\n  ret i32 %37\n\n56:                                               ; preds = %35\n  ret i32 %37\n\n57:                                               ; preds = %35\n  ret i32 %37\n\n58:                                               ; preds = %35\n  ret i32 %37\n\n59:                                               ; preds = %35\n  ret i32 %37\n\n60:                                               ; preds = %35\n  ret i32 %37\n\n61:                                               ; preds = %35\n  ret i32 %37\n\n62:                                               ; preds = %35\n  ret i32 %37\n\n63:                                               ; preds = %35\n  ret i32 %37\n\n64:                                               ; preds = %35\n  ret i32 %37\n\n65:                                               ; preds = %35\n  ret i32 %37\n\n66:                                               ; preds = %35\n  ret i32 %37\n\n67:                                               ; preds = %35\n  ret i32 %37\n\n68:                                               ; preds = %35\n  ret i32 %37\n\n69:                                               ; preds = %35\n  ret i32 %37\n\n70:                                               ; preds = %35\n  ret i32 %37\n\n71:                                               ; preds = %35\n  ret i32 %37\n\n72:                                               ; preds = %35\n  ret i32 %37\n\n73:                                               ; preds = %35\n  ret i32 %37\n\n74:                                               ; preds = %35\n  ret i32 %37\n\n75:                                               ; preds = %35\n  ret i32 %37\n\n76:                                               ; preds = %35\n  ret i32 %37\n\n77:                                               ; preds = %35\n  ret i32 %37\n\n78:                                               ; preds = %35\n  ret i32 %37\n\n79:                                               ; preds = %35\n  ret i32 %37\n\n80:                                               ; preds = %35\n  ret i32 %37\n\n81:                                               ; preds = %35\n  ret i32 %37\n\n82:                                               ; preds = %35\n  ret i32 %37\n\n83:                                               ; preds = %35\n  ret i32 %37\n\n84:                                               ; preds = %35\n  ret i32 %37\n\n85:                                               ; preds = %35\n  ret i32 %37\n\n86:                                               ; preds = %35\n  ret i32 %37\n\n87:                                               ; preds = %35\n  ret i32 %37\n\n88:                                               ; preds = %35\n  ret i32 %37\n\n89:                                               ; preds = %35\n  ret i32 %37\n\n90:                                               ; preds = %35\n  ret i32 %37\n\n91:                                               ; preds = %35\n  ret i32 %37\n\n92:                                               ; preds = %35\n  ret i32 %37\n\n93:                                               ; preds = %35\n  ret i32 %37\n\n94:                                               ; preds = %35\n  ret i32 %37\n\n95:                                               ; preds = %35\n  ret i32 %37\n\n96:                                               ; preds = %35\n  ret i32 %37\n\n97:                                               ; preds = %35\n  ret i32 %37\n\n98:                                               ; preds = %35\n  ret i32 %37\n\n99:                                               ; preds = %35\n  ret i32 %37\n\n100:                                              ; preds = %35\n  ret i32 %37\n\n101:                                              ; preds = %35\n  ret i32 %37\n\n102:                                              ; preds = %35\n  ret i32 %37\n\n103:                                              ; preds = %35\n  ret i32 %37\n\n104:                                              ; preds = %35\n  ret i32 %37\n\n105:                                              ; preds = %35\n  ret i32 %37\n\n106:                                              ; preds = %35\n  ret i32 %37\n\n107:                                              ; preds = %35\n  ret i32 %37\n\n108:                                              ; preds = %35\n  ret i32 %37\n\n109:                                              ; preds = %35\n  ret i32 %37\n\n110:                                              ; preds = %35\n  ret i32 %37", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.drm_display_mode = type { i32, i32, i64, i64 }\n%struct.intel_dvo_device = type { i32, i64 }\n\n@DRM_MODE_FLAG_DBLSCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_NO_DBLESCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_PANEL = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_CLOCK_HIGH = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @intel_dvo_mode_valid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @intel_dvo_mode_valid(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @intel_attached_dvo(ptr noundef %0) #2\n  %4 = tail call ptr @to_intel_connector(ptr noundef %0) #2\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = load i32, ptr %0, align 4, !tbaa !10\n  %7 = tail call ptr @to_i915(i32 noundef %6) #2\n  %8 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 1\n  %9 = load i32, ptr %8, align 4, !tbaa !13\n  %10 = load i32, ptr @DRM_MODE_FLAG_DBLSCAN, align 4, !tbaa !15\n  %11 = and i32 %10, %9\n  %12 = icmp eq i32 %11, 0\n  br i1 %12, label %16, label %13\n\n13:                                               ; preds = %2\n  %14 = load i32, ptr @MODE_NO_DBLESCAN, align 4, !tbaa !15\n  br label %34\n\n15:                                               ; preds = %25\n  %16 = load i32, ptr %7, align 4, !tbaa !16\n  %17 = load i32, ptr %1, align 8, !tbaa !18\n  %18 = icmp sgt i32 %17, %16\n  br i1 %18, label %19, label %22\n\n19:                                               ; preds = %15\n  %20 = load i32, ptr @MODE_CLOCK_HIGH, align 4, !tbaa !15\n  %21 = load ptr, ptr %3, align 8, !tbaa !19\n  br label %34\n\n22:                                               ; preds = %15\n  %23 = icmp eq ptr %5, null\n  br i1 %23, label %29, label %24\n\n24:                                               ; preds = %22\n  %25 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 2\n  %26 = load i64, ptr %25, align 8, !tbaa !21\n  %27 = getelementptr inbounds %struct.intel_dvo_device, ptr %5, i64 0, i32 1\n  %28 = load i64, ptr %27, align 8, !tbaa !22\n  br label %29\n\n29:                                               ; preds = %24, %22\n  %30 = phi i64 [ %26, %24 ], [ 0, %22 ]\n  %31 = phi i64 [ %28, %24 ], [ 0, %22 ]\n  %32 = icmp sgt i64 %30, %31\n  br i1 %32, label %33, label %36\n\n33:                                               ; preds = %29\n  br label %34\n\n34:                                               ; preds = %33, %19, %13\n  %35 = phi i32 [ %14, %13 ], [ %20, %19 ], [ %14, %33 ]\n  br label %36\n\n36:                                               ; preds = %34, %29\n  %37 = phi i32 [ %35, %34 ], [ %14, %29 ]\n  %38 = tail call i32 %37(ptr noundef nonnull %3, ptr noundef nonnull %1) #2\n  ret i32 %38\n}\n\ndeclare ptr @intel_attached_dvo(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_intel_connector(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_i915(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"intel_connector\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"drm_connector\", !12, i64 0}\n!12 = !{!\"int\", !8, i64 0}\n!13 = !{!14, !12, i64 4}\n!14 = !{!\"drm_display_mode\", !12, i64 0, !12, i64 4, !15, i64 8, !15, i64 16}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !12, i64 0}\n!17 = !{!\"drm_i915_private\", !12, i64 0}\n!18 = !{!14, !12, i64 0}\n!19 = !{!20, !7, i64 0}\n!20 = !{!\"intel_dvo_device\", !12, i64 0, !15, i64 8}\n!21 = !{!14, !15, i64 8}\n!22 = !{!20, !15, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/gpu/drm/i915/display/extr_intel_dvo.c_intel_dvo_mode_valid.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.drm_display_mode = type { i32, i32, i64, i64 }\n\n@DRM_MODE_FLAG_DBLSCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_NO_DBLESCAN = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_PANEL = dso_local local_unnamed_addr global i32 0, align 4\n@MODE_CLOCK_HIGH = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @intel_dvo_mode_valid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @intel_dvo_mode_valid(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @intel_attached_dvo(ptr noundef %0) #2\n  %4 = tail call ptr @to_intel_connector(ptr noundef %0) #2\n  %5 = load ptr, ptr %4, align 8, !tbaa !5\n  %6 = load i32, ptr %0, align 4, !tbaa !11\n  %7 = tail call ptr @to_i915(i32 noundef %6) #2\n  %8 = load i32, ptr %7, align 4, !tbaa !14\n  %9 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 1\n  %10 = load i32, ptr %9, align 4, !tbaa !16\n  %11 = load i32, ptr @DRM_MODE_FLAG_DBLSCAN, align 4, !tbaa !19\n  %12 = and i32 %11, %10\n  %13 = icmp eq i32 %12, 0\n  br i1 %13, label %16, label %14\n\n14:                                               ; preds = %2\n  %15 = load i32, ptr @MODE_NO_DBLESCAN, align 4, !tbaa !19\n  br label %44\n\n16:                                               ; preds = %2\n  %17 = icmp eq ptr %5, null\n  br i1 %17, label %34, label %18\n\n18:                                               ; preds = %16\n  %19 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 2\n  %20 = load i64, ptr %19, align 8, !tbaa !20\n  %21 = getelementptr inbounds %struct.drm_display_mode, ptr %5, i64 0, i32 2\n  %22 = load i64, ptr %21, align 8, !tbaa !20\n  %23 = icmp sgt i64 %20, %22\n  br i1 %23, label %24, label %26\n\n24:                                               ; preds = %18\n  %25 = load i32, ptr @MODE_PANEL, align 4, !tbaa !19\n  br label %44\n\n26:                                               ; preds = %18\n  %27 = getelementptr inbounds %struct.drm_display_mode, ptr %1, i64 0, i32 3\n  %28 = load i64, ptr %27, align 8, !tbaa !21\n  %29 = getelementptr inbounds %struct.drm_display_mode, ptr %5, i64 0, i32 3\n  %30 = load i64, ptr %29, align 8, !tbaa !21\n  %31 = icmp sgt i64 %28, %30\n  br i1 %31, label %32, label %34\n\n32:                                               ; preds = %26\n  %33 = load i32, ptr @MODE_PANEL, align 4, !tbaa !19\n  br label %44\n\n34:                                               ; preds = %26, %16\n  %35 = phi ptr [ %1, %16 ], [ %5, %26 ]\n  %36 = load i32, ptr %35, align 8, !tbaa !22\n  %37 = icmp sgt i32 %36, %8\n  br i1 %37, label %38, label %40\n\n38:                                               ; preds = %34\n  %39 = load i32, ptr @MODE_CLOCK_HIGH, align 4, !tbaa !19\n  br label %44\n\n40:                                               ; preds = %34\n  %41 = load ptr, ptr %3, align 8, !tbaa !23\n  %42 = load ptr, ptr %41, align 8, !tbaa !26\n  %43 = tail call i32 %42(ptr noundef nonnull %3, ptr noundef nonnull %1) #2\n  br label %44\n\n44:                                               ; preds = %40, %38, %32, %24, %14\n  %45 = phi i32 [ %15, %14 ], [ %25, %24 ], [ %33, %32 ], [ %39, %38 ], [ %43, %40 ]\n  ret i32 %45\n}\n\ndeclare ptr @intel_attached_dvo(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_intel_connector(ptr noundef) local_unnamed_addr #1\n\ndeclare ptr @to_i915(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !8, i64 0}\n!6 = !{!\"TYPE_8__\", !7, i64 0}\n!7 = !{!\"TYPE_7__\", !8, i64 0}\n!8 = !{!\"any pointer\", !9, i64 0}\n!9 = !{!\"omnipotent char\", !10, i64 0}\n!10 = !{!\"Simple C/C++ TBAA\"}\n!11 = !{!12, !13, i64 0}\n!12 = !{!\"drm_connector\", !13, i64 0}\n!13 = !{!\"int\", !9, i64 0}\n!14 = !{!15, !13, i64 0}\n!15 = !{!\"TYPE_9__\", !13, i64 0}\n!16 = !{!17, !13, i64 4}\n!17 = !{!\"drm_display_mode\", !13, i64 0, !13, i64 4, !18, i64 8, !18, i64 16}\n!18 = !{!\"long\", !9, i64 0}\n!19 = !{!13, !13, i64 0}\n!20 = !{!17, !18, i64 8}\n!21 = !{!17, !18, i64 16}\n!22 = !{!17, !13, i64 0}\n!23 = !{!24, !8, i64 0}\n!24 = !{!\"intel_dvo\", !25, i64 0}\n!25 = !{!\"TYPE_10__\", !8, i64 0}\n!26 = !{!27, !8, i64 0}\n!27 = !{!\"TYPE_6__\", !8, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_if_bge.c_bge_chipid.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function bge_chipid\n\t.type\tbge_chipid,@function\nbge_chipid:                             # @bge_chipid\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 24\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 32\n\t.cfi_offset %rbx, -24\n\t.cfi_offset %rbp, -16\n\tmovl\t%edi, %ebx\n\tmovl\tBGE_PCI_MISC_CTL(%rip), %esi\n\tmovl\t$4, %edx\n\tcallq\tpci_read_config@PLT\n\tmovl\t%eax, %ebp\n\tmovzbl\tBGE_PCIMISCCTL_ASICREV_SHIFT(%rip), %ecx\n\tsarl\t%cl, %ebp\n\tmovl\t%ebp, %edi\n\tcallq\tBGE_ASICREV@PLT\n\tcmpq\tBGE_ASICREV_USE_PRODID_REG(%rip), %rax\n\tjne\t.LBB0_5\n# %bb.1:\n\tmovl\t%ebx, %edi\n\tcallq\tpci_get_device@PLT\n\taddl\t$-128, %eax\n\tcmpl\t$20, %eax\n\tja\t.LBB0_9\n# %bb.2:\n\tmovl\t$7035, %ecx                     # imm = 0x1B7B\n\tbtl\t%eax, %ecx\n\tjb\t.LBB0_8\n# %bb.3:\n\tmovl\t$1565828, %ecx                  # imm = 0x17E484\n\tbtl\t%eax, %ecx\n\tjae\t.LBB0_4\n# %bb.6:\n\tmovl\tBGE_PCI_GEN2_PRODID_ASICREV(%rip), %esi\n\tjmp\t.LBB0_7\n.LBB0_8:\n\tmovl\tBGE_PCI_GEN15_PRODID_ASICREV(%rip), %esi\n.LBB0_7:\n\tmovl\t%ebx, %edi\n\tmovl\t$4, %edx\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tjmp\tpci_read_config@PLT             # TAILCALL\n.LBB0_9:\n\t.cfi_def_cfa_offset 32\n\tmovl\tBGE_PCI_PRODID_ASICREV(%rip), %esi\n\tjmp\t.LBB0_7\n.LBB0_4:\n\tmovl\tBGE_CHIPID_BCM5720_A0(%rip), %ebp\n.LBB0_5:\n\tmovl\t%ebp, %eax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 24\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tbge_chipid, .Lfunc_end0-bge_chipid\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tBGE_PCI_MISC_CTL,@object        # @BGE_PCI_MISC_CTL\n\t.bss\n\t.globl\tBGE_PCI_MISC_CTL\n\t.p2align\t2\nBGE_PCI_MISC_CTL:\n\t.long\t0                               # 0x0\n\t.size\tBGE_PCI_MISC_CTL, 4\n\n\t.type\tBGE_PCIMISCCTL_ASICREV_SHIFT,@object # @BGE_PCIMISCCTL_ASICREV_SHIFT\n\t.globl\tBGE_PCIMISCCTL_ASICREV_SHIFT\n\t.p2align\t2\nBGE_PCIMISCCTL_ASICREV_SHIFT:\n\t.long\t0                               # 0x0\n\t.size\tBGE_PCIMISCCTL_ASICREV_SHIFT, 4\n\n\t.type\tBGE_ASICREV_USE_PRODID_REG,@object # @BGE_ASICREV_USE_PRODID_REG\n\t.globl\tBGE_ASICREV_USE_PRODID_REG\n\t.p2align\t3\nBGE_ASICREV_USE_PRODID_REG:\n\t.quad\t0                               # 0x0\n\t.size\tBGE_ASICREV_USE_PRODID_REG, 8\n\n\t.type\tBGE_CHIPID_BCM5720_A0,@object   # @BGE_CHIPID_BCM5720_A0\n\t.globl\tBGE_CHIPID_BCM5720_A0\n\t.p2align\t2\nBGE_CHIPID_BCM5720_A0:\n\t.long\t0                               # 0x0\n\t.size\tBGE_CHIPID_BCM5720_A0, 4\n\n\t.type\tBGE_PCI_GEN2_PRODID_ASICREV,@object # @BGE_PCI_GEN2_PRODID_ASICREV\n\t.globl\tBGE_PCI_GEN2_PRODID_ASICREV\n\t.p2align\t2\nBGE_PCI_GEN2_PRODID_ASICREV:\n\t.long\t0                               # 0x0\n\t.size\tBGE_PCI_GEN2_PRODID_ASICREV, 4\n\n\t.type\tBGE_PCI_GEN15_PRODID_ASICREV,@object # @BGE_PCI_GEN15_PRODID_ASICREV\n\t.globl\tBGE_PCI_GEN15_PRODID_ASICREV\n\t.p2align\t2\nBGE_PCI_GEN15_PRODID_ASICREV:\n\t.long\t0                               # 0x0\n\t.size\tBGE_PCI_GEN15_PRODID_ASICREV, 4\n\n\t.type\tBGE_PCI_PRODID_ASICREV,@object  # @BGE_PCI_PRODID_ASICREV\n\t.globl\tBGE_PCI_PRODID_ASICREV\n\t.p2align\t2\nBGE_PCI_PRODID_ASICREV:\n\t.long\t0                               # 0x0\n\t.size\tBGE_PCI_PRODID_ASICREV, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@BGE_PCI_MISC_CTL = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCIMISCCTL_ASICREV_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_ASICREV_USE_PRODID_REG = dso_local local_unnamed_addr global i64 0, align 8\n@BGE_CHIPID_BCM5720_A0 = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN2_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN15_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @bge_chipid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @bge_chipid(i32 noundef %0) #0 {\n  %2 = load i32, ptr @BGE_PCI_MISC_CTL, align 4, !tbaa !5\n  %3 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %2, i32 noundef 4) #2\n  %4 = load i32, ptr @BGE_PCIMISCCTL_ASICREV_SHIFT, align 4, !tbaa !5\n  %5 = ashr i32 %3, %4\n  %6 = tail call i64 @BGE_ASICREV(i32 noundef %5) #2\n  %7 = load i64, ptr @BGE_ASICREV_USE_PRODID_REG, align 8, !tbaa !9\n  %8 = icmp eq i64 %6, %7\n  br i1 %8, label %9, label %27\n\n9:                                                ; preds = %1\n  %10 = tail call i32 @pci_get_device(i32 noundef %0) #2\n  switch i32 %10, label %27 [\n    i32 130, label %11\n    i32 131, label %11\n    i32 132, label %11\n    i32 133, label %11\n    i32 134, label %11\n    i32 135, label %11\n    i32 136, label %11\n    i32 137, label %11\n    i32 138, label %11\n    i32 139, label %11\n    i32 140, label %11\n    i32 141, label %11\n    i32 142, label %11\n    i32 143, label %11\n    i32 144, label %11\n    i32 145, label %11\n    i32 146, label %11\n    i32 147, label %11\n    i32 148, label %11\n    i32 149, label %11\n    i32 150, label %11\n    i32 151, label %11\n    i32 152, label %11\n    i32 153, label %11\n    i32 154, label %11\n    i32 155, label %11\n    i32 156, label %11\n    i32 157, label %11\n    i32 158, label %11\n    i32 159, label %11\n    i32 160, label %11\n    i32 161, label %11\n    i32 162, label %11\n    i32 163, label %11\n    i32 164, label %11\n    i32 165, label %11\n    i32 166, label %11\n    i32 167, label %11\n    i32 168, label %11\n    i32 169, label %11\n    i32 170, label %11\n    i32 171, label %11\n    i32 172, label %11\n    i32 173, label %11\n    i32 174, label %11\n    i32 175, label %11\n    i32 176, label %11\n    i32 177, label %11\n    i32 178, label %11\n    i32 179, label %11\n    i32 180, label %11\n    i32 181, label %11\n    i32 182, label %11\n    i32 183, label %11\n    i32 184, label %11\n    i32 185, label %11\n    i32 186, label %11\n    i32 187, label %11\n    i32 188, label %11\n    i32 189, label %11\n    i32 190, label %11\n    i32 191, label %11\n    i32 192, label %11\n    i32 193, label %11\n    i32 194, label %11\n    i32 195, label %11\n    i32 196, label %11\n    i32 197, label %11\n    i32 198, label %11\n    i32 199, label %11\n    i32 200, label %11\n    i32 201, label %11\n    i32 202, label %11\n    i32 203, label %11\n    i32 204, label %11\n    i32 205, label %11\n    i32 206, label %11\n    i32 207, label %11\n    i32 208, label %11\n    i32 209, label %11\n    i32 210, label %11\n    i32 211, label %11\n    i32 212, label %11\n    i32 213, label %11\n    i32 214, label %11\n    i32 215, label %11\n    i32 216, label %11\n    i32 217, label %11\n    i32 218, label %11\n    i32 219, label %11\n    i32 220, label %11\n    i32 221, label %11\n    i32 222, label %11\n    i32 223, label %11\n    i32 224, label %11\n    i32 225, label %11\n    i32 226, label %11\n    i32 227, label %11\n    i32 228, label %11\n    i32 229, label %11\n    i32 230, label %11\n    i32 231, label %11\n    i32 232, label %11\n    i32 233, label %11\n    i32 234, label %11\n    i32 235, label %11\n    i32 236, label %11\n    i32 237, label %11\n    i32 238, label %11\n    i32 239, label %11\n    i32 240, label %11\n    i32 241, label %11\n    i32 242, label %11\n    i32 243, label %11\n    i32 244, label %11\n    i32 245, label %11\n    i32 246, label %11\n    i32 247, label %11\n    i32 248, label %11\n    i32 249, label %11\n    i32 250, label %11\n    i32 251, label %11\n    i32 252, label %11\n    i32 253, label %11\n    i32 254, label %11\n    i32 255, label %11\n  ]\n\n11:                                               ; predstarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@BGE_PCI_MISC_CTL = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCIMISCCTL_ASICREV_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_ASICREV_USE_PRODID_REG = dso_local local_unnamed_addr global i64 0, align 8\n@BGE_CHIPID_BCM5720_A0 = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN2_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN15_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @bge_chipid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @bge_chipid(i32 noundef %0) #0 {\n  %2 = load i32, ptr @BGE_PCI_MISC_CTL, align 4, !tbaa !5\n  %3 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %2, i32 noundef 4) #2\n  %4 = load i32, ptr @BGE_PCIMISCCTL_ASICREV_SHIFT, align 4, !tbaa !5\n  %5 = ashr i32 %3, %4\n  %6 = tail call i64 @BGE_ASICREV(i32 noundef %5) #2\n  %7 = load i64, ptr @BGE_ASICREV_USE_PRODID_REG, align 8, !tbaa !9\n  %8 = icmp eq i64 %6, %7\n  br i1 %8, label %9, label %27\n\n9:                                                ; preds = %1\n  %10 = tail call i32 @pci_get_device(i32 noundef %0) #2\n  switch i32 %10, label %27 [\n    i32 136, label %11\n    i32 135, label %11\n    i32 134, label %11\n    i32 133, label %11\n    i32 132, label %11\n    i32 131, label %11\n    i32 130, label %11\n    i32 129, label %11\n    i32 128, label %11\n    i32 127, label %11\n    i32 126, label %11\n    i32 125, label %11\n    i32 124, label %11\n    i32 123, label %11\n    i32 122, label %11\n    i32 121, label %11\n    i32 120, label %11\n    i32 119, label %11\n    i32 118, label %11\n    i32 117, label %11\n    i32 116, label %11\n    i32 115, label %11\n    i32 114, label %11\n    i32 113, label %11\n    i32 112, label %11\n    i32 111, label %11\n    i32 110, label %11\n    i32 109, label %11\n    i32 108, label %11\n    i32 107, label %11\n    i32 106, label %11\n    i32 105, label %11\n    i32 104, label %11\n    i32 103, label %11\n    i32 102, label %11\n    i32 101, label %11\n    i32 100, label %11\n    i32 99, label %11\n    i32 98, label %11\n    i32 97, label %11\n    i32 96, label %11\n    i32 95, label %11\n    i32 94, label %11\n    i32 93, label %11\n    i32 92, label %11\n    i32 91, label %11\n    i32 90, label %11\n    i32 89, label %11\n    i32 88, label %11\n    i32 87, label %11\n    i32 86, label %11\n    i32 85, label %11\n    i32 84, label %11\n    i32 83, label %11\n    i32 82, label %11\n    i32 81, label %11\n    i32 80, label %11\n    i32 79, label %11\n    i32 78, label %11\n    i32 77, label %11\n    i32 76, label %11\n    i32 75, label %11\n    i32 74, label %11\n    i32 73, label %11\n    i32 72, label %11\n    i32 71, label %11\n    i32 70, label %11\n    i32 69, label %11\n    i32 68, label %11\n    i32 67, label %11\n    i32 66, label %11\n    i32 65, label %11\n    i32 64, label %11\n    i32 63, label %11\n    i32 62, label %11\n    i32 61, label %11\n    i32 60, label %11\n    i32 59, label %11\n    i32 58, label %11\n    i32 57, label %11\n    i32 56, label %11\n    i32 55, label %11\n    i32 54, label %11\n    i32 53, label %11\n    i32 52, label %11\n    i32 51, label %11\n    i32 50, label %11\n    i32 49, label %11\n    i32 48, label %11\n    i32 47, label %11\n    i32 46, label %11\n    i32 45, label %11\n    i32 44, label %11\n    i32 43, label %11\n    i32 42, label %11\n    i32 41, label %11\n    i32 40, label %11\n    i32 39, label %11\n    i32 38, label %11\n    i32 37, label %11\n    i32 36, label %11\n    i32 35, label %11\n    i32 34, label %11\n    i32 33, label %11\n    i32 32, label %11\n    i32 31, label %11\n    i32 30, label %11\n    i32 29, label %11\n    i32 28, label %11\n    i32 27, label %11\n    i32 26, label %11\n    i32 25, label %11\n    i32 24, label %11\n    i32 23, label %11\n    i32 22, label %11\n    i32 21, label %11\n    i32 20, label %11\n  ]\n\n11:                                               ; predstarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@BGE_PCI_MISC_CTL = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCIMISCCTL_ASICREV_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_ASICREV_USE_PRODID_REG = dso_local local_unnamed_addr global i64 0, align 8\n@BGE_CHIPID_BCM5720_A0 = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN2_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN15_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @bge_chipid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @bge_chipid(i32 noundef %0) #0 {\n  %2 = load i32, ptr @BGE_PCI_MISC_CTL, align 4, !tbaa !5\n  %3 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %2, i32 noundef 4) #2\n  %4 = load i32, ptr @BGE_PCIMISCCTL_ASICREV_SHIFT, align 4, !tbaa !5\n  %5 = ashr i32 %3, %4\n  %6 = tail call i64 @BGE_ASICREV(i32 noundef %5) #2\n  %7 = load i64, ptr @BGE_ASICREV_USE_PRODID_REG, align 8, !tbaa !9\n  %8 = icmp eq i64 %6, %7\n  br i1 %8, label %9, label %27\n\n9:                                                ; preds = %1\n  %10 = tail call i32 @pci_get_device(i32 noundef %0) #2\n  switch i32 %10, label %27 [\n    i32 130, label %11\n    i32 129, label %11\n    i32 131, label %11\n    i32 128, label %11\n    i32 132, label %11\n    i32 133, label %11\n    i32 134, label %11\n    i32 135, label %11\n    i32 136, label %11\n    i32 137, label %11\n    i32 138, label %11\n    i32 139, label %11\n    i32 140, label %11\n    i32 141, label %11\n    i32 142, label %11\n    i32 143, label %11\n    i32 144, label %11\n    i32 145, label %11\n    i32 146, label %11\n    i32 147, label %11\n    i32 148, label %11\n    i32 149, label %11\n    i32 150, label %11\n    i32 151, label %11\n    i32 152, label %11\n    i32 153, label %11\n    i32 154, label %11\n    i32 155, label %11\n    i32 156, label %11\n    i32 157, label %11\n    i32 158, label %11\n    i32 159, label %11\n    i32 160, label %11\n    i32 161, label %11\n    i32 162, label %11\n    i32 163, label %11\n    i32 164, label %11\n    i32 165, label %11\n    i32 166, label %11\n    i32 167, label %11\n    i32 168, label %11\n    i32 169, label %11\n    i32 170, label %11\n    i32 171, label %11\n    i32 172, label %11\n    i32 173, label %11\n    i32 174, label %11\n    i32 175, label %11\n    i32 176, label %11\n    i32 177, label %11\n    i32 178, label %11\n    i32 179, label %11\n    i32 180, label %11\n    i32 181, label %11\n    i32 182, label %11\n    i32 183, label %11\n    i32 184, label %11\n    i32 185, label %11\n    i32 186, label %11\n    i32 187, label %11\n    i32 188, label %11\n    i32 189, label %11\n    i32 190, label %11\n    i32 191, label %11\n    i32 192, label %11\n    i32 193, label %11\n    i32 194, label %11\n    i32 195, label %11\n    i32 196, label %11\n    i32 197, label %11\n    i32 198, label %11\n    i32 199, label %11\n    i32 200, label %11\n    i32 201, label %11\n    i32 202, label %11\n    i32 203, label %11\n    i32 204, label %11\n    i32 205, label %11\n    i32 206, label %11\n    i32 207, label %11\n    i32 208, label %11\n    i32 209, label %11\n    i32 210, label %11\n    i32 211, label %11\n    i32 212, label %11\n    i32 213, label %11\n    i32 214, label %11\n    i32 215, label %11\n    i32 216, label %11\n    i32 217, label %11\n    i32 218, label %11\n    i32 219, label %11\n    i32 220, label %11\n    i32 221, label %11\n    i32 222, label %11\n    i32 223, label %11\n    i32 224, label %11\n    i32 225, label %11\n    i32 226, label %11\n    i32 227, label %11\n    i32 228, label %11\n    i32 229, label %11\n    i32 230, label %11\n    i32 231, label %11\n    i32 232, label %11\n    i32 233, label %11\n    i32 234, label %11\n    i32 235, label %11\n    i32 236, label %11\n    i32 237, label %11\n    i32 238, label %11\n    i32 239, label %11\n    i32 240, label %11\n    i32 241, label %11\n    i32 242, label %11\n    i32 243, label %11\n    i32 244, label %11\n    i32 245, label %11\n    i32 246, label %11\n    i32 247, label %11\n    i32 248, label %11\n    i32 249, label %11\n    i32 250, label %11\n    i32 251, label %11\n    i32 252, label %11\n    i32 253, label %11\n    i32 254, label %11\n    i32 255, label %11\n  ]\n\n11:                                               ; predstarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@BGE_PCI_MISC_CTL = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCIMISCCTL_ASICREV_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_ASICREV_USE_PRODID_REG = dso_local local_unnamed_addr global i64 0, align 8\n@BGE_CHIPID_BCM5720_A0 = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN2_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN15_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @bge_chipid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @bge_chipid(i32 noundef %0) #0 {\n  %2 = load i32, ptr @BGE_PCI_MISC_CTL, align 4, !tbaa !5\n  %3 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %2, i32 noundef 4) #2\n  %4 = load i32, ptr @BGE_PCIMISCCTL_ASICREV_SHIFT, align 4, !tbaa !5\n  %5 = ashr i32 %3, %4\n  %6 = tail call i64 @BGE_ASICREV(i32 noundef %5) #2\n  %7 = load i64, ptr @BGE_ASICREV_USE_PRODID_REG, align 8, !tbaa !9\n  %8 = icmp eq i64 %6, %7\n  br i1 %8, label %9, label %27\n\n9:                                                ; preds = %1\n  %10 = tail call i32 @pci_get_device(i32 noundef %0) #2\n  switch i32 %10, label %27 [\n    i32 130, label %11\n    i32 131, label %11\n    i32 132, label %11\n    i32 133, label %11\n    i32 134, label %11\n    i32 135, label %11\n    i32 136, label %11\n    i32 137, label %11\n    i32 138, label %11\n    i32 139, label %11\n    i32 140, label %11\n    i32 141, label %11\n    i32 142, label %11\n    i32 143, label %11\n    i32 144, label %11\n    i32 145, label %11\n    i32 146, label %11\n    i32 147, label %11\n    i32 148, label %11\n    i32 149, label %11\n    i32 150, label %11\n    i32 151, label %11\n    i32 152, label %11\n    i32 153, label %11\n    i32 154, label %11\n    i32 155, label %11\n    i32 156, label %11\n    i32 157, label %11\n    i32 158, label %11\n    i32 159, label %11\n    i32 160, label %11\n    i32 161, label %11\n    i32 162, label %11\n    i32 163, label %11\n    i32 164, label %11\n    i32 165, label %11\n    i32 166, label %11\n    i32 167, label %11\n    i32 168, label %11\n    i32 169, label %11\n    i32 170, label %11\n    i32 171, label %11\n    i32 172, label %11\n    i32 173, label %11\n    i32 174, label %11\n    i32 175, label %11\n    i32 176, label %11\n    i32 177, label %11\n    i32 178, label %11\n    i32 179, label %11\n    i32 180, label %11\n    i32 181, label %11\n    i32 182, label %11\n    i32 183, label %11\n    i32 184, label %11\n    i32 185, label %11\n    i32 186, label %11\n    i32 187, label %11\n    i32 188, label %11\n    i32 189, label %11\n    i32 190, label %11\n    i32 191, label %11\n    i32 192, label %11\n    i32 193, label %11\n    i32 194, label %11\n    i32 195, label %11\n    i32 196, label %11\n    i32 197, label %11\n    i32 198, label %11\n    i32 199, label %11\n    i32 200, label %11\n    i32 201, label %11\n    i32 202, label %11\n    i32 203, label %11\n    i32 204, label %11\n    i32 205, label %11\n    i32 206, label %11\n    i32 207, label %11\n    i32 208, label %11\n    i32 209, label %11\n    i32 210, label %11\n    i32 211, label %11\n    i32 212, label %11\n    i32 213, label %11\n    i32 214, label %11\n    i32 215, label %11\n    i32 216, label %11\n    i32 217, label %11\n    i32 218, label %11\n    i32 219, label %11\n    i32 220, label %11\n    i32 221, label %11\n    i32 222, label %11\n    i32 223, label %11\n    i32 224, label %11\n    i32 225, label %11\n    i32 226, label %11\n    i32 227, label %11\n    i32 228, label %11\n    i32 229, label %11\n    i32 230, label %11\n    i32 231, label %11\n    i32 232, label %11\n    i32 233, label %11\n    i32 234, label %11\n    i32 235, label %11\n    i32 236, label %11\n    i32 237, label %11\n    i32 238, label %11\n    i32 239, label %11\n    i32 240, label %11\n    i32 241, label %11\n    i32 242, label %11\n    i32 243, label %11\n    i32 244, label %11\n    i32 245, label %11\n    i32 246, label %11\n    i32 247, label %11\n    i32 248, label %11\n    i32 249, label %11\n    i32 250, label %11\n    i32 251, label %11\n    i32 252, label %11\n    i32 253, label %11\n    i32 254, label %11\n    i32 255, label %11\n  ]\n\n11:                                               ; predsfile": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/sys/dev/bge/extr_if_bge.c_bge_chipid.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@BGE_PCI_MISC_CTL = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCIMISCCTL_ASICREV_SHIFT = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_ASICREV_USE_PRODID_REG = dso_local local_unnamed_addr global i64 0, align 8\n@BGE_CHIPID_BCM5720_A0 = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN2_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_GEN15_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@BGE_PCI_PRODID_ASICREV = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @bge_chipid], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @bge_chipid(i32 noundef %0) #0 {\n  %2 = load i32, ptr @BGE_PCI_MISC_CTL, align 4, !tbaa !5\n  %3 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %2, i32 noundef 4) #2\n  %4 = load i32, ptr @BGE_PCIMISCCTL_ASICREV_SHIFT, align 4, !tbaa !5\n  %5 = ashr i32 %3, %4\n  %6 = tail call i64 @BGE_ASICREV(i32 noundef %5) #2\n  %7 = load i64, ptr @BGE_ASICREV_USE_PRODID_REG, align 8, !tbaa !9\n  %8 = icmp eq i64 %6, %7\n  br i1 %8, label %9, label %22\n\n9:                                                ; preds = %1\n  %10 = tail call i32 @pci_get_device(i32 noundef %0) #2\n  switch i32 %10, label %19 [\n    i32 147, label %11\n    i32 148, label %13\n    i32 146, label %13\n    i32 145, label %13\n    i32 144, label %13\n    i32 143, label %13\n    i32 142, label %13\n    i32 141, label %13\n    i32 138, label %13\n    i32 135, label %13\n    i32 130, label %13\n    i32 140, label %16\n    i32 139, label %16\n    i32 137, label %16\n    i32 136, label %16\n    i32 134, label %16\n    i32 133, label %16\n    i32 132, label %16\n    i32 131, label %16\n    i32 129, label %16\n    i32 128, label %16\n  ]\n\n11:                                               ; preds = %9\n  %12 = load i32, ptr @BGE_CHIPID_BCM5720_A0, align 4, !tbaa !5\n  br label %22\n\n13:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9\n  %14 = load i32, ptr @BGE_PCI_GEN2_PRODID_ASICREV, align 4, !tbaa !5\n  %15 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %14, i32 noundef 4) #2\n  br label %22\n\n16:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9\n  %17 = load i32, ptr @BGE_PCI_GEN15_PRODID_ASICREV, align 4, !tbaa !5\n  %18 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %17, i32 noundef 4) #2\n  br label %22\n\n19:                                               ; preds = %9\n  %20 = load i32, ptr @BGE_PCI_PRODID_ASICREV, align 4, !tbaa !5\n  %21 = tail call i32 @pci_read_config(i32 noundef %0, i32 noundef %20, i32 noundef 4) #2\n  br label %22\n\n22:                                               ; preds = %11, %13, %16, %19, %1\n  %23 = phi i32 [ %21, %19 ], [ %18, %16 ], [ %15, %13 ], [ %12, %11 ], [ %5, %1 ]\n  ret i32 %23\n}\n\ndeclare i32 @pci_read_config(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i64 @BGE_ASICREV(i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @pci_get_device(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"long\", !7, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_smpboot.c_get_delta.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function get_delta\n\t.type\tget_delta,@function\nget_delta:                              # @get_delta\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 80\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, 16(%rsp)                  # 8-byte Spill\n\tmovq\t%rdi, 8(%rsp)                   # 8-byte Spill\n\tcmpq\t$0, NUM_ITERS(%rip)\n\tjle\t.LBB0_1\n# %bb.2:                                # %.preheader1\n\tmovq\t$-1, %rbx\n\txorl\t%r14d, %r14d\n\txorl\t%ebp, %ebp\n\txorl\t%r13d, %r13d\n\tjmp\t.LBB0_3\n\t.p2align\t4, 0x90\n.LBB0_6:                                #   in Loop: Header=BB0_3 Depth=1\n\tmovq\t$0, (%rax,%rcx,8)\n\txorl\t%eax, %eax\n\tcallq\tia64_get_itc@PLT\n\tmovq\t%rax, %rcx\n\tsubq\t%r12, %rcx\n\tmovq\t%rbx, %rdx\n\tsubq\t%rbp, %rdx\n\tcmpq\t%rdx, %rcx\n\tcmovbq\t%r15, %r13\n\tcmovbq\t%rax, %rbx\n\tcmovbq\t%r12, %rbp\n\tincq\t%r14\n\tcmpq\tNUM_ITERS(%rip), %r14\n\tjge\t.LBB0_7\n.LBB0_3:                                # =>This Loop Header: Depth=1\n                                        #     Child Loop BB0_5 Depth 2\n\txorl\t%eax, %eax\n\tcallq\tia64_get_itc@PLT\n\tmovq\t%rax, %r12\n\tmovq\tgo(%rip), %rax\n\tmovq\tMASTER(%rip), %rcx\n\tmovq\t$1, (%rax,%rcx,8)\n\t.p2align\t4, 0x90\n.LBB0_5:                                #   Parent Loop BB0_3 Depth=1\n                                        # =>  This Inner Loop Header: Depth=2\n\tmovq\tSLAVE(%rip), %rcx\n\tmovq\t(%rax,%rcx,8), %r15\n\ttestq\t%r15, %r15\n\tjne\t.LBB0_6\n# %bb.4:                                #   in Loop: Header=BB0_5 Depth=2\n\txorl\t%eax, %eax\n\tcallq\tcpu_relax@PLT\n\tmovq\tgo(%rip), %rax\n\tjmp\t.LBB0_5\n.LBB0_1:\n\tmovq\t$-1, %rbx\n\txorl\t%r13d, %r13d\n\txorl\t%ebp, %ebp\n.LBB0_7:\n\tmovq\t%rbx, %rax\n\tsubq\t%rbp, %rax\n\tmovq\t8(%rsp), %rcx                   # 8-byte Reload\n\tmovq\t%rax, (%rcx)\n\tmovq\t%r13, %rax\n\tsubq\t%rbp, %rax\n\tmovq\t16(%rsp), %rcx                  # 8-byte Reload\n\tmovq\t%rax, (%rcx)\n\tmovq\t%rbp, %rcx\n\tshrq\t%rcx\n\tmovq\t%rbx, %rax\n\tshrq\t%rax\n\tandl\t$1, %ebp\n\tandl\t$1, %ebx\n\taddl\t%ebp, %ebx\n\txorl\t%edx, %edx\n\tcmpl\t$2, %ebx\n\tsete\t%dl\n\tsubq\t%r13, %rax\n\taddq\t%rcx, %rax\n\taddq\t%rdx, %rax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\tget_delta, .Lfunc_end0-get_delta\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tNUM_ITERS,@object               # @NUM_ITERS\n\t.bss\n\t.globl\tNUM_ITERS\n\t.p2align\t3\nNUM_ITERS:\n\t.quad\t0                               # 0x0\n\t.size\tNUM_ITERS, 8\n\n\t.type\tgo,@object                      # @go\n\t.globl\tgo\n\t.p2align\t3\ngo:\n\t.quad\t0\n\t.size\tgo, 8\n\n\t.type\tMASTER,@object                  # @MASTER\n\t.globl\tMASTER\n\t.p2align\t3\nMASTER:\n\t.quad\t0                               # 0x0\n\t.size\tMASTER, 8\n\n\t.type\tSLAVE,@object                   # @SLAVE\n\t.globl\tSLAVE\n\t.p2align\t3\nSLAVE:\n\t.quad\t0                               # 0x0\n\t.size\tSLAVE, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %33\n\n5:                                                ; preds = %2, %27\n  %6 = phi i64 [ %29, %27 ], [ 0, %2 ]\n  %7 = phi i64 [ %28, %27 ], [ 0, %2 ]\n  %8 = phi i64 [ %25, %27 ], [ 0, %2 ]\n  %9 = phi i64 [ %26, %27 ], [ -1, %2 ]\n  %10 = phi i64 [ %24, %27 ], [ 0, %2 ]\n  %11 = tail call i64 (...) @ia64_get_itc() #2\n  %12 = load ptr, ptr @go, align 8, !tbaa !9\n  %13 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %14 = getelementptr inbounds i64, ptr %12, i64 %13\n  store i64 1, ptr %14, align 8, !tbaa !5\n  %15 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %16 = getelementptr inbounds i64, ptr %12, i64 %15\n  %17 = load i64, ptr %16, align 8, !tbaa !5\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %5\n  %20 = sub nsw i64 %11, %10\n  store i64 %20, ptr %16, align 8, !tbaa !5\n  br label %27\n\n21:                                               ; preds = %5, %21\n  %22 = tail call i32 (...) @cpu_relax() #2\n  %23 = load ptr, ptr @go, align 8, !tbaa !9\n  %24 = load i64, ptr %23, align 8, !tbaa !5\n  %25 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %26 = getelementptr inbounds i64, ptr %23, i64 %25\n  %27 = load i64, ptr %26, align 8, !tbaa !5\n  %28 = add i64 %27, %10\n  %29 = add nuw nsw i64 %6, 1\n  %30 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %31 = icmp slt i64 %29, %30\n  br i1 %31, label %5, label %32, !llvm.loop !11\n\n32:                                               ; preds = %21\n  br label %33\n\n33:                                               ; preds = %2, %32\n  %34 = phi i64 [ %28, %32 ], [ -1, %2 ]\n  %35 = phi i64 [ %27, %32 ], [ 0, %2 ]\n  %36 = phi i64 [ %26, %32 ], [ 0, %2 ]\n  %37 = phi i64 [ %25, %32 ], [ 0, %2 ]\n  %38 = phi i64 [ %24, %32 ], [ 0, %2 ]\n  %39 = phi i64 [ %9, %32 ], [ -1, %2 ]\n  %40 = phi i64 [ %7, %32 ], [ 0, %2 ]\n  %41 = sub nsw i64 %34, %40\n  store i64 %41, ptr %0, align 8, !tbaa !5\n  %42 = sub nsw i64 %35, %40\n  store i64 %42, ptr %1, align 8, !tbaa !5\n  %43 = lshr i64 %40, 1\n  %44 = lshr i64 %39, 1\n  %45 = and i64 %40, 1\n  %46 = and i64 %39, 1\n  %47 = add nuw nsw i64 %46, %45\n  %48 = icmp eq i64 %47, 2\n  %49 = select i1 %48, i64 1, i64 0\n  %50 = add i64 %43, %44\n  %51 = add i64 %50, %49\n  ret i64 %51\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %32\n\n5:                                                ; preds = %2, %27\n  %6 = phi i64 [ %29, %27 ], [ 0, %2 ]\n  %7 = phi i64 [ %28, %27 ], [ 0, %2 ]\n  %8 = phi i64 [ %25, %27 ], [ 0, %2 ]\n  %9 = phi i64 [ %26, %27 ], [ -1, %2 ]\n  %10 = phi i64 [ %24, %27 ], [ 0, %2 ]\n  %11 = tail call i64 (...) @ia64_get_itc() #2\n  %12 = load ptr, ptr @go, align 8, !tbaa !9\n  %13 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %14 = getelementptr inbounds i64, ptr %12, i64 %13\n  store i64 1, ptr %14, align 8, !tbaa !5\n  %15 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %16 = getelementptr inbounds i64, ptr %12, i64 %15\n  %17 = load i64, ptr %16, align 8, !tbaa !5\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %5\n  %20 = getelementptr inbounds i64, ptr %12, i64 %15\n  store i64 0, ptr %20, align 8, !tbaa !5\n  br label %27\n\n21:                                               ; preds = %5, %21\n  %22 = tail call i32 (...) @cpu_relax() #2\n  %23 = load ptr, ptr @go, align 8, !tbaa !9\n  %24 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %25 = getelementptr inbounds i64, ptr %23, i64 %24\n  %26 = load i64, ptr %25, align 8, !tbaa !5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %5, label %19, !llvm.loop !11\n\n28 = phi i64 [ %11, %21 ], [ %9, %5 ]\n29 = add nuw nsw i64 %6, 1\n30 = icmp slt i64 %29, %3\n  %31 = select i1 %30, i64 %28, i64 %9\n  br label %5\n\n32 = phi i64 [ %31, %28 ], [ -1, %2 ]\n33 = phi i64 [ %10, %28 ], [ 0, %2 ]\n34 = phi i64 [ %8, %28 ], [ 0, %2 ]\n35 = phi i64 [ %9, %28 ], [ -1, %2 ]\n36 = sub nsw i64 %33, %34\n  store i64 %36, ptr %0, align 8, !tbaa !5\n  %37 = sub nsw i64 %35, %34\n  store i64 %37, ptr %1, align 8, !tbaa !5\n  %38 = lshr i64 %33, 1\n  %39 = lshr i64 %35, 1\n  %40 = and i64 %33, 1\n  %41 = and i64 %35, 1\n  %42 = add nuw nsw i64 %40, %41\n  %43 = icmp eq i64 %42, 2\n  %44 = select i1 %43, i64 1, i64 0\n  %45 = add i64 %38, %43\n  %46 = add i64 %45, %44\n  ret i64 %46\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %31\n\n5:                                                ; preds = %2, %27\n  %6 = phi i64 [ %29, %27 ], [ 0, %2 ]\n  %7 = phi i64 [ %28, %27 ], [ 0, %2 ]\n  %8 = phi i64 [ %26, %27 ], [ -1, %2 ]\n  %9 = phi i64 [ %25, %27 ], [ 0, %2 ]\n  %10 = tail call i64 (...) @ia64_get_itc() #2\n  %11 = load ptr, ptr @go, align 8, !tbaa !9\n  %12 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %13 = getelementptr inbounds i64, ptr %11, i64 %12\n  store i64 1, ptr %13, align 8, !tbaa !5\n  %14 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %15 = getelementptr inbounds i64, ptr %11, i64 %14\n  %16 = load i64, ptr %15, align 8, !tbaa !5\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %18, label %23\n\n18:                                               ; preds = %5, %18\n  %19 = tail call i32 (...) @cpu_relax() #2\n  %20 = load ptr, ptr @go, align 8, !tbaa !9\n  %21 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %22 = getelementptr inbounds i64, ptr %20, i64 %21\n  br label %27\n\n23:                                               ; preds = %5\n  %24 = getelementptr inbounds i64, ptr %11, i64 %14\n  store i64 0, ptr %24, align 8, !tbaa !5\n  %25 = tail call i64 (...) @ia64_get_itc() #2\n  %26 = tail call i64 @llvm.usub.sat.i64(i64 %25, i64 %10)\n  %27 = add nuw nsw i64 %6, 1\n  %28 = tail call i64 @llvm.usub.sat.i64(i64 %26, i64 %9)\n  %29 = tail call i64 @llvm.usub.sat.i64(i64 %8, i64 %28)\n  %30 = icmp slt i64 %27, %3\n  br i1 %30, label %5, label %31, !llvm.loop !11\n\n31:                                               ; preds = %23, %2\n  %32 = phi i64 [ -1, %2 ], [ %29, %23 ]\n  %33 = phi i64 [ 0, %2 ], [ %28, %23 ]\n  %34 = phi i64 [ 0, %2 ], [ %26, %23 ]\n  %35 = sub nsw i64 %32, %33\n  store i64 %35, ptr %0, align 8, !tbaa !5\n  %36 = sub nsw i64 %34, %33\n  store i64 %36, ptr %1, align 8, !tbaa !5\n  %37 = lshr i64 %33, 1\n  %38 = lshr i64 %32, 1\n  %39 = and i64 %33, 1\n  %40 = and i64 %32, 1\n  %41 = add nuw nsw i64 %40, %39\n  %42 = icmp eq i64 %41, 2\n  %43 = select i1 %42, i64 1, i64 0\n  %44 = add i64 %37, %43\n  %45 = sub i64 %34, %36\n  %46 = add i64 %44, %45\n  ret i64 %46\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i64 @llvm.usub.sat.i64(i64, i64) #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %31\n\n5:                                                ; preds = %2, %27\n  %6 = phi i64 [ %29, %27 ], [ 0, %2 ]\n  %7 = phi i64 [ %28, %27 ], [ 0, %2 ]\n  %8 = phi i64 [ %26, %27 ], [ 0, %2 ]\n  %9 = phi i64 [ %25, %27 ], [ -1, %2 ]\n  %10 = phi i64 [ %24, %27 ], [ 0, %2 ]\n  %11 = tail call i64 (...) @ia64_get_itc() #2\n  %12 = load ptr, ptr @go, align 8, !tbaa !9\n  %13 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %14 = getelementptr inbounds i64, ptr %12, i64 %13\n  store i64 1, ptr %14, align 8, !tbaa !5\n  %15 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %16 = getelementptr inbounds i64, ptr %12, i64 %15\n  %17 = load i64, ptr %16, align 8, !tbaa !5\n  %18 = icmp eq i64 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %5\n  %20 = sub nsw i64 %11, %10\n  store i64 %20, ptr %16, align 8, !tbaa !5\n  br label %27\n\n21:                                               ; preds = %5, %21\n  %22 = tail call i32 (...) @cpu_relax() #2\n  %23 = load ptr, ptr @go, align 8, !tbaa !9\n  %24 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %25 = getelementptr inbounds i64, ptr %23, i64 %24\n  %26 = load i64, ptr %25, align 8, !tbaa !5\n  %27 = icmp eq i64 %26, 0\n  br i1 %27, label %5, label %19, !llvm.loop !11\n\n28 = phi i64 [ %26, %21 ], [ %17, %5 ]\n29 = add nuw nsw i64 %6, 1\n30 = icmp slt i64 %29, %3\n  br i1 %30, label %5, label %31, !llvm.loop !13\n\n31:                                               ; preds = %28, %2\n  %32 = phi i64 [ -1, %2 ], [ %9, %28 ]\n  %33 = phi i64 [ 0, %2 ], [ %8, %28 ]\n  %34 = phi i64 [ 0, %2 ], [ %7, %28 ]\n  %35 = sub nsw i64 %32, %34\n  store i64 %35, ptr %0, align 8, !tbaa !5\n  %36 = sub nsw i64 %33, %34\n  store i64 %36, ptr %1, align 8, !tbaa !5\n  %37 = lshr i64 %34, 1\n  %38 = lshr i64 %32, 1\n  %39 = and i64 %34, 1\n  %40 = and i64 %32, 1\n  %41 = add nuw nsw i64 %40, %39\n  %42 = icmp eq i64 %41, 2\n  %43 = select i1 %42, i64 1, i64 0\n  %44 = add i64 %38, %37\n  %45 = add i64 %44, %43\n  ret i64 %45\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/arch/ia64/kernel/extr_smpboot.c_get_delta.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n@NUM_ITERS = dso_local local_unnamed_addr global i64 0, align 8\n@go = dso_local local_unnamed_addr global ptr null, align 8\n@MASTER = dso_local local_unnamed_addr global i64 0, align 8\n@SLAVE = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @get_delta], section \"llvm.metadata\"\n\n; Function Attrs: inlinehint nounwind uwtable\ndefine internal i64 @get_delta(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1) #0 {\n  %3 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %4 = icmp sgt i64 %3, 0\n  br i1 %4, label %5, label %40\n\n5:                                                ; preds = %2, %25\n  %6 = phi i64 [ %37, %25 ], [ 0, %2 ]\n  %7 = phi i64 [ %36, %25 ], [ 0, %2 ]\n  %8 = phi i64 [ %35, %25 ], [ -1, %2 ]\n  %9 = phi i64 [ %34, %25 ], [ 0, %2 ]\n  %10 = tail call i64 (...) @ia64_get_itc() #2\n  %11 = load ptr, ptr @go, align 8, !tbaa !9\n  %12 = load i64, ptr @MASTER, align 8, !tbaa !5\n  %13 = getelementptr inbounds i64, ptr %11, i64 %12\n  store i64 1, ptr %13, align 8, !tbaa !5\n  %14 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %15 = getelementptr inbounds i64, ptr %11, i64 %14\n  %16 = load i64, ptr %15, align 8, !tbaa !5\n  %17 = icmp eq i64 %16, 0\n  br i1 %17, label %18, label %25\n\n18:                                               ; preds = %5, %18\n  %19 = tail call i32 (...) @cpu_relax() #2\n  %20 = load ptr, ptr @go, align 8, !tbaa !9\n  %21 = load i64, ptr @SLAVE, align 8, !tbaa !5\n  %22 = getelementptr inbounds i64, ptr %20, i64 %21\n  %23 = load i64, ptr %22, align 8, !tbaa !5\n  %24 = icmp eq i64 %23, 0\n  br i1 %24, label %18, label %25, !llvm.loop !11\n\n25:                                               ; preds = %18, %5\n  %26 = phi i64 [ %14, %5 ], [ %21, %18 ]\n  %27 = phi ptr [ %11, %5 ], [ %20, %18 ]\n  %28 = phi i64 [ %16, %5 ], [ %23, %18 ]\n  %29 = getelementptr inbounds i64, ptr %27, i64 %26\n  store i64 0, ptr %29, align 8, !tbaa !5\n  %30 = tail call i64 (...) @ia64_get_itc() #2\n  %31 = sub i64 %30, %10\n  %32 = sub i64 %8, %7\n  %33 = icmp ult i64 %31, %32\n  %34 = select i1 %33, i64 %28, i64 %9\n  %35 = select i1 %33, i64 %30, i64 %8\n  %36 = select i1 %33, i64 %10, i64 %7\n  %37 = add nuw nsw i64 %6, 1\n  %38 = load i64, ptr @NUM_ITERS, align 8, !tbaa !5\n  %39 = icmp slt i64 %37, %38\n  br i1 %39, label %5, label %40, !llvm.loop !13\n\n40:                                               ; preds = %25, %2\n  %41 = phi i64 [ 0, %2 ], [ %34, %25 ]\n  %42 = phi i64 [ -1, %2 ], [ %35, %25 ]\n  %43 = phi i64 [ 0, %2 ], [ %36, %25 ]\n  %44 = sub i64 %42, %43\n  store i64 %44, ptr %0, align 8, !tbaa !5\n  %45 = sub i64 %41, %43\n  store i64 %45, ptr %1, align 8, !tbaa !5\n  %46 = lshr i64 %43, 1\n  %47 = lshr i64 %42, 1\n  %48 = and i64 %43, 1\n  %49 = and i64 %42, 1\n  %50 = add nuw nsw i64 %48, %49\n  %51 = icmp eq i64 %50, 2\n  %52 = zext i1 %51 to i64\n  %53 = sub i64 %47, %41\n  %54 = add i64 %53, %46\n  %55 = add i64 %54, %52\n  ret i64 %55\n}\n\ndeclare i64 @ia64_get_itc(...) local_unnamed_addr #1\n\ndeclare i32 @cpu_relax(...) local_unnamed_addr #1\n\nattributes #0 = { inlinehint nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"long\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !10, i64 0}\n!10 = !{!\"any pointer\", !7, i64 0}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = distinct !{!13, !12}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mmu.c_update_pkru_bitmask.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function update_pkru_bitmask\n\t.type\tupdate_pkru_bitmask,@function\nupdate_pkru_bitmask:                    # @update_pkru_bitmask\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %r15\n\ttestl\t%edx, %edx\n\tje\t.LBB0_1\n.LBB0_9:\n\tmovl\t$0, (%r15)\n.LBB0_10:\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_1:\n\t.cfi_def_cfa_offset 48\n\tmovq\t%rdi, %rbp\n\tmovl\tX86_CR4_PKE(%rip), %esi\n\tcallq\tkvm_read_cr4_bits@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_9\n# %bb.2:\n\tmovq\t%rbp, %rdi\n\tcallq\tis_long_mode@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_9\n# %bb.3:\n\tmovq\t%rbp, %rdi\n\tcallq\tis_write_protection@PLT\n\tmovl\t%eax, %r14d\n\tmovl\t4(%r15), %edi\n\tcallq\tARRAY_SIZE@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_10\n# %bb.4:\n\txorl\t%ebp, %ebp\n\txorl\t%ebx, %ebx\n\tjmp\t.LBB0_5\n\t.p2align\t4, 0x90\n.LBB0_8:                                #   in Loop: Header=BB0_5 Depth=1\n\tmovzbl\t%al, %eax\n\torl\t%ecx, %eax\n\tmovl\t%ebp, %ecx\n\tshll\t%cl, %eax\n\torl\t%eax, (%r15)\n\tincl\t%ebx\n\tmovl\t4(%r15), %edi\n\tcallq\tARRAY_SIZE@PLT\n\taddl\t$2, %ebp\n\tcmpl\t%eax, %ebx\n\tjae\t.LBB0_10\n.LBB0_5:                                # =>This Inner Loop Header: Depth=1\n\ttestl\t%ebp, PFERR_FETCH_MASK(%rip)\n\tsete\t%cl\n\ttestl\t%ebp, PFERR_RSVD_MASK(%rip)\n\tsetne\t%al\n\tandb\t%cl, %al\n\tmovl\t$0, %ecx\n\tcmpb\t$1, %al\n\tjne\t.LBB0_8\n# %bb.6:                                #   in Loop: Header=BB0_5 Depth=1\n\tmovl\tPFERR_WRITE_MASK(%rip), %edx\n\tmovl\t$0, %ecx\n\tandl\t%ebp, %edx\n\tje\t.LBB0_8\n# %bb.7:                                #   in Loop: Header=BB0_5 Depth=1\n\tmovl\tPFERR_USER_MASK(%rip), %edx\n\tandl\t%ebp, %edx\n\txorl\t%ecx, %ecx\n\torl\t%r14d, %edx\n\tsetne\t%cl\n\tandl\t$1, %ecx\n\taddl\t%ecx, %ecx\n\tjmp\t.LBB0_8\n.Lfunc_end0:\n\t.size\tupdate_pkru_bitmask, .Lfunc_end0-update_pkru_bitmask\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tX86_CR4_PKE,@object             # @X86_CR4_PKE\n\t.bss\n\t.globl\tX86_CR4_PKE\n\t.p2align\t2\nX86_CR4_PKE:\n\t.long\t0                               # 0x0\n\t.size\tX86_CR4_PKE, 4\n\n\t.type\tPFERR_FETCH_MASK,@object        # @PFERR_FETCH_MASK\n\t.globl\tPFERR_FETCH_MASK\n\t.p2align\t2\nPFERR_FETCH_MASK:\n\t.long\t0                               # 0x0\n\t.size\tPFERR_FETCH_MASK, 4\n\n\t.type\tPFERR_USER_MASK,@object         # @PFERR_USER_MASK\n\t.globl\tPFERR_USER_MASK\n\t.p2align\t2\nPFERR_USER_MASK:\n\t.long\t0                               # 0x0\n\t.size\tPFERR_USER_MASK, 4\n\n\t.type\tPFERR_WRITE_MASK,@object        # @PFERR_WRITE_MASK\n\t.globl\tPFERR_WRITE_MASK\n\t.p2align\t2\nPFERR_WRITE_MASK:\n\t.long\t0                               # 0x0\n\t.size\tPFERR_WRITE_MASK, 4\n\n\t.type\tPFERR_RSVD_MASK,@object         # @PFERR_RSVD_MASK\n\t.globl\tPFERR_RSVD_MASK\n\t.p2align\t2\nPFERR_RSVD_MASK:\n\t.long\t0                               # 0x0\n\t.size\tPFERR_RSVD_MASK, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.kvm_pkru = type { i32, i32 }\n\n@X86_CR4_PKE = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_FETCH_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_USER_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_WRITE_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_RSVD_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @update_pkru_bitmask], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @update_pkru_bitmask(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %5, label %41\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr @X86_CR4_PKE, align 4, !tbaa !5\n  %7 = tail call i32 @kvm_read_cr4_bits(ptr noundef %0, i32 noundef %6) #2\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %41, label %9\n\n9:                                                ; preds = %5\n  %10 = tail call i32 @is_long_mode(ptr noundef %0) #2\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %41, label %12\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @is_write_protection(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  %15 = load i32, ptr %14, align 4, !tbaa !9\n  %16 = tail call i32 @ARRAY_SIZE(i32 noundef %15) #2\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %41, label %18\n\n18:                                               ; preds = %12\n  %19 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  br label %20\n\n20:                                               ; preds = %18, %37\n  %21 = phi i32 [ %38, %37 ], [ 0, %18 ]\n  %22 = phi i32 [ %39, %37 ], [ 0, %18 ]\n  %23 = load i32, ptr @PFERR_FETCH_MASK, align 4, !tbaa !5\n  %24 = and i32 %23, %21\n  %25 = icmp eq i32 %24, 0\n  %26 = load i32, ptr @PFERR_RSVD_MASK, align 4\n  %27 = and i32 %26, %21\n  %28 = icmp ne i32 %27, 0\n  %29 = select i1 %25, i1 %28, i1 false\n  br i1 %29, label %30, label %37\n\n30:                                               ; preds = %20\n  %31 = load i32, ptr @PFERR_WRITE_MASK, align 4, !tbaa !5\n  %32 = and i32 %31, %21\n  %33 = icmp eq i32 %32, 0\n  br i1 %33, label %37, label %34\n\n34:                                               ; preds = %30\n  %35 = load i32, ptr @PFERR_USER_MASK, align 4, !tbaa !5\n  %36 = and i32 %35, %21\n  br label %37\n\n37:                                               ; preds = %34, %30, %20\n  %38 = phi i32 [ %21, %20 ], [ %36, %34 ], [ 0, %30 ]\n  %39 = add nuw nsw i32 %22, 2\n  %40 = or i32 %38, %13\n  br label %37\n\n41:                                               ; preds = %12, %5, %9, %3\n  store i32 0, ptr %1, align 4, !tbaa !11\n  br label %42\n\n42:                                               ; preds = %41, %42\n  ret void\n}\n\ndeclare i32 @kvm_read_cr4_bits(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @is_long_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_write_protection(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"kvm_pkru\", !6, i64 0, !6, i64 4}\n!11 = !{!10, !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.kvm_pkru = type { i32, i32 }\n\n@X86_CR4_PKE = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_FETCH_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_USER_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_WRITE_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_RSVD_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @update_pkru_bitmask], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @update_pkru_bitmask(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %5, label %40\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr @X86_CR4_PKE, align 4, !tbaa !5\n  %7 = tail call i32 @kvm_read_cr4_bits(ptr noundef %0, i32 noundef %6) #2\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %40, label %9\n\n9:                                                ; preds = %5\n  %10 = tail call i32 @is_long_mode(ptr noundef %0) #2\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %40, label %12\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @is_write_protection(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  %15 = load i32, ptr %14, align 4, !tbaa !9\n  %16 = tail call i32 @ARRAY_SIZE(i32 noundef %15) #2\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %40, label %18\n\n18:                                               ; preds = %12\n  %19 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  br label %20\n\n20:                                               ; preds = %18, %35\n  %21 = phi i32 [ 0, %18 ], [ %36, %35 ]\n  %22 = phi i32 [ 0, %18 ], [ %37, %35 ]\n  %23 = load i32, ptr @PFERR_FETCH_MASK, align 4, !tbaa !5\n  %24 = and i32 %23, %21\n  %25 = icmp eq i32 %24, 0\n  %26 = load i32, ptr @PFERR_RSVD_MASK, align 4\n  %27 = and i32 %26, %21\n  %28 = icmp ne i32 %27, 0\n  %29 = select i1 %25, i1 %28, i1 false\n  br i1 %29, label %30, label %35\n\n30:                                               ; preds = %20\n  %31 = load i32, ptr @PFERR_WRITE_MASK, align 4, !tbaa !5\n  %32 = and i32 %31, %21\n  %33 = icmp eq i32 %32, 0\n  br i1 %33, label %35, label %34\n\n34:                                               ; preds = %30\n  %35 = add nuw nsw i32 %21, 1\n  br label %20\n\n36:                                               ; preds = %35\n  %37 = phi i32 [ %35, %35 ], [ %22, %30 ]\n  %38 = load i32, ptr %19, align 4, !tbaa !9\n  %39 = tail call i32 @ARRAY_SIZE(i32 noundef %38) #2\n  br label %40\n\n40:                                               ; preds = %36, %12, %9, %5, %3\n  %41 = phi i32 [ %7, %5 ], [ 0, %3 ], [ 0, %9 ], [ %16, %12 ], [ %39, %36 ]\n  store i32 %41, ptr %1, align 4, !tbaa !11\n  ret void\n}\n\ndeclare i32 @kvm_read_cr4_bits(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @is_long_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_write_protection(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"kvm_pkru\", !6, i64 0, !6, i64 4}\n!11 = !{!10, !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.kvm_pkru = type { i32, i32 }\n\n@X86_CR4_PKE = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_FETCH_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_USER_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_WRITE_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_RSVD_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @update_pkru_bitmask], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @update_pkru_bitmask(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %5, label %40\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr @X86_CR4_PKE, align 4, !tbaa !5\n  %7 = tail call i32 @kvm_read_cr4_bits(ptr noundef %0, i32 noundef %6) #2\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %40, label %9\n\n9:                                                ; preds = %5\n  %10 = tail call i32 @is_long_mode(ptr noundef %0) #2\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %40, label %12\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @is_write_protection(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  %15 = load i32, ptr %14, align 4, !tbaa !9\n  %16 = tail call i32 @ARRAY_SIZE(i32 noundef %15) #2\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %40, label %18\n\n18:                                               ; preds = %12\n  %19 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  br label %20\n\n20:                                               ; preds = %18, %35\n  %21 = phi i32 [ 0, %18 ], [ %36, %35 ]\n  %22 = phi i32 [ 0, %18 ], [ %37, %35 ]\n  %23 = load i32, ptr @PFERR_FETCH_MASK, align 4, !tbaa !5\n  %24 = and i32 %23, %21\n  %25 = icmp eq i32 %24, 0\n  %26 = load i32, ptr @PFERR_RSVD_MASK, align 4\n  %27 = and i32 %26, %21\n  %28 = icmp ne i32 %27, 0\n  %29 = select i1 %25, i1 %28, i1 false\n  br i1 %29, label %30, label %35\n\n30:                                               ; preds = %20\n  %31 = load i32, ptr @PFERR_WRITE_MASK, align 4, !tbaa !5\n  %32 = and i32 %31, %21\n  %33 = icmp eq i32 %32, 0\n  br i1 %33, label %35, label %34\n\n34:                                               ; preds = %30\n  %35 = add nuw nsw i32 %21, 1\n  br label %20\n\n36:                                               ; preds = %35\n  %37 = phi i32 [ %35, %35 ], [ %22, %30 ]\n  %38 = load i32, ptr %19, align 4, !tbaa !9\n  %39 = tail call i32 @ARRAY_SIZE(i32 noundef %38) #2\n  br label %40\n\n40:                                               ; preds = %36, %12, %9, %5, %3\n  %41 = phi i32 [ %7, %5 ], [ 0, %3 ], [ 0, %9 ], [ %16, %12 ], [ %39, %36 ]\n  store i32 %41, ptr %1, align 4, !tbaa !11\n  ret void\n}\n\ndeclare i32 @kvm_read_cr4_bits(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @is_long_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_write_protection(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"kvm_pkru\", !6, i64 0, !6, i64 4}\n!11 = !{!10, !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.kvm_pkru = type { i32, i32 }\n\n@X86_CR4_PKE = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_FETCH_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_USER_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_WRITE_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_RSVD_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @update_pkru_bitmask], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @update_pkru_bitmask(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %5, label %43\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr @X86_CR4_PKE, align 4, !tbaa !5\n  %7 = tail call i32 @kvm_read_cr4_bits(ptr noundef %0, i32 noundef %6) #2\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %43, label %9\n\n9:                                                ; preds = %5\n  %10 = tail call i32 @is_long_mode(ptr noundef %0) #2\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %43, label %12\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @is_write_protection(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  %15 = load i32, ptr %14, align 4, !tbaa !9\n  %16 = tail call i32 @ARRAY_SIZE(i32 noundef %15) #2\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %43, label %18\n\n18:                                               ; preds = %12\n  %19 = getelementptr inbounds %struct.kvm_pkru, ptr %1, i64 0, i32 1\n  br label %20\n\n20:                                               ; preds = %18, %37\n  %21 = phi i32 [ 0, %18 ], [ %38, %37 ]\n  %22 = phi i32 [ 0, %18 ], [ %39, %37 ]\n  %23 = load i32, ptr @PFERR_FETCH_MASK, align 4, !tbaa !5\n  %24 = and i32 %23, %21\n  %25 = icmp eq i32 %24, 0\n  %26 = load i32, ptr @PFERR_RSVD_MASK, align 4\n  %27 = and i32 %26, %21\n  %28 = icmp ne i32 %27, 0\n  %29 = select i1 %25, i1 %28, i1 false\n  br i1 %29, label %30, label %37\n\n30:                                               ; preds = %20\n  %31 = load i32, ptr @PFERR_WRITE_MASK, align 4, !tbaa !5\n  %32 = and i32 %31, %21\n  %33 = icmp eq i32 %32, 0\n  br i1 %33, label %37, label %34\n\n34:                                               ; preds = %30\n  %35 = load i32, ptr @PFERR_USER_MASK, align 4, !tbaa !5\n  %36 = and i32 %35, %21\n  br label %37\n\n37:                                               ; preds = %34, %30, %20\n  %38 = phi i32 [ %21, %20 ], [ %36, %34 ], [ 0, %30 ]\n  %39 = add nuw nsw i32 %22, 2\n  %40 = load i32, ptr %19, align 4, !tbaa !9\n  %41 = tail call i32 @ARRAY_SIZE(i32 noundef %40) #2\n  %42 = icmp ult i32 %39, %41\n  br i1 %42, label %20, label %43, !llvm.loop !11\n\n43:                                               ; preds = %37, %12, %9, %5, %3\n  store i32 0, ptr %1, align 4, !tbaa !13\n  ret void\n}\n\ndeclare i32 @kvm_read_cr4_bits(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @is_long_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_write_protection(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"kvm_pkru\", !6, i64 0, !6, i64 4}\n!11 = distinct !{!11, !12}\n!12 = !{!\"llvm.loop.mustprogress\"}\n!13 = !{!10, !6, i64 0}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/arch/x86/kvm/extr_mmu.c_update_pkru_bitmask.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.kvm_mmu = type { i32, i32 }\n\n@X86_CR4_PKE = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_FETCH_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_USER_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_WRITE_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@PFERR_RSVD_MASK = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @update_pkru_bitmask], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal void @update_pkru_bitmask(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) #0 {\n  %4 = icmp eq i32 %2, 0\n  br i1 %4, label %5, label %52\n\n5:                                                ; preds = %3\n  %6 = load i32, ptr @X86_CR4_PKE, align 4, !tbaa !5\n  %7 = tail call i32 @kvm_read_cr4_bits(ptr noundef %0, i32 noundef %6) #2\n  %8 = icmp eq i32 %7, 0\n  br i1 %8, label %52, label %9\n\n9:                                                ; preds = %5\n  %10 = tail call i32 @is_long_mode(ptr noundef %0) #2\n  %11 = icmp eq i32 %10, 0\n  br i1 %11, label %52, label %12\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @is_write_protection(ptr noundef %0) #2\n  %14 = getelementptr inbounds %struct.kvm_mmu, ptr %1, i64 0, i32 1\n  %15 = load i32, ptr %14, align 4, !tbaa !9\n  %16 = tail call i32 @ARRAY_SIZE(i32 noundef %15) #2\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %53, label %18\n\n18:                                               ; preds = %12\n  %19 = icmp ne i32 %13, 0\n  br label %20\n\n20:                                               ; preds = %18, %42\n  %21 = phi i32 [ 0, %18 ], [ %48, %42 ]\n  %22 = shl i32 %21, 1\n  %23 = load i32, ptr @PFERR_FETCH_MASK, align 4, !tbaa !5\n  %24 = and i32 %23, %22\n  %25 = load i32, ptr @PFERR_WRITE_MASK, align 4, !tbaa !5\n  %26 = and i32 %25, %22\n  %27 = load i32, ptr @PFERR_RSVD_MASK, align 4, !tbaa !5\n  %28 = and i32 %27, %22\n  %29 = icmp eq i32 %24, 0\n  %30 = icmp ne i32 %28, 0\n  %31 = select i1 %29, i1 %30, i1 false\n  %32 = zext i1 %31 to i32\n  %33 = icmp ne i32 %26, 0\n  %34 = select i1 %31, i1 %33, i1 false\n  br i1 %34, label %35, label %42\n\n35:                                               ; preds = %20\n  %36 = load i32, ptr @PFERR_USER_MASK, align 4, !tbaa !5\n  %37 = and i32 %36, %22\n  %38 = icmp ne i32 %37, 0\n  %39 = select i1 %38, i1 true, i1 %19\n  %40 = freeze i1 %39\n  %41 = select i1 %40, i32 2, i32 0\n  br label %42\n\n42:                                               ; preds = %35, %20\n  %43 = phi i32 [ 0, %20 ], [ %41, %35 ]\n  %44 = or i32 %43, %32\n  %45 = shl i32 %44, %22\n  %46 = load i32, ptr %1, align 4, !tbaa !11\n  %47 = or i32 %45, %46\n  store i32 %47, ptr %1, align 4, !tbaa !11\n  %48 = add nuw i32 %21, 1\n  %49 = load i32, ptr %14, align 4, !tbaa !9\n  %50 = tail call i32 @ARRAY_SIZE(i32 noundef %49) #2\n  %51 = icmp ult i32 %48, %50\n  br i1 %51, label %20, label %53, !llvm.loop !12\n\n52:                                               ; preds = %5, %9, %3\n  store i32 0, ptr %1, align 4, !tbaa !11\n  br label %53\n\n53:                                               ; preds = %42, %52, %12\n  ret void\n}\n\ndeclare i32 @kvm_read_cr4_bits(ptr noundef, i32 noundef) local_unnamed_addr #1\n\ndeclare i32 @is_long_mode(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_write_protection(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ARRAY_SIZE(i32 noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !6, i64 4}\n!10 = !{!\"kvm_mmu\", !6, i64 0, !6, i64 4}\n!11 = !{!10, !6, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_simple.c_DoWork_3_x_to_2_0.ll\"\n\t.section\t.rodata.cst4,\"aM\",@progbits,4\n\t.p2align\t2                               # -- Begin function DoWork_3_x_to_2_0\n.LCPI0_0:\n\t.long\t0x3f000000                      # float 0.5\n\t.text\n\t.p2align\t4, 0x90\n\t.type\tDoWork_3_x_to_2_0,@function\nDoWork_3_x_to_2_0:                      # @DoWork_3_x_to_2_0\n\t.cfi_startproc\n# %bb.0:\n\tmovl\t(%rsi), %r8d\n\ttestl\t%r8d, %r8d\n\tje\t.LBB0_7\n# %bb.1:\n\tmovq\t8(%rsi), %rax\n\tmovq\t8(%rdx), %rcx\n\tmovl\tAOUT_CHAN_LFE(%rip), %edx\n\tandl\t(%rdi), %edx\n\tcmpl\t$1, %edx\n\tmovl\t$4, %edx\n\tsbbq\t$0, %rdx\n\ttestb\t$1, %r8b\n\tjne\t.LBB0_3\n# %bb.2:\n\tmovl\t%r8d, %esi\n\tcmpl\t$1, %r8d\n\tjne\t.LBB0_5\n\tjmp\t.LBB0_7\n.LBB0_3:\n\tmovss\t.LCPI0_0(%rip), %xmm0           # xmm0 = mem[0],zero,zero,zero\n\tmovss\t(%rax), %xmm1                   # xmm1 = mem[0],zero,zero,zero\n\tmulss\t%xmm0, %xmm1\n\taddss\t8(%rax), %xmm1\n\tmovss\t%xmm1, (%rcx)\n\tmulss\t4(%rax), %xmm0\n\tleal\t-1(%r8), %esi\n\taddss\t8(%rax), %xmm0\n\tmovss\t%xmm0, 4(%rcx)\n\taddq\t$8, %rcx\n\tleaq\t(%rax,%rdx,4), %rax\n\tcmpl\t$1, %r8d\n\tje\t.LBB0_7\n.LBB0_5:                                # %.preheader\n\tmovl\t%esi, %r8d\n\taddq\t$8, %rax\n\tleaq\t(,%rdx,8), %rdi\n\txorl\t%esi, %esi\n\tmovss\t.LCPI0_0(%rip), %xmm0           # xmm0 = mem[0],zero,zero,zero\n\t.p2align\t4, 0x90\n.LBB0_6:                                # =>This Inner Loop Header: Depth=1\n\tmovss\t-8(%rax), %xmm1                 # xmm1 = mem[0],zero,zero,zero\n\tmulss\t%xmm0, %xmm1\n\taddss\t(%rax), %xmm1\n\tmovss\t%xmm1, (%rcx,%rsi,8)\n\tmovss\t-4(%rax), %xmm1                 # xmm1 = mem[0],zero,zero,zero\n\tmulss\t%xmm0, %xmm1\n\taddss\t(%rax), %xmm1\n\tmovss\t%xmm1, 4(%rcx,%rsi,8)\n\tmovss\t-8(%rax,%rdx,4), %xmm1          # xmm1 = mem[0],zero,zero,zero\n\tmulss\t%xmm0, %xmm1\n\taddss\t(%rax,%rdx,4), %xmm1\n\tmovss\t%xmm1, 8(%rcx,%rsi,8)\n\tmovss\t-4(%rax,%rdx,4), %xmm1          # xmm1 = mem[0],zero,zero,zero\n\tmulss\t%xmm0, %xmm1\n\taddss\t(%rax,%rdx,4), %xmm1\n\tmovss\t%xmm1, 12(%rcx,%rsi,8)\n\taddq\t$2, %rsi\n\taddq\t%rdi, %rax\n\tcmpl\t%esi, %r8d\n\tjne\t.LBB0_6\n.LBB0_7:\n\tretq\n.Lfunc_end0:\n\t.size\tDoWork_3_x_to_2_0, .Lfunc_end0-DoWork_3_x_to_2_0\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tAOUT_CHAN_LFE,@object           # @AOUT_CHAN_LFE\n\t.bss\n\t.globl\tAOUT_CHAN_LFE\n\t.p2align\t2\nAOUT_CHAN_LFE:\n\t.long\t0                               # 0x0\n\t.size\tAOUT_CHAN_LFE, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { i32, ptr }\n%struct.TYPE_6__ = type { float, float, float }\n\n@AOUT_CHAN_LFE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DoWork_3_x_to_2_0], section \"llvm.metadata\"\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine internal void @DoWork_3_x_to_2_0(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {\n  %4 = load i32, ptr %1, align 8, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %47, label %6\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  %9 = getelementptr inbounds %struct.TYPE_7__, ptr %2, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = load i32, ptr %0, align 4, !tbaa !12\n  %12 = load i32, ptr @AOUT_CHAN_LFE, align 4, !tbaa !14\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  %15 = select i1 %14, i32 4, i32 3\n  %16 = and i32 %4, 1\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %22, label %18\n\n18:                                               ; preds = %6\n  %19 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 1\n  %20 = load float, ptr %8, align 4, !tbaa !15\n  %21 = tail call float @llvm.fmuladd.f32(float %20, float 5.000000e-01, float %20)\n  store float %21, ptr %10, align 4, !tbaa !15\n  br label %22\n\n22:                                               ; preds = %18, %6\n  %23 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 2\n  %24 = load float, ptr %23, align 4, !tbaa !17\n  %25 = load float, ptr %8, align 4, !tbaa !15\n  %26 = tail call float @llvm.fmuladd.f32(float %24, float 5.000000e-01, float %25)\n  %27 = getelementptr inbounds float, ptr %10, i64 1\n  store float %26, ptr %27, align 4, !tbaa !15\n  %28 = icmp eq i32 %4, 1\n  br i1 %28, label %47, label %29\n\n29:                                               ; preds = %22, %29\n  %30 = phi i32 [ %45, %29 ], [ %4, %22 ]\n  %31 = phi ptr [ %44, %29 ], [ %10, %22 ]\n  %32 = phi ptr [ %43, %29 ], [ %8, %22 ]\n  %33 = phi i32 [ %46, %29 ], [ 0, %22 ]\n  %34 = getelementptr inbounds %struct.TYPE_6__, ptr %32, i64 0, i32 1\n  %35 = load float, ptr %34, align 4, !tbaa !17\n  %36 = load float, ptr %32, align 4, !tbaa !15\n  %37 = tail call float @llvm.fmuladd.f32(float %35, float 5.000000e-01, float %36)\n  %38 = getelementptr inbounds float, ptr %31, i64 1\n  store float %37, ptr %31, align 4, !tbaa !15\n  %39 = getelementptr inbounds %struct.TYPE_6__, ptr %32, i64 0, i32 2\n  %40 = load float, ptr %39, align 4, !tbaa !17\n  %41 = load float, ptr %32, align 4, !tbaa !15\n  %42 = tail call float @llvm.fmuladd.f32(float %40, float 5.000000e-01, float %41)\n  %43 = getelementptr inbounds float, ptr %31, i64 2\n  store float %42, ptr %38, align 4, !tbaa !15\n  %44 = getelementptr inbounds float, ptr %31, i64 2\n  %45 = add i32 %30, -1\n  %46 = add i32 %33, 2\n  %47 = icmp eq i32 %45, 0\n  br i1 %47, label %48, label %29, !llvm.loop !18\n\n48:                                               ; preds = %29\n  ret void\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare float @llvm.fmuladd.f32(float, float, float) #1\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_7__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_8__\", !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"float\", !8, i64 0}\n!17 = !{!16, !16, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { i32, ptr }\n%struct.TYPE_6__ = type { float, float, float }\n\n@AOUT_CHAN_LFE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DoWork_3_x_to_2_0], section \"llvm.metadata\"\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine internal void @DoWork_3_x_to_2_0(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {\n  %4 = load i32, ptr %1, align 8, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %47, label %6\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  %9 = getelementptr inbounds %struct.TYPE_7__, ptr %2, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = load i32, ptr %0, align 4, !tbaa !12\n  %12 = load i32, ptr @AOUT_CHAN_LFE, align 4, !tbaa !14\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  %15 = select i1 %14, i32 4, i32 3\n  %16 = and i32 %4, 1\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %21, label %18\n\n18:                                               ; preds = %6\n  %19 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 1\n  %20 = load float, ptr %19, align 4, !tbaa !15\n  br label %26\n\n21:                                               ; preds = %6\n  %22 = icmp eq i32 %4, 1\n  br i1 %22, label %47, label %23\n\n23:                                               ; preds = %21\n  %24 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 1\n  %25 = load float, ptr %24, align 4, !tbaa !15\n  br label %32\n\n26:                                               ; preds = %18, %26\n  %27 = phi i32 [ %4, %18 ], [ %25, %26 ]\n  %28 = phi ptr [ %8, %18 ], [ %20, %26 ]\n  %29 = phi ptr [ %10, %18 ], [ %30, %26 ]\n  %30 = getelementptr inbounds %struct.TYPE_6__, ptr %28, i64 1\n  %31 = load float, ptr %28, align 4, !tbaa !15\n  br label %32\n\n32:                                               ; preds = %26, %23\n  %33 = phi i32 [ %4, %23 ], [ %27, %26 ]\n  %34 = phi ptr [ %10, %23 ], [ %29, %26 ]\n  %35 = phi ptr [ %20, %23 ], [ %28, %26 ]\n  %36 = phi i32 [ 0, %23 ], [ %25, %26 ]\n  %37 = getelementptr inbounds %struct.TYPE_6__, ptr %35, i64 0, i32 2\n  %38 = load float, ptr %37, align 4, !tbaa !15\n  %39 = load float, ptr %35, align 4, !tbaa !15\n  %40 = tail call float @llvm.fmuladd.f32(float %38, float %36, float %39)\n  %41 = getelementptr inbounds float, ptr %34, i64 1\n  store float %40, ptr %34, align 4, !tbaa !15\n  %42 = getelementptr inbounds %struct.TYPE_6__, ptr %35, i64 0, i32 1\n  %43 = load float, ptr %42, align 4, !tbaa !15\n  %44 = load float, ptr %35, align 4, !tbaa !15\n  %45 = tail call float @llvm.fmuladd.f32(float %43, float %36, float %44)\n  %46 = getelementptr inbounds float, ptr %41, i64 1\n  store float %45, ptr %41, align 4, !tbaa !15\n  br label %47\n\n47:                                               ; preds = %32, %21, %3\n  ret void\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare float @llvm.fmuladd.f32(float, float, float) #1\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_7__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_8__\", !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"float\", !8, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { i32, ptr }\n%struct.TYPE_6__ = type { float, float, float }\n\n@AOUT_CHAN_LFE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DoWork_3_x_to_2_0], section \"llvm.metadata\"\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine internal void @DoWork_3_x_to_2_0(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {\n  %4 = load i32, ptr %1, align 8, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %45, label %6\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  %9 = getelementptr inbounds %struct.TYPE_7__, ptr %2, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = load i32, ptr %0, align 4, !tbaa !12\n  %12 = load i32, ptr @AOUT_CHAN_LFE, align 4, !tbaa !14\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  %15 = select i1 %14, i32 4, i32 3\n  %16 = and i32 %4, 1\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %22, label %18\n\n18:                                               ; preds = %6\n  %19 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 1\n  %20 = load float, ptr %8, align 4, !tbaa !15\n  %21 = tail call float @llvm.fmuladd.f32(float %20, float 5.000000e-01, float %20)\n  store float %21, ptr %10, align 4, !tbaa !15\n  br label %22\n\n22:                                               ; preds = %18, %6\n  %23 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 2\n  %24 = load float, ptr %23, align 4, !tbaa !17\n  %25 = load float, ptr %8, align 4, !tbaa !15\n  %26 = tail call float @llvm.fmuladd.f32(float %24, float 5.000000e-01, float %25)\n  %27 = getelementptr inbounds float, ptr %10, i64 1\n  store float %26, ptr %27, align 4, !tbaa !15\n  %28 = icmp eq i32 %4, 1\n  br i1 %28, label %45, label %29\n\n29:                                               ; preds = %22, %29\n  %30 = phi i32 [ %41, %29 ], [ %4, %22 ]\n  %31 = phi ptr [ %42, %29 ], [ %10, %22 ]\n  %32 = phi ptr [ %43, %29 ], [ %8, %22 ]\n  %33 = phi i32 [ %44, %29 ], [ 0, %22 ]\n  %34 = getelementptr inbounds %struct.TYPE_6__, ptr %32, i64 0, i32 1\n  %35 = load float, ptr %34, align 4, !tbaa !17\n  %36 = load float, ptr %32, align 4, !tbaa !15\n  %37 = tail call float @llvm.fmuladd.f32(float %35, float 5.000000e-01, float %36)\n  %38 = getelementptr inbounds float, ptr %31, i64 1\n  store float %37, ptr %38, align 4, !tbaa !15\n  %39 = getelementptr inbounds %struct.TYPE_6__, ptr %32, i64 0, i32 2\n  %40 = load float, ptr %39, align 4, !tbaa !17\n  %41 = add i32 %30, -1\n  %42 = getelementptr inbounds float, ptr %31, i64 2\n  %43 = getelementptr inbounds %struct.TYPE_6__, ptr %32, i64 %15\n  %44 = add i32 %33, 2\n  %45 = icmp eq i32 %41, 0\n  br i1 %45, label %46, label %29, !llvm.loop !18\n\n46:                                               ; preds = %29\n  ret void\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare float @llvm.fmuladd.f32(float, float, float) #1\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_7__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_8__\", !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"float\", !8, i64 0}\n!17 = !{!16, !16, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { i32, ptr }\n%struct.TYPE_6__ = type { float, float, float }\n\n@AOUT_CHAN_LFE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DoWork_3_x_to_2_0], section \"llvm.metadata\"\n\n; Function Attrs: nofree norecurse nosync nounwind uwtable\ndefine internal void @DoWork_3_x_to_2_0(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {\n  %4 = load i32, ptr %1, align 8, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %47, label %6\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.TYPE_7__, ptr %1, i64 0, i32 1\n  %8 = load ptr, ptr %7, align 8, !tbaa !11\n  %9 = getelementptr inbounds %struct.TYPE_7__, ptr %2, i64 0, i32 1\n  %10 = load ptr, ptr %9, align 8, !tbaa !11\n  %11 = load i32, ptr %0, align 4, !tbaa !12\n  %12 = load i32, ptr @AOUT_CHAN_LFE, align 4, !tbaa !14\n  %13 = and i32 %12, %11\n  %14 = icmp eq i32 %13, 0\n  %15 = select i1 %14, i32 4, i32 3\n  %16 = and i32 %4, 1\n  %17 = icmp eq i32 %16, 0\n  br i1 %17, label %22, label %18\n\n18:                                               ; preds = %6\n  %19 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 1\n  %20 = load float, ptr %8, align 4, !tbaa !15\n  %21 = tail call float @llvm.fmuladd.f32(float %20, float 5.000000e-01, float %20)\n  store float %21, ptr %10, align 4, !tbaa !15\n  br label %22\n\n22:                                               ; preds = %18, %6\n  %23 = getelementptr inbounds %struct.TYPE_6__, ptr %8, i64 0, i32 2\n  %24 = load float, ptr %23, align 4, !tbaa !17\n  %25 = load float, ptr %8, align 4, !tbaa !15\n  %26 = tail call float @llvm.fmuladd.f32(float %24, float 5.000000e-01, float %25)\n  %27 = getelementptr inbounds float, ptr %10, i64 1\n  store float %26, ptr %27, align 4, !tbaa !15\n  %28 = icmp eq i32 %4, 1\n  br i1 %28, label %47, label %29\n\n29:                                               ; preds = %22, %29\n  %30 = phi i32 [ %45, %29 ], [ %4, %22 ]\n  %31 = phi ptr [ %44, %29 ], [ %10, %22 ]\n  %32 = phi ptr [ %43, %29 ], [ %8, %22 ]\n  %33 = phi i32 [ %46, %29 ], [ 0, %22 ]\n  %34 = getelementptr inbounds %struct.TYPE_6__, ptr %32, i64 0, i32 1\n  %35 = load float, ptr %34, align 4, !tbaa !17\n  %36 = load float, ptr %32, align 4, !tbaa !15\n  %37 = tail call float @llvm.fmuladd.f32(float %35, float 5.000000e-01, float %36)\n  %38 = getelementptr inbounds float, ptr %31, i64 1\n  store float %37, ptr %31, align 4, !tbaa !15\n  %39 = getelementptr inbounds %struct.TYPE_6__, ptr %32, i64 0, i32 2\n  %40 = load float, ptr %39, align 4, !tbaa !17\n  %41 = load float, ptr %32, align 4, !tbaa !15\n  %42 = tail call float @llvm.fmuladd.f32(float %40, float 5.000000e-01, float %41)\n  %43 = getelementptr inbounds float, ptr %31, i64 2\n  store float %42, ptr %38, align 4, !tbaa !15\n  %44 = getelementptr inbounds float, ptr %31, i64 2\n  %45 = add i32 %30, -1\n  %46 = add i32 %33, 2\n  %47 = icmp eq i32 %45, 0\n  br i1 %47, label %48, label %29, !llvm.loop !18\n\n48:                                               ; preds = %29\n  ret void\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare float @llvm.fmuladd.f32(float, float, float) #1\n\nattributes #0 = { nofree norecurse nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_7__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_8__\", !7, i64 0}\n!14 = !{!7, !7, i64 0}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"float\", !8, i64 0}\n!17 = !{!16, !16, i64 0}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/vlc/modules/audio_filter/channel_mixer/extr_simple.c_DoWork_3_x_to_2_0.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_11__ = type { i32, i64 }\n\n@AOUT_CHAN_LFE = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @DoWork_3_x_to_2_0], section \"llvm.metadata\"\n\n; Function Attrs: nofree nosync nounwind uwtable\ndefine internal void @DoWork_3_x_to_2_0(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {\n  %4 = load i32, ptr %1, align 8, !tbaa !5\n  %5 = icmp eq i32 %4, 0\n  br i1 %5, label %38, label %6\n\n6:                                                ; preds = %3\n  %7 = getelementptr inbounds %struct.TYPE_11__, ptr %1, i64 0, i32 1\n  %8 = load i64, ptr %7, align 8, !tbaa !11\n  %9 = inttoptr i64 %8 to ptr\n  %10 = getelementptr inbounds %struct.TYPE_11__, ptr %2, i64 0, i32 1\n  %11 = load i64, ptr %10, align 8, !tbaa !11\n  %12 = inttoptr i64 %11 to ptr\n  %13 = load i32, ptr %0, align 4, !tbaa !12\n  %14 = load i32, ptr @AOUT_CHAN_LFE, align 4, !tbaa !16\n  %15 = and i32 %14, %13\n  %16 = icmp eq i32 %15, 0\n  %17 = select i1 %16, i64 3, i64 4\n  %18 = and i32 %4, 1\n  %19 = icmp eq i32 %18, 0\n  br i1 %19, label %33, label %20\n\n20:                                               ; preds = %6\n  %21 = add nsw i32 %4, -1\n  %22 = getelementptr inbounds float, ptr %9, i64 2\n  %23 = load float, ptr %22, align 4, !tbaa !17\n  %24 = load float, ptr %9, align 4, !tbaa !17\n  %25 = tail call float @llvm.fmuladd.f32(float %24, float 5.000000e-01, float %23)\n  %26 = getelementptr inbounds float, ptr %12, i64 1\n  store float %25, ptr %12, align 4, !tbaa !17\n  %27 = load float, ptr %22, align 4, !tbaa !17\n  %28 = getelementptr inbounds float, ptr %9, i64 1\n  %29 = load float, ptr %28, align 4, !tbaa !17\n  %30 = tail call float @llvm.fmuladd.f32(float %29, float 5.000000e-01, float %27)\n  %31 = getelementptr inbounds float, ptr %12, i64 2\n  store float %30, ptr %26, align 4, !tbaa !17\n  %32 = getelementptr inbounds float, ptr %9, i64 %17\n  br label %33\n\n33:                                               ; preds = %20, %6\n  %34 = phi i32 [ %4, %6 ], [ %21, %20 ]\n  %35 = phi ptr [ %9, %6 ], [ %32, %20 ]\n  %36 = phi ptr [ %12, %6 ], [ %31, %20 ]\n  %37 = icmp eq i32 %4, 1\n  br i1 %37, label %38, label %39\n\n38:                                               ; preds = %33, %39, %3\n  ret void\n\n39:                                               ; preds = %33, %39\n  %40 = phi i32 [ %54, %39 ], [ %34, %33 ]\n  %41 = phi ptr [ %65, %39 ], [ %35, %33 ]\n  %42 = phi ptr [ %64, %39 ], [ %36, %33 ]\n  %43 = getelementptr inbounds float, ptr %41, i64 2\n  %44 = load float, ptr %43, align 4, !tbaa !17\n  %45 = load float, ptr %41, align 4, !tbaa !17\n  %46 = tail call float @llvm.fmuladd.f32(float %45, float 5.000000e-01, float %44)\n  %47 = getelementptr inbounds float, ptr %42, i64 1\n  store float %46, ptr %42, align 4, !tbaa !17\n  %48 = load float, ptr %43, align 4, !tbaa !17\n  %49 = getelementptr inbounds float, ptr %41, i64 1\n  %50 = load float, ptr %49, align 4, !tbaa !17\n  %51 = tail call float @llvm.fmuladd.f32(float %50, float 5.000000e-01, float %48)\n  %52 = getelementptr inbounds float, ptr %42, i64 2\n  store float %51, ptr %47, align 4, !tbaa !17\n  %53 = getelementptr inbounds float, ptr %41, i64 %17\n  %54 = add nsw i32 %40, -2\n  %55 = getelementptr inbounds float, ptr %53, i64 2\n  %56 = load float, ptr %55, align 4, !tbaa !17\n  %57 = load float, ptr %53, align 4, !tbaa !17\n  %58 = tail call float @llvm.fmuladd.f32(float %57, float 5.000000e-01, float %56)\n  %59 = getelementptr inbounds float, ptr %42, i64 3\n  store float %58, ptr %52, align 4, !tbaa !17\n  %60 = load float, ptr %55, align 4, !tbaa !17\n  %61 = getelementptr inbounds float, ptr %53, i64 1\n  %62 = load float, ptr %61, align 4, !tbaa !17\n  %63 = tail call float @llvm.fmuladd.f32(float %62, float 5.000000e-01, float %60)\n  %64 = getelementptr inbounds float, ptr %42, i64 4\n  store float %63, ptr %59, align 4, !tbaa !17\n  %65 = getelementptr inbounds float, ptr %53, i64 %17\n  %66 = icmp eq i32 %54, 0\n  br i1 %66, label %38, label %39, !llvm.loop !19\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare float @llvm.fmuladd.f32(float, float, float) #1\n\nattributes #0 = { nofree nosync nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_11__\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"long\", !8, i64 0}\n!11 = !{!6, !10, i64 8}\n!12 = !{!13, !7, i64 0}\n!13 = !{!\"TYPE_10__\", !14, i64 0}\n!14 = !{!\"TYPE_9__\", !15, i64 0}\n!15 = !{!\"TYPE_8__\", !7, i64 0}\n!16 = !{!7, !7, i64 0}\n!17 = !{!18, !18, i64 0}\n!18 = !{!\"float\", !8, i64 0}\n!19 = distinct !{!19, !20}\n!20 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_sdla.c_sdla_deassoc.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function sdla_deassoc\n\t.type\tsdla_deassoc,@function\nsdla_deassoc:                           # @sdla_deassoc\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tsubq\t$24, %rsp\n\t.cfi_def_cfa_offset 64\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %r14\n\tcallq\tnetdev_priv@PLT\n\tmovq\t%rax, %r15\n\tmovl\tCONFIG_DLCI_MAX(%rip), %eax\n\ttestl\t%eax, %eax\n\tjle\t.LBB0_1\n# %bb.6:\n\tmovq\t16(%r15), %rdx\n\txorl\t%ecx, %ecx\n\t.p2align\t4, 0x90\n.LBB0_7:                                # =>This Inner Loop Header: Depth=1\n\tcmpq\t%rbx, (%rdx,%rcx,8)\n\tje\t.LBB0_2\n# %bb.8:                                #   in Loop: Header=BB0_7 Depth=1\n\tincq\t%rcx\n\tcmpq\t%rcx, %rax\n\tjne\t.LBB0_7\n\tjmp\t.LBB0_9\n.LBB0_1:\n\txorl\t%ecx, %ecx\n.LBB0_2:\n\tcmpl\t%eax, %ecx\n\tjne\t.LBB0_3\n.LBB0_9:\n\txorl\t%ebp, %ebp\n\tsubl\tENODEV(%rip), %ebp\n.LBB0_11:\n\tmovl\t%ebp, %eax\n\taddq\t$24, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_3:\n\t.cfi_def_cfa_offset 64\n\tmovq\t16(%r15), %rax\n\tmovl\t%ecx, %ecx\n\tmovq\t$0, (%rax,%rcx,8)\n\tmovq\t8(%r15), %rax\n\tmovq\t$0, (%rax,%rcx,8)\n\tmovq\t%r14, %rdi\n\tcallq\tnetif_running@PLT\n\txorl\t%ebp, %ebp\n\ttestq\t%rax, %rax\n\tje\t.LBB0_11\n# %bb.4:\n\tmovq\t(%r15), %rax\n\tcmpq\tFRAD_STATION_CPE(%rip), %rax\n\tjne\t.LBB0_10\n# %bb.5:\n\tmovq\t%r14, %rdi\n\tcallq\tsdla_reconfig@PLT\n\tjmp\t.LBB0_11\n.LBB0_10:\n\tmovl\tSDLA_DELETE_DLCI(%rip), %esi\n\tmovl\t(%rbx), %r8d\n\txorps\t%xmm0, %xmm0\n\tmovups\t%xmm0, (%rsp)\n\txorl\t%ebp, %ebp\n\tmovq\t%r14, %rdi\n\txorl\t%edx, %edx\n\txorl\t%ecx, %ecx\n\tmovl\t$2, %r9d\n\tcallq\tsdla_cmd@PLT\n\tjmp\t.LBB0_11\n.Lfunc_end0:\n\t.size\tsdla_deassoc, .Lfunc_end0-sdla_deassoc\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tCONFIG_DLCI_MAX,@object         # @CONFIG_DLCI_MAX\n\t.bss\n\t.globl\tCONFIG_DLCI_MAX\n\t.p2align\t2\nCONFIG_DLCI_MAX:\n\t.long\t0                               # 0x0\n\t.size\tCONFIG_DLCI_MAX, 4\n\n\t.type\tENODEV,@object                  # @ENODEV\n\t.globl\tENODEV\n\t.p2align\t2\nENODEV:\n\t.long\t0                               # 0x0\n\t.size\tENODEV, 4\n\n\t.type\tFRAD_STATION_CPE,@object        # @FRAD_STATION_CPE\n\t.globl\tFRAD_STATION_CPE\n\t.p2align\t3\nFRAD_STATION_CPE:\n\t.quad\t0                               # 0x0\n\t.size\tFRAD_STATION_CPE, 8\n\n\t.type\tSDLA_DELETE_DLCI,@object        # @SDLA_DELETE_DLCI\n\t.globl\tSDLA_DELETE_DLCI\n\t.p2align\t2\nSDLA_DELETE_DLCI:\n\t.long\t0                               # 0x0\n\t.size\tSDLA_DELETE_DLCI, 4\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %19\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %13\n\n10:                                               ; preds = %13\n  %11 = add nuw nsw i64 %14, 1\n  %12 = icmp eq i64 %11, %9\n  br i1 %12, label %19, label %13, !llvm.loop !12\n\n13:                                               ; preds = %6, %10\n  %14 = phi i64 [ 0, %6 ], [ %11, %10 ]\n  %15 = getelementptr inbounds ptr, ptr %8, i64 %14\n  %16 = load ptr, ptr %15, align 8, !tbaa !14\n  %17 = icmp eq ptr %16, %1\n  br i1 %17, label %18, label %10\n\n18:                                               ; preds = %13\n  br label %19\n\n19:                                               ; preds = %10, %18, %2\n  %20 = phi i32 [ 0, %18 ], [ 0, %2 ], [ %4, %10 ]\n  %21 = phi i64 [ 0, %18 ], [ %14, %10 ], [ 0, %2 ]\n  %22 = icmp eq i32 %20, %4\n  br i1 %22, label %23, label %26\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %25 = sub nsw i32 0, %24\n  br label %39\n\n26:                                               ; preds = %19\n  %27 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = getelementptr inbounds ptr, ptr %28, i64 %21\n  store ptr null, ptr %29, align 8, !tbaa !14\n  %30 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %31 = load ptr, ptr %30, align 8, !tbaa !15\n  %32 = getelementptr inbounds ptr, ptr %31, i64 %21\n  store ptr null, ptr %32, align 8, !tbaa !14\n  %33 = tail call i64 @netif_running(ptr noundef %0) #3\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %39, label %35\n\n35:                                               ; preds = %26\n  %36 = load i64, ptr %3, align 8, !tbaa !16\n  %37 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !17\n  %38 = icmp eq i64 %36, %37\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %26, %35, %23\n  %40 = phi i32 [ %25, %23 ], [ 0, %35 ], [ 0, %26 ]\n  ret i32 %40\n\n41:                                               ; preds = %42\n  %42 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %39\n\n43:                                               ; preds = %41\n  %44 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %45 = sub nsw i32 0, %44\n  br label %39\n\n46:                                               ; preds = %41\n  %47 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %48 = load i32, ptr %1, align 4, !tbaa !18\n  %49 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %47, ptr noundef null, ptr noundef null, i32 noundef %48, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %39\n\n50:                                               ; preds = %46\n  %51 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %52 = sub nsw i32 0, %51\n  br label %39\n\n53:                                               ; preds = %46\n  %54 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %55 = sub nsw i32 0, %54\n  br label %39\n\n56:                                               ; preds = %46\n  %57 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %58 = sub nsw i32 0, %57\n  br label %39\n\n59:                                               ; preds = %46\n  %60 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %61 = sub nsw i32 0, %60\n  br label %39\n\n62:                                               ; preds = %46\n  %63 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %64 = sub nsw i32 0, %63\n  br label %39\n\n65:                                               ; preds = %46\n  %66 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %67 = sub nsw i32 0, %66\n  br label %39\n\n68:                                               ; preds = %46\n  %69 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %70 = sub nsw i32 0, %69\n  br label %39\n\n61:                                               ; preds = %46\n  %71 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %72 = sub nsw i32 0, %71\n  br label %39\n\n73:                                               ; preds = %46\n  %74 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %75 = sub nsw i32 0, %74\n  br label %39\n\n76:                                               ; preds = %46\n  %77 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %78 = sub nsw i32 0, %77\n  br label %39\n\n79:                                               ; preds = %46\n  %80 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %81 = sub nsw i32 0, %80\n  br label %39\n\n82:                                               ; preds = %46\n  %83 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %84 = sub nsw i32 0, %83\n  br label %39\n\n85:                                               ; preds = %46\n  %86 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %87 = sub nsw i32 0, %86\n  br label %39\n\n88:                                               ; preds = %46\n  %89 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %90 = sub nsw i32 0, %89\n  br label %39\n\n91:                                               ; preds = %46\n  %92 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %93 = sub nsw i32 0, %92\n  br label %39\n\n94:                                               ; preds = %46\n  %95 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %96 = sub nsw i32 0, %95\n  br label %39\n\n97:                                               ; preds = %46\n  %98 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %99 = sub nsw i32 0, %98\n  br label %39\n\n100:                                              ; preds = %46\n  %101 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %102 = sub nsw i32 0, %101\n  br label %39\n\n103:                                              ; preds = %46\n  %104 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %105 = sub nsw i32 0, %104\n  br label %39\n\n106:                                              ; preds = %46\n  %107 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %108 = sub nsw i32 0, %107\n  br label %39\n\n109:                                              ; preds = %46\n  %110 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %19\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %13\n\n10:                                               ; preds = %13\n  %11 = add nuw nsw i64 %14, 1\n  %12 = icmp eq i64 %11, %9\n  br i1 %12, label %19, label %13, !llvm.loop !12\n\n13:                                               ; preds = %6, %10\n  %14 = phi i64 [ 0, %6 ], [ %11, %10 ]\n  %15 = getelementptr inbounds ptr, ptr %8, i64 %14\n  %16 = load ptr, ptr %15, align 8, !tbaa !14\n  %17 = icmp eq ptr %16, %1\n  br i1 %17, label %18, label %10\n\n18:                                               ; preds = %13\n  br label %19\n\n19:                                               ; preds = %10, %18, %2\n  %20 = phi i32 [ 0, %18 ], [ 0, %2 ], [ %4, %10 ]\n  %21 = phi i64 [ 0, %18 ], [ %14, %10 ], [ 0, %2 ]\n  %22 = icmp eq i32 %20, %4\n  br i1 %22, label %23, label %26\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %25 = sub nsw i32 0, %24\n  br label %39\n\n26:                                               ; preds = %19\n  %27 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = getelementptr inbounds ptr, ptr %28, i64 %21\n  store ptr null, ptr %29, align 8, !tbaa !14\n  %30 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %31 = load ptr, ptr %30, align 8, !tbaa !15\n  %32 = getelementptr inbounds ptr, ptr %31, i64 %21\n  store ptr null, ptr %32, align 8, !tbaa !14\n  %33 = tail call i64 @netif_running(ptr noundef %0) #3\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %39, label %35\n\n35:                                               ; preds = %26\n  %36 = load i64, ptr %3, align 8, !tbaa !16\n  %37 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !17\n  %38 = icmp eq i64 %36, %37\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %26, %35, %23\n  %40 = phi i32 [ %25, %23 ], [ 0, %35 ], [ 0, %26 ]\n  ret i32 %40\n\n41:                                               ; preds = %42\n  %42 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %39\n\n43:                                               ; preds = %41\n  %44 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %41, ptr noundef null, ptr noundef null, i32 noundef %41, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %39\n\n45:                                               ; preds = %43\n  %46 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %47 = sub nsw i32 0, %46\n  br label %39\n\n48:                                               ; preds = %45\n  %49 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %50 = load i32, ptr %1, align 4, !tbaa !18\n  %51 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %49, ptr noundef null, ptr noundef null, i32 noundef %50, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %39\n\n52:                                               ; preds = %48\n  %53 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %54 = sub nsw i32 0, %53\n  br label %39\n\n55:                                               ; preds = %52\n  %56 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %57 = sub nsw i32 0, %56\n  br label %39\n\n58:                                               ; preds = %55\n  %59 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %60 = sub nsw i32 0, %59\n  br label %39\n\n61:                                               ; preds = %60\n  %62 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %63 = sub nsw i32 0, %62\n  br label %39\n\n64:                                               ; preds = %61\n  %65 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %66 = sub nsw i32 0, %65\n  br label %39\n\n67:                                               ; preds = %64\n  %68 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %69 = sub nsw i32 0, %68\n  br label %39\n\n70:                                               ; preds = %67\n  %71 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %72 = sub nsw i32 0, %71\n  br label %39\n\n73:                                               ; preds = %70\n  %74 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %75 = sub nsw i32 0, %74\n  br label %39\n\n76:                                               ; preds = %73\n  %77 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %78 = sub nsw i32 0, %77\n  br label %39\n\n79:                                               ; preds = %76\n  %80 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %81 = sub nsw i32 0, %80\n  br label %39\n\n82:                                               ; preds = %79\n  %83 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %84 = sub nsw i32 0, %83\n  br label %39\n\n85:                                               ; preds = %82\n  %86 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %87 = sub nsw i32 0, %86\n  br label %39\n\n88:                                               ; preds = %85\n  %89 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %90 = sub nsw i32 0, %89\n  br label %39\n\n81:                                               ; preds = %88\n  %91 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %92 = sub nsw i32 0, %91\n  br label %39\n\n93:                                               ; preds = %81\n  %94 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %95 = sub nsw i32 0, %94\n  br label %39\n\n96:                                               ; preds = %93\n  %97 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %98 = sub nsw i32 0, %97\n  br label %39\n\n99:                                               ; preds = %96\n  %100 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %101 = sub nsw i32 0, %100\n  br label %39\n\n102:                                              ; preds = %99\n  %103 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %104 = sub nsw i32 0, %103\n  br label %39\n\n105:                                              ; preds = %102\n  %106 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %107 = sub nsw i32 0, %106\n  br label %39\n\n108:                                              ; preds = %1", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %19\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %13\n\n10:                                               ; preds = %13\n  %11 = add nuw nsw i64 %14, 1\n  %12 = icmp eq i64 %11, %9\n  br i1 %12, label %19, label %13, !llvm.loop !12\n\n13:                                               ; preds = %6, %10\n  %14 = phi i64 [ 0, %6 ], [ %11, %10 ]\n  %15 = getelementptr inbounds ptr, ptr %8, i64 %14\n  %16 = load ptr, ptr %15, align 8, !tbaa !14\n  %17 = icmp eq ptr %16, %1\n  br i1 %17, label %18, label %10\n\n18:                                               ; preds = %13\n  br label %19\n\n19:                                               ; preds = %10, %18, %2\n  %20 = phi i32 [ 0, %18 ], [ 0, %2 ], [ %4, %10 ]\n  %21 = phi i64 [ 0, %18 ], [ %14, %10 ], [ 0, %2 ]\n  %22 = icmp eq i32 %20, %4\n  br i1 %22, label %23, label %26\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %25 = sub nsw i32 0, %24\n  br label %39\n\n26:                                               ; preds = %19\n  %27 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = getelementptr inbounds ptr, ptr %28, i64 %21\n  store ptr null, ptr %29, align 8, !tbaa !14\n  %30 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %31 = load ptr, ptr %30, align 8, !tbaa !15\n  %32 = getelementptr inbounds ptr, ptr %31, i64 %21\n  store ptr null, ptr %32, align 8, !tbaa !14\n  %33 = tail call i64 @netif_running(ptr noundef %0) #3\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %39, label %35\n\n35:                                               ; preds = %26\n  %36 = load i64, ptr %3, align 8, !tbaa !16\n  %37 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !17\n  %38 = icmp eq i64 %36, %37\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %26, %35, %23\n  %40 = phi i32 [ %25, %23 ], [ 0, %35 ], [ 0, %26 ]\n  ret i32 %40\n\n41:                                               ; preds = %42\n  %42 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %39\n\n43:                                               ; preds = %41\n  %44 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %45 = sub nsw i32 0, %44\n  br label %39\n\n46:                                               ; preds = %41\n  %47 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %48 = load i32, ptr %1, align 4, !tbaa !18\n  %49 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %47, ptr noundef null, ptr noundef null, i32 noundef %48, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %39\n\n50:                                               ; preds = %46\n  %51 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %52 = sub nsw i32 0, %51\n  br label %39\n\n53:                                               ; preds = %46\n  %54 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %55 = sub nsw i32 0, %54\n  br label %39\n\n56:                                               ; preds = %46\n  %57 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %58 = sub nsw i32 0, %57\n  br label %39\n\n59:                                               ; preds = %46\n  %60 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %61 = sub nsw i32 0, %60\n  br label %39\n\n62:                                               ; preds = %46\n  %63 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %64 = sub nsw i32 0, %63\n  br label %39\n\n65:                                               ; preds = %46\n  %66 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %67 = sub nsw i32 0, %66\n  br label %39\n\n68:                                               ; preds = %46\n  %69 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %70 = sub nsw i32 0, %69\n  br label %39\n\n61:                                               ; preds = %46\n  %71 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %72 = sub nsw i32 0, %71\n  br label %39\n\n73:                                               ; preds = %46\n  %74 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %75 = sub nsw i32 0, %74\n  br label %39\n\n76:                                               ; preds = %46\n  %77 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %78 = sub nsw i32 0, %77\n  br label %39\n\n79:                                               ; preds = %46\n  %80 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %81 = sub nsw i32 0, %80\n  br label %39\n\n82:                                               ; preds = %46\n  %83 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %84 = sub nsw i32 0, %83\n  br label %39\n\n85:                                               ; preds = %46\n  %86 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %87 = sub nsw i32 0, %86\n  br label %39\n\n88:                                               ; preds = %46\n  %89 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %90 = sub nsw i32 0, %89\n  br label %39\n\n91:                                               ; preds = %46\n  %92 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %93 = sub nsw i32 0, %92\n  br label %39\n\n94:                                               ; preds = %46\n  %95 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %96 = sub nsw i32 0, %95\n  br label %39\n\n97:                                               ; preds = %46\n  %98 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %99 = sub nsw i32 0, %98\n  br label %39\n\n100:                                              ; preds = %46\n  %101 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %102 = sub nsw i32 0, %101\n  br label %39\n\n103:                                              ; preds = %46\n  %104 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %105 = sub nsw i32 0, %104\n  br label %39\n\n106:                                              ; preds = %46\n  %107 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %108 = sub nsw i32 0, %107\n  br label %39\n\n109:                                              ; preds = %46\n  %110 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.sdla_t = type { i64, ptr, ptr }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #3\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %19\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %13\n\n10:                                               ; preds = %13\n  %11 = add nuw nsw i64 %14, 1\n  %12 = icmp eq i64 %11, %9\n  br i1 %12, label %19, label %13, !llvm.loop !12\n\n13:                                               ; preds = %6, %10\n  %14 = phi i64 [ 0, %6 ], [ %11, %10 ]\n  %15 = getelementptr inbounds ptr, ptr %8, i64 %14\n  %16 = load ptr, ptr %15, align 8, !tbaa !14\n  %17 = icmp eq ptr %16, %1\n  br i1 %17, label %18, label %10\n\n18:                                               ; preds = %13\n  br label %19\n\n19:                                               ; preds = %10, %18, %2\n  %20 = phi i32 [ 0, %18 ], [ 0, %2 ], [ %4, %10 ]\n  %21 = phi i64 [ 0, %18 ], [ %14, %10 ], [ 0, %2 ]\n  %22 = icmp eq i32 %20, %4\n  br i1 %22, label %23, label %26\n\n23:                                               ; preds = %19\n  %24 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %25 = sub nsw i32 0, %24\n  br label %39\n\n26:                                               ; preds = %19\n  %27 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = getelementptr inbounds ptr, ptr %28, i64 %21\n  store ptr null, ptr %29, align 8, !tbaa !14\n  %30 = getelementptr inbounds %struct.sdla_t, ptr %3, i64 0, i32 1\n  %31 = load ptr, ptr %30, align 8, !tbaa !15\n  %32 = getelementptr inbounds ptr, ptr %31, i64 %21\n  store ptr null, ptr %32, align 8, !tbaa !14\n  %33 = tail call i64 @netif_running(ptr noundef %0) #3\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %39, label %35\n\n35:                                               ; preds = %26\n  %36 = load i64, ptr %3, align 8, !tbaa !16\n  %37 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !17\n  %38 = icmp eq i64 %36, %37\n  br i1 %38, label %42, label %39\n\n39:                                               ; preds = %26, %35, %23\n  %40 = phi i32 [ %25, %23 ], [ 0, %35 ], [ 0, %26 ]\n  ret i32 %40\n\n41:                                               ; preds = %42\n  %42 = tail call i32 @sdla_reconfig(ptr noundef %0) #3\n  br label %39\n\n43:                                               ; preds = %41\n  %44 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %45 = sub nsw i32 0, %44\n  br label %39\n\n46:                                               ; preds = %41\n  %47 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %48 = load i32, ptr %1, align 4, !tbaa !18\n  %49 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %47, ptr noundef null, ptr noundef null, i32 noundef %48, i32 noundef 2, ptr noundef null, ptr noundef null) #3\n  br label %39\n\n})\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @netif_running(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_reconfig(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_cmd(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 16}\n!10 = !{!\"sdla_t\", !11, i64 0, !11, i64 8, !11, i64 16}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = distinct !{!12, !13}\n!13 = !{!\"llvm.loop.mustprogress\"}\n!14 = !{!11, !11, i64 0}\n!15 = !{!10, !11, i64 8}\n!16 = !{!10, !11, i64 0}\n!17 = !{!11, !11, i64 0}\n!18 = !{!19, !6, i64 0}\n!19 = !{!\"dlci\", !6, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/linux/drivers/net/wan/extr_sdla.c_sdla_deassoc.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.frad_local = type { %struct.TYPE_2__, ptr, ptr }\n%struct.TYPE_2__ = type { i64 }\n\n@CONFIG_DLCI_MAX = dso_local local_unnamed_addr global i32 0, align 4\n@ENODEV = dso_local local_unnamed_addr global i32 0, align 4\n@FRAD_STATION_CPE = dso_local local_unnamed_addr global i64 0, align 8\n@SDLA_DELETE_DLCI = dso_local local_unnamed_addr global i32 0, align 4\n@llvm.compiler.used = appending global [1 x ptr] [ptr @sdla_deassoc], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @sdla_deassoc(ptr noundef %0, ptr noundef readonly %1) #0 {\n  %3 = tail call ptr @netdev_priv(ptr noundef %0) #2\n  %4 = load i32, ptr @CONFIG_DLCI_MAX, align 4, !tbaa !5\n  %5 = icmp sgt i32 %4, 0\n  br i1 %5, label %6, label %20\n\n6:                                                ; preds = %2\n  %7 = getelementptr inbounds %struct.frad_local, ptr %3, i64 0, i32 2\n  %8 = load ptr, ptr %7, align 8, !tbaa !9\n  %9 = zext i32 %4 to i64\n  br label %10\n\n10:                                               ; preds = %6, %15\n  %11 = phi i64 [ 0, %6 ], [ %16, %15 ]\n  %12 = getelementptr inbounds ptr, ptr %8, i64 %11\n  %13 = load ptr, ptr %12, align 8, !tbaa !14\n  %14 = icmp eq ptr %13, %1\n  br i1 %14, label %18, label %15\n\n15:                                               ; preds = %10\n  %16 = add nuw nsw i64 %11, 1\n  %17 = icmp eq i64 %16, %9\n  br i1 %17, label %23, label %10, !llvm.loop !15\n\n18:                                               ; preds = %10\n  %19 = trunc i64 %11 to i32\n  br label %20\n\n20:                                               ; preds = %18, %2\n  %21 = phi i32 [ 0, %2 ], [ %19, %18 ]\n  %22 = icmp eq i32 %21, %4\n  br i1 %22, label %23, label %26\n\n23:                                               ; preds = %15, %20\n  %24 = load i32, ptr @ENODEV, align 4, !tbaa !5\n  %25 = sub nsw i32 0, %24\n  br label %46\n\n26:                                               ; preds = %20\n  %27 = getelementptr inbounds %struct.frad_local, ptr %3, i64 0, i32 2\n  %28 = load ptr, ptr %27, align 8, !tbaa !9\n  %29 = zext i32 %21 to i64\n  %30 = getelementptr inbounds ptr, ptr %28, i64 %29\n  store ptr null, ptr %30, align 8, !tbaa !14\n  %31 = getelementptr inbounds %struct.frad_local, ptr %3, i64 0, i32 1\n  %32 = load ptr, ptr %31, align 8, !tbaa !17\n  %33 = getelementptr inbounds i64, ptr %32, i64 %29\n  store i64 0, ptr %33, align 8, !tbaa !18\n  %34 = tail call i64 @netif_running(ptr noundef %0) #2\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %46, label %36\n\n36:                                               ; preds = %26\n  %37 = load i64, ptr %3, align 8, !tbaa !19\n  %38 = load i64, ptr @FRAD_STATION_CPE, align 8, !tbaa !18\n  %39 = icmp eq i64 %37, %38\n  br i1 %39, label %40, label %42\n\n40:                                               ; preds = %36\n  %41 = tail call i32 @sdla_reconfig(ptr noundef %0) #2\n  br label %46\n\n42:                                               ; preds = %36\n  %43 = load i32, ptr @SDLA_DELETE_DLCI, align 4, !tbaa !5\n  %44 = load i32, ptr %1, align 4, !tbaa !20\n  %45 = tail call i32 @sdla_cmd(ptr noundef %0, i32 noundef %43, i32 noundef 0, i32 noundef 0, i32 noundef %44, i32 noundef 2, ptr noundef null, ptr noundef null) #2\n  br label %46\n\n46:                                               ; preds = %26, %42, %40, %23\n  %47 = phi i32 [ %25, %23 ], [ 0, %40 ], [ 0, %42 ], [ 0, %26 ]\n  ret i32 %47\n}\n\ndeclare ptr @netdev_priv(ptr noundef) local_unnamed_addr #1\n\ndeclare i64 @netif_running(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_reconfig(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @sdla_cmd(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !13, i64 16}\n!10 = !{!\"frad_local\", !11, i64 0, !13, i64 8, !13, i64 16}\n!11 = !{!\"TYPE_2__\", !12, i64 0}\n!12 = !{!\"long\", !7, i64 0}\n!13 = !{!\"any pointer\", !7, i64 0}\n!14 = !{!13, !13, i64 0}\n!15 = distinct !{!15, !16}\n!16 = !{!\"llvm.loop.mustprogress\"}\n!17 = !{!10, !13, i64 8}\n!18 = !{!12, !12, i64 0}\n!19 = !{!10, !12, i64 0}\n!20 = !{!21, !6, i64 0}\n!21 = !{!\"net_device\", !6, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_mkcasfw.c_parse_opt_image.ll\"\n\t.globl\tparse_opt_image                 # -- Begin function parse_opt_image\n\t.p2align\t4, 0x90\n\t.type\tparse_opt_image,@function\nparse_opt_image:                        # @parse_opt_image\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset %rbp, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register %rbp\n\tpushq\t%r15\n\tpushq\t%r14\n\tpushq\t%rbx\n\tpushq\t%rax\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\tmovl\t%edi, %r14d\n\tmovl\tMAX_ARG_LEN(%rip), %ecx\n\tmovq\t%rsp, %rax\n\taddq\t$15, %rcx\n\tandq\t$-16, %rcx\n\tsubq\t%rcx, %rax\n\tmovq\t%rax, %rsp\n\tmovl\tMAX_ARG_COUNT(%rip), %ecx\n\tmovq\t%rsp, %rbx\n\tleaq\t15(,%rcx,8), %rcx\n\tandq\t$-16, %rcx\n\tsubq\t%rcx, %rbx\n\tmovq\t%rbx, %rsp\n\tcmpl\t$70, %edi\n\tje\t.LBB0_7\n# %bb.1:\n\tcmpl\t$75, %r14d\n\tjne\t.LBB0_11\n# %bb.2:\n\tmovl\t$.L.str, %edi\n\tcmpq\t$0, kernel_image(%rip)\n\tjne\t.LBB0_9\n# %bb.3:\n\tmovl\t$kernel_image, %r15d\n\tjmp\t.LBB0_4\n.LBB0_7:\n\tmovl\t$.L.str.1, %edi\n\tcmpq\t$0, fs_image(%rip)\n\tje\t.LBB0_8\n.LBB0_9:\n\tcallq\tWARN@PLT\n\tjmp\t.LBB0_11\n.LBB0_8:\n\tmovl\t$fs_image, %r15d\n.LBB0_4:\n\tmovq\t%rsi, %rdi\n\tmovq\t%rax, %rsi\n\tmovq\t%rbx, %rdx\n\tcallq\tparse_arg@PLT\n\tmovq\t(%rbx), %rbx\n\tmovq\t%rbx, %rdi\n\tcallq\tis_empty_arg@PLT\n\ttestl\t%eax, %eax\n\tje\t.LBB0_5\n# %bb.10:\n\tmovl\t$.L.str.3, %edi\n\tmovl\t%r14d, %esi\n\txorl\t%eax, %eax\n\tcallq\tERR@PLT\n.LBB0_11:\n\tmovl\tERR_FATAL(%rip), %eax\n.LBB0_12:\n\tleaq\t-24(%rbp), %rsp\n\tpopq\t%rbx\n\tpopq\t%r14\n\tpopq\t%r15\n\tpopq\t%rbp\n\t.cfi_def_cfa %rsp, 8\n\tretq\n.LBB0_5:\n\t.cfi_def_cfa %rbp, 16\n\tmovq\t%rbx, %rdi\n\tcallq\tstrdup@PLT\n\tmovq\t%rax, %rcx\n\tmovq\t%rax, (%r15)\n\txorl\t%eax, %eax\n\ttestq\t%rcx, %rcx\n\tjne\t.LBB0_12\n# %bb.6:\n\tmovl\t$.L.str.2, %edi\n\txorl\t%eax, %eax\n\tcallq\tERR@PLT\n\tjmp\t.LBB0_11\n.Lfunc_end0:\n\t.size\tparse_opt_image, .Lfunc_end0-parse_opt_image\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMAX_ARG_LEN,@object             # @MAX_ARG_LEN\n\t.bss\n\t.globl\tMAX_ARG_LEN\n\t.p2align\t2\nMAX_ARG_LEN:\n\t.long\t0                               # 0x0\n\t.size\tMAX_ARG_LEN, 4\n\n\t.type\tMAX_ARG_COUNT,@object           # @MAX_ARG_COUNT\n\t.globl\tMAX_ARG_COUNT\n\t.p2align\t2\nMAX_ARG_COUNT:\n\t.long\t0                               # 0x0\n\t.size\tMAX_ARG_COUNT, 4\n\n\t.type\tkernel_image,@object            # @kernel_image\n\t.globl\tkernel_image\n\t.p2align\t3\nkernel_image:\n\t.zero\t8\n\t.size\tkernel_image, 8\n\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"only one kernel option allowed\"\n\t.size\t.L.str, 31\n\n\t.type\tfs_image,@object                # @fs_image\n\t.bss\n\t.globl\tfs_image\n\t.p2align\t3\nfs_image:\n\t.zero\t8\n\t.size\tfs_image, 8\n\n\t.type\t.L.str.1,@object                # @.str.1\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.1:\n\t.asciz\t\"only one fs option allowed\"\n\t.size\t.L.str.1, 27\n\n\t.type\tERR_FATAL,@object               # @ERR_FATAL\n\t.bss\n\t.globl\tERR_FATAL\n\t.p2align\t2\nERR_FATAL:\n\t.long\t0                               # 0x0\n\t.size\tERR_FATAL, 4\n\n\t.type\t.L.str.2,@object                # @.str.2\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str.2:\n\t.asciz\t\"not enough memory\"\n\t.size\t.L.str.2, 18\n\n\t.type\t.L.str.3,@object                # @.str.3\n.L.str.3:\n\t.asciz\t\"no file specified for option %c\"\n\t.size\t.L.str.3, 32\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %31 [\n    i32 75, label %9\n    i32 70, label %21\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %31\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %31\n\n21:                                               ; preds = %2\n  %22 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %31\n\n26:                                               ; preds = %21\n  %27 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %28 = load ptr, ptr %8, align 16, !tbaa !12\n  %29 = tail call ptr @strdup(ptr noundef %28)\n  store ptr %29, ptr @fs_image, align 8, !tbaa !9\n  %30 = icmp eq ptr %29, null\n  br i1 %30, label %31, label %33\n\n31:                                               ; preds = %2, %26, %24, %19, %12\n  %32 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %33\n\n33:                                               ; preds = %26, %31\n  %34 = phi i32 [ %32, %31 ], [ 0, %26 ]\n  ret i32 %34\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn allockind(\"alloc,uninitialized\") allocsize(0)\ndeclare noalias noundef ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #3\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\nattributes #3 = { inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn allockind(\"alloc,uninitialized\") allocsize(0) \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %30 [\n    i32 75, label %9\n    i32 70, label %21\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %30\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %30\n\n21:                                               ; preds = %2\n  %22 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %30\n\n26:                                               ; preds = %21\n  %27 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %28 = load ptr, ptr %8, align 16, !tbaa !12\n  %29 = tail call ptr @strdup(ptr noundef %28)\n  store ptr %29, ptr @fs_image, align 8, !tbaa !9\n  br label %32\n\n30:                                               ; preds = %2, %19, %24, %12\n  %31 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %30, %26\n  %33 = phi i32 [ %31, %30 ], [ 0, %26 ]\n  ret i32 %33\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %30 [\n    i32 75, label %9\n    i32 70, label %21\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %30\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %22, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %30\n\n21:                                               ; preds = %2\n  %22 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %23 = icmp eq ptr %22, null\n  br i1 %23, label %26, label %24\n\n24:                                               ; preds = %21\n  %25 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %30\n\n26:                                               ; preds = %21\n  %27 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %28 = load ptr, ptr %8, align 16, !tbaa !12\n  %29 = tail call ptr @strdup(ptr noundef %28)\n  store ptr %29, ptr @fs_image, align 8, !tbaa !9\n  br label %32\n\n30:                                               ; preds = %2, %24, %19, %12\n  %31 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %32\n\n32:                                               ; preds = %30, %26\n  %33 = phi i32 [ %31, %30 ], [ 0, %26 ]\n  ret i32 %33\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_2__ = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local global %struct.TYPE_2__ zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i32 noundef %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  switch i32 %0, label %31 [\n    i32 75, label %9\n    i32 70, label %23\n  ]\n\n9:                                                ; preds = %2\n  %10 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %12, label %14\n\n12:                                               ; preds = %9\n  %13 = tail call i32 @WARN(ptr noundef nonnull @.str) #2\n  br label %31\n\n14:                                               ; preds = %9\n  %15 = tail call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #2\n  %16 = load ptr, ptr %8, align 16, !tbaa !12\n  %17 = tail call i32 @is_empty_arg(ptr noundef %16) #2\n  %18 = icmp eq i32 %17, 0\n  br i1 %18, label %21, label %19\n\n19:                                               ; preds = %14\n  %20 = tail call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %0) #2\n  br label %31\n\n21:                                               ; preds = %14\n  %22 = tail call ptr @strdup(ptr noundef %16)\n  store ptr %22, ptr @kernel_image, align 8, !tbaa !9\n  br label %26\n\n23:                                               ; preds = %2\n  %24 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %25 = icmp eq ptr %24, null\n  br i1 %25, label %28, label %26\n\n26:                                               ; preds = %23, %21\n  %27 = tail call i32 @WARN(ptr noundef nonnull @.str.1) #2\n  br label %31\n\n28:                                               ; preds = %23\n  store ptr %16, ptr @fs_image, align 8, !tbaa !9\n  br label %31\n\n31:                                               ; preds = %2, %28, %26, %19, %12\n  %32 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  ret i32 %32\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"TYPE_2__\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/lede/tools/firmware-utils/src/extr_mkcasfw.c_parse_opt_image.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.image_desc = type { ptr }\n\n@MAX_ARG_LEN = dso_local local_unnamed_addr global i32 0, align 4\n@MAX_ARG_COUNT = dso_local local_unnamed_addr global i32 0, align 4\n@kernel_image = dso_local local_unnamed_addr global %struct.image_desc zeroinitializer, align 8\n@.str = private unnamed_addr constant [31 x i8] c\"only one kernel option allowed\\00\", align 1\n@fs_image = dso_local local_unnamed_addr global %struct.image_desc zeroinitializer, align 8\n@.str.1 = private unnamed_addr constant [27 x i8] c\"only one fs option allowed\\00\", align 1\n@ERR_FATAL = dso_local local_unnamed_addr global i32 0, align 4\n@.str.2 = private unnamed_addr constant [18 x i8] c\"not enough memory\\00\", align 1\n@.str.3 = private unnamed_addr constant [32 x i8] c\"no file specified for option %c\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local i32 @parse_opt_image(i8 noundef signext %0, ptr noundef %1) local_unnamed_addr #0 {\n  %3 = load i32, ptr @MAX_ARG_LEN, align 4, !tbaa !5\n  %4 = zext i32 %3 to i64\n  %5 = alloca i8, i64 %4, align 16\n  %6 = load i32, ptr @MAX_ARG_COUNT, align 4, !tbaa !5\n  %7 = zext i32 %6 to i64\n  %8 = alloca ptr, i64 %7, align 16\n  %9 = sext i8 %0 to i32\n  switch i32 %9, label %19 [\n    i32 75, label %10\n    i32 70, label %13\n  ]\n\n10:                                               ; preds = %2\n  %11 = load ptr, ptr @kernel_image, align 8, !tbaa !9\n  %12 = icmp eq ptr %11, null\n  br i1 %12, label %21, label %16\n\n13:                                               ; preds = %2\n  %14 = load ptr, ptr @fs_image, align 8, !tbaa !9\n  %15 = icmp eq ptr %14, null\n  br i1 %15, label %21, label %16\n\n16:                                               ; preds = %13, %10\n  %17 = phi ptr [ @.str, %10 ], [ @.str.1, %13 ]\n  %18 = tail call i32 @WARN(ptr noundef nonnull %17) #3\n  br label %19\n\n19:                                               ; preds = %16, %2\n  %20 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %36\n\n21:                                               ; preds = %10, %13\n  %22 = phi ptr [ @kernel_image, %10 ], [ @fs_image, %13 ]\n  %23 = call i32 @parse_arg(ptr noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %8) #3\n  %24 = load ptr, ptr %8, align 16, !tbaa !12\n  %25 = call i32 @is_empty_arg(ptr noundef %24) #3\n  %26 = icmp eq i32 %25, 0\n  br i1 %26, label %27, label %33\n\n27:                                               ; preds = %21\n  %28 = call ptr @strdup(ptr noundef %24)\n  store ptr %28, ptr %22, align 8, !tbaa !9\n  %29 = icmp eq ptr %28, null\n  br i1 %29, label %30, label %36\n\n30:                                               ; preds = %27\n  %31 = call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.2) #3\n  %32 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %36\n\n33:                                               ; preds = %21\n  %34 = call i32 (ptr, ...) @ERR(ptr noundef nonnull @.str.3, i32 noundef %9) #3\n  %35 = load i32, ptr @ERR_FATAL, align 4, !tbaa !5\n  br label %36\n\n36:                                               ; preds = %27, %33, %30, %19\n  %37 = phi i32 [ %35, %33 ], [ %32, %30 ], [ %20, %19 ], [ 0, %27 ]\n  ret i32 %37\n}\n\ndeclare i32 @WARN(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @parse_arg(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @is_empty_arg(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn\ndeclare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #2\n\ndeclare i32 @ERR(ptr noundef, ...) local_unnamed_addr #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { inaccessiblemem_or_argmemonly mustprogress nofree nounwind willreturn \"alloc-family\"=\"malloc\" \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !6, i64 0}\n!6 = !{!\"int\", !7, i64 0}\n!7 = !{!\"omnipotent char\", !8, i64 0}\n!8 = !{!\"Simple C/C++ TBAA\"}\n!9 = !{!10, !11, i64 0}\n!10 = !{!\"image_desc\", !11, i64 0}\n!11 = !{!\"any pointer\", !7, i64 0}\n!12 = !{!11, !11, i64 0}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_vm_pageout.c_vector_upl_subupl_byoffset.ll\"\n\t.globl\tvector_upl_subupl_byoffset      # -- Begin function vector_upl_subupl_byoffset\n\t.p2align\t4, 0x90\n\t.type\tvector_upl_subupl_byoffset,@function\nvector_upl_subupl_byoffset:             # @vector_upl_subupl_byoffset\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 32\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 40\n\tpushq\t%rax\n\t.cfi_def_cfa_offset 48\n\t.cfi_offset %rbx, -40\n\t.cfi_offset %r12, -32\n\t.cfi_offset %r14, -24\n\t.cfi_offset %r15, -16\n\tmovq\t%rdx, %r15\n\tmovq\t%rsi, %r14\n\tmovq\t%rdi, %rbx\n\tcallq\tvector_upl_is_valid@PLT\n\ttestq\t%rax, %rax\n\tje\t.LBB0_14\n# %bb.1:\n\tmovq\t(%rbx), %r8\n\ttestq\t%r8, %r8\n\tje\t.LBB0_13\n# %bb.2:\n\tmovq\t(%r8), %r10\n\ttestq\t%r10, %r10\n\tje\t.LBB0_14\n# %bb.3:\n\tmovq\t8(%r8), %rdx\n\tmovl\t(%r14), %r9d\n\txorl\t%r12d, %r12d\n\txorl\t%eax, %eax\n\t.p2align\t4, 0x90\n.LBB0_4:                                # =>This Inner Loop Header: Depth=1\n\tmovl\t(%rdx,%rax,8), %esi\n\tmovl\t4(%rdx,%rax,8), %ebx\n\tleal\t(%rbx,%rsi), %edi\n\tmovl\t%edi, %ecx\n\tsubl\t%r9d, %ecx\n\tjg\t.LBB0_5\n# %bb.12:                               #   in Loop: Header=BB0_4 Depth=1\n\tincq\t%rax\n\tcmpq\t%rax, %r10\n\tjne\t.LBB0_4\n\tjmp\t.LBB0_15\n.LBB0_13:\n\tmovl\t$.L.str.1, %edi\n\tcallq\tpanic@PLT\n.LBB0_14:\n\txorl\t%r12d, %r12d\n.LBB0_15:\n\tmovq\t%r12, %rax\n\taddq\t$8, %rsp\n\t.cfi_def_cfa_offset 40\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 16\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 8\n\tretq\n.LBB0_5:\n\t.cfi_def_cfa_offset 48\n\tmovq\t16(%r8), %rdx\n\tmovq\t(%rdx,%rax,8), %r12\n\ttestq\t%r12, %r12\n\tje\t.LBB0_14\n# %bb.6:\n\tmovl\t(%r15), %edx\n\taddl\t%r9d, %edx\n\tcmpl\t%edx, %edi\n\tjge\t.LBB0_8\n# %bb.7:\n\tcmpl\t%ebx, %ecx\n\tcmovll\t%ecx, %ebx\n\tmovl\t%ebx, (%r15)\n\tmovl\t(%r14), %r9d\n.LBB0_8:\n\tsubl\t%esi, %r9d\n\tjge\t.LBB0_9\n# %bb.10:\n\ttestq\t%rax, %rax\n\tje\t.LBB0_15\n# %bb.11:\n\tmovl\t$.L.str, %edi\n\tcallq\tpanic@PLT\n\tjmp\t.LBB0_15\n.LBB0_9:\n\tmovl\t%r9d, (%r14)\n\tjmp\t.LBB0_15\n.Lfunc_end0:\n\t.size\tvector_upl_subupl_byoffset, .Lfunc_end0-vector_upl_subupl_byoffset\n\t.cfi_endproc\n                                        # -- End function\n\t.type\t.L.str,@object                  # @.str\n\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n.L.str:\n\t.asciz\t\"Vector UPL offset miscalculation\\n\"\n\t.size\t.L.str, 34\n\n\t.type\t.L.str.1,@object                # @.str.1\n.L.str.1:\n\t.asciz\t\"vector_upl_subupl_byoffset was passed a non-vectored UPL\\n\"\n\t.size\t.L.str.1, 58\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32 }\n\n@.str = private unnamed_addr constant [34 x i8] c\"Vector UPL offset miscalculation\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [58 x i8] c\"vector_upl_subupl_byoffset was passed a non-vectored UPL\\0A\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @vector_upl_subupl_byoffset(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i64 @vector_upl_is_valid(ptr noundef %0) #3\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %44, label %6\n\n6:                                                ; preds = %3\n  %7 = load ptr, ptr %0, align 8, !tbaa !5\n  %8 = icmp eq ptr %7, null\n  br i1 %8, label %44, label %9\n\n9:                                                ; preds = %6\n  %10 = load ptr, ptr %7, align 8, !tbaa !10\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %44, label %12\n\n12:                                               ; preds = %9\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !12\n  %15 = load i32, ptr %1, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !15\n  %19 = zext i32 %15 to i64\n  br label %20\n\n20:                                               ; preds = %12, %39\n  %21 = phi i64 [ 0, %12 ], [ %30, %39 ]\n  %22 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21\n  %23 = load i32, ptr %22, align 4, !tbaa !16\n  %24 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21, i32 1\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = add i32 %25, %23\n  %27 = add i32 %26, %15\n  %28 = zext i32 %27 to i64\n  %29 = load i64, ptr %18, align 8, !tbaa !19\n  %30 = add nuw nsw i64 %21, 1\n  %31 = icmp sgt i64 %29, %30\n  br i1 %31, label %32, label %39\n\n32:                                               ; preds = %20\n  %33 = getelementptr inbounds i64, ptr %18, i64 %30\n  %34 = load i64, ptr %33, align 8, !tbaa !19\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %44, label %36\n\n36:                                               ; preds = %32\n  %37 = load i32, ptr %2, align 4, !tbaa !13\n  %38 = add i32 %37, %15\n  br label %39\n\n39:                                               ; preds = %36, %20\n  %40 = phi i32 [ %38, %36 ], [ %27, %20 ]\n  %41 = phi i64 [ %34, %36 ], [ %29, %20 ]\n  %42 = phi i64 [ %30, %36 ], [ %21, %20 ]\n  %43 = icmp slt i32 %40, %19\n  br i1 %43, label %44, label %47\n\n44:                                               ; preds = %39, %32, %9, %6, %3\n  %45 = phi ptr [ null, %3 ], [ null, %6 ], [ null, %9 ], [ %41, %32 ], [ null, %39 ]\n  %46 = phi i64 [ 0, %3 ], [ 0, %6 ], [ 0, %9 ], [ %42, %32 ], [ %21, %39 ]\n  br label %44\n\n47:                                               ; preds = %39\n  %48 = trunc i64 %42 to i32\n  %49 = load i32, ptr %1, align 4, !tbaa !13\n  %50 = sub nsw i32 %49, %23\n  %51 = icmp slt i32 %50, %48\n  br i1 %51, label %52, label %55\n\n52:                                               ; preds = %47\n  %53 = icmp eq i64 %42, 0\n  br i1 %53, label %44, label %54\n\n54:                                               ; preds = %52\n  %55 = tail call i32 @panic(ptr noundef nonnull @.str) #3\n  br label %44\n\n56:                                               ; preds = %57\n  %57 = add nuw nsw i64 %58, 1\n  %58 = and i64 %57, 4294967295\n  %59 = icmp eq i64 %58, %10\n  br i1 %59, label %44, label %56, !llvm.loop !20\n\n60:                                               ; preds = %63\n  %61 = add nuw nsw i64 %64, 1\n  %62 = icmp eq i64 %61, %10\n  br i1 %62, label %44, label %63, !llvm.loop !22\n\n63:                                               ; preds = %60\n  %64 = and i64 %61, 4294967295\n  %65 = getelementptr inbounds i64, ptr %18, i64 %64\n  %66 = load i64, ptr %65, align 8, !tbaa !19\n  %67 = icmp eq i64 %66, 0\n  br i1 %67, label %44, label %68\n\n68:                                               ; preds = %63\n  %69 = load i32, ptr %2, align 4, !tbaa !13\n  %70 = add i32 %69, %15\n  %71 = icmp slt i32 %70, %40\n  br i1 %71, label %72, label %75\n\n72:                                               ; preds = %68\n  %73 = tail call i32 @llvm.smin.i32(i32 %40, i32 %25)\n  store i32 %73, ptr %2, align 4, !tbaa !13\n  %74 = load i32, ptr %1, align 4, !tbaa !13\n  br label %75\n\n75:                                               ; preds = %72, %68\n  %76 = phi i32 [ %74, %72 ], [ %40, %68 ]\n  %77 = phi i64 [ %73, %72 ], [ %40, %68 ]\n  %78 = phi i64 [ %61, %72 ], [ %64, %68 ]\n  %79 = phi i64 [ %66, %72 ], [ %66, %68 ]\n  %80 = trunc i64 %79 to i32\n  %81 = trunc i64 %77 to i32\n  %82 = sub nsw i32 %76, %23\n  %83 = icmp slt i32 %82, %80\n  br i1 %83, label %84, label %87\n\n84:                                               ; preds = %75\n  %85 = icmp eq i64 %78, 0\n  br i1 %85, label %44, label %86\n\n86:                                               ; preds = %84\n  %87 = tail call i32 @panic(ptr noundef nonnull @.str) #3\n  br label %44\n\n88:                                               ; preds = %91\n  %89 = add nuw nsw i64 %92, 1\n  %90 = and i64 %89, 4294967295\n  %91 = icmp eq i64 %90, %10\n  br i1 %91, label %44, label %92, !llvm.loop !24\n\n92:                                               ; preds = %88\n  %93 = getelementptr inbounds i64, ptr %18, i64 %90\n  %94 = load i64, ptr %93, align 8, !tbaa !19\n  %95 = icmp eq i64 %94, 0\n  br i1 %95, label %44, label %96\n\n96:                                               ; preds = %92\n  %97 = load i32, ptr %2, align 4, !tbaa !13\n  %98 = add i32 %97, %15\n  %99 = icmp slt i32 %98, %40\n  br i1 %99, label %100, label %103\n\n100:                                              ; preds = %96\n  %101 = tail call i32 @llvm.smin.i32(i32 %40, i32 %25)\n  store i32 %101, ptr %2, align 4, !tbaa !13\n  %102 = load i32, ptr %1, align 4, !tbaa !13\n  br label %103\n\n103:                                              ; preds = %100, %96\n  %104 = phi i32 [ %102, %100 ], [ %40, %96 ]\n  %105 = phi i64 [ %101, %100 ], [ %40, %96 ]\n  %106 = phi i64 [ %90, %100 ], [ %98, %96 ]\n  %107 = trunc i64 %106", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32 }\n\n@.str = private unnamed_addr constant [34 x i8] c\"Vector UPL offset miscalculation\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [58 x i8] c\"vector_upl_subupl_byoffset was passed a non-vectored UPL\\0A\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @vector_upl_subupl_byoffset(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i64 @vector_upl_is_valid(ptr noundef %0) #3\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %44, label %6\n\n6:                                                ; preds = %3\n  %7 = load ptr, ptr %0, align 8, !tbaa !5\n  %8 = icmp eq ptr %7, null\n  br i1 %8, label %44, label %9\n\n9:                                                ; preds = %6\n  %10 = load ptr, ptr %7, align 8, !tbaa !10\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %44, label %12\n\n12:                                               ; preds = %9\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !12\n  %15 = load i32, ptr %1, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !15\n  %19 = zext i32 %15 to i64\n  br label %20\n\n20:                                               ; preds = %12, %39\n  %21 = phi i64 [ 0, %12 ], [ %30, %39 ]\n  %22 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21\n  %23 = load i32, ptr %22, align 4, !tbaa !16\n  %24 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21, i32 1\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = add i32 %25, %23\n  %27 = add i32 %26, %15\n  %28 = zext i32 %27 to i64\n  %29 = load i64, ptr %18, align 8, !tbaa !19\n  %30 = add nuw nsw i64 %21, 1\n  %31 = icmp sgt i64 %29, %30\n  br i1 %31, label %32, label %39\n\n32:                                               ; preds = %20\n  %33 = getelementptr inbounds i64, ptr %18, i64 %30\n  %34 = load i64, ptr %33, align 8, !tbaa !19\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %44, label %36\n\n36:                                               ; preds = %32\n  %37 = load i32, ptr %2, align 4, !tbaa !13\n  %38 = add i32 %37, %15\n  br label %39\n\n39:                                               ; preds = %36, %20\n  %40 = phi i32 [ %38, %36 ], [ %27, %20 ]\n  %41 = phi i64 [ %34, %36 ], [ %29, %20 ]\n  %42 = phi i64 [ %30, %36 ], [ %21, %20 ]\n  %43 = icmp slt i32 %40, %19\n  br i1 %43, label %44, label %47\n\n44:                                               ; preds = %39, %32, %9, %6, %3\n  %45 = phi ptr [ null, %3 ], [ null, %6 ], [ null, %9 ], [ %41, %32 ], [ null, %39 ]\n  %46 = phi i64 [ 0, %3 ], [ 0, %6 ], [ 0, %9 ], [ %42, %32 ], [ %21, %39 ]\n  br label %44\n\n47:                                               ; preds = %39\n  %48 = trunc i64 %42 to i32\n  %49 = load i32, ptr %1, align 4, !tbaa !13\n  %50 = sub nsw i32 %49, %23\n  %51 = icmp slt i32 %50, %48\n  br i1 %51, label %52, label %55\n\n52:                                               ; preds = %47\n  %53 = icmp eq i64 %42, 0\n  br i1 %53, label %44, label %54\n\n54:                                               ; preds = %52\n  %55 = tail call i32 @panic(ptr noundef nonnull @.str) #3\n  br label %44\n\n56:                                               ; preds = %57\n  %57 = add nuw nsw i64 %58, 1\n  %58 = and i64 %57, 4294967295\n  %59 = icmp eq i64 %58, %10\n  br i1 %59, label %44, label %56, !llvm.loop !20\n\n60:                                               ; preds = %63\n  %61 = add nuw nsw i64 %64, 1\n  %62 = icmp eq i64 %61, %10\n  br i1 %62, label %44, label %63, !llvm.loop !22\n\n63:                                               ; preds = %60\n  %64 = and i64 %61, 4294967295\n  %65 = getelementptr inbounds i64, ptr %18, i64 %64\n  %66 = load i64, ptr %65, align 8, !tbaa !19\n  %67 = icmp eq i64 %66, 0\n  br i1 %67, label %44, label %68\n\n68:                                               ; preds = %63\n  %69 = load i32, ptr %2, align 4, !tbaa !13\n  %70 = add i32 %69, %15\n  %71 = icmp slt i32 %70, %40\n  br i1 %71, label %72, label %75\n\n72:                                               ; preds = %68\n  %73 = tail call i32 @llvm.smin.i32(i32 %40, i32 %25)\n  store i32 %73, ptr %2, align 4, !tbaa !13\n  %74 = load i32, ptr %1, align 4, !tbaa !13\n  br label %75\n\n75:                                               ; preds = %72, %68\n  %76 = phi i32 [ %74, %72 ], [ %40, %68 ]\n  %77 = phi i32 [ %73, %72 ], [ %25, %68 ]\n  store i32 %76, ptr %1, align 4, !tbaa !13\n  br label %44\n\n45:                                               ; preds = %56\n  %46 = phi i64 [ %58, %56 ], [ %10, %56 ]\n  %47 = phi i64 [ %57, %56 ], [ 0, %56 ]\n  %48 = icmp eq i64 %47, %46\n  br i1 %48, label %44, label %49\n\n49:                                               ; preds = %45\n  %50 = getelementptr inbounds i64, ptr %18, i64 %47\n  %51 = load i64, ptr %50, align 8, !tbaa !19\n  %52 = icmp eq i64 %51, 0\n  br i1 %52, label %44, label %53\n\n53:                                               ; preds = %49\n  %54 = load i32, ptr %2, align 4, !tbaa !13\n  %55 = add i32 %54, %15\n  br label %56\n\n56:                                               ; preds = %53, %45\n  %57 = phi i64 [ %47, %45 ], [ %51, %53 ]\n  %58 = phi i64 [ %46, %45 ], [ %47, %53 ]\n  %59 = phi i32 [ %55, %53 ], [ %54, %45 ]\n  %60 = icmp slt i32 %59, %19\n  br i1 %60, label %63, label %61\n\n61:                                               ; preds = %56\n  %62 = icmp eq i64 %57, 0\n  br i1 %62, label %44, label %63\n\n63:                                               ; preds = %61, %56\n  %64 = tail call i32 @panic(ptr noundef nonnull @.str) #3\n  br label %44\n\n65:                                               ; preds = %68\n  %66 = getelementptr inbounds i64, ptr %18, i64 %69\n  %67 = load i64, ptr %66, align 8, !tbaa !19\n  br label %44\n\n70:                                               ; preds = %76\n  %71 = getelementptr inbounds i64, ptr %18, i64 %77\n  %72 = load i64, ptr %71, align 8, !tbaa !19\n  br label %44\n\n73:                                               ; preds = %79\n  %74 = getelementptr inbounds i64, ptr %18, i64 %80\n  %75 = load i64, ptr %74, align 8, !tbaa !19\n  br label %44\n\n76:                                               ; preds = %70\n  %7", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32 }\n\n@.str = private unnamed_addr constant [34 x i8] c\"Vector UPL offset miscalculation\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [58 x i8] c\"vector_upl_subupl_byoffset was passed a non-vectored UPL\\0A\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @vector_upl_subupl_byoffset(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i64 @vector_upl_is_valid(ptr noundef %0) #3\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %44, label %6\n\n6:                                                ; preds = %3\n  %7 = load ptr, ptr %0, align 8, !tbaa !5\n  %8 = icmp eq ptr %7, null\n  br i1 %8, label %44, label %9\n\n9:                                                ; preds = %6\n  %10 = load ptr, ptr %7, align 8, !tbaa !10\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %44, label %12\n\n12:                                               ; preds = %9\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !12\n  %15 = load i32, ptr %1, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !15\n  %19 = zext i32 %15 to i64\n  br label %20\n\n20:                                               ; preds = %12, %39\n  %21 = phi i64 [ 0, %12 ], [ %40, %39 ]\n  %22 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21\n  %23 = load i32, ptr %22, align 4, !tbaa !16\n  %24 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21, i32 1\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = add i32 %25, %23\n  %27 = add i32 %26, %15\n  %28 = zext i32 %27 to i64\n  %29 = load i64, ptr %18, align 8, !tbaa !19\n  %30 = icmp sgt i64 %29, %28\n  br i1 %30, label %31, label %39\n\n31:                                               ; preds = %20\n  %32 = getelementptr inbounds i64, ptr %18, i64 %21\n  %33 = load i64, ptr %32, align 8, !tbaa !19\n  %34 = icmp eq i64 %33, 0\n  br i1 %34, label %44, label %35\n\n35:                                               ; preds = %31\n  %36 = load i32, ptr %2, align 4, !tbaa !13\n  %37 = add i32 %36, %15\n  %38 = icmp slt i32 %27, %37\n  br i1 %38, label %42, label %40\n\n39:                                               ; preds = %20\n  %40 = add nuw nsw i64 %21, 1\n  %41 = icmp eq i64 %40, %10\n  br i1 %41, label %44, label %20, !llvm.loop !21\n\n42:                                               ; preds = %35\n  %43 = tail call i32 @llvm.smin.i32(i32 %25, i32 %23)\n  store i32 %43, ptr %2, align 4, !tbaa !13\n  br label %40\n\n44:                                               ; preds = %39, %31, %6, %9, %3\n  %45 = phi ptr [ null, %3 ], [ null, %9 ], [ null, %6 ], [ %33, %31 ], [ null, %39 ]\n  ret ptr %45\n}\n\ndeclare i64 @vector_upl_is_valid(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_8__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !7, i64 0}\n!11 = !{!\"TYPE_10__\", !12, i64 0, !7, i64 8, !7, i64 16}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!14, !14, i64 0}\n!14 = !{!\"int\", !8, i64 0}\n!15 = !{!11, !7, i64 16}\n!16 = !{!17, !14, i64 0}\n!17 = !{!\"TYPE_9__\", !14, i64 0, !14, i64 4}\n!18 = !{!17, !14, i64 4}\n!19 = !{!12, !12, i64 0}\n!20 = distinct !{!20, !22}\n!21 = distinct !{!21, !22}\n!22 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_10__ = type { i64, ptr, ptr }\n%struct.TYPE_9__ = type { i32, i32 }\n\n@.str = private unnamed_addr constant [34 x i8] c\"Vector UPL offset miscalculation\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [58 x i8] c\"vector_upl_subupl_byoffset was passed a non-vectored UPL\\0A\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @vector_upl_subupl_byoffset(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i64 @vector_upl_is_valid(ptr noundef %0) #3\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %44, label %6\n\n6:                                                ; preds = %3\n  %7 = load ptr, ptr %0, align 8, !tbaa !5\n  %8 = icmp eq ptr %7, null\n  br i1 %8, label %44, label %9\n\n9:                                                ; preds = %6\n  %10 = load ptr, ptr %7, align 8, !tbaa !10\n  %11 = icmp eq ptr %10, null\n  br i1 %11, label %44, label %12\n\n12:                                               ; preds = %9\n  %13 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !12\n  %15 = load i32, ptr %1, align 4, !tbaa !13\n  %16 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 0, i32 1\n  %17 = getelementptr inbounds %struct.TYPE_10__, ptr %7, i64 0, i32 2\n  %18 = load ptr, ptr %17, align 8, !tbaa !15\n  %19 = zext i32 %15 to i64\n  br label %20\n\n20:                                               ; preds = %12, %39\n  %21 = phi i64 [ 0, %12 ], [ %30, %39 ]\n  %22 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21\n  %23 = load i32, ptr %22, align 4, !tbaa !16\n  %24 = getelementptr inbounds %struct.TYPE_9__, ptr %14, i64 %21, i32 1\n  %25 = load i32, ptr %24, align 4, !tbaa !18\n  %26 = add i32 %25, %23\n  %27 = add i32 %26, %15\n  %28 = zext i32 %27 to i64\n  %29 = load i64, ptr %18, align 8, !tbaa !19\n  %30 = add nuw i64 %21, 1\n  %31 = icmp sgt i64 %29, %30\n  br i1 %31, label %32, label %39\n\n32:                                               ; preds = %20\n  %33 = getelementptr inbounds i64, ptr %18, i64 %30\n  %34 = load i64, ptr %33, align 8, !tbaa !19\n  %35 = icmp eq i64 %34, 0\n  br i1 %35, label %44, label %36\n\n36:                                               ; preds = %32\n  %37 = load i32, ptr %2, align 4, !tbaa !13\n  %38 = add i32 %37, %15\n  br label %39\n\n39:                                               ; preds = %36, %20\n  %40 = phi i32 [ %38, %36 ], [ %27, %20 ]\n  %41 = phi i64 [ %34, %36 ], [ %29, %20 ]\n  %42 = phi i64 [ %30, %36 ], [ %21, %20 ]\n  %43 = icmp slt i32 %40, %28\n  br i1 %43, label %44, label %47\n\n44:                                               ; preds = %39, %32, %9, %6, %3\n  %45 = phi ptr [ null, %3 ], [ null, %6 ], [ null, %9 ], [ %41, %32 ], [ null, %39 ]\n  %46 = phi i64 [ 0, %3 ], [ 0, %6 ], [ 0, %9 ], [ %42, %32 ], [ %21, %39 ]\n  br label %44\n\n47:                                               ; preds = %39\n  %48 = trunc i64 %42 to i32\n  %49 = load i32, ptr %1, align 4, !tbaa !13\n  %50 = sub nsw i32 %49, %23\n  %51 = icmp slt i32 %50, %48\n  br i1 %51, label %52, label %55\n\n52:                                               ; preds = %47\n  %53 = icmp eq i64 %42, 0\n  br i1 %53, label %44, label %54\n\n54:                                               ; preds = %52\n  %55 = tail call i32 @panic(ptr noundef nonnull @.str) #3\n  br label %44\n\n56:                                               ; preds = %57\n  %57 = add nuw nsw i64 %58, 1\n  %58 = and i64 %57, 4294967295\n  %59 = icmp eq i64 %58, %10\n  br i1 %59, label %44, label %56, !llvm.loop !20\n\n60:                                               ; preds = %63\n  %61 = add nuw nsw i64 %64, 1\n  %62 = icmp eq i64 %61, %10\n  br i1 %62, label %44, label %63, !llvm.loop !22\n\n63:                                               ; preds = %60\n  %64 = and i64 %61, 4294967295\n  %65 = getelementptr inbounds i64, ptr %18, i64 %64\n  %66 = load i64, ptr %65, align 8, !tbaa !19\n  %67 = icmp eq i64 %66, 0\n  br i1 %67, label %44, label %68\n\n68:                                               ; preds = %63\n  %69 = load i32, ptr %2, align 4, !tbaa !13\n  %70 = add i32 %69, %15\n  %71 = icmp slt i32 %70, %40\n  br i1 %71, label %72, label %75\n\n72:                                               ; preds = %68\n  %73 = tail call i32 @llvm.smin.i32(i32 %40, i32 %25)\n  store i32 %73, ptr %2, align 4, !tbaa !13\n  %74 = load i32, ptr %1, align 4, !tbaa !13\n  br label %75\n\n75:                                               ; preds = %72, %68\n  %76 = phi i32 [ %74, %72 ], [ %69, %68 ]\n  store i32 %76, ptr %1, align 4, !tbaa !13\n  br label %44\n\n77:                                               ; preds = %80\n  %78 = add nuw nsw i64 %81, 1\n  %79 = icmp eq i64 %78, %10\n  br i1 %79, label %44, label %80, !llvm.loop !24\n\n80:                                               ; preds = %77\n  %81 = and i64 %78, 4294967295\n  %82 = getelementptr inbounds i64, ptr %18, i64 %81\n  %83 = load i64, ptr %82, align 8, !tbaa !19\n  %84 = icmp eq i64 %83, 0\n  br i1 %84, label %44, label %85\n\n85:                                               ; preds = %80\n  %86 = load i32, ptr %2, align 4, !tbaa !13\n  %87 = add i32 %86, %15\n  %88 = icmp slt i32 %87, %40\n  br i1 %88, label %89, label %92\n\n89:                                               ; preds = %85\n  %90 = tail call i32 @llvm.smin.i32(i32 %40, i32 %25)\n  store i32 %90, ptr %2, align 4, !tbaa !13\n  %91 = load i32, ptr %1, align 4, !tbaa !13\n  br label %92\n\n92:                                               ; preds = %89, %85\n  %93 = phi i32 [ %91, %89 ], [ %86, %85 ]\n  %94 = phi i64 [ %83, %89 ], [ %81, %85 ]\n  %95 = icmp slt i32 %93, %40\n  br i1 %95, label %96, label %99\n\n96:                                               ; preds = %92\n  %97 = icmp eq i64 %81, 0\n  br i1 %97, label %44, label %98\n\n98:                                               ; preds = %96\n  %99 = tail call i32 @panic(ptr noundef nonnull @.str) #3\n  br label %44\n\n100:                                              ; preds = %103\n  %101 = add nuw nsw i64 %104, 1\n  %102 = icmp eq i64 %101, %10\n  br i1 %102, label %44, label %103, !llvm.loop !26\n\n103:                                              ; preds = %100\n  %104 = and i64 %101, 4294967295\n  %105 = getelementptr inbounds i64, ptr %18, i64 %104\n  %106 = load i6"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/darwin-xnu/osfmk/vm/extr_vm_pageout.c_vector_upl_subupl_byoffset.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.TYPE_7__ = type { i64, ptr, ptr }\n%struct.TYPE_8__ = type { i32, i32 }\n\n@.str = private unnamed_addr constant [34 x i8] c\"Vector UPL offset miscalculation\\0A\\00\", align 1\n@.str.1 = private unnamed_addr constant [58 x i8] c\"vector_upl_subupl_byoffset was passed a non-vectored UPL\\0A\\00\", align 1\n\n; Function Attrs: nounwind uwtable\ndefine dso_local ptr @vector_upl_subupl_byoffset(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) local_unnamed_addr #0 {\n  %4 = tail call i64 @vector_upl_is_valid(ptr noundef %0) #3\n  %5 = icmp eq i64 %4, 0\n  br i1 %5, label %52, label %6\n\n6:                                                ; preds = %3\n  %7 = load ptr, ptr %0, align 8, !tbaa !5\n  %8 = icmp eq ptr %7, null\n  br i1 %8, label %50, label %9\n\n9:                                                ; preds = %6\n  %10 = load i64, ptr %7, align 8, !tbaa !10\n  %11 = icmp eq i64 %10, 0\n  br i1 %11, label %52, label %12\n\n12:                                               ; preds = %9\n  %13 = getelementptr inbounds %struct.TYPE_7__, ptr %7, i64 0, i32 1\n  %14 = load ptr, ptr %13, align 8, !tbaa !13\n  %15 = load i32, ptr %1, align 4, !tbaa !14\n  br label %16\n\n16:                                               ; preds = %12, %47\n  %17 = phi i64 [ 0, %12 ], [ %48, %47 ]\n  %18 = getelementptr inbounds %struct.TYPE_8__, ptr %14, i64 %17\n  %19 = load i32, ptr %18, align 4, !tbaa.struct !16\n  %20 = getelementptr inbounds i8, ptr %18, i64 4\n  %21 = load i32, ptr %20, align 4, !tbaa.struct !17\n  %22 = add nsw i32 %21, %19\n  %23 = icmp sgt i32 %22, %15\n  br i1 %23, label %24, label %47\n\n24:                                               ; preds = %16\n  %25 = getelementptr inbounds %struct.TYPE_7__, ptr %7, i64 0, i32 2\n  %26 = load ptr, ptr %25, align 8, !tbaa !18\n  %27 = getelementptr inbounds ptr, ptr %26, i64 %17\n  %28 = load ptr, ptr %27, align 8, !tbaa !19\n  %29 = icmp eq ptr %28, null\n  br i1 %29, label %52, label %30\n\n30:                                               ; preds = %24\n  %31 = load i32, ptr %2, align 4, !tbaa !14\n  %32 = add nsw i32 %31, %15\n  %33 = icmp slt i32 %22, %32\n  br i1 %33, label %34, label %38\n\n34:                                               ; preds = %30\n  %35 = sub nsw i32 %22, %15\n  %36 = tail call i32 @llvm.smin.i32(i32 %35, i32 %21)\n  store i32 %36, ptr %2, align 4\n  %37 = load i32, ptr %1, align 4, !tbaa !14\n  br label %38\n\n38:                                               ; preds = %34, %30\n  %39 = phi i32 [ %37, %34 ], [ %15, %30 ]\n  %40 = icmp slt i32 %39, %19\n  br i1 %40, label %43, label %41\n\n41:                                               ; preds = %38\n  %42 = sub nsw i32 %39, %19\n  store i32 %42, ptr %1, align 4, !tbaa !14\n  br label %52\n\n43:                                               ; preds = %38\n  %44 = icmp eq i64 %17, 0\n  br i1 %44, label %52, label %45\n\n45:                                               ; preds = %43\n  %46 = tail call i32 @panic(ptr noundef nonnull @.str) #3\n  br label %52\n\n47:                                               ; preds = %16\n  %48 = add nuw i64 %17, 1\n  %49 = icmp eq i64 %48, %10\n  br i1 %49, label %52, label %16, !llvm.loop !20\n\n50:                                               ; preds = %6\n  %51 = tail call i32 @panic(ptr noundef nonnull @.str.1) #3\n  br label %52\n\n52:                                               ; preds = %47, %9, %50, %3, %24, %43, %45, %41\n  %53 = phi ptr [ %28, %41 ], [ %28, %45 ], [ %28, %43 ], [ null, %24 ], [ null, %3 ], [ null, %50 ], [ null, %9 ], [ null, %47 ]\n  ret ptr %53\n}\n\ndeclare i64 @vector_upl_is_valid(ptr noundef) local_unnamed_addr #1\n\ndeclare i32 @panic(ptr noundef) local_unnamed_addr #1\n\n; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn\ndeclare i32 @llvm.smin.i32(i32, i32) #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #2 = { nocallback nofree nosync nounwind readnone speculatable willreturn }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !7, i64 0}\n!6 = !{!\"TYPE_9__\", !7, i64 0}\n!7 = !{!\"any pointer\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!11, !12, i64 0}\n!11 = !{!\"TYPE_7__\", !12, i64 0, !7, i64 8, !7, i64 16}\n!12 = !{!\"long\", !8, i64 0}\n!13 = !{!11, !7, i64 8}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"int\", !8, i64 0}\n!16 = !{i64 0, i64 4, !14, i64 4, i64 4, !14}\n!17 = !{i64 0, i64 4, !14}\n!18 = !{!11, !7, i64 16}\n!19 = !{!7, !7, i64 0}\n!20 = distinct !{!20, !21}\n!21 = !{!\"llvm.loop.mustprogress\"}\n"}, {"instruction": "decompile the x86 assembly to llvm ir", "input": "\t.text\n\t.file\t\"extr_eap_ttls.c_eap_ttls_phase2_eap_process.ll\"\n\t.p2align\t4, 0x90                         # -- Begin function eap_ttls_phase2_eap_process\n\t.type\teap_ttls_phase2_eap_process,@function\neap_ttls_phase2_eap_process:            # @eap_ttls_phase2_eap_process\n\t.cfi_startproc\n# %bb.0:\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\tpushq\t%r15\n\t.cfi_def_cfa_offset 24\n\tpushq\t%r14\n\t.cfi_def_cfa_offset 32\n\tpushq\t%r13\n\t.cfi_def_cfa_offset 40\n\tpushq\t%r12\n\t.cfi_def_cfa_offset 48\n\tpushq\t%rbx\n\t.cfi_def_cfa_offset 56\n\tsubq\t$40, %rsp\n\t.cfi_def_cfa_offset 96\n\t.cfi_offset %rbx, -56\n\t.cfi_offset %r12, -48\n\t.cfi_offset %r13, -40\n\t.cfi_offset %r14, -32\n\t.cfi_offset %r15, -24\n\t.cfi_offset %rbp, -16\n\tmovq\t%r9, %r15\n\tmovq\t%r8, %r12\n\tmovq\t%rcx, %r13\n\tmovq\t%rdx, 8(%rsp)                   # 8-byte Spill\n\tmovq\t%rsi, %rbx\n\tmovq\t%rdi, %rbp\n\tleaq\t16(%rsp), %rdi\n\txorl\t%esi, %esi\n\tmovl\t$16, %edx\n\tcallq\tos_memset@PLT\n\tleaq\t32(%rsp), %r14\n\tmovq\t%r14, %rdi\n\tmovq\t%r13, %rsi\n\tmovq\t%r12, %rdx\n\tcallq\twpabuf_set@PLT\n\tmovq\t8(%rbx), %rax\n\tmovl\t(%rbx), %esi\n\tmovq\t%rbp, %rdi\n\tleaq\t16(%rsp), %rdx\n\tmovq\t%r14, %rcx\n\tcallq\t*(%rax)\n\tmovq\t%rax, (%r15)\n\tmovq\t16(%rsp), %rax\n\tcmpq\tMETHOD_DONE(%rip), %rax\n\tje\t.LBB0_2\n# %bb.1:\n\tcmpq\tMETHOD_MAY_CONT(%rip), %rax\n\tjne\t.LBB0_6\n.LBB0_2:\n\tmovq\t24(%rsp), %rcx\n\tcmpq\tDECISION_UNCOND_SUCC(%rip), %rcx\n\tje\t.LBB0_5\n# %bb.3:\n\tcmpq\tDECISION_COND_SUCC(%rip), %rcx\n\tje\t.LBB0_5\n# %bb.4:\n\tcmpq\tDECISION_FAIL(%rip), %rcx\n\tjne\t.LBB0_6\n.LBB0_5:\n\tmovq\t8(%rsp), %rdx                   # 8-byte Reload\n\tmovq\t%rax, (%rdx)\n\tmovq\t%rcx, 8(%rdx)\n.LBB0_6:\n\txorl\t%eax, %eax\n\taddq\t$40, %rsp\n\t.cfi_def_cfa_offset 56\n\tpopq\t%rbx\n\t.cfi_def_cfa_offset 48\n\tpopq\t%r12\n\t.cfi_def_cfa_offset 40\n\tpopq\t%r13\n\t.cfi_def_cfa_offset 32\n\tpopq\t%r14\n\t.cfi_def_cfa_offset 24\n\tpopq\t%r15\n\t.cfi_def_cfa_offset 16\n\tpopq\t%rbp\n\t.cfi_def_cfa_offset 8\n\tretq\n.Lfunc_end0:\n\t.size\teap_ttls_phase2_eap_process, .Lfunc_end0-eap_ttls_phase2_eap_process\n\t.cfi_endproc\n                                        # -- End function\n\t.type\tMETHOD_DONE,@object             # @METHOD_DONE\n\t.bss\n\t.globl\tMETHOD_DONE\n\t.p2align\t3\nMETHOD_DONE:\n\t.quad\t0                               # 0x0\n\t.size\tMETHOD_DONE, 8\n\n\t.type\tMETHOD_MAY_CONT,@object         # @METHOD_MAY_CONT\n\t.globl\tMETHOD_MAY_CONT\n\t.p2align\t3\nMETHOD_MAY_CONT:\n\t.quad\t0                               # 0x0\n\t.size\tMETHOD_MAY_CONT, 8\n\n\t.type\tDECISION_UNCOND_SUCC,@object    # @DECISION_UNCOND_SUCC\n\t.globl\tDECISION_UNCOND_SUCC\n\t.p2align\t3\nDECISION_UNCOND_SUCC:\n\t.quad\t0                               # 0x0\n\t.size\tDECISION_UNCOND_SUCC, 8\n\n\t.type\tDECISION_COND_SUCC,@object      # @DECISION_COND_SUCC\n\t.globl\tDECISION_COND_SUCC\n\t.p2align\t3\nDECISION_COND_SUCC:\n\t.quad\t0                               # 0x0\n\t.size\tDECISION_COND_SUCC, 8\n\n\t.type\tDECISION_FAIL,@object           # @DECISION_FAIL\n\t.globl\tDECISION_FAIL\n\t.p2align\t3\nDECISION_FAIL:\n\t.quad\t0                               # 0x0\n\t.size\tDECISION_FAIL, 8\n\n\t.ident\t\"Ubuntu clang version 15.0.7\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n", "predict": ["target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.eap_ttls_data = type { i64, i64 }\n%struct.eap_ttls_phase2_data = type { i32, ptr }\n\n@METHOD_DONE = dso_local local_unnamed_addr global i64 0, align 8\n@METHOD_MAY_CONT = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_UNCOND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_COND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_FAIL = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @eap_ttls_phase2_eap_process], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @eap_ttls_phase2_eap_process(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr noundef %3, ptr noundef %4, ptr nocapture noundef writeonly %5) #0 {\n  %7 = alloca %struct.eap_ttls_data, align 8\n  %8 = alloca %struct.eap_ttls_phase2_data, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #3\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #3\n  %9 = call i32 @os_memset(ptr noundef nonnull %7, i32 noundef 0, i32 noundef 16) #3\n  %10 = call i32 @wpabuf_set(ptr noundef nonnull %8, ptr noundef %3, ptr noundef %4) #3\n  %11 = getelementptr inbounds %struct.eap_ttls_phase2_data, ptr %1, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !5\n  %13 = load ptr, ptr %12, align 8, !tbaa !11\n  %14 = load i32, ptr %1, align 8, !tbaa !13\n  %15 = call i64 %13(ptr noundef %0, i32 noundef %14, ptr noundef nonnull %7, ptr noundef nonnull %8) #3\n  store i64 %15, ptr %5, align 8, !tbaa !14\n  %16 = load i64, ptr %7, align 8, !tbaa !16\n  %17 = load i64, ptr @METHOD_DONE, align 8, !tbaa !14\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr @METHOD_MAY_CONT, align 8, !tbaa !14\n  %21 = icmp eq i64 %16, %20\n  br i1 %21, label %23, label %30\n\n22:                                               ; preds = %27, %23\n  store i64 %16, ptr %2, align 8, !tbaa !14\n  store i64 %24, ptr %2, align 8, !tbaa !14\n  br label %30\n\n23:                                               ; preds = %6\n  %24 = load i64, ptr @DECISION_UNCOND_SUCC, align 8, !tbaa !14\n  %25 = load i64, ptr @DECISION_COND_SUCC, align 8, !tbaa !14\n  %26 = load i64, ptr @DECISION_FAIL, align 8, !tbaa !14\n  switch i64 %24, label %30 [\n    i64 %25, label %22\n    i64 %26, label %22\n  ]\n\n27:                                               ; preds = %22\n  %28 = load i64, ptr @DECISION_UNCOND_SUCC, align 8, !tbaa !14\n  %29 = icmp eq i64 %28, %24\n  br i1 %29, label %22, label %30\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @os_memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @wpabuf_set(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"eap_ttls_phase2_data\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_2__\", !10, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !15, i64 0}\n!17 = !{!\"eap_ttls_data\", !15, i64 0, !15, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.eap_ttls_data = type { i64, i64 }\n%struct.eap_ttls_phase2_data = type { i32, ptr }\n\n@METHOD_DONE = dso_local local_unnamed_addr global i64 0, align 8\n@METHOD_MAY_CONT = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_UNCOND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_COND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_FAIL = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @eap_ttls_phase2_eap_process], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @eap_ttls_phase2_eap_process(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr noundef %3, ptr noundef %4, ptr nocapture noundef writeonly %5) #0 {\n  %7 = alloca %struct.eap_ttls_data, align 8\n  %8 = alloca %struct.eap_ttls_phase2_data, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #3\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #3\n  %9 = call i32 @os_memset(ptr noundef nonnull %7, i32 noundef 0, i32 noundef 16) #3\n  %10 = call i32 @wpabuf_set(ptr noundef nonnull %8, ptr noundef %3, ptr noundef %4) #3\n  %11 = getelementptr inbounds %struct.eap_ttls_phase2_data, ptr %1, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !5\n  %13 = load ptr, ptr %12, align 8, !tbaa !11\n  %14 = load i32, ptr %1, align 8, !tbaa !13\n  %15 = call i64 %13(ptr noundef %0, i32 noundef %14, ptr noundef nonnull %7, ptr noundef nonnull %8) #3\n  store i64 %15, ptr %5, align 8, !tbaa !14\n  %16 = load i64, ptr %7, align 8, !tbaa !16\n  %17 = load i64, ptr @METHOD_DONE, align 8, !tbaa !14\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr @METHOD_MAY_CONT, align 8, !tbaa !14\n  %21 = icmp eq i64 %16, %20\n  br i1 %21, label %23, label %31\n\n22:                                               ; preds = %28\n  %23 = icmp eq i64 %29, %30\n  br i1 %23, label %24, label %31\n\n24:                                               ; preds = %22\n  store i64 %16, ptr %2, align 8, !tbaa !14\n  %25 = getelementptr inbounds i64, ptr %2, i64 1\n  store i64 %29, ptr %25, align 8, !tbaa !14\n  br label %31\n\n28:                                               ; preds = %22\n  %29 = phi i64 [ %27, %22 ], [ %16, %24 ]\n  %30 = phi i64 [ %26, %22 ], [ %29, %24 ]\n  br label %22, !llvm.loop !18\n\n31:                                               ; preds = %28, %24, %19, %6\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #3\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @os_memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @wpabuf_set(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"eap_ttls_phase2_data\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_2__\", !10, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !15, i64 0}\n!17 = !{!\"eap_ttls_data\", !15, i64 0, !15, i64 8}\n!18 = distinct !{!18, !19}\n!19 = !{!\"llvm.loop.mustprogress\"}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.eap_ttls_data = type { i64, i64 }\n%struct.eap_ttls_phase2_data = type { i32, ptr }\n\n@METHOD_DONE = dso_local local_unnamed_addr global i64 0, align 8\n@METHOD_MAY_CONT = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_UNCOND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_COND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_FAIL = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @eap_ttls_phase2_eap_process], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @eap_ttls_phase2_eap_process(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr noundef %3, ptr noundef %4, ptr nocapture noundef writeonly %5) #0 {\n  %7 = alloca %struct.eap_ttls_data, align 8\n  %8 = alloca %struct.eap_ttls_phase2_data, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #3\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #3\n  %9 = call i32 @os_memset(ptr noundef nonnull %7, i32 noundef 0, i32 noundef 16) #3\n  %10 = call i32 @wpabuf_set(ptr noundef nonnull %8, ptr noundef %3, ptr noundef %4) #3\n  %11 = getelementptr inbounds %struct.eap_ttls_phase2_data, ptr %1, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !5\n  %13 = load ptr, ptr %12, align 8, !tbaa !11\n  %14 = load i32, ptr %1, align 8, !tbaa !13\n  %15 = call ptr %13(ptr noundef %0, i32 noundef %14, ptr noundef nonnull %7, ptr noundef nonnull %8) #3\n  store ptr %15, ptr %5, align 8, !tbaa !14\n  %16 = load i64, ptr %7, align 8, !tbaa !15\n  %17 = load i64, ptr @METHOD_DONE, align 8, !tbaa !17\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr @METHOD_MAY_CONT, align 8, !tbaa !17\n  %21 = icmp eq i64 %16, %20\n  br i1 %21, label %23, label %31\n\n22:                                               ; preds = %29\n  br label %31\n\n23:                                               ; preds = %6, %19\n  %24 = getelementptr inbounds %struct.eap_ttls_phase2_data, ptr %8, i64 0, i32 1\n  %25 = load i64, ptr %24, align 8, !tbaa !18\n  %26 = load i64, ptr @DECISION_UNCOND_SUCC, align 8, !tbaa !17\n  %27 = icmp eq i64 %25, %26\n  %28 = load i64, ptr @DECISION_COND_SUCC, align 8\n  %29 = icmp eq i64 %25, %28\n  %30 = select i1 %27, i1 true, i1 %29\n  br i1 %30, label %22, label %31\n\n31:                                               ; preds = %23, %19, %22\n  %32 = phi ptr [ %25, %22 ], [ %25, %19 ], [ %25, %23 ]\n  %33 = phi ptr [ %15, %22 ], [ %15, %19 ], [ %15, %23 ]\n  store i64 %32, ptr %2, align 8, !tbaa !17\n  %34 = getelementptr inbounds i64, ptr %2, i64 1\n  store i64 %32, ptr %34, align 8, !tbaa !17\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #3\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @os_memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @wpabuf_set(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"eap_ttls_phase2_data\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_2__\", !10, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n!15 = !{!16, !16, i64 0}\n!16 = !{!\"long\", !8, i64 0}\n!17 = !{!16, !16, i64 0}\n!18 = !{!6, !16, i64 8}\n</s><s><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk><unk>", "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.eap_ttls_data = type { i64, i64 }\n%struct.eap_ttls_phase2_data = type { i32, ptr }\n\n@METHOD_DONE = dso_local local_unnamed_addr global i64 0, align 8\n@METHOD_MAY_CONT = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_UNCOND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_COND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_FAIL = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @eap_ttls_phase2_eap_process], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @eap_ttls_phase2_eap_process(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr noundef %3, ptr noundef %4, ptr nocapture noundef writeonly %5) #0 {\n  %7 = alloca %struct.eap_ttls_data, align 8\n  %8 = alloca %struct.eap_ttls_phase2_data, align 8\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #3\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #3\n  %9 = call i32 @os_memset(ptr noundef nonnull %7, i32 noundef 0, i32 noundef 16) #3\n  %10 = call i32 @wpabuf_set(ptr noundef nonnull %8, ptr noundef %3, ptr noundef %4) #3\n  %11 = getelementptr inbounds %struct.eap_ttls_phase2_data, ptr %1, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !5\n  %13 = load ptr, ptr %12, align 8, !tbaa !11\n  %14 = load i32, ptr %1, align 8, !tbaa !13\n  %15 = call i64 %13(ptr noundef %0, i32 noundef %14, ptr noundef nonnull %7, ptr noundef nonnull %8) #3\n  store i64 %15, ptr %5, align 8, !tbaa !14\n  %16 = load i64, ptr %7, align 8, !tbaa !16\n  %17 = load i64, ptr @METHOD_DONE, align 8, !tbaa !14\n  %18 = icmp eq i64 %16, %17\n  br i1 %18, label %23, label %19\n\n19:                                               ; preds = %6\n  %20 = load i64, ptr @METHOD_MAY_CONT, align 8, !tbaa !14\n  %21 = icmp eq i64 %16, %20\n  br i1 %21, label %23, label %30\n\n22:                                               ; preds = %28\n  br label %30\n\n23:                                               ; preds = %6, %19\n  %24 = getelementptr inbounds %struct.eap_ttls_phase2_data, ptr %8, i64 0, i32 1\n  %25 = load i64, ptr %24, align 8, !tbaa !18\n  %26 = load i64, ptr @DECISION_UNCOND_SUCC, align 8, !tbaa !14\n  %27 = icmp eq i64 %25, %26\n  br i1 %27, label %29, label %28\n\n28:                                               ; preds = %23\n  %29 = load i64, ptr @DECISION_COND_SUCC, align 8, !tbaa !14\n  br i1 %29, label %29, label %30\n\n30:                                               ; preds = %28, %19, %22\n  %31 = phi i64 [ %25, %22 ], [ %25, %28 ], [ %25, %19 ]\n  %32 = phi i64 [ %15, %22 ], [ %15, %28 ], [ %16, %19 ]\n  store i64 %32, ptr %2, align 8, !tbaa !14\n  %33 = getelementptr inbounds %struct.eap_ttls_data, ptr %2, i64 0, i32 1\n  store i64 %31, ptr %33, align 8, !tbaa !19\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #3\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @os_memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @wpabuf_set(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"eap_ttls_phase2_data\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_2__\", !10, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!15, !15, i64 0}\n!15 = !{!\"long\", !8, i64 0}\n!16 = !{!17, !15, i64 0}\n!17 = !{!\"eap_ttls_data\", !15, i64 0, !15, i64 8}\n!18 = !{!6, !15, i64 8}\n!19 = !{!17, !15, i64 8}\n</s><s>"], "file": "/data0/xiachunwei/Dataset/decompilation-dataset/AnghaBench-ll-O2/freebsd/contrib/wpa/src/eap_peer/extr_eap_ttls.c_eap_ttls_phase2_eap_process.ll", "output": "target datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n%struct.wpabuf = type { i32 }\n%struct.eap_method_ret = type { i64, i64 }\n%struct.eap_ttls_data = type { i32, ptr }\n\n@METHOD_DONE = dso_local local_unnamed_addr global i64 0, align 8\n@METHOD_MAY_CONT = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_UNCOND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_COND_SUCC = dso_local local_unnamed_addr global i64 0, align 8\n@DECISION_FAIL = dso_local local_unnamed_addr global i64 0, align 8\n@llvm.compiler.used = appending global [1 x ptr] [ptr @eap_ttls_phase2_eap_process], section \"llvm.metadata\"\n\n; Function Attrs: nounwind uwtable\ndefine internal i32 @eap_ttls_phase2_eap_process(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr noundef %3, i64 noundef %4, ptr nocapture noundef writeonly %5) #0 {\n  %7 = alloca %struct.wpabuf, align 4\n  %8 = alloca %struct.eap_method_ret, align 8\n  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #3\n  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #3\n  %9 = call i32 @os_memset(ptr noundef nonnull %8, i32 noundef 0, i32 noundef 16) #3\n  %10 = call i32 @wpabuf_set(ptr noundef nonnull %7, ptr noundef %3, i64 noundef %4) #3\n  %11 = getelementptr inbounds %struct.eap_ttls_data, ptr %1, i64 0, i32 1\n  %12 = load ptr, ptr %11, align 8, !tbaa !5\n  %13 = load ptr, ptr %12, align 8, !tbaa !11\n  %14 = load i32, ptr %1, align 8, !tbaa !13\n  %15 = call ptr %13(ptr noundef %0, i32 noundef %14, ptr noundef nonnull %8, ptr noundef nonnull %7) #3\n  store ptr %15, ptr %5, align 8, !tbaa !14\n  %16 = load i64, ptr %8, align 8, !tbaa !15\n  %17 = load i64, ptr @METHOD_DONE, align 8, !tbaa !18\n  %18 = icmp eq i64 %16, %17\n  %19 = load i64, ptr @METHOD_MAY_CONT, align 8\n  %20 = icmp eq i64 %16, %19\n  %21 = select i1 %18, i1 true, i1 %20\n  br i1 %21, label %22, label %35\n\n22:                                               ; preds = %6\n  %23 = getelementptr inbounds %struct.eap_method_ret, ptr %8, i64 0, i32 1\n  %24 = load i64, ptr %23, align 8, !tbaa !19\n  %25 = load i64, ptr @DECISION_UNCOND_SUCC, align 8, !tbaa !18\n  %26 = icmp eq i64 %24, %25\n  %27 = load i64, ptr @DECISION_COND_SUCC, align 8\n  %28 = icmp eq i64 %24, %27\n  %29 = select i1 %26, i1 true, i1 %28\n  %30 = load i64, ptr @DECISION_FAIL, align 8\n  %31 = icmp eq i64 %24, %30\n  %32 = select i1 %29, i1 true, i1 %31\n  br i1 %32, label %33, label %35\n\n33:                                               ; preds = %22\n  store i64 %16, ptr %2, align 8, !tbaa !15\n  %34 = getelementptr inbounds %struct.eap_method_ret, ptr %2, i64 0, i32 1\n  store i64 %24, ptr %34, align 8, !tbaa !19\n  br label %35\n\n35:                                               ; preds = %22, %6, %33\n  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #3\n  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #3\n  ret i32 0\n}\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1\n\ndeclare i32 @os_memset(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2\n\ndeclare i32 @wpabuf_set(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2\n\n; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn\ndeclare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1\n\nattributes #0 = { nounwind uwtable \"frame-pointer\"=\"none\" \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #1 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }\nattributes #2 = { \"frame-pointer\"=\"none\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\nattributes #3 = { nounwind }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 7, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"Ubuntu clang version 15.0.7\"}\n!5 = !{!6, !10, i64 8}\n!6 = !{!\"eap_ttls_data\", !7, i64 0, !10, i64 8}\n!7 = !{!\"int\", !8, i64 0}\n!8 = !{!\"omnipotent char\", !9, i64 0}\n!9 = !{!\"Simple C/C++ TBAA\"}\n!10 = !{!\"any pointer\", !8, i64 0}\n!11 = !{!12, !10, i64 0}\n!12 = !{!\"TYPE_2__\", !10, i64 0}\n!13 = !{!6, !7, i64 0}\n!14 = !{!10, !10, i64 0}\n!15 = !{!16, !17, i64 0}\n!16 = !{!\"eap_method_ret\", !17, i64 0, !17, i64 8}\n!17 = !{!\"long\", !8, i64 0}\n!18 = !{!17, !17, i64 0}\n!19 = !{!16, !17, i64 8}\n"}]